{"implements":[],"javadoc":"DominantPair is a pair where the key is responsible for equality and\n hashCode (and the value of the pair doesn't matter at all).  This is\n useful when you need the pair itself to function as a key in a Map or\n value in a Set.\n@param <K>\n@param <V>","static":false,"extends":"generic.stl.Pair","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"K","name":"key","comment":"","type_short":"K"},{"type_long":"V","name":"value","comment":"","type_short":"V"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"DominantPair","comment":"DominantPair is a pair where the key is responsible for equality and\n hashCode (and the value of the pair doesn't matter at all).  This is\n useful when you need the pair itself to function as a key in a Map or\n value in a Set.","fields":[]}
