{"implements":[],"javadoc":"JarWriter is a class for writing to a jar output stream.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"@param jarOut the the jar file output stream the zip entries are\n to be written to.","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.util.jar.JarOutputStream","name":"jarOut","comment":"the the jar file output stream the zip entries are\n to be written to.","type_short":"JarOutputStream"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.util.jar.JarOutputStream","name":"jarOut","comment":"","type_short":"JarOutputStream"},{"type_long":"java.lang.String[]","name":"excludedExtensions","comment":"","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Outputs an individual file to the jar.\n@param baseFile the file to be output\n@param jarPath the base path to prepend to the file as it is written\n to the jar output stream.\n@param monitor cancellable task monitor\n@return true if file is output to the jar file successfully.","static":false,"name":"outputFile","comment":"Outputs an individual file to the jar.","params":[{"type_long":"java.io.File","name":"baseFile","comment":"the file to be output","type_short":"File"},{"type_long":"java.lang.String","name":"jarPath","comment":"the base path to prepend to the file as it is written\n to the jar output stream.","type_short":"String"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"cancellable task monitor","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"true if file is output to the jar file successfully.","type_short":"boolean"}},{"javadoc":"Outputs an individual entry to the jar.  The data input stream will be read until and EOF is read.\n@param path entry path within the jar file\n@param time entry time\n@param in data input stream\n@param monitor cancellable task monitor\n@return true if entry is output to the jar file successfully.","static":false,"name":"outputEntry","comment":"Outputs an individual entry to the jar.  The data input stream will be read until and EOF is read.","params":[{"type_long":"java.lang.String","name":"path","comment":"entry path within the jar file","type_short":"String"},{"type_long":"long","name":"time","comment":"entry time","type_short":"long"},{"type_long":"java.io.InputStream","name":"in","comment":"data input stream","type_short":"InputStream"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"cancellable task monitor","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"true if entry is output to the jar file successfully.","type_short":"boolean"}},{"javadoc":"Recursively outputs a directory to the jar output stream\n If baseFile is a file then it is simply output to the jar.\n@param baseFile the file or directory to be output\n@param jarPath the base path to prepend to the files as they are written\n to the jar output stream.\n@return true if all files are recursively output to the jar file.","static":false,"name":"outputRecursively","comment":"Recursively outputs a directory to the jar output stream\n If baseFile is a file then it is simply output to the jar.","params":[{"type_long":"java.io.File","name":"baseFile","comment":"the file or directory to be output","type_short":"File"},{"type_long":"java.lang.String","name":"jarPath","comment":"the base path to prepend to the files as they are written\n to the jar output stream.","type_short":"String"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"true if all files are recursively output to the jar file.","type_short":"boolean"}},{"javadoc":"Return the jar output stream being used by this JarWriter.","static":false,"name":"getJarOutputStream","comment":"Return the jar output stream being used by this JarWriter.","params":[],"throws":[],"return":{"type_long":"java.util.jar.JarOutputStream","comment":"","type_short":"JarOutputStream"}},{"javadoc":"Simple test for the JarWriter\n@param args args[0] is the source directory, args[1] is the output filename","static":true,"name":"main","comment":"Simple test for the JarWriter","params":[{"type_long":"java.lang.String[]","name":"args","comment":"args[0] is the source directory, args[1] is the output filename","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"JarWriter","comment":"JarWriter is a class for writing to a jar output stream.","fields":[{"type_long":"java.util.jar.JarOutputStream","javadoc":"","static":false,"name":"jarOut","comment":"","type_short":"JarOutputStream","constant_value":null},{"type_long":"java.lang.String[]","javadoc":"","static":false,"name":"excludedExtensions","comment":"","type_short":"java.lang.String[]","constant_value":null}]}
