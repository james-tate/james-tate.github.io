{"implements":[],"javadoc":"A class for clients that wish to create a button that has multiple states, controlled by a\n drop-down menu.  Further, this action is not meant to be added to a toolbar.  If you wish \n for this action to appear in the toolbar, then extend {@link MultiStateDockingAction} \n instead.\n \n <p>To use this class, extend it, overriding the \n {@link #actionStateChanged(ActionState, EventTrigger)} callback.  Call \n {@link #createButton()} and add the return value to your UI.\n@param <T>\n@see MultiStateDockingAction","static":false,"extends":"docking.menu.MultiStateDockingAction","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"owner","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"NonToolbarMultiStateAction","comment":"A class for clients that wish to create a button that has multiple states, controlled by a\n drop-down menu.  Further, this action is not meant to be added to a toolbar.  If you wish \n for this action to appear in the toolbar, then extend MultiStateDockingAction \n instead.\n \n To use this class, extend it, overriding the \n #actionStateChanged(ActionState, EventTrigger) callback.  Call \n #createButton() and add the return value to your UI.","fields":[]}
