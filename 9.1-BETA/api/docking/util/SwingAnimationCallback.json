{"implements":[],"javadoc":"A simple interface that allows implementing clients to get called back from the animation\n framework.  The callbacks can be used to perform swing work.","static":false,"methods":[{"javadoc":"Called over the course of an animation cycle.\n@param percentComplete a value (from 0 to 1.0) that indicates the percentage of the \n                        animation cycle that has completed.","static":false,"name":"progress","comment":"Called over the course of an animation cycle.","params":[{"type_long":"double","name":"percentComplete","comment":"a value (from 0 to 1.0) that indicates the percentage of the \n                        animation cycle that has completed.","type_short":"double"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Called when the entire animation cycle is done.  This allows clients to perform any\n finalization work.","static":false,"name":"done","comment":"Called when the entire animation cycle is done.  This allows clients to perform any\n finalization work.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the duration of this callback.  The default is <code>1000 ms<\/code>.  Subclasses\n can override this as needed.\n@return the duration","static":false,"name":"getDuration","comment":"Returns the duration of this callback.  The default is 1000 ms.  Subclasses\n can override this as needed.","params":[],"throws":[],"return":{"type_long":"int","comment":"the duration","type_short":"int"}}],"name":"SwingAnimationCallback","comment":"A simple interface that allows implementing clients to get called back from the animation\n framework.  The callbacks can be used to perform swing work.","fields":[]}
