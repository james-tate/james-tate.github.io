{"implements":[],"javadoc":"This class is for constructing and editing {@link ColumnBasedTableFilter}. It is used by the\n {@link ColumnFilterDialog} and exists primarily to make testing easier.\n@param <R> the row type for the table","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new ColumnFilterModel\n@param model the RowObjectFilterModel of the table being filtered.\n@param columnModel the TableColumnModel of the table being filtered.\n@param currentColumnTableFilter the currently applied TableColumnFilter or null if there is\n no current TableColumnFilter applied.","static":false,"name":"<init>","comment":"Constructs a new ColumnFilterModel","params":[{"type_long":"docking.widgets.table.RowObjectFilterModel<R>","name":"model","comment":"the RowObjectFilterModel of the table being filtered.","type_short":"RowObjectFilterModel"},{"type_long":"javax.swing.table.TableColumnModel","name":"columnModel","comment":"the TableColumnModel of the table being filtered.","type_short":"TableColumnModel"},{"type_long":"docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>","name":"currentColumnTableFilter","comment":"the currently applied TableColumnFilter or null if there is\n no current TableColumnFilter applied.","type_short":"ColumnBasedTableFilter"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"clean up.","static":false,"name":"dispose","comment":"clean up.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new filter fow (a new major row in the dialog filter panel)\n@param logicOperation the logical operation for how this row interacts with the rows before it\n@return the new filter row that represents a major row in the dialog filter panel.","static":false,"name":"createFilterRow","comment":"Creates a new filter fow (a new major row in the dialog filter panel)","params":[{"type_long":"docking.widgets.table.columnfilter.LogicOperation","name":"logicOperation","comment":"the logical operation for how this row interacts with the rows before it","type_short":"LogicOperation"}],"throws":[],"return":{"type_long":"docking.widgets.table.constraint.dialog.DialogFilterRow","comment":"the new filter row that represents a major row in the dialog filter panel.","type_short":"DialogFilterRow"}},{"javadoc":"Deletes a filter row (a major row in the dialog filter panel)\n@param filterRow the row to delete.","static":false,"name":"deleteFilterRow","comment":"Deletes a filter row (a major row in the dialog filter panel)","params":[{"type_long":"docking.widgets.table.constraint.dialog.DialogFilterRow","name":"filterRow","comment":"the row to delete.","type_short":"DialogFilterRow"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a list of all filter rows in this model.\n@return a list of all filter rows in this model.","static":false,"name":"getFilterRows","comment":"Returns a list of all filter rows in this model.","params":[],"throws":[],"return":{"type_long":"java.util.List<docking.widgets.table.constraint.dialog.DialogFilterRow>","comment":"a list of all filter rows in this model.","type_short":"List"}},{"javadoc":"Adds a listener to be notified for various changes that occur in this filter model.\n@param listener the listener to add.","static":false,"name":"addListener","comment":"Adds a listener to be notified for various changes that occur in this filter model.","params":[{"type_long":"docking.widgets.table.constraint.dialog.TableFilterDialogModelListener","name":"listener","comment":"the listener to add.","type_short":"TableFilterDialogModelListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the given listener.\n@param listener the listener to remove.","static":false,"name":"removeListener","comment":"Removes the given listener.","params":[{"type_long":"docking.widgets.table.constraint.dialog.TableFilterDialogModelListener","name":"listener","comment":"the listener to remove.","type_short":"TableFilterDialogModelListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Checks if this model represents a valid filter. While editing, some elements of the filter\n may be incomplete or invalid and if so, then this method will return false.\n@return true if the model represents a valid filter.","static":false,"name":"isValid","comment":"Checks if this model represents a valid filter. While editing, some elements of the filter\n may be incomplete or invalid and if so, then this method will return false.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the model represents a valid filter.","type_short":"boolean"}},{"javadoc":"Callback from a DialogFilterRow to indicate that the structure of the filter row changed.  This includes\n changing the column, or adding, deleting, changing filter conditions.\n@param filterRow the DialogFilterRow that changed.","static":false,"name":"dialogFilterRowChanged","comment":"Callback from a DialogFilterRow to indicate that the structure of the filter row changed.  This includes\n changing the column, or adding, deleting, changing filter conditions.","params":[{"type_long":"docking.widgets.table.constraint.dialog.DialogFilterRow","name":"filterRow","comment":"the DialogFilterRow that changed.","type_short":"DialogFilterRow"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Callback from a FilterRow to indicate that the user has change a value in one of the editors\n which may change the validity state of the model.\n@param editor the editor whose value has been changed.","static":false,"name":"editorValueChanged","comment":"Callback from a FilterRow to indicate that the user has change a value in one of the editors\n which may change the validity state of the model.","params":[{"type_long":"docking.widgets.table.constrainteditor.ColumnConstraintEditor<?>","name":"editor","comment":"the editor whose value has been changed.","type_short":"ColumnConstraintEditor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the table's DataSource (if it has one. Only table models that extends \n {@link GDynamicColumnTableModel} can have a data source\n@return the data source","static":false,"name":"getDataSource","comment":"Gets the table's DataSource (if it has one. Only table models that extends \n GDynamicColumnTableModel can have a data source","params":[],"throws":[],"return":{"type_long":"java.lang.Object","comment":"the data source","type_short":"Object"}},{"javadoc":"Builds a ColumnTableFilter from this model if the model is valid.\n@return a new ColumnTableFilter based on the configuration of this model or null if the model\n is invalid.","static":false,"name":"getTableColumnFilter","comment":"Builds a ColumnTableFilter from this model if the model is valid.","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>","comment":"a new ColumnTableFilter based on the configuration of this model or null if the model\n is invalid.","type_short":"ColumnBasedTableFilter"}},{"javadoc":"Changes the configuration of this model to match the given ColumnTableFilter.  Any exiting\n filter configurations will be cleared.\n@param filter the ColumnTableFilter for which to model.","static":false,"name":"setFilter","comment":"Changes the configuration of this model to match the given ColumnTableFilter.  Any exiting\n filter configurations will be cleared.","params":[{"type_long":"docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>","name":"filter","comment":"the ColumnTableFilter for which to model.","type_short":"ColumnBasedTableFilter"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clears the model of all filters.","static":false,"name":"clear","comment":"Clears the model of all filters.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a list of the columnFilterData for all filterable columns in the table\n@return a list of the columnFilterData for all filterable columns in the table","static":false,"name":"getAllColumnFilterData","comment":"Returns a list of the columnFilterData for all filterable columns in the table","params":[],"throws":[],"return":{"type_long":"java.util.List<docking.widgets.table.constraint.dialog.ColumnFilterData<?>>","comment":"a list of the columnFilterData for all filterable columns in the table","type_short":"List"}},{"javadoc":"Return true if there are no conditions (valid or invalid) defined for this filter model.\n@return true if there are no conditions (valid or invalid) defined for this filter model.","static":false,"name":"isEmpty","comment":"Return true if there are no conditions (valid or invalid) defined for this filter model.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if there are no conditions (valid or invalid) defined for this filter model.","type_short":"boolean"}},{"javadoc":"Returns true if this model has changes that make the filter different from the currently\n applied filter.\n@return if there are unapplied user changes to the filter.","static":false,"name":"hasUnappliedChanges","comment":"Returns true if this model has changes that make the filter different from the currently\n applied filter.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"if there are unapplied user changes to the filter.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getTableModel","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.RowObjectFilterModel<?>","comment":"","type_short":"RowObjectFilterModel"}},{"javadoc":"","static":false,"name":"createColumnFilterData","comment":"","params":[{"type_long":"int","name":"modelIndex","comment":"","type_short":"int"},{"type_long":"int","name":"viewIndex","comment":"","type_short":"int"},{"type_long":"java.lang.Class<?>","name":"columnClass","comment":"","type_short":"Class"}],"throws":[],"return":{"type_long":"docking.widgets.table.constraint.dialog.ColumnFilterData<?>","comment":"","type_short":"ColumnFilterData"}},{"javadoc":"","static":false,"name":"addEntriesFromCurrentTableFilter","comment":"","params":[{"type_long":"docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>","name":"columnTableFilter","comment":"","type_short":"ColumnBasedTableFilter"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hasColumnFilterData","comment":"","params":[{"type_long":"docking.widgets.table.columnfilter.ColumnConstraintSet<R,?>","name":"columnFilter","comment":"","type_short":"ColumnConstraintSet"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getColumnFilterDataByModelIndex","comment":"","params":[{"type_long":"int","name":"columnModelIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.table.constraint.dialog.ColumnFilterData<?>","comment":"","type_short":"ColumnFilterData"}},{"javadoc":"","static":false,"name":"getColumnFilterDataByViewIndex","comment":"","params":[{"type_long":"int","name":"viewIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.table.constraint.dialog.ColumnFilterData<?>","comment":"","type_short":"ColumnFilterData"}},{"javadoc":"","static":false,"name":"getFilterRowForColumnData","comment":"","params":[{"type_long":"docking.widgets.table.constraint.dialog.ColumnFilterData<?>","name":"columnFilterData","comment":"","type_short":"ColumnFilterData"}],"throws":[],"return":{"type_long":"docking.widgets.table.constraint.dialog.DialogFilterRow","comment":"","type_short":"DialogFilterRow"}},{"javadoc":"","static":false,"name":"notifyFilterChanged","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateColumnViewIndices","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setCurrentlyAppliedFilter","comment":"","params":[{"type_long":"docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>","name":"tableColumnFilter","comment":"","type_short":"ColumnBasedTableFilter"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ColumnFilterDialogModel","comment":"This class is for constructing and editing ColumnBasedTableFilter. It is used by the\n ColumnFilterDialog and exists primarily to make testing easier.","fields":[{"type_long":"docking.widgets.table.RowObjectFilterModel<R>","javadoc":"","static":false,"name":"tableModel","comment":"","type_short":"RowObjectFilterModel","constant_value":null},{"type_long":"java.util.List<docking.widgets.table.constraint.dialog.ColumnFilterData<?>>","javadoc":"","static":false,"name":"allFilters","comment":"","type_short":"List","constant_value":null},{"type_long":"java.util.List<docking.widgets.table.constraint.dialog.DialogFilterRow>","javadoc":"","static":false,"name":"filterRows","comment":"","type_short":"List","constant_value":null},{"type_long":"ghidra.util.datastruct.WeakSet<docking.widgets.table.constraint.dialog.TableFilterDialogModelListener>","javadoc":"","static":false,"name":"listeners","comment":"","type_short":"WeakSet","constant_value":null},{"type_long":"javax.swing.table.TableColumnModel","javadoc":"","static":false,"name":"columnModel","comment":"","type_short":"TableColumnModel","constant_value":null},{"type_long":"javax.swing.event.TableColumnModelListener","javadoc":"","static":false,"name":"columnModelListener","comment":"","type_short":"TableColumnModelListener","constant_value":null},{"type_long":"docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>","javadoc":"","static":false,"name":"currentFilter","comment":"","type_short":"ColumnBasedTableFilter","constant_value":null},{"type_long":"docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>","javadoc":"","static":false,"name":"defaultFilter","comment":"","type_short":"ColumnBasedTableFilter","constant_value":null}]}
