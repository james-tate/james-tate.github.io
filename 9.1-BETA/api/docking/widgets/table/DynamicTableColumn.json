{"implements":[],"javadoc":"The root interface for defining columns for {@link GDynamicColumnTableModel}s.  The \n class allows you to create objects for tables that know how to give a column value for a\n given row.\n@param <ROW_TYPE> The row object class supported by this column\n@param <COLUMN_TYPE> The column object class supported by this column\n@param <DATA_SOURCE> The object class type that will be passed to \n \t\t\t\t\t\tsee <code>getValue(ROW_TYPE, Settings, DATA_SOURCE, ServiceProvider)<\/code>","static":false,"methods":[{"javadoc":"Determines the unique column heading that may be used to identify a column instance.\n This name must be non-changing and is used to save\/restore state information.\n@return the field instance name.","static":false,"name":"getColumnName","comment":"Determines the unique column heading that may be used to identify a column instance.\n This name must be non-changing and is used to save\/restore state information.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the field instance name.","type_short":"String"}},{"javadoc":"Determines the class of object that is associated with this field (column).\n@return the column class","static":false,"name":"getColumnClass","comment":"Determines the class of object that is associated with this field (column).","params":[],"throws":[],"return":{"type_long":"java.lang.Class<COLUMN_TYPE>","comment":"the column class","type_short":"Class"}},{"javadoc":"Returns the preferred width for this column.  Column should either return a valid positive \n preferred size or -1.\n@return the preferred width for this column.","static":false,"name":"getColumnPreferredWidth","comment":"Returns the preferred width for this column.  Column should either return a valid positive \n preferred size or -1.","params":[],"throws":[],"return":{"type_long":"int","comment":"the preferred width for this column.","type_short":"int"}},{"javadoc":"Returns the single class type of the data that this table field can use to \n     generate columnar data.\n@return the single class type of the data that this table field can use to \n     generate columnar data.","static":false,"name":"getSupportedRowType","comment":"Returns the single class type of the data that this table field can use to \n     generate columnar data.","params":[],"throws":[],"return":{"type_long":"java.lang.Class<ROW_TYPE>","comment":"the single class type of the data that this table field can use to \n     generate columnar data.","type_short":"Class"}},{"javadoc":"Creates an object that is appropriate for this field (table column) and for the \n object that is associated with this row of the table.\n@param rowObject the object associated with the row in the table.\n@param settings field settings\n@param data the expected data object, as defined by the DATA_SOURCE type\n@param serviceProvider the {@link ServiceProvider} associated with the table.\n@return the object for the model to display in the table cell.\n@throws IllegalArgumentException if the rowObject is not one supported by this class.","static":false,"name":"getValue","comment":"Creates an object that is appropriate for this field (table column) and for the \n object that is associated with this row of the table.","params":[{"type_long":"ROW_TYPE","name":"rowObject","comment":"the object associated with the row in the table.","type_short":"ROW_TYPE"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"field settings","type_short":"Settings"},{"type_long":"DATA_SOURCE","name":"data","comment":"the expected data object, as defined by the DATA_SOURCE type","type_short":"DATA_SOURCE"},{"type_long":"ghidra.framework.plugintool.ServiceProvider","name":"serviceProvider","comment":"the ServiceProvider associated with the table.","type_short":"ServiceProvider"}],"throws":[{"type_long":"java.lang.IllegalArgumentException","comment":"if the rowObject is not one supported by this class.","type_short":"IllegalArgumentException"}],"return":{"type_long":"COLUMN_TYPE","comment":"the object for the model to display in the table cell.","type_short":"COLUMN_TYPE"}},{"javadoc":"Returns the optional cell renderer for this column; null if no renderer is used.\n \n <P>This method allows columns to define custom rendering.  The interface returned here \n ensures that the text used for filtering matches what the users sees (via the\n {@link GColumnRenderer#getFilterString(Object, Settings)} method).\n \n <P>Note: some types should not make use of the aforementioned filter string.  These types\n include the {@link Number} wrapper types, {@link Date} and {@link Enum}s.  (This is \n because the filtering system works naturally with these types.)   See {@link GColumnRenderer}.\n@return the renderer","static":false,"name":"getColumnRenderer","comment":"Returns the optional cell renderer for this column; null if no renderer is used.\n \n This method allows columns to define custom rendering.  The interface returned here \n ensures that the text used for filtering matches what the users sees (via the\n GColumnRenderer#getFilterString(Object, Settings) method).\n \n Note: some types should not make use of the aforementioned filter string.  These types\n include the Number wrapper types, Date and Enums.  (This is \n because the filtering system works naturally with these types.)   See GColumnRenderer.","params":[],"throws":[],"return":{"type_long":"ghidra.util.table.column.GColumnRenderer<COLUMN_TYPE>","comment":"the renderer","type_short":"GColumnRenderer"}},{"javadoc":"Returns a list of settings definitions for this field.\n@return list of settings definitions for this field.","static":false,"name":"getSettingsDefinitions","comment":"Returns a list of settings definitions for this field.","params":[],"throws":[],"return":{"type_long":"ghidra.docking.settings.SettingsDefinition[]","comment":"list of settings definitions for this field.","type_short":"ghidra.docking.settings.SettingsDefinition[]"}},{"javadoc":"Gets the maximum number of text display lines needed for any given cell with the \n specified settings.\n@param settings field settings\n@return maximum number of lines needed","static":false,"name":"getMaxLines","comment":"Gets the maximum number of text display lines needed for any given cell with the \n specified settings.","params":[{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"field settings","type_short":"Settings"}],"throws":[],"return":{"type_long":"int","comment":"maximum number of lines needed","type_short":"int"}},{"javadoc":"Determines the column heading that will be displayed.\n@param settings\n@return the field name to display as the column heading.","static":false,"name":"getColumnDisplayName","comment":"Determines the column heading that will be displayed.","params":[{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the field name to display as the column heading.","type_short":"String"}},{"javadoc":"Returns a description of this column.  This may be used as a tooltip for the column header\n@return a description of this column.  This may be used as a tooltip for the column header.","static":false,"name":"getColumnDescription","comment":"Returns a description of this column.  This may be used as a tooltip for the column header","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"a description of this column.  This may be used as a tooltip for the column header.","type_short":"String"}},{"javadoc":"Returns a value that is unique for this table column.  This is different than getting\n the display name, which may be shared by different columns.\n@return the identifier","static":false,"name":"getUniqueIdentifier","comment":"Returns a value that is unique for this table column.  This is different than getting\n the display name, which may be shared by different columns.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the identifier","type_short":"String"}},{"javadoc":"If implemented, will return a comparator that knows how to sort values for this column.  \n Implementors should return <code>null<\/code> if they do not wish to provider a comparator\n@return the comparator","static":false,"name":"getComparator","comment":"If implemented, will return a comparator that knows how to sort values for this column.  \n Implementors should return null if they do not wish to provider a comparator","params":[],"throws":[],"return":{"type_long":"java.util.Comparator<COLUMN_TYPE>","comment":"the comparator","type_short":"Comparator"}}],"name":"DynamicTableColumn","comment":"The root interface for defining columns for GDynamicColumnTableModels.  The \n class allows you to create objects for tables that know how to give a column value for a\n given row.","fields":[]}
