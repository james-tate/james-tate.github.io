{"implements":["ghidra.util.classfinder.ExtensionPoint"],"javadoc":"NOTE:  ALL TableRowMapper CLASSES MUST END IN \"TableRowMapper\".  If not,\n the ClassSearcher will not find them.\n \n An interface that allows implementors to map an object of one type to another.  This is useful\n for table models that have row types that are easily converted to other more generic types.\n <p>\n This interface is an ExtensionPoint so that once created, they will be ingested automatically\n by Ghidra.  Once discovered, these mappers will be used to provide dynamic columns to to \n tables with row types that match <tt>ROW_TYPE<\/tt>.\n@param <ROW_TYPE> The row type of a given table model\n@param <EXPECTED_ROW_TYPE> The row type expected by dynamic columns.\n@see DynamicTableColumn\n@see TableUtils","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getSourceType","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Class<ROW_TYPE>","comment":"","type_short":"Class"}},{"javadoc":"","static":false,"name":"getDestinationType","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Class<EXPECTED_ROW_TYPE>","comment":"","type_short":"Class"}},{"javadoc":"Creates a table column that will create a table column that knows how to map the \n given <b>ROW_TYPE<\/b> to the type of the column passed in, the <b>EXPECTED_ROW_TYPE<\/b>.\n@param <COLUMN_TYPE> The column type of the given and created columns\n@param destinationColumn The existing column, which is based upon EXPECTED_ROW_TYPE,\n        that we want to be able to use with the type we have, the ROW_TYPE.","static":false,"name":"createMappedTableColumn","comment":"Creates a table column that will create a table column that knows how to map the \n given ROW_TYPE to the type of the column passed in, the EXPECTED_ROW_TYPE.","params":[{"type_long":"docking.widgets.table.DynamicTableColumn<EXPECTED_ROW_TYPE,COLUMN_TYPE,DATA_SOURCE>","name":"destinationColumn","comment":"The existing column, which is based upon EXPECTED_ROW_TYPE,\n        that we want to be able to use with the type we have, the ROW_TYPE.","type_short":"DynamicTableColumn"}],"throws":[],"return":{"type_long":"docking.widgets.table.DynamicTableColumn<ROW_TYPE,COLUMN_TYPE,DATA_SOURCE>","comment":"","type_short":"DynamicTableColumn"}},{"javadoc":"","static":false,"name":"map","comment":"","params":[{"type_long":"ROW_TYPE","name":"rowObject","comment":"","type_short":"ROW_TYPE"},{"type_long":"DATA_SOURCE","name":"data","comment":"","type_short":"DATA_SOURCE"},{"type_long":"ghidra.framework.plugintool.ServiceProvider","name":"serviceProvider","comment":"","type_short":"ServiceProvider"}],"throws":[],"return":{"type_long":"EXPECTED_ROW_TYPE","comment":"","type_short":"EXPECTED_ROW_TYPE"}}],"name":"TableRowMapper","comment":"NOTE:  ALL TableRowMapper CLASSES MUST END IN \"TableRowMapper\".  If not,\n the ClassSearcher will not find them.\n \n An interface that allows implementors to map an object of one type to another.  This is useful\n for table models that have row types that are easily converted to other more generic types.\n \n This interface is an ExtensionPoint so that once created, they will be ingested automatically\n by Ghidra.  Once discovered, these mappers will be used to provide dynamic columns to to \n tables with row types that match ROW_TYPE.","fields":[]}
