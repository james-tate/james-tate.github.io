{"implements":["java.lang.Iterable"],"javadoc":"Represents the concept of a table's sorted state, which is the number of sorted columns, their\n sort order and their sort direction.\n \n You can create instances of this class via the {@link TableSortStateEditor}.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a sort state that represents being unsorted\n@return a sort state that represents being unsorted","static":true,"name":"createUnsortedSortState","comment":"Creates a sort state that represents being unsorted","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.TableSortState","comment":"a sort state that represents being unsorted","type_short":"TableSortState"}},{"javadoc":"Creates a sort state with the given column as the sorted column (sorted ascending).\n@param columnIndex The column to sort\n@return a sort state with the given column as the sorted column (sorted ascending).\n@see TableSortStateEditor","static":true,"name":"createDefaultSortState","comment":"Creates a sort state with the given column as the sorted column (sorted ascending).","params":[{"type_long":"int","name":"columnIndex","comment":"The column to sort","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.table.TableSortState","comment":"a sort state with the given column as the sorted column (sorted ascending).","type_short":"TableSortState"}},{"javadoc":"Creates a sort state with the given column as the sorted column in the given direction.\n@param columnIndex The column to sort\n@param isAscending True to sort ascending; false to sort descending\n@return a sort state with the given column as the sorted column (sorted ascending).\n@see TableSortStateEditor","static":true,"name":"createDefaultSortState","comment":"Creates a sort state with the given column as the sorted column in the given direction.","params":[{"type_long":"int","name":"columnIndex","comment":"The column to sort","type_short":"int"},{"type_long":"boolean","name":"isAscending","comment":"True to sort ascending; false to sort descending","type_short":"boolean"}],"throws":[],"return":{"type_long":"docking.widgets.table.TableSortState","comment":"a sort state with the given column as the sorted column (sorted ascending).","type_short":"TableSortState"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.util.List<docking.widgets.table.ColumnSortState>","name":"sortStates","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"docking.widgets.table.ColumnSortState","name":"columnSortState","comment":"","type_short":"ColumnSortState"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"iterator","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<docking.widgets.table.ColumnSortState>","comment":"","type_short":"Iterator"}},{"javadoc":"","static":false,"name":"getSortedColumnCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isUnsorted","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getColumnSortState","comment":"","params":[{"type_long":"int","name":"columnIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.table.ColumnSortState","comment":"","type_short":"ColumnSortState"}},{"javadoc":"","static":false,"name":"getAllSortStates","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<docking.widgets.table.ColumnSortState>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"restoreFromXML","comment":"","params":[{"type_long":"org.jdom.Element","name":"element","comment":"","type_short":"Element"}],"throws":[],"return":{"type_long":"docking.widgets.table.TableSortState","comment":"","type_short":"TableSortState"}},{"javadoc":"","static":false,"name":"writeToXML","comment":"","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"TableSortState","comment":"Represents the concept of a table's sorted state, which is the number of sorted columns, their\n sort order and their sort direction.\n \n You can create instances of this class via the TableSortStateEditor.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"XML_TABLE_SORT_STATE","comment":"","type_short":"String","constant_value":"\"TABLE_SORT_STATE\""},{"type_long":"java.util.List<docking.widgets.table.ColumnSortState>","javadoc":"","static":false,"name":"columnSortStates","comment":"","type_short":"List","constant_value":null}]}
