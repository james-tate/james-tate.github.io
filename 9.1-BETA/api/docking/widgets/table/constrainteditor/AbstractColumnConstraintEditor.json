{"implements":["docking.widgets.table.constrainteditor.ColumnConstraintEditor"],"javadoc":"Base class for many constraint editors, providing implementation for much of the interface.\n@param <T> the column type","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor.\n@param constraint the constraint this class is an editor for","static":false,"name":"<init>","comment":"Constructor.","params":[{"type_long":"docking.widgets.table.constraint.ColumnConstraint<T>","name":"constraint","comment":"the constraint this class is an editor for","type_short":"ColumnConstraint"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the constraints' new value from the editor component.\n\n This expects the UI to have been constructed.\n@see #getValue()\n@return ","static":false,"name":"getValueFromComponent","comment":"Get the constraints' new value from the editor component.\n\n This expects the UI to have been constructed.","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.constraint.ColumnConstraint<T>","comment":"","type_short":"ColumnConstraint"}},{"javadoc":"Delegate the construction of the inline editor component.\n@see #getInlineComponent()\n@return the editors inline component","static":false,"name":"buildInlineEditorComponent","comment":"Delegate the construction of the inline editor component.","params":[],"throws":[],"return":{"type_long":"java.awt.Component","comment":"the editors inline component","type_short":"Component"}},{"javadoc":"Indicates to subclasses that the constraint has changed, and the user interface\n needs to be updated to reflect the new state.","static":false,"name":"updateEditorComponent","comment":"Indicates to subclasses that the constraint has changed, and the user interface\n needs to be updated to reflect the new state.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Delegate the construction of the detail editor component.\n <p>\n Subclasses should override this method if they choose to provide a\n detailed constraint editor. This is an optional feature, and this implementation\n returns null to satisfy the <tt>ColumnConstraintEditor<\/tt> contract.\n@see #getDetailComponent()\n@return the editors detail component; null in this implementation","static":false,"name":"buildDetailEditorComponent","comment":"Delegate the construction of the detail editor component.\n \n Subclasses should override this method if they choose to provide a\n detailed constraint editor. This is an optional feature, and this implementation\n returns null to satisfy the ColumnConstraintEditor contract.","params":[],"throws":[],"return":{"type_long":"java.awt.Component","comment":"the editors detail component; null in this implementation","type_short":"Component"}},{"javadoc":"","static":false,"name":"getValue","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.constraint.ColumnConstraint<T>","comment":"","type_short":"ColumnConstraint"}},{"javadoc":"","static":false,"name":"setValue","comment":"","params":[{"type_long":"docking.widgets.table.constraint.ColumnConstraint<T>","name":"value","comment":"","type_short":"ColumnConstraint"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addChangeListener","comment":"","params":[{"type_long":"javax.swing.event.ChangeListener","name":"l","comment":"","type_short":"ChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeChangeListener","comment":"","params":[{"type_long":"javax.swing.event.ChangeListener","name":"l","comment":"","type_short":"ChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification that the editors' value has changed.","static":false,"name":"valueChanged","comment":"Notification that the editors' value has changed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateInfoMessage","comment":"","params":[{"type_long":"boolean","name":"isValid","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Template method that subclasses must implement.  This class will call this method whenever\n the value changes so that the validity state is updated.\n <p>\n Only called when the editor component has been constructed and UI elements are defined.\n@return true if the UI defines a valid value, false otherwise\n@see ColumnConstraintEditor#hasValidValue()","static":false,"name":"checkEditorValueValidity","comment":"Template method that subclasses must implement.  This class will call this method whenever\n the value changes so that the validity state is updated.\n \n Only called when the editor component has been constructed and UI elements are defined.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the UI defines a valid value, false otherwise","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hasValidValue","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Notify all monitors that the configuration of the constraint has changed.","static":false,"name":"notifyConstraintChanged","comment":"Notify all monitors that the configuration of the constraint has changed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getInlineComponent","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Component","comment":"","type_short":"Component"}},{"javadoc":"","static":false,"name":"getDetailComponent","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Component","comment":"","type_short":"Component"}},{"javadoc":"Determine if the graphical elements of the editor have been constructed.\n@return true if the inline or detail editors have been built, false otherwise","static":false,"name":"hasEditorComponents","comment":"Determine if the graphical elements of the editor have been constructed.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the inline or detail editors have been built, false otherwise","type_short":"boolean"}},{"javadoc":"Uses HTML to format and color a string depending on if it is an error or not.\n@param message the message to format.\n@param error true if the message is an error; false otherwise\n@return an HTML string suitable for a JLabel.","static":true,"name":"formatStatus","comment":"Uses HTML to format and color a string depending on if it is an error or not.","params":[{"type_long":"java.lang.String","name":"message","comment":"the message to format.","type_short":"String"},{"type_long":"boolean","name":"error","comment":"true if the message is an error; false otherwise","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"an HTML string suitable for a JLabel.","type_short":"String"}}],"name":"AbstractColumnConstraintEditor","comment":"Base class for many constraint editors, providing implementation for much of the interface.","fields":[{"type_long":"docking.widgets.table.constraint.ColumnConstraint<T>","javadoc":"","static":false,"name":"currentConstraint","comment":"","type_short":"ColumnConstraint","constant_value":null},{"type_long":"ghidra.util.datastruct.WeakSet<javax.swing.event.ChangeListener>","javadoc":"","static":false,"name":"listeners","comment":"","type_short":"WeakSet","constant_value":null},{"type_long":"java.awt.Component","javadoc":"","static":false,"name":"inlineEditorComponent","comment":"","type_short":"Component","constant_value":null},{"type_long":"java.awt.Component","javadoc":"","static":false,"name":"detailEditorComponent","comment":"","type_short":"Component","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"validEditorValue","comment":"","type_short":"boolean","constant_value":null},{"type_long":"java.awt.Color","javadoc":"Color indicating a valid value is defined by the editor widget(s)","static":true,"name":"VALID_INPUT_COLOR","comment":"Color indicating a valid value is defined by the editor widget(s)","type_short":"Color","constant_value":null},{"type_long":"java.awt.Color","javadoc":"Color indicating a invalid value is defined by the editor widget(s)","static":true,"name":"INVALID_INPUT_COLOR","comment":"Color indicating a invalid value is defined by the editor widget(s)","type_short":"Color","constant_value":null}]}
