{"implements":[],"javadoc":"","static":false,"methods":[{"javadoc":"Returns true if this filter matches the given row (data)\n@param rowObject the current row object\n@return true if the element at the given row matches this filter.","static":false,"name":"acceptsRow","comment":"Returns true if this filter matches the given row (data)","params":[{"type_long":"ROW_OBJECT","name":"rowObject","comment":"the current row object","type_short":"ROW_OBJECT"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the element at the given row matches this filter.","type_short":"boolean"}},{"javadoc":"Returns true if this filter is a more specific version of the given filter.\n\n <P>For example, if this filter is a 'starts with' text filter, with the\n value of 'bobo', then if the given filter is also a 'starts with' filter,\n with a value of 'bob', then this\n filter is considered a sub-filter of the given sub-filter.\n@param tableFilter the filter to check\n@return true if this filter is a sub-filter of the given filter","static":false,"name":"isSubFilterOf","comment":"Returns true if this filter is a more specific version of the given filter.\n\n For example, if this filter is a 'starts with' text filter, with the\n value of 'bobo', then if the given filter is also a 'starts with' filter,\n with a value of 'bob', then this\n filter is considered a sub-filter of the given sub-filter.","params":[{"type_long":"docking.widgets.table.TableFilter<?>","name":"tableFilter","comment":"the filter to check","type_short":"TableFilter"}],"throws":[],"return":{"type_long":"boolean","comment":"true if this filter is a sub-filter of the given filter","type_short":"boolean"}},{"javadoc":"Returns true if the there is a column filter on the column specified\n@param columnModelIndex the model index of the column to test for column filters.\n@return true if the there is a column filter on the column specified.","static":false,"name":"hasColumnFilter","comment":"Returns true if the there is a column filter on the column specified","params":[{"type_long":"int","name":"columnModelIndex","comment":"the model index of the column to test for column filters.","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the there is a column filter on the column specified.","type_short":"boolean"}},{"javadoc":"A method that allows filters to report that they have nothing to actually filter.  This\n is useful for empty\/null filters.\n@return true if this filter will not perform any filtering","static":false,"name":"isEmpty","comment":"A method that allows filters to report that they have nothing to actually filter.  This\n is useful for empty\/null filters.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this filter will not perform any filtering","type_short":"boolean"}}],"name":"TableFilter","comment":"","fields":[]}
