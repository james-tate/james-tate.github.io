{"implements":[],"javadoc":"An interface that is meant to take the column type of of a {@link DynamicTableColumn}\n and convert it to the specified type.   This class is meant to be used when the dynamic \n filtering mechanism is not correctly filtering a column, usually because the default filter\n for the column type does not match what the renderer is displaying in the table.\n \n <P>Columns create one of these classes to be returned from \n {@link DynamicTableColumn#getFilterConverter()}.\n@param <COLUMN_TYPE> the column type\n@param <FILTER_TYPE> the new type to be used during filter operations","static":false,"methods":[{"javadoc":"Returns the destination class of the conversion\n@return the destination class","static":false,"name":"getFilterType","comment":"Returns the destination class of the conversion","params":[],"throws":[],"return":{"type_long":"java.lang.Class<FILTER_TYPE>","comment":"the destination class","type_short":"Class"}},{"javadoc":"Converts in instance of the column type to an instance of the destination type\n@param t the column type instance\n@param settings any settings the converter may need to convert the type\n@return the new object","static":false,"name":"convert","comment":"Converts in instance of the column type to an instance of the destination type","params":[{"type_long":"COLUMN_TYPE","name":"t","comment":"the column type instance","type_short":"COLUMN_TYPE"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"any settings the converter may need to convert the type","type_short":"Settings"}],"throws":[],"return":{"type_long":"FILTER_TYPE","comment":"the new object","type_short":"FILTER_TYPE"}}],"name":"FilterTypeConverter","comment":"An interface that is meant to take the column type of of a DynamicTableColumn\n and convert it to the specified type.   This class is meant to be used when the dynamic \n filtering mechanism is not correctly filtering a column, usually because the default filter\n for the column type does not match what the renderer is displaying in the table.\n \n Columns create one of these classes to be returned from \n DynamicTableColumn#getFilterConverter().","fields":[]}
