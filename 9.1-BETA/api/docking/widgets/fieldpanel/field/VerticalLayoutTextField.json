{"implements":["docking.widgets.fieldpanel.field.TextField"],"javadoc":"This class provides a TextField implementation that takes multiple FieldElements and places\n each on its own line within the field.  It also can take a single FieldElements and \n word wrap,creating new FieldElements (one per line).","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"This constructor will create a text field from an array of FieldElements, putting each\n element on its own line.\n@param textElements the FieldElements to display\n@param startX the x position to draw the element\n@param width the max width allocated to this field\n@param maxLines the max number of lines to display\n@param hlFactory the highlight factory","static":false,"name":"<init>","comment":"This constructor will create a text field from an array of FieldElements, putting each\n element on its own line.","params":[{"type_long":"docking.widgets.fieldpanel.field.FieldElement[]","name":"textElements","comment":"the FieldElements to display","type_short":"docking.widgets.fieldpanel.field.FieldElement[]"},{"type_long":"int","name":"startX","comment":"the x position to draw the element","type_short":"int"},{"type_long":"int","name":"width","comment":"the max width allocated to this field","type_short":"int"},{"type_long":"int","name":"maxLines","comment":"the max number of lines to display","type_short":"int"},{"type_long":"docking.widgets.fieldpanel.support.HighlightFactory","name":"hlFactory","comment":"the highlight factory","type_short":"HighlightFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This constructor will create a text field from an array of FieldElements, putting each\n element on its own line.\n@param textElements the FieldElements to display\n@param startX the x position to draw the element\n@param width the max width allocated to this field\n@param maxLines the max number of lines to display\n@param hlFactory the highlight factory\n@param lineDelimiter The string to space lines of text when concatenated by the \n        getText() method.","static":false,"name":"<init>","comment":"This constructor will create a text field from an array of FieldElements, putting each\n element on its own line.","params":[{"type_long":"docking.widgets.fieldpanel.field.FieldElement[]","name":"textElements","comment":"the FieldElements to display","type_short":"docking.widgets.fieldpanel.field.FieldElement[]"},{"type_long":"int","name":"startX","comment":"the x position to draw the element","type_short":"int"},{"type_long":"int","name":"width","comment":"the max width allocated to this field","type_short":"int"},{"type_long":"int","name":"maxLines","comment":"the max number of lines to display","type_short":"int"},{"type_long":"docking.widgets.fieldpanel.support.HighlightFactory","name":"hlFactory","comment":"the highlight factory","type_short":"HighlightFactory"},{"type_long":"java.lang.String","name":"lineDelimiter","comment":"The string to space lines of text when concatenated by the \n        getText() method.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"calculateHeight","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"calculatePreferredWidth","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getText()","static":false,"name":"getText","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getTextWithLineSeparators","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see java.lang.Object#toString()","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getWidth()","static":false,"name":"getWidth","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getPreferredWidth","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getHeight()","static":false,"name":"getHeight","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getStartX()","static":false,"name":"getStartX","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getNumRows()","static":false,"name":"getNumRows","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getNumCols(int)","static":false,"name":"getNumCols","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getRow(int)","static":false,"name":"getRow","comment":"","params":[{"type_long":"int","name":"y","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getCol(int, int)","static":false,"name":"getCol","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"},{"type_long":"int","name":"x","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getY(int)","static":false,"name":"getY","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getX(int, int)","static":false,"name":"getX","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"},{"type_long":"int","name":"col","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#isValid(int, int)","static":false,"name":"isValid","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"},{"type_long":"int","name":"col","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#paint(java.awt.Graphics, docking.widgets.fieldpanel.internal.PaintContext, boolean, docking.widgets.fieldpanel.support.RowColLocation)","static":false,"name":"paint","comment":"","params":[{"type_long":"javax.swing.JComponent","name":"c","comment":"","type_short":"JComponent"},{"type_long":"java.awt.Graphics","name":"g","comment":"","type_short":"Graphics"},{"type_long":"docking.widgets.fieldpanel.internal.PaintContext","name":"context","comment":"","type_short":"PaintContext"},{"type_long":"docking.widgets.fieldpanel.internal.FieldBackgroundColorManager","name":"colorManager","comment":"","type_short":"FieldBackgroundColorManager"},{"type_long":"docking.widgets.fieldpanel.support.RowColLocation","name":"cursorLoc","comment":"","type_short":"RowColLocation"},{"type_long":"int","name":"rowHeight","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"print","comment":"","params":[{"type_long":"java.awt.Graphics","name":"g","comment":"","type_short":"Graphics"},{"type_long":"docking.widgets.fieldpanel.internal.PaintContext","name":"context","comment":"","type_short":"PaintContext"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getCursorBounds(int, int)","static":false,"name":"getCursorBounds","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"},{"type_long":"int","name":"col","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.awt.Rectangle","comment":"","type_short":"Rectangle"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#contains(int, int)","static":false,"name":"contains","comment":"","params":[{"type_long":"int","name":"x","comment":"","type_short":"int"},{"type_long":"int","name":"y","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getScrollableUnitIncrement(int, int, int)","static":false,"name":"getScrollableUnitIncrement","comment":"","params":[{"type_long":"int","name":"topOfScreen","comment":"","type_short":"int"},{"type_long":"int","name":"direction","comment":"","type_short":"int"},{"type_long":"int","name":"max","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#isPrimary()","static":false,"name":"isPrimary","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Sets the primary State.\n@param state the state to set.","static":false,"name":"setPrimary","comment":"Sets the primary State.","params":[{"type_long":"boolean","name":"state","comment":"the state to set.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the list of subfields in this field.","static":false,"name":"getSubfields","comment":"Returns the list of subfields in this field.","params":[],"throws":[],"return":{"type_long":"java.util.List<docking.widgets.fieldpanel.field.Field>","comment":"","type_short":"List"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getHeightAbove()","static":false,"name":"getHeightAbove","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getHeightBelow()","static":false,"name":"getHeightBelow","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#rowHeightChanged(int, int)","static":false,"name":"rowHeightChanged","comment":"","params":[{"type_long":"int","name":"heightAbove1","comment":"","type_short":"int"},{"type_long":"int","name":"heightBelow","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFieldElement","comment":"","params":[{"type_long":"int","name":"screenRow","comment":"","type_short":"int"},{"type_long":"int","name":"screenColumn","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.field.FieldElement","comment":"","type_short":"FieldElement"}},{"javadoc":"","static":false,"name":"layoutElements","comment":"","params":[{"type_long":"int","name":"maxLines","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.util.List<docking.widgets.fieldpanel.field.Field>","comment":"","type_short":"List"}},{"javadoc":"Translates the row and column to a String index and character offset into \n that string.\n@param screenRow the row containing the location.\n@param screenColumn the character position in the row of the location\n@return a MultiStringLocation containing the string index and position \n within that string.","static":false,"name":"screenToDataLocation","comment":"Translates the row and column to a String index and character offset into \n that string.","params":[{"type_long":"int","name":"screenRow","comment":"the row containing the location.","type_short":"int"},{"type_long":"int","name":"screenColumn","comment":"the character position in the row of the location","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.support.RowColLocation","comment":"a MultiStringLocation containing the string index and position \n within that string.","type_short":"RowColLocation"}},{"javadoc":"Finds the corresponding row, column for string index, and offset\n@param dataRow index into the string array\n@param dataColumn offset into the indexed string.","static":false,"name":"dataToScreenLocation","comment":"Finds the corresponding row, column for string index, and offset","params":[{"type_long":"int","name":"dataRow","comment":"index into the string array","type_short":"int"},{"type_long":"int","name":"dataColumn","comment":"offset into the indexed string.","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.support.RowColLocation","comment":"","type_short":"RowColLocation"}},{"javadoc":"","static":false,"name":"generateText","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"generateText","comment":"","params":[{"type_long":"java.lang.String","name":"delimiter","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#screenLocationToTextOffset(int, int)","static":false,"name":"screenLocationToTextOffset","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"},{"type_long":"int","name":"col","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#textOffsetToScreenLocation(int)","static":false,"name":"textOffsetToScreenLocation","comment":"","params":[{"type_long":"int","name":"textOffset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.support.RowColLocation","comment":"","type_short":"RowColLocation"}},{"javadoc":"@see docking.widgets.fieldpanel.field.TextField#isClipped()","static":false,"name":"isClipped","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"VerticalLayoutTextField","comment":"This class provides a TextField implementation that takes multiple FieldElements and places\n each on its own line within the field.  It also can take a single FieldElements and \n word wrap,creating new FieldElements (one per line).","fields":[{"type_long":"docking.widgets.fieldpanel.field.FieldElement[]","javadoc":"","static":false,"name":"textElements","comment":"","type_short":"docking.widgets.fieldpanel.field.FieldElement[]","constant_value":null},{"type_long":"java.util.List<docking.widgets.fieldpanel.field.Field>","javadoc":"","static":false,"name":"subFields","comment":"","type_short":"List","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"startX","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"width","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"preferredWidth","comment":"","type_short":"int","constant_value":null},{"type_long":"docking.widgets.fieldpanel.support.HighlightFactory","javadoc":"","static":false,"name":"hlFactory","comment":"","type_short":"HighlightFactory","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"height","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"heightAbove","comment":"","type_short":"int","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isPrimary","comment":"","type_short":"boolean","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"text","comment":"","type_short":"String","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isClipped","comment":"","type_short":"boolean","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"lineDelimiter","comment":"","type_short":"String","constant_value":null}]}
