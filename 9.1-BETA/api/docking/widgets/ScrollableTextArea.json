{"implements":[],"javadoc":"A JScrollPane wrapper for a text area that can be told to scroll to bottom","static":false,"extends":"javax.swing.JScrollPane","methods":[{"javadoc":"Constructs a scrollable JTextArea, where a default model is set,\n the initial string is null, and rows\/columns are set to 0.","static":false,"name":"<init>","comment":"Constructs a scrollable JTextArea, where a default model is set,\n the initial string is null, and rows\/columns are set to 0.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a scrollable JextArea with the specified text displayed.\n A default model is created and rows\/columns are set to 0.\n@param text the initial text.","static":false,"name":"<init>","comment":"Constructs a scrollable JextArea with the specified text displayed.\n A default model is created and rows\/columns are set to 0.","params":[{"type_long":"java.lang.String","name":"text","comment":"the initial text.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new empty TextArea with the specified number\n of rows and columns. A default model is created, and the\n initial string is null.\n@param rows the number of visible rows.\n@param columns the number of visible columns.","static":false,"name":"<init>","comment":"Constructs a new empty TextArea with the specified number\n of rows and columns. A default model is created, and the\n initial string is null.","params":[{"type_long":"int","name":"rows","comment":"the number of visible rows.","type_short":"int"},{"type_long":"int","name":"columns","comment":"the number of visible columns.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a scrollable JTextArea with the specified text and \n number of rows and columns. A default model is created.\n@param text initial text.\n@param rows the number of visible rows.\n@param columns the number of visible columns.","static":false,"name":"<init>","comment":"Constructs a scrollable JTextArea with the specified text and \n number of rows and columns. A default model is created.","params":[{"type_long":"java.lang.String","name":"text","comment":"initial text.","type_short":"String"},{"type_long":"int","name":"rows","comment":"the number of visible rows.","type_short":"int"},{"type_long":"int","name":"columns","comment":"the number of visible columns.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a scrollable JTextArea with the given document model,\n and defaults for all of the other arguments (null, 0, 0).\n@param doc - the model to use","static":false,"name":"<init>","comment":"Constructs a scrollable JTextArea with the given document model,\n and defaults for all of the other arguments (null, 0, 0).","params":[{"type_long":"javax.swing.text.Document","name":"doc","comment":"- the model to use","type_short":"Document"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a scrollable JTextArea with the specified number of\n rows and columns, and the given model. All of the\n constructors feed through this constructor.\n@param doc - the model to use\n@param text initial text.\n@param rows the number of visible rows.\n@param columns the number of visible columns.","static":false,"name":"<init>","comment":"Constructs a scrollable JTextArea with the specified number of\n rows and columns, and the given model. All of the\n constructors feed through this constructor.","params":[{"type_long":"javax.swing.text.Document","name":"doc","comment":"- the model to use","type_short":"Document"},{"type_long":"java.lang.String","name":"text","comment":"initial text.","type_short":"String"},{"type_long":"int","name":"rows","comment":"the number of visible rows.","type_short":"int"},{"type_long":"int","name":"columns","comment":"the number of visible columns.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Appends the text to the text area maintained in this scrollpane\n@param text the text to append.","static":false,"name":"append","comment":"Appends the text to the text area maintained in this scrollpane","params":[{"type_long":"java.lang.String","name":"text","comment":"the text to append.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the number of lines current set in the text area","static":false,"name":"getLineCount","comment":"Returns the number of lines current set in the text area","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the tabsize set in the text area","static":false,"name":"getTabSize","comment":"Returns the tabsize set in the text area","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the total area height of the text area (row height * line count)","static":false,"name":"getTextAreaHeight","comment":"Returns the total area height of the text area (row height * line count)","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the visible height of the text area","static":false,"name":"getTextVisibleHeight","comment":"Returns the visible height of the text area","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Inserts the string at the specified position\n@param text the text to insert.\n@param position the character postition at which to insert the text.","static":false,"name":"insert","comment":"Inserts the string at the specified position","params":[{"type_long":"java.lang.String","name":"text","comment":"the text to insert.","type_short":"String"},{"type_long":"int","name":"position","comment":"the character postition at which to insert the text.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"replaces the range of text specified\n@param text the new text that will replace the old text.\n@param start the starting character postition of the text to replace.\n@param end the ending character position of the text to replace.","static":false,"name":"replaceRange","comment":"replaces the range of text specified","params":[{"type_long":"java.lang.String","name":"text","comment":"the new text that will replace the old text.","type_short":"String"},{"type_long":"int","name":"start","comment":"the starting character postition of the text to replace.","type_short":"int"},{"type_long":"int","name":"end","comment":"the ending character position of the text to replace.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setCaretPosition","comment":"","params":[{"type_long":"int","name":"position","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPreferredSize","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Dimension","comment":"","type_short":"Dimension"}},{"javadoc":"forces the scroll pane to scroll to bottom of text area","static":false,"name":"scrollToBottom","comment":"forces the scroll pane to scroll to bottom of text area","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Scroll the pane to the top of the text area.","static":false,"name":"scrollToTop","comment":"Scroll the pane to the top of the text area.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the number of characters to expand tabs to. This will be\n multiplied by the maximum advance for variable width fonts.\n A PropertyChange event (\"tabSize\") is fired when tab size changes.\n@param tabSize the new tab size.","static":false,"name":"setTabSize","comment":"Sets the number of characters to expand tabs to. This will be\n multiplied by the maximum advance for variable width fonts.\n A PropertyChange event (\"tabSize\") is fired when tab size changes.","params":[{"type_long":"int","name":"tabSize","comment":"the new tab size.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"set the text in the text area\n@param text the text to set.","static":false,"name":"setText","comment":"set the text in the text area","params":[{"type_long":"java.lang.String","name":"text","comment":"the text to set.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the text contained within the text area","static":false,"name":"getText","comment":"Returns the text contained within the text area","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Sets the ability to edit the text area content\n@param editable true to edit, false to not allow edit.","static":false,"name":"setEditable","comment":"Sets the ability to edit the text area content","params":[{"type_long":"boolean","name":"editable","comment":"true to edit, false to not allow edit.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"used by all constructors to finish initialization of the object","static":false,"name":"initialize","comment":"used by all constructors to finish initialization of the object","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ScrollableTextArea","comment":"A JScrollPane wrapper for a text area that can be told to scroll to bottom","fields":[{"type_long":"docking.widgets.ScrollableTextArea.PrivateTextArea","javadoc":"","static":false,"name":"textArea","comment":"","type_short":"PrivateTextArea","constant_value":null}]}
