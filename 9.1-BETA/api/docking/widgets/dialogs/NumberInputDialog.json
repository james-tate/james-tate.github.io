{"implements":[],"javadoc":"<P>DialogComponentProvider that provides information to create a modal dialog\n to prompt for a number (int) to be input by the user.<\/P>\n\n <P>If an initial value is specified it is not in the range of min,max, it will be set to the min.<\/P>\n\n <P>If the maximum value indicated is less than the minimum then the max\n is the largest positive integer. Otherwise the maximum valid value is\n as indicated.<\/P>\n\n <P>This dialog component provider class can be used by various classes and\n therefore should not have its size or position remembered by the\n tool.showDialog() call parameters.<\/P>\n <br>To display the dialog call:\n <pre>\n <code>\n     String entryType = \"items\";\n     int initial = 5; \/\/ initial value in text field.\n     int min = 1;     \/\/ minimum valid value in text field.\n     int max = 10;    \/\/ maximum valid value in text field.\n\n     NumberInputDialog numInputProvider = new NumberInputProvider(entryType, initial, min, max);\n     if (numInputProvider.show()) {\n     \t   \/\/ not cancelled\n     \t   int result = numInputProvider.getValue();\n     }\n <\/code>\n <\/pre>","static":false,"extends":"docking.DialogComponentProvider","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"entryType","comment":"","type_short":"String"},{"type_long":"int","name":"initial","comment":"","type_short":"int"},{"type_long":"int","name":"min","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new NumberInputDialog.\n@param entryType item type the number indicates\n                  (i.e. \"duplicates\", \"items\", or \"elements\").\n@param initial default value displayed in the text field.\n@param min minimum value allowed.\n@param max maximum value allowed.","static":false,"name":"<init>","comment":"Constructs a new NumberInputDialog.","params":[{"type_long":"java.lang.String","name":"entryType","comment":"item type the number indicates\n                  (i.e. \"duplicates\", \"items\", or \"elements\").","type_short":"String"},{"type_long":"int","name":"initial","comment":"default value displayed in the text field.","type_short":"int"},{"type_long":"int","name":"min","comment":"minimum value allowed.","type_short":"int"},{"type_long":"int","name":"max","comment":"maximum value allowed.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a numberInputDialog where the the min is 0 and the max is INTEGER.MAX_VALUE\n@param title the title of the dialog\n@param prompt the prompt in the dialog\n@param initialValue the initial value.  If null, the text input will be blank.","static":false,"name":"<init>","comment":"Create a numberInputDialog where the the min is 0 and the max is INTEGER.MAX_VALUE","params":[{"type_long":"java.lang.String","name":"title","comment":"the title of the dialog","type_short":"String"},{"type_long":"java.lang.String","name":"prompt","comment":"the prompt in the dialog","type_short":"String"},{"type_long":"java.lang.Integer","name":"initialValue","comment":"the initial value.  If null, the text input will be blank.","type_short":"Integer"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Show a number input dialog.\n@param title The title of the dialog.\n@param prompt the prompt to display before the number input field.\n@param initialValue the default value to display, null will leave the field blank.\n@param min the minimum allowed value of the field.\n@param max the maximum allowed value of the field.\n@param showAsHex if true, the initial value will be displayed as hex.","static":false,"name":"<init>","comment":"Show a number input dialog.","params":[{"type_long":"java.lang.String","name":"title","comment":"The title of the dialog.","type_short":"String"},{"type_long":"java.lang.String","name":"prompt","comment":"the prompt to display before the number input field.","type_short":"String"},{"type_long":"java.lang.Integer","name":"initialValue","comment":"the default value to display, null will leave the field blank.","type_short":"Integer"},{"type_long":"int","name":"min","comment":"the minimum allowed value of the field.","type_short":"int"},{"type_long":"int","name":"max","comment":"the maximum allowed value of the field.","type_short":"int"},{"type_long":"boolean","name":"showAsHex","comment":"if true, the initial value will be displayed as hex.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"nonNull","comment":"","params":[{"type_long":"java.lang.String","name":"s","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Define the Main panel for the dialog here.\n@param showAsHex\n@return JPanel the completed <CODE>Main Panel<\\CODE>","static":false,"name":"buildMainPanel","comment":"Define the Main panel for the dialog here.","params":[{"type_long":"java.lang.String","name":"prompt","comment":"","type_short":"String"},{"type_long":"boolean","name":"showAsHex","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"javax.swing.JPanel","comment":"JPanel the completed Main Panel\\CODE","type_short":"JPanel"}},{"javadoc":"Gets called when the user clicks on the OK Action for the dialog.","static":false,"name":"okCallback","comment":"Gets called when the user clicks on the OK Action for the dialog.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets called when the user clicks on the Cancel Action for the dialog.","static":false,"name":"cancelCallback","comment":"Gets called when the user clicks on the Cancel Action for the dialog.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return whether the user cancelled the input dialog.","static":false,"name":"wasCancelled","comment":"Return whether the user cancelled the input dialog.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"initializeDefaultValue","comment":"","params":[{"type_long":"java.lang.Integer","name":"initial","comment":"","type_short":"Integer"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"selectAndFocusText","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"<code>show<\/code> displays the dialog, gets the user input\n@return false if the user cancelled the operation","static":false,"name":"show","comment":"show displays the dialog, gets the user input","params":[],"throws":[],"return":{"type_long":"boolean","comment":"false if the user cancelled the operation","type_short":"boolean"}},{"javadoc":"Convert the input to an int value.\n@throws NumberFormatException if entered value cannot be parsed.","static":false,"name":"getValue","comment":"Convert the input to an int value.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Sets the value in the input field to the indicated value.","static":false,"name":"setInput","comment":"Sets the value in the input field to the indicated value.","params":[{"type_long":"int","name":"value","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the default message to be displayed when valid values are in the text fields.\n@param defaultMessage the message to be displayed when valid values are in the text fields.","static":false,"name":"setDefaultMessage","comment":"Sets the default message to be displayed when valid values are in the text fields.","params":[{"type_long":"java.lang.String","name":"defaultMessage","comment":"the message to be displayed when valid values are in the text fields.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return the minimum acceptable value.","static":false,"name":"getMin","comment":"Return the minimum acceptable value.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Return the maximum acceptable value.","static":false,"name":"getMax","comment":"Return the maximum acceptable value.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getNumberInputField","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.textfield.IntegerTextField","comment":"","type_short":"IntegerTextField"}},{"javadoc":"Create the main panel.","static":false,"name":"createPanel","comment":"Create the main panel.","params":[{"type_long":"java.lang.String","name":"prompt","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"javax.swing.JPanel","comment":"","type_short":"JPanel"}},{"javadoc":"","static":false,"name":"updateOKButtonEnablement","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Check the entry;\n@return boolean true if input is OK","static":false,"name":"checkInput","comment":"Check the entry;","params":[],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if input is OK","type_short":"boolean"}},{"javadoc":"","static":false,"name":"checkDecimalRange","comment":"","params":[{"type_long":"int","name":"decimalValue","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":true,"name":"buildDefaultPrompt","comment":"","params":[{"type_long":"java.lang.String","name":"entryType","comment":"","type_short":"String"},{"type_long":"int","name":"min","comment":"","type_short":"int"},{"type_long":"int","name":"max","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"NumberInputDialog","comment":"DialogComponentProvider that provides information to create a modal dialog\n to prompt for a number (int) to be input by the user.\n\n If an initial value is specified it is not in the range of min,max, it will be set to the min.\n\n If the maximum value indicated is less than the minimum then the max\n is the largest positive integer. Otherwise the maximum valid value is\n as indicated.\n\n This dialog component provider class can be used by various classes and\n therefore should not have its size or position remembered by the\n tool.showDialog() call parameters.\n To display the dialog call:\n \n \n     String entryType = \"items\";\n     int initial = 5; \/\/ initial value in text field.\n     int min = 1;     \/\/ minimum valid value in text field.\n     int max = 10;    \/\/ maximum valid value in text field.\n\n     NumberInputDialog numInputProvider = new NumberInputProvider(entryType, initial, min, max);\n     if (numInputProvider.show()) {\n     \t   \/\/ not cancelled\n     \t   int result = numInputProvider.getValue();\n     }\n \n ","fields":[{"type_long":"boolean","javadoc":"","static":false,"name":"wasCancelled","comment":"","type_short":"boolean","constant_value":null},{"type_long":"docking.widgets.textfield.IntegerTextField","javadoc":"","static":false,"name":"numberInputField","comment":"","type_short":"IntegerTextField","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"min","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"max","comment":"","type_short":"int","constant_value":null},{"type_long":"javax.swing.JLabel","javadoc":"","static":false,"name":"label","comment":"","type_short":"JLabel","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"defaultMessage","comment":"","type_short":"String","constant_value":null}]}
