{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"hideAllWindows","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"javax.swing.JComponent","name":"displayComponent","comment":"","type_short":"JComponent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.awt.Component","name":"sourceComponent","comment":"","type_short":"Component"},{"type_long":"javax.swing.JComponent","name":"displayComponent","comment":"","type_short":"JComponent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getParentWindow","comment":"","params":[{"type_long":"java.awt.Component","name":"sourceComponent","comment":"","type_short":"Component"}],"throws":[],"return":{"type_long":"java.awt.Window","comment":"","type_short":"Window"}},{"javadoc":"","static":true,"name":"getDefaultParentWindow","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Window","comment":"","type_short":"Window"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.awt.Window","name":"parentWindow","comment":"","type_short":"Window"},{"type_long":"javax.swing.JComponent","name":"displayComponent","comment":"","type_short":"JComponent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addMouseListener","comment":"","params":[{"type_long":"java.awt.Container","name":"c","comment":"","type_short":"Container"},{"type_long":"java.awt.event.MouseListener","name":"listener","comment":"","type_short":"MouseListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDisplayComponent","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.JComponent","comment":"","type_short":"JComponent"}},{"javadoc":"","static":false,"name":"setWindowName","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addComponentListener","comment":"","params":[{"type_long":"java.awt.event.ComponentListener","name":"listener","comment":"","type_short":"ComponentListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isShowing","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hide","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeOldPopupReferences","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"pack","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the amount of time that will pass before the popup window is closed <b>after<\/b> the\n user moves away from the popup window and out of the neutral zone\n@param delayInMillis the timer delay","static":false,"name":"setCloseWindowDelay","comment":"Sets the amount of time that will pass before the popup window is closed after the\n user moves away from the popup window and out of the neutral zone","params":[{"type_long":"int","name":"delayInMillis","comment":"the timer delay","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"showOffsetPopup","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"},{"type_long":"java.awt.Dimension","name":"keepVisibleArea","comment":"","type_short":"Dimension"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"showPopup","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doShowPopup","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"},{"type_long":"java.awt.Dimension","name":"keepVisibleArea","comment":"","type_short":"Dimension"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"installDebugPainter","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adjusts the given bounds to make sure that they do not cover the given location.\n <p>\n When the <tt>hoverArea<\/tt> is obscured, this method will first attempt to move the \n bounds up if possible.  If moving up is not possible due to space constraints, then this\n method will try to shift the bounds to the right of the hover area.  If this is not \n possible, then the bounds will not be changed.\n@param bounds The bounds to move as necessary.\n@param hoverArea The area that should not be covered by the given bounds\n@return the original bounds adjusted so that they do not cover the given <tt>hoverArea<\/tt>,\n         if possible.","static":false,"name":"adjustBoundsForCursorLocation","comment":"Adjusts the given bounds to make sure that they do not cover the given location.\n \n When the hoverArea is obscured, this method will first attempt to move the \n bounds up if possible.  If moving up is not possible due to space constraints, then this\n method will try to shift the bounds to the right of the hover area.  If this is not \n possible, then the bounds will not be changed.","params":[{"type_long":"java.awt.Rectangle","name":"bounds","comment":"The bounds to move as necessary.","type_short":"Rectangle"},{"type_long":"java.awt.Rectangle","name":"hoverArea","comment":"The area that should not be covered by the given bounds","type_short":"Rectangle"}],"throws":[],"return":{"type_long":"java.awt.Rectangle","comment":"the original bounds adjusted so that they do not cover the given hoverArea,\n         if possible.","type_short":"Rectangle"}},{"javadoc":"Creates a rectangle that contains both given rectangles entirely.","static":false,"name":"createNeutralMotionZone","comment":"Creates a rectangle that contains both given rectangles entirely.","params":[{"type_long":"java.awt.Rectangle","name":"popupBounds","comment":"","type_short":"Rectangle"},{"type_long":"java.awt.Rectangle","name":"hoverRectangle","comment":"","type_short":"Rectangle"}],"throws":[],"return":{"type_long":"java.awt.Rectangle","comment":"","type_short":"Rectangle"}},{"javadoc":"","static":false,"name":"difference","comment":"","params":[{"type_long":"int","name":"value1","comment":"","type_short":"int"},{"type_long":"int","name":"value2","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"PopupWindow","comment":"","fields":[{"type_long":"int","javadoc":"","static":true,"name":"X_PADDING","comment":"","type_short":"int","constant_value":"20"},{"type_long":"int","javadoc":"","static":true,"name":"Y_PADDING","comment":"","type_short":"int","constant_value":"20"},{"type_long":"java.util.List<java.lang.ref.WeakReference<docking.widgets.PopupWindow>>","javadoc":"","static":true,"name":"VISIBLE_POPUPS","comment":"","type_short":"List","constant_value":null},{"type_long":"javax.swing.JWindow","javadoc":"","static":false,"name":"popup","comment":"","type_short":"JWindow","constant_value":null},{"type_long":"java.awt.Component","javadoc":"","static":false,"name":"sourceComponent","comment":"","type_short":"Component","constant_value":null},{"type_long":"java.awt.Rectangle","javadoc":"Area where user can mouse without hiding the window (in screen coordinates)","static":false,"name":"neutralMotionZone","comment":"Area where user can mouse without hiding the window (in screen coordinates)","type_short":"Rectangle","constant_value":null},{"type_long":"java.awt.event.MouseMotionListener","javadoc":"","static":false,"name":"sourceMouseMotionListener","comment":"","type_short":"MouseMotionListener","constant_value":null},{"type_long":"java.awt.event.MouseListener","javadoc":"","static":false,"name":"sourceMouseListener","comment":"","type_short":"MouseListener","constant_value":null},{"type_long":"javax.swing.Timer","javadoc":"","static":false,"name":"closeTimer","comment":"","type_short":"Timer","constant_value":null},{"type_long":"javax.swing.JComponent","javadoc":"","static":false,"name":"displayComponent","comment":"","type_short":"JComponent","constant_value":null}]}
