{"implements":[],"javadoc":"A common base class for list and table renderer objects, unifying the Ghidra look and feel.\n <p>\n It allows (but default-disables) HTML content, automatically paints alternating row\n background colors, and highlights the drop target in a drag-n-drop operation.","static":false,"extends":"docking.widgets.label.GDHtmlLabel","methods":[{"javadoc":"","static":true,"name":"getAlternateRowColors","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setShouldAlternateRowBackgroundColors","comment":"","params":[{"type_long":"boolean","name":"alternate","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return whether or not the renderer should alternate row background colors.\n <p>\n A renderer is unable to override an enforcing DISABLE_ALTERNATING_ROW_COLORS_PROPERTY\n system property -- if the property has disabled alternating colors (i.e., set to\n 'true'), this method returns false. If the property is false, individual renderers\n may assert control over alternating row colors.\n@return True if the rows may be painted in alternate background colors, false otherwise\n@see #DISABLE_ALTERNATING_ROW_COLORS_PROPERTY","static":false,"name":"shouldAlternateRowBackgroundColor","comment":"Return whether or not the renderer should alternate row background colors.\n \n A renderer is unable to override an enforcing DISABLE_ALTERNATING_ROW_COLORS_PROPERTY\n system property -- if the property has disabled alternating colors (i.e., set to\n 'true'), this method returns false. If the property is false, individual renderers\n may assert control over alternating row colors.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"True if the rows may be painted in alternate background colors, false otherwise","type_short":"boolean"}},{"javadoc":"Returns the background color appropriate for the given component.  This may vary depending\n upon the current OS.\n@param parent The parent being rendered -- likely a list or table.\n@param row The row being rendered.\n@return the color","static":false,"name":"getOSDependentBackgroundColor","comment":"Returns the background color appropriate for the given component.  This may vary depending\n upon the current OS.","params":[{"type_long":"javax.swing.JComponent","name":"parent","comment":"The parent being rendered -- likely a list or table.","type_short":"JComponent"},{"type_long":"int","name":"row","comment":"The row being rendered.","type_short":"int"}],"throws":[],"return":{"type_long":"java.awt.Color","comment":"the color","type_short":"Color"}},{"javadoc":"","static":false,"name":"setFont","comment":"","params":[{"type_long":"java.awt.Font","name":"f","comment":"","type_short":"Font"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"superSetFont","comment":"","params":[{"type_long":"java.awt.Font","name":"font","comment":"","type_short":"Font"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setBold","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the row where DnD would perform drop operation.\n@param dropRow the drop row","static":false,"name":"setDropRow","comment":"Sets the row where DnD would perform drop operation.","params":[{"type_long":"int","name":"dropRow","comment":"the drop row","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getNoFocusBorder","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.border.Border","comment":"","type_short":"Border"}},{"javadoc":"","static":false,"name":"getDefaultFont","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Font","comment":"","type_short":"Font"}},{"javadoc":"","static":false,"name":"getFixedWidthFont","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Font","comment":"","type_short":"Font"}},{"javadoc":"","static":false,"name":"getBoldFont","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Font","comment":"","type_short":"Font"}},{"javadoc":"","static":false,"name":"getDefaultBackgroundColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getBackgroundColorForRow","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"Overridden for performance reasons.\n See the <a href=\"#override\">Implementation Note<\/a>\n for more information.\n@since 1.5","static":false,"name":"invalidate","comment":"Overridden for performance reasons.\n See the Implementation Note\n for more information.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"superValidate","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Overridden for performance reasons.\n See the <a href=\"#override\">Implementation Note<\/a>\n for more information.","static":false,"name":"validate","comment":"Overridden for performance reasons.\n See the Implementation Note\n for more information.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Overridden for performance reasons.\n See the <a href=\"#override\">Implementation Note<\/a>\n for more information.","static":false,"name":"revalidate","comment":"Overridden for performance reasons.\n See the Implementation Note\n for more information.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Overridden for performance reasons.\n See the <a href=\"#override\">Implementation Note<\/a>\n for more information.","static":false,"name":"repaint","comment":"Overridden for performance reasons.\n See the Implementation Note\n for more information.","params":[{"type_long":"long","name":"tm","comment":"","type_short":"long"},{"type_long":"int","name":"x","comment":"","type_short":"int"},{"type_long":"int","name":"y","comment":"","type_short":"int"},{"type_long":"int","name":"width","comment":"","type_short":"int"},{"type_long":"int","name":"height","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Overridden for performance reasons.\n See the <a href=\"#override\">Implementation Note<\/a>\n for more information.","static":false,"name":"repaint","comment":"Overridden for performance reasons.\n See the Implementation Note\n for more information.","params":[{"type_long":"java.awt.Rectangle","name":"r","comment":"","type_short":"Rectangle"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Overridden for performance reasons.\n See the <a href=\"#override\">Implementation Note<\/a>\n for more information.\n@since 1.5","static":false,"name":"repaint","comment":"Overridden for performance reasons.\n See the Implementation Note\n for more information.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Overridden for performance reasons.\n See the <a href=\"#override\">Implementation Note<\/a>\n for more information.","static":false,"name":"firePropertyChange","comment":"Overridden for performance reasons.\n See the Implementation Note\n for more information.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"","type_short":"String"},{"type_long":"java.lang.Object","name":"oldValue","comment":"","type_short":"Object"},{"type_long":"java.lang.Object","name":"newValue","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Overridden for performance reasons.\n See the <a href=\"#override\">Implementation Note<\/a>\n for more information.","static":false,"name":"firePropertyChange","comment":"Overridden for performance reasons.\n See the Implementation Note\n for more information.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"","type_short":"String"},{"type_long":"boolean","name":"oldValue","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"newValue","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"AbstractGCellRenderer","comment":"A common base class for list and table renderer objects, unifying the Ghidra look and feel.\n \n It allows (but default-disables) HTML content, automatically paints alternating row\n background colors, and highlights the drop target in a drag-n-drop operation.","fields":[{"type_long":"java.awt.Color","javadoc":"","static":true,"name":"ALTERNATE_BACKGROUND_COLOR","comment":"","type_short":"Color","constant_value":null},{"type_long":"java.lang.String","javadoc":"Allows the user to disable alternating row colors on JLists & JTables","static":true,"name":"DISABLE_ALTERNATING_ROW_COLORS_PROPERTY","comment":"Allows the user to disable alternating row colors on JLists  JTables","type_short":"String","constant_value":"\"disable.alternating.row.colors\""},{"type_long":"boolean","javadoc":"","static":true,"name":"systemAlternateRowColors","comment":"","type_short":"boolean","constant_value":null},{"type_long":"javax.swing.border.Border","javadoc":"","static":false,"name":"focusBorder","comment":"","type_short":"Border","constant_value":null},{"type_long":"javax.swing.border.Border","javadoc":"","static":false,"name":"noFocusBorder","comment":"","type_short":"Border","constant_value":null},{"type_long":"java.awt.Font","javadoc":"","static":false,"name":"defaultFont","comment":"","type_short":"Font","constant_value":null},{"type_long":"java.awt.Font","javadoc":"","static":false,"name":"fixedWidthFont","comment":"","type_short":"Font","constant_value":null},{"type_long":"java.awt.Font","javadoc":"","static":false,"name":"boldFont","comment":"","type_short":"Font","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"dropRow","comment":"","type_short":"int","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"instanceAlternateRowColors","comment":"","type_short":"boolean","constant_value":null}]}
