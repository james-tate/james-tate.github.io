{"implements":[],"javadoc":"Base class for GTNodes that want to use a lazy loading approach, but the loading may\n be slow and therefor should be done in another thread.  By using SlowLoadingNode\n nodes, you don't have to create all the nodes up front and the nodes will only\n be created as needed.  If you extend this base class, you have to implement one\n additional method than if you extended AbstractGTreeNode and that is\n generateChildren(TaskMonitor monitor).\n The generateChildren(TaskMonitor monitor) method will be called\n automatically from a task thread when needed. While the loading is taking place,\n An \"In Progress\" node will be displayed.","static":false,"extends":"docking.widgets.tree.AbstractGTreeNode","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"generateChildren","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"loadChildren","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getMonitor","comment":"","params":[{"type_long":"docking.widgets.tree.GTree","name":"tree","comment":"","type_short":"GTree"}],"throws":[],"return":{"type_long":"ghidra.util.task.TaskMonitor","comment":"","type_short":"TaskMonitor"}},{"javadoc":"","static":false,"name":"doLoadChildren","comment":"","params":[{"type_long":"docking.widgets.tree.GTree","name":"tree","comment":"","type_short":"GTree"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"swingSetChildren","comment":"","params":[{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","name":"childList","comment":"","type_short":"List"},{"type_long":"boolean","name":"notify","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"onlyIfInProgress","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Note: you cannot call this method from the Swing thread, as the data may not have been \n loaded.  Instead, this method should be called from a {@link GTreeTask}.\n@param index The index where the node should be inserted\n@param node The node to insert","static":false,"name":"addNode","comment":"Note: you cannot call this method from the Swing thread, as the data may not have been \n loaded.  Instead, this method should be called from a GTreeTask.","params":[{"type_long":"int","name":"index","comment":"The index where the node should be inserted","type_short":"int"},{"type_long":"docking.widgets.tree.GTreeNode","name":"node","comment":"The node to insert","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"GTreeSlowLoadingNode","comment":"Base class for GTNodes that want to use a lazy loading approach, but the loading may\n be slow and therefor should be done in another thread.  By using SlowLoadingNode\n nodes, you don't have to create all the nodes up front and the nodes will only\n be created as needed.  If you extend this base class, you have to implement one\n additional method than if you extended AbstractGTreeNode and that is\n generateChildren(TaskMonitor monitor).\n The generateChildren(TaskMonitor monitor) method will be called\n automatically from a task thread when needed. While the loading is taking place,\n An \"In Progress\" node will be displayed.","fields":[]}
