{"implements":["docking.widgets.tree.GTreeNode"],"javadoc":"This class is not meant to be subclassed directly.  Instead, you should extend \n {@link AbstractGTreeNode}.\n <p>\n This class is responsible for mutating\/managing the children and parent of this node.  These\n items are sensitive to threading issues, which this class is designed to handle.\n <p>\n The pattern used by this class is to create <tt>doXXX<\/tt> methods for the public mutator \n methods of the {@link GTreeNode} interface.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getParent","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.tree.GTreeNode","comment":"","type_short":"GTreeNode"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isInProgress","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setInProgress","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isChildrenLoadedOrInProgress","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isChildrenLoaded","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"doGetChildCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"doGetAllChildCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"doGetAllChildren","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"doGetActiveChildren","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"doGetChild","comment":"","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.tree.GTreeNode","comment":"","type_short":"GTreeNode"}},{"javadoc":"","static":false,"name":"doGetIndexOfChild","comment":"","params":[{"type_long":"docking.widgets.tree.GTreeNode","name":"node","comment":"","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Subclasses can override this method to perform faster lookups of a node; for \n example, if the subclass has a sorted list of children, then a binary search can\n be used.\n@param node the node whose index we seek\n@param children the children who contain the given node (may be null)\n@return the index of the given child in the given list","static":false,"name":"doGetIndexOfChild","comment":"Subclasses can override this method to perform faster lookups of a node; for \n example, if the subclass has a sorted list of children, then a binary search can\n be used.","params":[{"type_long":"docking.widgets.tree.GTreeNode","name":"node","comment":"the node whose index we seek","type_short":"GTreeNode"},{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","name":"children","comment":"the children who contain the given node (may be null)","type_short":"List"}],"throws":[],"return":{"type_long":"int","comment":"the index of the given child in the given list","type_short":"int"}},{"javadoc":"","static":false,"name":"doAddNode","comment":"","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"},{"type_long":"docking.widgets.tree.GTreeNode","name":"child","comment":"","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"swingAddNode","comment":"","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"},{"type_long":"docking.widgets.tree.GTreeNode","name":"child","comment":"","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeNode","comment":"","params":[{"type_long":"docking.widgets.tree.GTreeNode","name":"node","comment":"","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"swingRemoveNode","comment":"","params":[{"type_long":"docking.widgets.tree.GTreeNode","name":"node","comment":"","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doSetChildren","comment":"","params":[{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","name":"childList","comment":"","type_short":"List"},{"type_long":"boolean","name":"notify","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"swingSetChildren","comment":"","params":[{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","name":"childList","comment":"","type_short":"List"},{"type_long":"boolean","name":"notify","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"onlyIfInProgress","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doSetActiveChildren","comment":"","params":[{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","name":"childList","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"swingSetActiveChilren","comment":"","params":[{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","name":"childList","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Convenience method to clear any filtered items by restoring the active children of this\n node to be the complete set of children.","static":false,"name":"doResetActiveChildren","comment":"Convenience method to clear any filtered items by restoring the active children of this\n node to be the complete set of children.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"fireNodeChanged","comment":"","params":[{"type_long":"docking.widgets.tree.GTreeNode","name":"parentNode","comment":"","type_short":"GTreeNode"},{"type_long":"docking.widgets.tree.GTreeNode","name":"node","comment":"","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyNodeChanged","comment":"","params":[{"type_long":"docking.widgets.tree.GTreeNode","name":"parentNode","comment":"","type_short":"GTreeNode"},{"type_long":"docking.widgets.tree.GTreeNode","name":"node","comment":"","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isInValidTree","comment":"","params":[{"type_long":"docking.widgets.tree.GTree","name":"tree","comment":"","type_short":"GTree"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"fireNodeStructureChanged","comment":"","params":[{"type_long":"docking.widgets.tree.GTreeNode","name":"node","comment":"","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyNodeStructureChanged","comment":"","params":[{"type_long":"docking.widgets.tree.GTreeNode","name":"node","comment":"","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"fireNodeAdded","comment":"","params":[{"type_long":"docking.widgets.tree.GTreeNode","name":"parentNode","comment":"","type_short":"GTreeNode"},{"type_long":"docking.widgets.tree.GTreeNode","name":"newNode","comment":"","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"fireNodeRemoved","comment":"","params":[{"type_long":"docking.widgets.tree.GTreeNode","name":"parentNode","comment":"","type_short":"GTreeNode"},{"type_long":"docking.widgets.tree.GTreeNode","name":"removedNode","comment":"","type_short":"GTreeNode"},{"type_long":"int","name":"deletedChildIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isAnyAncestorInProgress","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"CoreGTreeNode","comment":"This class is not meant to be subclassed directly.  Instead, you should extend \n AbstractGTreeNode.\n \n This class is responsible for mutating\/managing the children and parent of this node.  These\n items are sensitive to threading issues, which this class is designed to handle.\n \n The pattern used by this class is to create doXXX methods for the public mutator \n methods of the GTreeNode interface.","fields":[{"type_long":"docking.widgets.tree.internal.InProgressGTreeNode","javadoc":"","static":true,"name":"IN_PROGRESS_NODE","comment":"","type_short":"InProgressGTreeNode","constant_value":null},{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","javadoc":"","static":true,"name":"IN_PROGRESS_CHILDREN","comment":"","type_short":"List","constant_value":null},{"type_long":"docking.widgets.tree.GTreeNode","javadoc":"","static":false,"name":"parent","comment":"","type_short":"GTreeNode","constant_value":null},{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","javadoc":"","static":false,"name":"allChildrenList","comment":"","type_short":"List","constant_value":null},{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","javadoc":"","static":false,"name":"activeChildrenList","comment":"","type_short":"List","constant_value":null}]}
