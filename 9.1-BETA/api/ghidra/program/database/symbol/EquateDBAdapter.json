{"implements":[],"javadoc":"Adpapter to access records in the Equate table.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getAdapter","comment":"","params":[{"type_long":"db.DBHandle","name":"dbHandle","comment":"","type_short":"DBHandle"},{"type_long":"int","name":"openMode","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.symbol.EquateDBAdapter","comment":"","type_short":"EquateDBAdapter"}},{"javadoc":"Get the record key for the given name.\n@param name name to match\n@throws IOException if there was a problem accessing the database\n@throws NotFoundException if there is no equate with the given\n name","static":false,"name":"getRecordKey","comment":"Get the record key for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"name to match","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"},{"type_long":"ghidra.util.exception.NotFoundException","comment":"if there is no equate with the given\n name","type_short":"NotFoundException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Get the record for the given key.\n@param key the key to look up the record.\n@throws IOException if there is no equate with the given","static":false,"name":"getRecord","comment":"Get the record for the given key.","params":[{"type_long":"long","name":"key","comment":"the key to look up the record.","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is no equate with the given","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"Remove the record with the given key.\n@param the key whose record is to be removed.\n@throws IOException if there was a problem accessing the database","static":false,"name":"removeRecord","comment":"Remove the record with the given key.","params":[{"type_long":"long","name":"key","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Update the table with the given record.\n@param record the record to update.\n@throws IOException if there was a problem accessing the database","static":false,"name":"updateRecord","comment":"Update the table with the given record.","params":[{"type_long":"db.Record","name":"record","comment":"the record to update.","type_short":"Record"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a new record for the equate.\n@param name name of the equate\n@param value value of the equate\n@return new record\n@throws IOException if there was a problem accessing the database","static":false,"name":"createEquate","comment":"Create a new record for the equate.","params":[{"type_long":"java.lang.String","name":"name","comment":"name of the equate","type_short":"String"},{"type_long":"long","name":"value","comment":"value of the equate","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"new record","type_short":"Record"}},{"javadoc":"Get an iterator over all the equate records.\n@throws IOException if there was a problem accessing the database","static":false,"name":"getRecords","comment":"Get an iterator over all the equate records.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"db.RecordIterator","comment":"","type_short":"RecordIterator"}},{"javadoc":"Returns true if an equate record exists with the given name\n@param name the name to lookup.\n@throws IOException if there was a problem accessing the database","static":false,"name":"hasRecord","comment":"Returns true if an equate record exists with the given name","params":[{"type_long":"java.lang.String","name":"name","comment":"the name to lookup.","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"EquateDBAdapter","comment":"Adpapter to access records in the Equate table.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"EQUATES_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Equates\""},{"type_long":"db.Schema","javadoc":"","static":true,"name":"EQUATES_SCHEMA","comment":"","type_short":"Schema","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"NAME_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"VALUE_COL","comment":"","type_short":"int","constant_value":"1"}]}
