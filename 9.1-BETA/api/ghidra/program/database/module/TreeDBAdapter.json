{"implements":[],"javadoc":"Adapter to access the Tree database table that has a Tree ID (key) and\n a tree name.","static":false,"methods":[{"javadoc":"Create a new record for Tree table.\n@param name name of the tree\n@return record for the tree\n@throws IOException if there was a problem accessing the database","static":false,"name":"createRecord","comment":"Create a new record for Tree table.","params":[{"type_long":"java.lang.String","name":"name","comment":"name of the tree","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"record for the tree","type_short":"Record"}},{"javadoc":"Delete the record for the tree and all associated tables.\n@param treeID key\n@return true if the tree was successfully deleted\n@throws IOException if there was a problem accessing the database","static":false,"name":"deleteRecord","comment":"Delete the record for the tree and all associated tables.","params":[{"type_long":"long","name":"treeID","comment":"key","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"true if the tree was successfully deleted","type_short":"boolean"}},{"javadoc":"Get the record for the given tree ID.\n@throws IOException if there was a problem accessing the database","static":false,"name":"getRecord","comment":"Get the record for the given tree ID.","params":[{"type_long":"long","name":"treeID","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"Get the record for the tree with the given name.\n@throws IOException if there was a problem accessing the database","static":false,"name":"getRecord","comment":"Get the record for the tree with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"Get an iterator over all tree records.\n@throws IOException if there was a problem accessing the database","static":false,"name":"getRecords","comment":"Get an iterator over all tree records.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"db.RecordIterator","comment":"","type_short":"RecordIterator"}},{"javadoc":"Update the tree table with the given record.\n@throws IOException if there was a problem accessing the database","static":false,"name":"updateRecord","comment":"Update the tree table with the given record.","params":[{"type_long":"db.Record","name":"record","comment":"","type_short":"Record"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"TreeDBAdapter","comment":"Adapter to access the Tree database table that has a Tree ID (key) and\n a tree name.","fields":[]}
