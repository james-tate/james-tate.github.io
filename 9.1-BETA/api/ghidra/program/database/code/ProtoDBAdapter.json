{"implements":[],"javadoc":"Database adapter interface for instruction prototypes.","static":false,"methods":[{"javadoc":"Returns the record associated with a specific prototype ID\n@param protoId\n@return ","static":false,"name":"getRecord","comment":"Returns the record associated with a specific prototype ID","params":[{"type_long":"int","name":"protoId","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"Returns a record iterator over all records.\n@throws IOException if a database io error occurs.","static":false,"name":"getRecords","comment":"Returns a record iterator over all records.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"}],"return":{"type_long":"db.RecordIterator","comment":"","type_short":"RecordIterator"}},{"javadoc":"Returns the database version for this adapter.","static":false,"name":"getVersion","comment":"Returns the database version for this adapter.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the next key to use.\n@throws IOException if a database io error occurs.","static":false,"name":"getKey","comment":"Returns the next key to use.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Creates a new prototype record in the database.\n@param protoID the id for the new prototype.\n@param addr the address of the bytes for the prototype.\n@param b the bytes use to form the prototype.\n@param inDelaySlot true if the prototype is in a delay slot.\n@throws IOException if a database io error occurs.","static":false,"name":"createRecord","comment":"Creates a new prototype record in the database.","params":[{"type_long":"int","name":"protoID","comment":"the id for the new prototype.","type_short":"int"},{"type_long":"long","name":"addr","comment":"the address of the bytes for the prototype.","type_short":"long"},{"type_long":"byte[]","name":"b","comment":"the bytes use to form the prototype.","type_short":"byte[]"},{"type_long":"boolean","name":"inDelaySlot","comment":"true if the prototype is in a delay slot.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the total number of prototypes in the database.\n@throws IOException if a database io error occurs.","static":false,"name":"getNumRecords","comment":"Returns the total number of prototypes in the database.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Deletes all prototype records from the database.","static":false,"name":"deleteAll","comment":"Deletes all prototype records from the database.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ProtoDBAdapter","comment":"Database adapter interface for instruction prototypes.","fields":[]}
