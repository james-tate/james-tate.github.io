{"implements":[],"javadoc":"Adapter for accessing records in the CommentHistory table.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getAdapter","comment":"","params":[{"type_long":"db.DBHandle","name":"dbHandle","comment":"","type_short":"DBHandle"},{"type_long":"int","name":"openMode","comment":"","type_short":"int"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"","type_short":"AddressMap"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.code.CommentHistoryAdapter","comment":"","type_short":"CommentHistoryAdapter"}},{"javadoc":"","static":true,"name":"findReadOnlyAdapter","comment":"","params":[{"type_long":"db.DBHandle","name":"handle","comment":"","type_short":"DBHandle"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"","type_short":"AddressMap"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.code.CommentHistoryAdapter","comment":"","type_short":"CommentHistoryAdapter"}},{"javadoc":"","static":true,"name":"upgrade","comment":"","params":[{"type_long":"db.DBHandle","name":"dbHandle","comment":"","type_short":"DBHandle"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"","type_short":"AddressMap"},{"type_long":"ghidra.program.database.code.CommentHistoryAdapter","name":"oldAdapter","comment":"","type_short":"CommentHistoryAdapter"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.database.code.CommentHistoryAdapter","comment":"","type_short":"CommentHistoryAdapter"}},{"javadoc":"Returns the record count\n@return the record count","static":false,"name":"getRecordCount","comment":"Returns the record count","params":[],"throws":[],"return":{"type_long":"int","comment":"the record count","type_short":"int"}},{"javadoc":"Create a comment history record.\n@param addr address of the changed record\n@param commentType see CodeManager constants for comment type\n@param pos1 position 1 of change\n@param pos2 position 2 of change\n@param data string from the comment change\n@param date the date of the history entry\n@throws IOException if there was a problem accessing the database","static":false,"name":"createRecord","comment":"Create a comment history record.","params":[{"type_long":"long","name":"addr","comment":"address of the changed record","type_short":"long"},{"type_long":"byte","name":"commentType","comment":"see CodeManager constants for comment type","type_short":"byte"},{"type_long":"int","name":"pos1","comment":"position 1 of change","type_short":"int"},{"type_long":"int","name":"pos2","comment":"position 2 of change","type_short":"int"},{"type_long":"java.lang.String","name":"data","comment":"string from the comment change","type_short":"String"},{"type_long":"long","name":"date","comment":"the date of the history entry","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Update record\n@param rec the record to update\n@throws IOException if there was a problem accessing the database","static":false,"name":"updateRecord","comment":"Update record","params":[{"type_long":"db.Record","name":"rec","comment":"the record to update","type_short":"Record"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Delete the records in the given range.\n@param start start address (key)\n@param end address (key)\n@return true if at least one record was removed in the range\n@throws IOException if there was a problem accessing the database","static":false,"name":"deleteRecords","comment":"Delete the records in the given range.","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"start address (key)","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"address (key)","type_short":"Address"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"true if at least one record was removed in the range","type_short":"boolean"}},{"javadoc":"Get an iterator over records with the given address.\n@param addr the address for which to get records\n@return the iterator\n@throws IOException if there was a problem accessing the database","static":false,"name":"getRecordsByAddress","comment":"Get an iterator over records with the given address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address for which to get records","type_short":"Address"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"db.RecordIterator","comment":"the iterator","type_short":"RecordIterator"}},{"javadoc":"Get an iterator over all records\n@return the iterator\n@throws IOException if there was a problem accessing the database","static":false,"name":"getAllRecords","comment":"Get an iterator over all records","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"db.RecordIterator","comment":"the iterator","type_short":"RecordIterator"}}],"name":"CommentHistoryAdapter","comment":"Adapter for accessing records in the CommentHistory table.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"COMMENT_HISTORY_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Comment History\""},{"type_long":"db.Schema","javadoc":"","static":true,"name":"COMMENT_HISTORY_SCHEMA","comment":"","type_short":"Schema","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"HISTORY_ADDRESS_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"HISTORY_TYPE_COL","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"HISTORY_POS1_COL","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"HISTORY_POS2_COL","comment":"","type_short":"int","constant_value":"3"},{"type_long":"int","javadoc":"","static":true,"name":"HISTORY_STRING_COL","comment":"","type_short":"int","constant_value":"4"},{"type_long":"int","javadoc":"","static":true,"name":"HISTORY_USER_COL","comment":"","type_short":"int","constant_value":"5"},{"type_long":"int","javadoc":"","static":true,"name":"HISTORY_DATE_COL","comment":"","type_short":"int","constant_value":"6"}]}
