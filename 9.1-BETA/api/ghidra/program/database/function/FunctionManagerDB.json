{"implements":["ghidra.program.database.ManagerDB","ghidra.program.model.listing.FunctionManager"],"javadoc":"Class that manages all functions within the program; there are some\n convenience methods on Listing to create and access functions, but\n all function related calls are routed to this class.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a new FunctionManager\n@param dbHandle data base handle\n@param addrMap address map for the program\n@param openMode CREATE, UPDATE, READ_ONLY, or UPGRADE defined in\n db.DBConstants\n@param lock the program synchronization lock\n@param monitor\n@throws VersionException if function manager's version does not match\n its expected version\n@throws CancelledException if the function table is being upgraded\n and the user canceled the upgrade process\n@throws IOException if there was a problem accessing the database","static":false,"name":"<init>","comment":"Construct a new FunctionManager","params":[{"type_long":"db.DBHandle","name":"dbHandle","comment":"data base handle","type_short":"DBHandle"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"address map for the program","type_short":"AddressMap"},{"type_long":"int","name":"openMode","comment":"CREATE, UPDATE, READ_ONLY, or UPGRADE defined in\n db.DBConstants","type_short":"int"},{"type_long":"ghidra.util.Lock","name":"lock","comment":"the program synchronization lock","type_short":"Lock"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if function manager's version does not match\n its expected version","type_short":"VersionException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if the function table is being upgraded\n and the user canceled the upgrade process","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initializeAdapters","comment":"","params":[{"type_long":"int","name":"openMode","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getProgram","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.ProgramDB","comment":"","type_short":"ProgramDB"}},{"javadoc":"","static":false,"name":"getFunctionAdapter","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.function.FunctionAdapter","comment":"","type_short":"FunctionAdapter"}},{"javadoc":"Get calling convention name corresponding to existing ID.  If id is no longer valid,\n null will be returned.\n@param id\n@return ","static":false,"name":"getCallingConventionName","comment":"Get calling convention name corresponding to existing ID.  If id is no longer valid,\n null will be returned.","params":[{"type_long":"byte","name":"id","comment":"","type_short":"byte"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Get (and assign if needed) the ID associated with the specified calling convention name.\n@param name calling convention name\n@return calling convention ID\n@throws IOException\n@throws InvalidInputException","static":false,"name":"getCallingConventionID","comment":"Get (and assign if needed) the ID associated with the specified calling convention name.","params":[{"type_long":"java.lang.String","name":"name","comment":"calling convention name","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"byte","comment":"calling convention ID","type_short":"byte"}},{"javadoc":"","static":false,"name":"getCallingConventionNames","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<java.lang.String>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getDefaultCallingConvention","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.PrototypeModel","comment":"","type_short":"PrototypeModel"}},{"javadoc":"","static":false,"name":"getCallingConvention","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.PrototypeModel","comment":"","type_short":"PrototypeModel"}},{"javadoc":"","static":false,"name":"getCallingConventions","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.PrototypeModel[]","comment":"","type_short":"ghidra.program.model.lang.PrototypeModel[]"}},{"javadoc":"Transform an existing external symbol into an external function.\n This method should only be invoked by an ExternalSymbol\n@param extSpaceAddr the external space address to use when creating this external.\n@param name\n@param nameSpace\n@param extData3 internal symbol-data-3 string (see {@link ExternalLocationDB})\n@param sourceType the source of this external.\n@return external function\n@throws InvalidInputException\n@throws DuplicateNameException","static":false,"name":"createExternalFunction","comment":"Transform an existing external symbol into an external function.\n This method should only be invoked by an ExternalSymbol","params":[{"type_long":"ghidra.program.model.address.Address","name":"extSpaceAddr","comment":"the external space address to use when creating this external.","type_short":"Address"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"nameSpace","comment":"","type_short":"Namespace"},{"type_long":"java.lang.String","name":"extData3","comment":"internal symbol-data-3 string (see ExternalLocationDB)","type_short":"String"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"external function","type_short":"Function"}},{"javadoc":"","static":false,"name":"createFunction","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"entryPoint","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"},{"type_long":"ghidra.program.database.function.OverlappingFunctionException","comment":"","type_short":"OverlappingFunctionException"}],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"","static":false,"name":"createFunction","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"nameSpace","comment":"","type_short":"Namespace"},{"type_long":"ghidra.program.model.address.Address","name":"entryPoint","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"},{"type_long":"ghidra.program.database.function.OverlappingFunctionException","comment":"","type_short":"OverlappingFunctionException"}],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"","static":false,"name":"createThunkFunction","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"nameSpace","comment":"","type_short":"Namespace"},{"type_long":"ghidra.program.model.address.Address","name":"entryPoint","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.listing.Function","name":"thunkedFunction","comment":"","type_short":"Function"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.program.database.function.OverlappingFunctionException","comment":"","type_short":"OverlappingFunctionException"}],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"","static":false,"name":"createFunction","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"nameSpace","comment":"","type_short":"Namespace"},{"type_long":"ghidra.program.model.address.Address","name":"entryPoint","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.listing.Function","name":"thunkedFunction","comment":"","type_short":"Function"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"},{"type_long":"ghidra.program.database.function.OverlappingFunctionException","comment":"","type_short":"OverlappingFunctionException"}],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"","static":false,"name":"setThunkedFunction","comment":"","params":[{"type_long":"ghidra.program.database.function.FunctionDB","name":"function","comment":"","type_short":"FunctionDB"},{"type_long":"ghidra.program.database.function.FunctionDB","name":"referencedFunction","comment":"","type_short":"FunctionDB"}],"throws":[{"type_long":"java.lang.IllegalArgumentException","comment":"","type_short":"IllegalArgumentException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getCodeManager","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.code.CodeManager","comment":"","type_short":"CodeManager"}},{"javadoc":"","static":false,"name":"getFunctionCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"removeFunction","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entryPoint","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"functionTagsChanged","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"functionNamespaceChanged","comment":"","params":[{"type_long":"long","name":"key","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doRemoveFunction","comment":"","params":[{"type_long":"long","name":"key","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get the function with the given key.\n@param key ID of the function; ID is obtained by calling\n Function.getID()\n@return null if there is no function with the given key","static":false,"name":"getFunction","comment":"Get the function with the given key.","params":[{"type_long":"long","name":"key","comment":"ID of the function; ID is obtained by calling\n Function.getID()","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"null if there is no function with the given key","type_short":"Function"}},{"javadoc":"","static":false,"name":"getReferencedFunction","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"","static":false,"name":"getFunctionAt","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entryPoint","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"","static":false,"name":"getFunctionContaining","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"","static":false,"name":"getFunctions","comment":"","params":[{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionIterator","comment":"","type_short":"FunctionIterator"}},{"javadoc":"","static":false,"name":"getFunctions","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"boolean","name":"foward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionIterator","comment":"","type_short":"FunctionIterator"}},{"javadoc":"","static":false,"name":"getFunctions","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"asv","comment":"","type_short":"AddressSetView"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionIterator","comment":"","type_short":"FunctionIterator"}},{"javadoc":"","static":false,"name":"getFunctionsNoStubs","comment":"","params":[{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionIterator","comment":"","type_short":"FunctionIterator"}},{"javadoc":"","static":false,"name":"getFunctionsNoStubs","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"boolean","name":"foward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionIterator","comment":"","type_short":"FunctionIterator"}},{"javadoc":"","static":false,"name":"getFunctionsNoStubs","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"asv","comment":"","type_short":"AddressSetView"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionIterator","comment":"","type_short":"FunctionIterator"}},{"javadoc":"","static":false,"name":"getExternalFunctions","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionIterator","comment":"","type_short":"FunctionIterator"}},{"javadoc":"","static":false,"name":"isInFunction","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"moveAddressRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"},{"type_long":"long","name":"length","comment":"","type_short":"long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"deleteAddressRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"endAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setProgram","comment":"","params":[{"type_long":"ghidra.program.database.ProgramDB","name":"program","comment":"","type_short":"ProgramDB"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"programReady","comment":"","params":[{"type_long":"int","name":"openMode","comment":"","type_short":"int"},{"type_long":"int","name":"currentRevision","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determine if dynamic storage will work during the upgrade of a pre-dynamic storage\n function.\n@param returnDataType\n@param currentParams\n@param paramOffset offset within currentParams for first parameter\n@return return variable storage if dynamic storage does not match current custom storage -\n this is done so that this storage can be assigned if currently <UNASSIGNED>.  If dynamic\n storage matches null will be returned.","static":false,"name":"checkDynamicStorageConversion","comment":"Determine if dynamic storage will work during the upgrade of a pre-dynamic storage\n function.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"returnDataType","comment":"","type_short":"DataType"},{"type_long":"ghidra.program.model.listing.Parameter[]","name":"currentParams","comment":"","type_short":"ghidra.program.model.listing.Parameter[]"},{"type_long":"int","name":"paramOffset","comment":"offset within currentParams for first parameter","type_short":"int"},{"type_long":"ghidra.program.model.lang.PrototypeModel","name":"callingConvention","comment":"","type_short":"PrototypeModel"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.VariableStorage","comment":"return variable storage if dynamic storage does not match current custom storage -\n this is done so that this storage can be assigned if currently .  If dynamic\n storage matches null will be returned.","type_short":"VariableStorage"}},{"javadoc":"Initialize function signature source when it was first introduced and attempt to\n disable custom storage if possible.\n NOTE: This method intended to be called by ProgramDB only during appropriate upgrade.\n@param monitor\n@throws CancelledException\n@throws IOException","static":false,"name":"initSignatureSource","comment":"Initialize function signature source when it was first introduced and attempt to\n disable custom storage if possible.\n NOTE: This method intended to be called by ProgramDB only during appropriate upgrade.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isLikelyThisParam","comment":"","params":[{"type_long":"ghidra.program.model.listing.Parameter","name":"param","comment":"","type_short":"Parameter"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Remove parameter symbols which correspond to the 'this' parameter for all\n __thiscall functions using dynamic storage.\n NOTE: This method intended to be called by ProgramDB only during appropriate upgrade.\n@param monitor\n@throws CancelledException\n@throws IOException","static":false,"name":"removeExplicitThisParameters","comment":"Remove parameter symbols which correspond to the 'this' parameter for all\n __thiscall functions using dynamic storage.\n NOTE: This method intended to be called by ProgramDB only during appropriate upgrade.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeExplicitThisParameters","comment":"","params":[{"type_long":"ghidra.program.database.function.FunctionDB","name":"func","comment":"","type_short":"FunctionDB"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"invalidateCache","comment":"","params":[{"type_long":"boolean","name":"all","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getCallFixupMap","comment":"","params":[{"type_long":"boolean","name":"create","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.util.StringPropertyMap","comment":"","type_short":"StringPropertyMap"}},{"javadoc":"","static":false,"name":"functionChanged","comment":"","params":[{"type_long":"ghidra.program.database.function.FunctionDB","name":"func","comment":"","type_short":"FunctionDB"},{"type_long":"int","name":"subEventType","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dbError","comment":"","params":[{"type_long":"java.io.IOException","name":"e","comment":"","type_short":"IOException"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFunctionsOverlapping","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.listing.Function>","comment":"","type_short":"Iterator"}},{"javadoc":"Set the new body for the function.","static":false,"name":"setFunctionBody","comment":"Set the new body for the function.","params":[{"type_long":"ghidra.program.database.function.FunctionDB","name":"function","comment":"","type_short":"FunctionDB"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"newBody","comment":"","type_short":"AddressSetView"}],"throws":[{"type_long":"ghidra.program.database.function.OverlappingFunctionException","comment":"","type_short":"OverlappingFunctionException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove symbols in the given address set and whose parent symbol is the\n symbol for the given function.","static":false,"name":"removeFunctionSymbols","comment":"Remove symbols in the given address set and whose parent symbol is the\n symbol for the given function.","params":[{"type_long":"ghidra.program.database.function.FunctionDB","name":"function","comment":"","type_short":"FunctionDB"},{"type_long":"ghidra.program.model.address.AddressSet","name":"set","comment":"","type_short":"AddressSet"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove variable references in the given address set.","static":false,"name":"removeVariableRefs","comment":"Remove variable references in the given address set.","params":[{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"","type_short":"Function"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"view","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"upgradeAllDotDotDots","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"upgradeDotDotDotToVarArgs","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.util.StringPropertyMap","name":"decompilerPropertyMap","comment":"","type_short":"StringPropertyMap"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isOldAdapterPreVarArgs","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getReferencedVariable","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"instrAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"storageAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"boolean","name":"isRead","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Variable","comment":"","type_short":"Variable"}},{"javadoc":"","static":false,"name":"replaceDataTypes","comment":"","params":[{"type_long":"long","name":"oldDataTypeID","comment":"","type_short":"long"},{"type_long":"long","name":"newDataTypeID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isThunk","comment":"","params":[{"type_long":"long","name":"key","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getThunkedFunctionId","comment":"","params":[{"type_long":"long","name":"functionId","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Returns list of thunk function keys which reference the specified referencedFunctionKey\n@param referencedFunctionId\n@return list of thunk function IDs or null","static":false,"name":"getThunkFunctionIds","comment":"Returns list of thunk function keys which reference the specified referencedFunctionKey","params":[{"type_long":"long","name":"referencedFunctionId","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"java.util.List<java.lang.Long>","comment":"list of thunk function IDs or null","type_short":"List"}},{"javadoc":"","static":false,"name":"getThunkedFunction","comment":"","params":[{"type_long":"ghidra.program.database.function.FunctionDB","name":"function","comment":"","type_short":"FunctionDB"}],"throws":[],"return":{"type_long":"ghidra.program.database.function.FunctionDB","comment":"","type_short":"FunctionDB"}},{"javadoc":"Perform language translation.\n Update function return storage specifications to reflect address space and register mappings\n@param translator\n@param monitor\n@throws CancelledException","static":false,"name":"setLanguage","comment":"Perform language translation.\n Update function return storage specifications to reflect address space and register mappings","params":[{"type_long":"ghidra.program.util.LanguageTranslator","name":"translator","comment":"","type_short":"LanguageTranslator"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFunctionTagManager","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionTagManager","comment":"","type_short":"FunctionTagManager"}}],"name":"FunctionManagerDB","comment":"Class that manages all functions within the program; there are some\n convenience methods on Listing to create and access functions, but\n all function related calls are routed to this class.","fields":[{"type_long":"java.lang.String","javadoc":"","static":false,"name":"CALLFIXUP_MAP","comment":"","type_short":"String","constant_value":"\"CallFixup\""},{"type_long":"ghidra.program.database.ProgramDB","javadoc":"","static":false,"name":"program","comment":"","type_short":"ProgramDB","constant_value":null},{"type_long":"db.DBHandle","javadoc":"","static":false,"name":"dbHandle","comment":"","type_short":"DBHandle","constant_value":null},{"type_long":"ghidra.program.database.map.AddressMap","javadoc":"","static":false,"name":"addrMap","comment":"","type_short":"AddressMap","constant_value":null},{"type_long":"ghidra.program.database.DBObjectCache<ghidra.program.database.function.FunctionDB>","javadoc":"","static":false,"name":"cache","comment":"","type_short":"DBObjectCache","constant_value":null},{"type_long":"ghidra.program.database.function.FunctionAdapter","javadoc":"","static":false,"name":"adapter","comment":"","type_short":"FunctionAdapter","constant_value":null},{"type_long":"ghidra.program.database.function.ThunkFunctionAdapter","javadoc":"","static":false,"name":"thunkAdapter","comment":"","type_short":"ThunkFunctionAdapter","constant_value":null},{"type_long":"ghidra.program.database.function.CallingConventionDBAdapter","javadoc":"","static":false,"name":"callingConventionAdapter","comment":"","type_short":"CallingConventionDBAdapter","constant_value":null},{"type_long":"java.util.Map<java.lang.String,java.lang.Byte>","javadoc":"","static":false,"name":"callingConventionNameToIDMap","comment":"","type_short":"Map","constant_value":null},{"type_long":"java.util.Map<java.lang.Byte,java.lang.String>","javadoc":"","static":false,"name":"callingConventionIDToNameMap","comment":"","type_short":"Map","constant_value":null},{"type_long":"ghidra.program.database.symbol.NamespaceManager","javadoc":"","static":false,"name":"namespaceMgr","comment":"","type_short":"NamespaceManager","constant_value":null},{"type_long":"ghidra.program.database.symbol.SymbolManager","javadoc":"","static":false,"name":"symbolMgr","comment":"","type_short":"SymbolManager","constant_value":null},{"type_long":"ghidra.program.database.code.CodeManager","javadoc":"","static":false,"name":"codeMgr","comment":"","type_short":"CodeManager","constant_value":null},{"type_long":"ghidra.program.model.listing.FunctionTagManager","javadoc":"","static":false,"name":"functionTagManager","comment":"","type_short":"FunctionTagManager","constant_value":null},{"type_long":"ghidra.program.model.symbol.Namespace","javadoc":"","static":false,"name":"globalNamespace","comment":"","type_short":"Namespace","constant_value":null},{"type_long":"java.util.function.Predicate<ghidra.program.model.listing.Function>","javadoc":"","static":false,"name":"functionFilter","comment":"","type_short":"Predicate","constant_value":null},{"type_long":"ghidra.program.model.util.StringPropertyMap","javadoc":"TODO: use of StringPropertyMap for callFixupMap lacks the ability to listen for changes\n which may be made to the map directly (e.g., diff\/merge)","static":false,"name":"callFixupMap","comment":"TODO: use of StringPropertyMap for callFixupMap lacks the ability to listen for changes\n which may be made to the map directly (e.g., diff\/merge)","type_short":"StringPropertyMap","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"lastFuncID","comment":"","type_short":"long","constant_value":null},{"type_long":"ghidra.util.Lock","javadoc":"","static":false,"name":"lock","comment":"","type_short":"Lock","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"oldAdapterVersion","comment":"","type_short":"int","constant_value":null}]}
