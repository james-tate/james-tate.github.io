{"implements":[],"javadoc":"Adapter to access the Component database table.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets an adapter for working with the component data type database table. Components are \n used to specify the individual elements of a composite data type. The adapter is based \n on the version of the database associated with the specified database handle and the openMode.\n@param handle handle to the database to be accessed.\n@param openMode the mode this adapter is to be opened for (CREATE, UPDATE, READ_ONLY, UPGRADE).\n@param monitor the monitor to use for displaying status or for canceling.\n@return the adapter for accessing the table of component data types.\n@throws VersionException if the database handle's version doesn't match the expected version.\n@throws IOException if there is a problem accessing the database.","static":true,"name":"getAdapter","comment":"Gets an adapter for working with the component data type database table. Components are \n used to specify the individual elements of a composite data type. The adapter is based \n on the version of the database associated with the specified database handle and the openMode.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"handle to the database to be accessed.","type_short":"DBHandle"},{"type_long":"int","name":"openMode","comment":"the mode this adapter is to be opened for (CREATE, UPDATE, READ_ONLY, UPGRADE).","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the monitor to use for displaying status or for canceling.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if the database handle's version doesn't match the expected version.","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"if there is a problem accessing the database.","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.data.ComponentDBAdapter","comment":"the adapter for accessing the table of component data types.","type_short":"ComponentDBAdapter"}},{"javadoc":"Creates a database record for a component data type (an individual member of a composite data type).\n@param dataTypeID the ID of the data type for this component.\n@param parentID the ID of the data type that this component is a part of.\n@param length the total length of this component.\n@param ordinal the component's ordinal.\n@param offset the component's offset.\n@param name the component's name.\n@param comment a comment about this component\n@return the component data type record.\n@throws IOException if there is a problem accessing the database.","static":false,"name":"createRecord","comment":"Creates a database record for a component data type (an individual member of a composite data type).","params":[{"type_long":"long","name":"dataTypeID","comment":"the ID of the data type for this component.","type_short":"long"},{"type_long":"long","name":"parentID","comment":"the ID of the data type that this component is a part of.","type_short":"long"},{"type_long":"int","name":"length","comment":"the total length of this component.","type_short":"int"},{"type_long":"int","name":"ordinal","comment":"the component's ordinal.","type_short":"int"},{"type_long":"int","name":"offset","comment":"the component's offset.","type_short":"int"},{"type_long":"java.lang.String","name":"name","comment":"the component's name.","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"a comment about this component","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is a problem accessing the database.","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"the component data type record.","type_short":"Record"}},{"javadoc":"Gets the record for the indicated component data type.\n@param componentID the ID of the component data type to retrieve.\n@return the component record\n@throws IOException if there is a problem accessing the database.","static":false,"name":"getRecord","comment":"Gets the record for the indicated component data type.","params":[{"type_long":"long","name":"componentID","comment":"the ID of the component data type to retrieve.","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is a problem accessing the database.","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"the component record","type_short":"Record"}},{"javadoc":"Removes the component data type record with the specified ID.\n@param componentID the ID of the component data type.\n@return true if the record is removed.\n@throws IOException if there is a problem accessing the database.","static":false,"name":"removeRecord","comment":"Removes the component data type record with the specified ID.","params":[{"type_long":"long","name":"componentID","comment":"the ID of the component data type.","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is a problem accessing the database.","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"true if the record is removed.","type_short":"boolean"}},{"javadoc":"Updates the component data type table with the provided record.\n@param record the new record\n@throws IOException if there is a problem accessing the database.","static":false,"name":"updateRecord","comment":"Updates the component data type table with the provided record.","params":[{"type_long":"db.Record","name":"record","comment":"the new record","type_short":"Record"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is a problem accessing the database.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets an array with all of the IDs of the defined components within the composite data type indicated.\n@param compositeID the ID of the composite data type whose components are desired.\n@return an array of the defined component IDs.\n@throws IOException if there is a problem accessing the database.","static":false,"name":"getComponentIdsInComposite","comment":"Gets an array with all of the IDs of the defined components within the composite data type indicated.","params":[{"type_long":"long","name":"compositeID","comment":"the ID of the composite data type whose components are desired.","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is a problem accessing the database.","type_short":"IOException"}],"return":{"type_long":"long[]","comment":"an array of the defined component IDs.","type_short":"long[]"}}],"name":"ComponentDBAdapter","comment":"Adapter to access the Component database table.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"COMPONENT_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Component Data Types\""},{"type_long":"db.Schema","javadoc":"","static":true,"name":"COMPONENT_SCHEMA","comment":"","type_short":"Schema","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"COMPONENT_PARENT_ID_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"COMPONENT_OFFSET_COL","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"COMPONENT_DT_ID_COL","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"COMPONENT_FIELD_NAME_COL","comment":"","type_short":"int","constant_value":"3"},{"type_long":"int","javadoc":"","static":true,"name":"COMPONENT_COMMENT_COL","comment":"","type_short":"int","constant_value":"4"},{"type_long":"int","javadoc":"","static":true,"name":"COMPONENT_SIZE_COL","comment":"","type_short":"int","constant_value":"5"},{"type_long":"int","javadoc":"","static":true,"name":"COMPONENT_ORDINAL_COL","comment":"","type_short":"int","constant_value":"6"}]}
