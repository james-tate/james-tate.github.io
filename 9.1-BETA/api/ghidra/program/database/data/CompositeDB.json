{"implements":["ghidra.program.model.data.Composite"],"javadoc":"Database implementation for a structure or union.","static":false,"extends":"ghidra.program.database.data.DataTypeDB","methods":[{"javadoc":"Constructor for a composite data type (structure or union).\n@param dataMgr the data type manager containing this data type.\n@param cache DataTypeDB object cache\n@param compositeAdapter the database adapter for this data type.\n@param componentAdapter the database adapter for the components of this data type.\n@param record the database record for this data type.","static":false,"name":"<init>","comment":"Constructor for a composite data type (structure or union).","params":[{"type_long":"ghidra.program.database.data.DataTypeManagerDB","name":"dataMgr","comment":"the data type manager containing this data type.","type_short":"DataTypeManagerDB"},{"type_long":"ghidra.program.database.DBObjectCache<ghidra.program.database.data.DataTypeDB>","name":"cache","comment":"DataTypeDB object cache","type_short":"DBObjectCache"},{"type_long":"ghidra.program.database.data.CompositeDBAdapter","name":"compositeAdapter","comment":"the database adapter for this data type.","type_short":"CompositeDBAdapter"},{"type_long":"ghidra.program.database.data.ComponentDBAdapter","name":"componentAdapter","comment":"the database adapter for the components of this data type.","type_short":"ComponentDBAdapter"},{"type_long":"db.Record","name":"record","comment":"the database record for this data type.","type_short":"Record"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Perform initialization of instance fields during instantiation\n or instance refresh","static":false,"name":"initialize","comment":"Perform initialization of instance fields during instantiation\n or instance refresh","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the preferred length for a new component.  For Unions and internally aligned\n structures the preferred component length for a fixed-length dataType will be the \n length of that dataType.  Otherwise the length returned will be no larger than the\n specified length.\n@param dataType new component datatype\n@param length constrained length or -1 to force use of dataType size.  Dynamic types\n such as string must have a positive length specified.\n@return preferred component length","static":false,"name":"getPreferredComponentLength","comment":"Get the preferred length for a new component.  For Unions and internally aligned\n structures the preferred component length for a fixed-length dataType will be the \n length of that dataType.  Otherwise the length returned will be no larger than the\n specified length.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"new component datatype","type_short":"DataType"},{"type_long":"int","name":"length","comment":"constrained length or -1 to force use of dataType size.  Dynamic types\n such as string must have a positive length specified.","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"preferred component length","type_short":"int"}},{"javadoc":"","static":false,"name":"doGetName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"doGetCategoryID","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Handle replacement of datatype which may impact bitfield datatype.\n@param bitfieldComponent bitfield component\n@param oldDt affected datatype which has been removed or replaced\n@param newDt replacement datatype\n@param true if bitfield component was modified\n@throws InvalidDataTypeException if bitfield was based upon oldDt but new datatype is \n invalid for a bitfield","static":false,"name":"updateBitFieldDataType","comment":"Handle replacement of datatype which may impact bitfield datatype.","params":[{"type_long":"ghidra.program.database.data.DataTypeComponentDB","name":"bitfieldComponent","comment":"bitfield component","type_short":"DataTypeComponentDB"},{"type_long":"ghidra.program.model.data.DataType","name":"oldDt","comment":"affected datatype which has been removed or replaced","type_short":"DataType"},{"type_long":"ghidra.program.model.data.DataType","name":"newDt","comment":"replacement datatype","type_short":"DataType"}],"throws":[{"type_long":"ghidra.program.model.data.InvalidDataTypeException","comment":"if bitfield was based upon oldDt but new datatype is \n invalid for a bitfield","type_short":"InvalidDataTypeException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"refresh","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setDescription","comment":"","params":[{"type_long":"java.lang.String","name":"desc","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDescription","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"isDynamicallySized","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getValue","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.Object","comment":"","type_short":"Object"}},{"javadoc":"","static":false,"name":"add","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"add","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"add","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"java.lang.String","name":"fieldName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"insert","comment":"","params":[{"type_long":"int","name":"ordinal","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"insert","comment":"","params":[{"type_long":"int","name":"ordinal","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"getMnemonic","comment":"","params":[{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"doSetCategoryPathRecord","comment":"","params":[{"type_long":"long","name":"categoryID","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isPartOf","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataTypeOfInterest","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"This method throws an exception if the indicated data type is an ancestor\n of this data type. In other words, the specified data type has a component\n or sub-component containing this data type.\n@param dataType the data type\n@throws IllegalArgumentException if the data type is an ancestor of this\n data type.","static":false,"name":"checkAncestry","comment":"This method throws an exception if the indicated data type is an ancestor\n of this data type. In other words, the specified data type has a component\n or sub-component containing this data type.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"the data type","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doSetNameRecord","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This method throws an exception if the indicated data type is not\n a valid data type for a component of this composite data type.\n@param dataType the data type to be checked.\n@throws IllegalArgumentException if the data type is invalid.","static":false,"name":"validateDataType","comment":"This method throws an exception if the indicated data type is not\n a valid data type for a component of this composite data type.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"the data type to be checked.","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getLastChangeTimeInSourceArchive","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getLastChangeTime","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"setLastChangeTime","comment":"","params":[{"type_long":"long","name":"lastChangeTime","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setLastChangeTimeInSourceArchive","comment":"","params":[{"type_long":"long","name":"lastChangeTime","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getUniversalID","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.util.UniversalID","comment":"","type_short":"UniversalID"}},{"javadoc":"","static":false,"name":"setUniversalID","comment":"","params":[{"type_long":"ghidra.util.UniversalID","name":"id","comment":"","type_short":"UniversalID"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getSourceArchiveID","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.util.UniversalID","comment":"","type_short":"UniversalID"}},{"javadoc":"","static":false,"name":"setSourceArchiveID","comment":"","params":[{"type_long":"ghidra.util.UniversalID","name":"id","comment":"","type_short":"UniversalID"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPackingValue","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"setPackingValue","comment":"","params":[{"type_long":"int","name":"packingValue","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doSetPackingValue","comment":"","params":[{"type_long":"int","name":"packingValue","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isDefaultAligned","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isMachineAligned","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getMinimumAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getDefaultAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getMachineAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"setMinimumAlignment","comment":"","params":[{"type_long":"int","name":"externalAlignment","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doSetMinimumAlignment","comment":"","params":[{"type_long":"int","name":"externalAlignment","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setToDefaultAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doSetToDefaultAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setToMachineAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doSetToMachineAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"modifyAlignment","comment":"","params":[{"type_long":"int","name":"dbExternalAlignment","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Notification that this composite data type's alignment has changed.","static":false,"name":"notifyAlignmentChanged","comment":"Notification that this composite data type's alignment has changed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isInternallyAligned","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setInternallyAligned","comment":"","params":[{"type_long":"boolean","name":"aligned","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doSetInternallyAligned","comment":"","params":[{"type_long":"boolean","name":"aligned","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setAlignment","comment":"","params":[{"type_long":"ghidra.program.model.data.Composite","name":"composite","comment":"","type_short":"Composite"},{"type_long":"boolean","name":"notify","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adjusts the internal alignment of components within this composite based on the current\n settings of the internal alignment, packing, alignment type and minimum alignment value.\n This method should be called whenever any of the above settings are changed or whenever\n a components data type is changed or a component is added or removed.\n@param notify","static":false,"name":"adjustInternalAlignment","comment":"Adjusts the internal alignment of components within this composite based on the current\n settings of the internal alignment, packing, alignment type and minimum alignment value.\n This method should be called whenever any of the above settings are changed or whenever\n a components data type is changed or a component is added or removed.","params":[{"type_long":"boolean","name":"notify","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Dump all components for use in {@link #toString()} representation.\n@param buffer string buffer\n@param pad padding to be used with each component output line","static":false,"name":"dumpComponents","comment":"Dump all components for use in #toString() representation.","params":[{"type_long":"java.lang.StringBuilder","name":"buffer","comment":"string buffer","type_short":"StringBuilder"},{"type_long":"java.lang.String","name":"pad","comment":"padding to be used with each component output line","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getTypeName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getAlignmentSettingsString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getPackingString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"CompositeDB","comment":"Database implementation for a structure or union.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"UNALIGNED","comment":"","type_short":"int","constant_value":"-1"},{"type_long":"int","javadoc":"","static":true,"name":"ALIGNED_NO_PACKING","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"MACHINE_ALIGNED","comment":"","type_short":"int","constant_value":"-1"},{"type_long":"int","javadoc":"","static":true,"name":"DEFAULT_ALIGNED","comment":"","type_short":"int","constant_value":"0"},{"type_long":"ghidra.program.database.data.CompositeDBAdapter","javadoc":"","static":false,"name":"compositeAdapter","comment":"","type_short":"CompositeDBAdapter","constant_value":null},{"type_long":"ghidra.program.database.data.ComponentDBAdapter","javadoc":"","static":false,"name":"componentAdapter","comment":"","type_short":"ComponentDBAdapter","constant_value":null}]}
