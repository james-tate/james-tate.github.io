{"implements":["ghidra.program.model.data.Structure"],"javadoc":"Structure implementation for the Database.","static":false,"extends":"ghidra.program.database.data.CompositeDB","methods":[{"javadoc":"Constructor\n@param dataMgr\n@param cache\n@param compositeAdapter\n@param componentAdapter\n@param record","static":false,"name":"<init>","comment":"Constructor","params":[{"type_long":"ghidra.program.database.data.DataTypeManagerDB","name":"dataMgr","comment":"","type_short":"DataTypeManagerDB"},{"type_long":"ghidra.program.database.DBObjectCache<ghidra.program.database.data.DataTypeDB>","name":"cache","comment":"","type_short":"DBObjectCache"},{"type_long":"ghidra.program.database.data.CompositeDBAdapter","name":"compositeAdapter","comment":"","type_short":"CompositeDBAdapter"},{"type_long":"ghidra.program.database.data.ComponentDBAdapter","name":"componentAdapter","comment":"","type_short":"ComponentDBAdapter"},{"type_long":"db.Record","name":"record","comment":"","type_short":"Record"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initialize","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getRepresentation","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"add","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"length","comment":"","type_short":"int"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"doAdd","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"length","comment":"","type_short":"int"},{"type_long":"boolean","name":"isFlexibleArray","comment":"","type_short":"boolean"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"},{"type_long":"boolean","name":"alignAndNotify","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"growStructure","comment":"","params":[{"type_long":"int","name":"amount","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doGrowStructure","comment":"","params":[{"type_long":"int","name":"amount","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"insert","comment":"","params":[{"type_long":"int","name":"ordinal","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"length","comment":"","type_short":"int"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"addBitField","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"baseDataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"bitSize","comment":"","type_short":"int"},{"type_long":"java.lang.String","name":"componentName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.data.InvalidDataTypeException","comment":"","type_short":"InvalidDataTypeException"}],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"insertBitField","comment":"","params":[{"type_long":"int","name":"ordinal","comment":"","type_short":"int"},{"type_long":"int","name":"byteWidth","comment":"","type_short":"int"},{"type_long":"int","name":"bitOffset","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"baseDataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"bitSize","comment":"","type_short":"int"},{"type_long":"java.lang.String","name":"componentName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.data.InvalidDataTypeException","comment":"","type_short":"InvalidDataTypeException"},{"type_long":"java.lang.ArrayIndexOutOfBoundsException","comment":"","type_short":"ArrayIndexOutOfBoundsException"}],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"insertBitFieldAt","comment":"","params":[{"type_long":"int","name":"byteOffset","comment":"","type_short":"int"},{"type_long":"int","name":"byteWidth","comment":"","type_short":"int"},{"type_long":"int","name":"bitOffset","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"baseDataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"bitSize","comment":"","type_short":"int"},{"type_long":"java.lang.String","name":"componentName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.data.InvalidDataTypeException","comment":"","type_short":"InvalidDataTypeException"}],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"delete","comment":"","params":[{"type_long":"int","name":"ordinal","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doDelete","comment":"","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"delete","comment":"","params":[{"type_long":"int[]","name":"ordinals","comment":"","type_short":"int[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isPartOf","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getNumComponents","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getNumDefinedComponents","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getComponent","comment":"","params":[{"type_long":"int","name":"ordinal","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"getComponents","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent[]","comment":"","type_short":"ghidra.program.model.data.DataTypeComponent[]"}},{"javadoc":"","static":false,"name":"copy","comment":"","params":[{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"clone","comment":"","params":[{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"isNotYetDefined","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getLength","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"clearComponent","comment":"","params":[{"type_long":"int","name":"ordinal","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Backup from specified ordinal to the first component which contains\n the specified offset.  For normal components the specified\n ordinal will be returned, however for bit-fields the ordinal of the first\n bit-field containing the specified offset will be returned.\n@param ordinal component ordinal\n@param offset offset within structure\n@return index of first defined component containing specific offset.","static":false,"name":"backupToFirstComponentContainingOffset","comment":"Backup from specified ordinal to the first component which contains\n the specified offset.  For normal components the specified\n ordinal will be returned, however for bit-fields the ordinal of the first\n bit-field containing the specified offset will be returned.","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"},{"type_long":"int","name":"offset","comment":"offset within structure","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"index of first defined component containing specific offset.","type_short":"int"}},{"javadoc":"Advance from specified ordinal to the last component which contains\n the specified offset.  For normal components the specified\n ordinal will be returned, however for bit-fields the ordinal of the last\n bit-field containing the specified offset will be returned.\n@param ordinal component ordinal\n@param offset offset within structure\n@return index of last defined component containing specific offset.","static":false,"name":"advanceToLastComponentContainingOffset","comment":"Advance from specified ordinal to the last component which contains\n the specified offset.  For normal components the specified\n ordinal will be returned, however for bit-fields the ordinal of the last\n bit-field containing the specified offset will be returned.","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"},{"type_long":"int","name":"offset","comment":"offset within structure","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"index of last defined component containing specific offset.","type_short":"int"}},{"javadoc":"","static":false,"name":"deleteAtOffset","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getComponentAt","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"getDataTypeAt","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"getDefinedComponents","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent[]","comment":"","type_short":"ghidra.program.model.data.DataTypeComponent[]"}},{"javadoc":"","static":false,"name":"insertAtOffset","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"insertAtOffset","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"length","comment":"","type_short":"int"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"replace","comment":"","params":[{"type_long":"int","name":"ordinal","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"length","comment":"","type_short":"int"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"replace","comment":"","params":[{"type_long":"int","name":"ordinal","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"replaceAtOffset","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"length","comment":"","type_short":"int"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"Replaces the internal components of this structure with components of the\n given structure.\n@param dataType the structure to get the component information from.\n@throws IllegalArgumentException if any of the component data types\n are not allowed to replace a component in this composite data type.\n For example, suppose dt1 contains dt2. Therefore it is not valid\n to replace a dt2 component with dt1 since this would cause a cyclic\n dependency.\n@see ghidra.program.database.data.DataTypeDB#replaceWith(ghidra.program.model.data.DataType)","static":false,"name":"replaceWith","comment":"Replaces the internal components of this structure with components of the\n given structure.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"the structure to get the component information from.","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@param struct\n@param notify\n@param handler","static":false,"name":"doReplaceWith","comment":"","params":[{"type_long":"ghidra.program.model.data.Structure","name":"struct","comment":"","type_short":"Structure"},{"type_long":"boolean","name":"notify","comment":"","type_short":"boolean"},{"type_long":"ghidra.program.model.data.DataTypeConflictHandler","name":"handler","comment":"","type_short":"DataTypeConflictHandler"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doReplaceWithAligned","comment":"","params":[{"type_long":"ghidra.program.model.data.Structure","name":"struct","comment":"","type_short":"Structure"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doReplaceWithUnaligned","comment":"","params":[{"type_long":"ghidra.program.model.data.Structure","name":"struct","comment":"","type_short":"Structure"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dataTypeDeleted","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dataTypeSizeChanged","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dataTypeAlignmentChanged","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isEquivalent","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@param definedComponentIndex the index of the defined component that is consuming the bytes.\n@param numBytes the number of undefined bytes to consume\n@return the number of bytes actually consumed","static":false,"name":"consumeBytesAfter","comment":"","params":[{"type_long":"int","name":"definedComponentIndex","comment":"the index of the defined component that is consuming the bytes.","type_short":"int"},{"type_long":"int","name":"numBytes","comment":"the number of undefined bytes to consume","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"the number of bytes actually consumed","type_short":"int"}},{"javadoc":"","static":false,"name":"getLastDefinedComponentIndex","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"shiftOffsets","comment":"","params":[{"type_long":"int","name":"definedComponentIndex","comment":"","type_short":"int"},{"type_long":"int","name":"deltaOrdinal","comment":"","type_short":"int"},{"type_long":"int","name":"deltaOffset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"shiftOffset","comment":"","params":[{"type_long":"ghidra.program.database.data.DataTypeComponentDB","name":"dtc","comment":"","type_short":"DataTypeComponentDB"},{"type_long":"int","name":"deltaOrdinal","comment":"","type_short":"int"},{"type_long":"int","name":"deltaOffset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Replace the indicated component with a new component containing the\n specified data type.  Flex-array component not handled.\n@param origDtc the original data type component in this structure.\n@param resolvedDataType the data type of the new component\n@param length the length of the new component\n@param name the field name of the new component\n@param comment the comment for the new component\n@return the new component or null if the new component couldn't fit.","static":false,"name":"replaceComponent","comment":"Replace the indicated component with a new component containing the\n specified data type.  Flex-array component not handled.","params":[{"type_long":"ghidra.program.model.data.DataTypeComponent","name":"origDtc","comment":"the original data type component in this structure.","type_short":"DataTypeComponent"},{"type_long":"ghidra.program.model.data.DataType","name":"resolvedDataType","comment":"the data type of the new component","type_short":"DataType"},{"type_long":"int","name":"length","comment":"the length of the new component","type_short":"int"},{"type_long":"java.lang.String","name":"name","comment":"the field name of the new component","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"the comment for the new component","type_short":"String"},{"type_long":"boolean","name":"doNotify","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"the new component or null if the new component couldn't fit.","type_short":"DataTypeComponent"}},{"javadoc":"Gets the number of Undefined bytes beginning at the indicated component\n ordinal. Undefined bytes that have a field name or comment specified are\n also included.\n@param ordinal the component ordinal to begin checking at.\n@return the number of contiguous undefined bytes","static":false,"name":"getNumUndefinedBytes","comment":"Gets the number of Undefined bytes beginning at the indicated component\n ordinal. Undefined bytes that have a field name or comment specified are\n also included.","params":[{"type_long":"int","name":"ordinal","comment":"the component ordinal to begin checking at.","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"the number of contiguous undefined bytes","type_short":"int"}},{"javadoc":"","static":false,"name":"getDefaultLabelPrefix","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"dataTypeReplaced","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"oldDt","comment":"","type_short":"DataType"},{"type_long":"ghidra.program.model.data.DataType","name":"newDt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setComponentDataType","comment":"","params":[{"type_long":"ghidra.program.database.data.DataTypeComponentDB","name":"comp","comment":"","type_short":"DataTypeComponentDB"},{"type_long":"ghidra.program.model.data.DataType","name":"replacementDt","comment":"","type_short":"DataType"},{"type_long":"int","name":"nextIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dataTypeNameChanged","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"},{"type_long":"java.lang.String","name":"oldName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"deleteAll","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adjust the alignment, packing and padding of components within this structure based upon the\n current alignment and packing attributes for this structure. This method should be\n called to basically fix up the layout of the internal components of the structure\n after other code has changed the attributes of the structure.\n <BR>When switching between internally aligned and unaligned this method corrects the\n component ordinal numbering also.\n@param notify if true this method will do data type change notification\n when it changes the layout of the components or when it changes the\n overall size of the structure.\n@return true if the structure was changed by this method.","static":false,"name":"adjustComponents","comment":"Adjust the alignment, packing and padding of components within this structure based upon the\n current alignment and packing attributes for this structure. This method should be\n called to basically fix up the layout of the internal components of the structure\n after other code has changed the attributes of the structure.\n When switching between internally aligned and unaligned this method corrects the\n component ordinal numbering also.","params":[{"type_long":"boolean","name":"notify","comment":"if true this method will do data type change notification\n when it changes the layout of the components or when it changes the\n overall size of the structure.","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the structure was changed by this method.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"adjustUnalignedComponents","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"updateNumComponents","comment":"","params":[{"type_long":"int","name":"currentNumComponents","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"updateComposite","comment":"","params":[{"type_long":"int","name":"currentNumComponents","comment":"","type_short":"int"},{"type_long":"int","name":"currentLength","comment":"","type_short":"int"},{"type_long":"int","name":"currentAlignment","comment":"","type_short":"int"},{"type_long":"boolean","name":"setLastChangeTime","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"realign","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"pack","comment":"","params":[{"type_long":"int","name":"packingSize","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"adjustInternalAlignment","comment":"","params":[{"type_long":"boolean","name":"notify","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hasFlexibleArrayComponent","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getFlexibleArrayComponent","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"isInvalidFlexArrayDataType","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setFlexibleArrayComponent","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"flexType","comment":"","type_short":"DataType"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"clearFlexibleArrayComponent","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dumpComponents","comment":"","params":[{"type_long":"java.lang.StringBuilder","name":"buffer","comment":"","type_short":"StringBuilder"},{"type_long":"java.lang.String","name":"pad","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"StructureDB","comment":"Structure implementation for the Database.","fields":[{"type_long":"ghidra.program.model.data.Structure.OrdinalComparator","javadoc":"","static":true,"name":"ordinalComparator","comment":"","type_short":"OrdinalComparator","constant_value":null},{"type_long":"ghidra.program.model.data.Structure.OffsetComparator","javadoc":"","static":true,"name":"offsetComparator","comment":"","type_short":"OffsetComparator","constant_value":null},{"type_long":"ghidra.program.database.data.StructureDB.ComponentComparator","javadoc":"","static":true,"name":"componentComparator","comment":"","type_short":"ComponentComparator","constant_value":null},{"type_long":"java.util.Comparator<java.lang.Object>","javadoc":"","static":true,"name":"bitOffsetComparatorLE","comment":"","type_short":"Comparator","constant_value":null},{"type_long":"java.util.Comparator<java.lang.Object>","javadoc":"","static":true,"name":"bitOffsetComparatorBE","comment":"","type_short":"Comparator","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"structLength","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"numComponents","comment":"","type_short":"int","constant_value":null},{"type_long":"java.util.ArrayList<ghidra.program.database.data.DataTypeComponentDB>","javadoc":"","static":false,"name":"components","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"ghidra.program.database.data.DataTypeComponentDB","javadoc":"","static":false,"name":"flexibleArrayComponent","comment":"","type_short":"DataTypeComponentDB","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"alignment","comment":"","type_short":"int","constant_value":null}]}
