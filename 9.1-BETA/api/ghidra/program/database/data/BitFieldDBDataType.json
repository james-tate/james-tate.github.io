{"implements":[],"javadoc":"<code>BitFieldDBDataType<\/code> extends BitFieldDataType for DataTypeManagerDB use.\n This class provides the ability to generate a datatype ID and reconstruct a bit-field\n datatype from an ID.","static":false,"extends":"ghidra.program.model.data.BitFieldDataType","methods":[{"javadoc":"Construct DB resident bitfield.  Minimal storage size and effective bit size will \n be computed based upon specified parameters.\n@param baseDataType base data type (integer\/enum type or typedef to same).  This\n bitfield will adopt the same datatype manager as this base type.\n@param bitSize size of bit-field expressed as number of bits (0..255).  The effective \n bit size may be reduced based upon the specified base datatype size.\n@param bitOffset right shift factor within storage unit when viewed as a big-endian dd\n scalar value.  Based upon minimal storage bitOffset should be in the range 0 to 7.\n@throws InvalidDataTypeException","static":false,"name":"<init>","comment":"Construct DB resident bitfield.  Minimal storage size and effective bit size will \n be computed based upon specified parameters.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"baseDataType","comment":"base data type (integer\/enum type or typedef to same).  This\n bitfield will adopt the same datatype manager as this base type.","type_short":"DataType"},{"type_long":"int","name":"bitSize","comment":"size of bit-field expressed as number of bits (0..255).  The effective \n bit size may be reduced based upon the specified base datatype size.","type_short":"int"},{"type_long":"int","name":"bitOffset","comment":"right shift factor within storage unit when viewed as a big-endian dd\n scalar value.  Based upon minimal storage bitOffset should be in the range 0 to 7.","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.data.InvalidDataTypeException","comment":"","type_short":"InvalidDataTypeException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get a generated ID for this bit-field which is suitable for reconstruction\n via the {@link #getBitFieldDataType(long)} method.  This ID encodes the base\n datatype (including typedef\/enum and packing data), \n bit-size and bit-offset.  The upper byte of the ID will always be zero and \n is reserved for use by the DataTypeManager.\n <p>\n The ability to reference base datatypes (e.g., TypeDef, Enum) is currently limited \n (i.e. 32-bit base datatype ID).\n@param bitfieldDt the resolved bitfield datatype whose ID is needed.  This must first be\n resolved by a DataTypeManagerDB.\n@return bit-field ID","static":true,"name":"getId","comment":"Get a generated ID for this bit-field which is suitable for reconstruction\n via the #getBitFieldDataType(long) method.  This ID encodes the base\n datatype (including typedef\/enum and packing data), \n bit-size and bit-offset.  The upper byte of the ID will always be zero and \n is reserved for use by the DataTypeManager.\n \n The ability to reference base datatypes (e.g., TypeDef, Enum) is currently limited \n (i.e. 32-bit base datatype ID).","params":[{"type_long":"ghidra.program.model.data.BitFieldDataType","name":"bitfieldDt","comment":"the resolved bitfield datatype whose ID is needed.  This must first be\n resolved by a DataTypeManagerDB.","type_short":"BitFieldDataType"}],"throws":[],"return":{"type_long":"long","comment":"bit-field ID","type_short":"long"}},{"javadoc":"","static":true,"name":"getBaseTypeEncodedField","comment":"","params":[{"type_long":"ghidra.program.model.data.BitFieldDataType","name":"bitFieldDt","comment":"","type_short":"BitFieldDataType"},{"type_long":"ghidra.program.database.data.BitFieldDBDataType.BaseDatatypeKind","name":"dataTypeKind","comment":"","type_short":"BaseDatatypeKind"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Get a bit-field datatype instance for a given ID.  The upper byte of the ID will be ignored.\n@param id bit-field datatype ID\n@param dtm data type manager\n@return bit-field data type","static":true,"name":"getBitFieldDataType","comment":"Get a bit-field datatype instance for a given ID.  The upper byte of the ID will be ignored.","params":[{"type_long":"long","name":"id","comment":"bit-field datatype ID","type_short":"long"},{"type_long":"ghidra.program.database.data.DataTypeManagerDB","name":"dtm","comment":"data type manager","type_short":"DataTypeManagerDB"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.BitFieldDataType","comment":"bit-field data type","type_short":"BitFieldDataType"}},{"javadoc":"","static":true,"name":"getResolvedDataTypeIndex","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"ghidra.program.database.data.DataTypeManagerDB","name":"dtm","comment":"","type_short":"DataTypeManagerDB"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Get the TypeDef which corresponds to the specified typeDefIndex and the \n specified data type manager.\n@param typeDefIndex base data type index used by bit-field\n@param primitiveBaseDataType expected primitive base datatype\n@param dtm data type manager\n@return TypeDef data type or null if not found","static":true,"name":"getTypeDef","comment":"Get the TypeDef which corresponds to the specified typeDefIndex and the \n specified data type manager.","params":[{"type_long":"long","name":"typeDefIndex","comment":"base data type index used by bit-field","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"data type manager","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.TypeDef","comment":"TypeDef data type or null if not found","type_short":"TypeDef"}},{"javadoc":"Get the Enum which corresponds to the specified enumIndex and the \n specified data type manager.\n@param enumIndex enum data type index used by bit-field\n@param dtm data type manager\n@return Enum data type or null if not found","static":true,"name":"getEnum","comment":"Get the Enum which corresponds to the specified enumIndex and the \n specified data type manager.","params":[{"type_long":"long","name":"enumIndex","comment":"enum data type index used by bit-field","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"data type manager","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.Enum","comment":"Enum data type or null if not found","type_short":"Enum"}},{"javadoc":"Get the integer base type which corresponds to the specified intTypeIndex and the \n specified data type manager.\n@param intTypeIndex base data type index used by bit-field\n@param dtm data type manager\n@return integer data type or null if not found","static":true,"name":"getIntegerType","comment":"Get the integer base type which corresponds to the specified intTypeIndex and the \n specified data type manager.","params":[{"type_long":"long","name":"intTypeIndex","comment":"base data type index used by bit-field","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"data type manager","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.AbstractIntegerDataType","comment":"integer data type or null if not found","type_short":"AbstractIntegerDataType"}}],"name":"BitFieldDBDataType","comment":"BitFieldDBDataType extends BitFieldDataType for DataTypeManagerDB use.\n This class provides the ability to generate a datatype ID and reconstruct a bit-field\n datatype from an ID.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"BIT_OFFSET_SHIFT","comment":"","type_short":"int","constant_value":"8"},{"type_long":"int","javadoc":"","static":true,"name":"BASE_TYPE_SHIFT","comment":"","type_short":"int","constant_value":"16"},{"type_long":"int","javadoc":"","static":true,"name":"DATATYPE_INDEX_SHIFT","comment":"","type_short":"int","constant_value":"24"},{"type_long":"long","javadoc":"","static":true,"name":"MAX_DATATYPE_INDEX","comment":"","type_short":"long","constant_value":"4294967295"},{"type_long":"long","javadoc":"","static":true,"name":"ID_TO_INDEX_MASK","comment":"","type_short":"long","constant_value":"72057594037927935"}]}
