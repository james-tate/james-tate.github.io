{"implements":[],"javadoc":"The <CODE>BytesFieldLocation<\/CODE> class provides specific information\n  about the BYTES field within a program location.","static":false,"extends":"ghidra.program.util.CodeUnitLocation","methods":[{"javadoc":"Create a new BytesFieldLocation which represents a specific byte address.\n@param program the program for this location.\n@param addr the address of the code unit containing this location.\n@param byteAddress the address of this location which can be the address of a specific\n byte within a code unit.\n@param componentPath the data component path which is specified as an array of indexes\n where each index indicates the index into nested structures. For instructions or\n simple data, this should be null.\n@param columnInByte the character position in the the bytes","static":false,"name":"<init>","comment":"Create a new BytesFieldLocation which represents a specific byte address.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program for this location.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address of the code unit containing this location.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"byteAddress","comment":"the address of this location which can be the address of a specific\n byte within a code unit.","type_short":"Address"},{"type_long":"int[]","name":"componentPath","comment":"the data component path which is specified as an array of indexes\n where each index indicates the index into nested structures. For instructions or\n simple data, this should be null.","type_short":"int[]"},{"type_long":"int","name":"columnInByte","comment":"the character position in the the bytes","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new BytesFieldLocation for the given address.\n The address will be adjusted to the beginning of the code unit containing\n that address(if it exists).  The original address can be retrieved using\n the \"getByteAddress()\" method.\n@param program the program that this location is related.\n@param addr the address of the byte for this location.","static":false,"name":"<init>","comment":"Creates a new BytesFieldLocation for the given address.\n The address will be adjusted to the beginning of the code unit containing\n that address(if it exists).  The original address can be retrieved using\n the \"getByteAddress()\" method.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program that this location is related.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address of the byte for this location.","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getComponentPath","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"int[]","comment":"","type_short":"int[]"}},{"javadoc":"Default constructor needed for restoring\n a byte field location from XML.","static":false,"name":"<init>","comment":"Default constructor needed for restoring\n a byte field location from XML.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the index of byte that represents the current program location.\n Sources that do not get this specific should simply return 0.","static":false,"name":"getByteIndex","comment":"Returns the index of byte that represents the current program location.\n Sources that do not get this specific should simply return 0.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"This is overridden here because previous versions used to store the byte index in the\n column field.  So if anyone was incorrectly using getColumn() to get the byte index,\n then this override will allow that to keep working.","static":false,"name":"getColumn","comment":"This is overridden here because previous versions used to store the byte index in the\n column field.  So if anyone was incorrectly using getColumn() to get the byte index,\n then this override will allow that to keep working.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the character position within the byte specified by getByteIndex().  Normally,\n this is 1,2, or 3 corresponding to before the byte, between the nibbles of the byte or\n past the byte.  Sometimes, extra delimiters may exist allowing the position to be\n greater than 3.","static":false,"name":"getColumnInByte","comment":"Returns the character position within the byte specified by getByteIndex().  Normally,\n this is 1,2, or 3 corresponding to before the byte, between the nibbles of the byte or\n past the byte.  Sometimes, extra delimiters may exist allowing the position to be\n greater than 3.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getAddressForByte","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}}],"name":"BytesFieldLocation","comment":"The BytesFieldLocation class provides specific information\n  about the BYTES field within a program location.","fields":[]}
