{"implements":[],"javadoc":"<CODE>ProgramMemoryComparator<\/CODE> is a class for comparing two programs and\n determining the address differences between them.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"<CODE>ProgramMemoryComparator\/CODE> is used to determine the memory\n address differences between two programs.\n@param program1 the first program\n@param program2 the second program\n@throws ProgramConflictException if the two programs can't be compared.","static":false,"name":"<init>","comment":"ProgramMemoryComparator\/CODE is used to determine the memory\n address differences between two programs.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program1","comment":"the first program","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"program2","comment":"the second program","type_short":"Program"}],"throws":[{"type_long":"ghidra.program.util.ProgramConflictException","comment":"if the two programs can't be compared.","type_short":"ProgramConflictException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Check each program to see if the memory blocks have the same address types.\n@param program1 the first program\n@param program2 the second program\n@throws ProgramConflictException if the address types for the two programs\n do not match.","static":true,"name":"compareAddressTypes","comment":"Check each program to see if the memory blocks have the same address types.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program1","comment":"the first program","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"program2","comment":"the second program","type_short":"Program"}],"throws":[{"type_long":"ghidra.program.util.ProgramConflictException","comment":"if the address types for the two programs\n do not match.","type_short":"ProgramConflictException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return whether or not the two specified programs are alike \n (their language name or address spaces are the same).\n@param p1 the first program\n@param p2 the second program\n@return true if the programs are alike (their language name or address spaces are the same).","static":true,"name":"similarPrograms","comment":"Return whether or not the two specified programs are alike \n (their language name or address spaces are the same).","params":[{"type_long":"ghidra.program.model.listing.Program","name":"p1","comment":"the first program","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"p2","comment":"the second program","type_short":"Program"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the programs are alike (their language name or address spaces are the same).","type_short":"boolean"}},{"javadoc":"","static":false,"name":"determineAddressDiffs","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the first program being compared by the ProgramMemoryComparator.\n@return program1.","static":false,"name":"getProgramOne","comment":"Gets the first program being compared by the ProgramMemoryComparator.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"program1.","type_short":"Program"}},{"javadoc":"Gets the second program being compared by the ProgramMemoryComparator.\n@return program2.","static":false,"name":"getProgramTwo","comment":"Gets the second program being compared by the ProgramMemoryComparator.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"program2.","type_short":"Program"}},{"javadoc":"Returns the addresses from combining the address sets in program1 and program2.\n  Addresses in the returned address set are derived from program1.\n@return the addresses for both program1 and program2.","static":true,"name":"getCombinedAddresses","comment":"Returns the addresses from combining the address sets in program1 and program2.\n  Addresses in the returned address set are derived from program1.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program1","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"program2","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"the addresses for both program1 and program2.","type_short":"AddressSet"}},{"javadoc":"Returns an iterator for the address ranges in the set containing the combined addresses\n  in program1 and program2.\n  Address ranges from this iterator are derived using program1.\n@return the addresses for both program1 and program2.","static":false,"name":"getAddressRanges","comment":"Returns an iterator for the address ranges in the set containing the combined addresses\n  in program1 and program2.\n  Address ranges from this iterator are derived using program1.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRangeIterator","comment":"the addresses for both program1 and program2.","type_short":"AddressRangeIterator"}},{"javadoc":"Returns the addresses in common between program1 and program2.\n  The returned address set is derived using program1.\n@return the addresses in common between program1 and program2.","static":false,"name":"getAddressesInCommon","comment":"Returns the addresses in common between program1 and program2.\n  The returned address set is derived using program1.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"the addresses in common between program1 and program2.","type_short":"AddressSet"}},{"javadoc":"Returns the addresses of initialized memory in common between \n program1 and program2. This includes bit memory and live memory.\n The returned address set is derived using program1.\n@return the addresses in common between program1 and program2.","static":false,"name":"getInitializedAddressesInCommon","comment":"Returns the addresses of initialized memory in common between \n program1 and program2. This includes bit memory and live memory.\n The returned address set is derived using program1.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"the addresses in common between program1 and program2.","type_short":"AddressSet"}},{"javadoc":"Returns the addresses with the same memory types in common between \n program1 and program2.\n The returned address set is derived using program1.\n@return the addresses in common between program1 and program2.","static":false,"name":"getSameMemTypeAddressesInCommon","comment":"Returns the addresses with the same memory types in common between \n program1 and program2.\n The returned address set is derived using program1.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"the addresses in common between program1 and program2.","type_short":"AddressSet"}},{"javadoc":"Returns the addresses that are in program1, but not in program2\n  The returned address set is derived using program1.\n@return the addresses that are in program1, but not in program2.","static":false,"name":"getAddressesOnlyInOne","comment":"Returns the addresses that are in program1, but not in program2\n  The returned address set is derived using program1.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"the addresses that are in program1, but not in program2.","type_short":"AddressSet"}},{"javadoc":"Returns the addresses that are in program2, but not in program1\n  The returned address set is derived using program2.\n@return the addresses that are in program2, but not in program1.","static":false,"name":"getAddressesOnlyInTwo","comment":"Returns the addresses that are in program2, but not in program1\n  The returned address set is derived using program2.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"the addresses that are in program2, but not in program1.","type_short":"AddressSet"}},{"javadoc":"Returns the set of addresses that are in program2, but not in program1\n and that are compatible with program1.\n  The returned address set is derived using program1.\n@return the addresses that are in program2, but not in program1.","static":false,"name":"getCompatibleAddressesOnlyInTwo","comment":"Returns the set of addresses that are in program2, but not in program1\n and that are compatible with program1.\n  The returned address set is derived using program1.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"the addresses that are in program2, but not in program1.","type_short":"AddressSet"}},{"javadoc":"Return whether or not the memory addresses for the two Programs are different.","static":false,"name":"hasMemoryDifferences","comment":"Return whether or not the memory addresses for the two Programs are different.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns true if the register names are the same in both programs.\n@param program1 the first program\n@param program2 the second program\n@return true if the register names are the same","static":true,"name":"sameProgramContextRegisterNames","comment":"Returns true if the register names are the same in both programs.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program1","comment":"the first program","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"program2","comment":"the second program","type_short":"Program"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the register names are the same","type_short":"boolean"}}],"name":"ProgramMemoryComparator","comment":"ProgramMemoryComparator is a class for comparing two programs and\n determining the address differences between them.","fields":[{"type_long":"ghidra.program.model.listing.Program","javadoc":"The first program for the diff.","static":false,"name":"program1","comment":"The first program for the diff.","type_short":"Program","constant_value":null},{"type_long":"ghidra.program.model.listing.Program","javadoc":"The second program for the diff.","static":false,"name":"program2","comment":"The second program for the diff.","type_short":"Program","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"Addresses of initialized memory in both programs one and two. \n  Addresses in this address set are derived from program1.","static":false,"name":"initInBoth","comment":"Addresses of initialized memory in both programs one and two. \n  Addresses in this address set are derived from program1.","type_short":"AddressSet","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"Addresses with same memory type in both programs one and two.\n  Addresses in this address set are derived from program1.","static":false,"name":"sameTypeInBoth","comment":"Addresses with same memory type in both programs one and two.\n  Addresses in this address set are derived from program1.","type_short":"AddressSet","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"Addresses in both programs one and two.\n  Addresses in this address set are derived from program1.","static":false,"name":"inBoth","comment":"Addresses in both programs one and two.\n  Addresses in this address set are derived from program1.","type_short":"AddressSet","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"Addresses only in program one.\n  Addresses in this address set are derived from program1.","static":false,"name":"onlyInOne","comment":"Addresses only in program one.\n  Addresses in this address set are derived from program1.","type_short":"AddressSet","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"Addresses only in program two.\n  Addresses in this address set are derived from program2.","static":false,"name":"onlyInTwo","comment":"Addresses only in program two.\n  Addresses in this address set are derived from program2.","type_short":"AddressSet","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"Addresses only in program2 that are compatible with program1.\n  Addresses in this address set are derived from program1.","static":false,"name":"compatibleOnlyInTwo","comment":"Addresses only in program2 that are compatible with program1.\n  Addresses in this address set are derived from program1.","type_short":"AddressSet","constant_value":null}]}
