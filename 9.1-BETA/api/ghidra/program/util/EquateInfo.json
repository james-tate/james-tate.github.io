{"implements":[],"javadoc":"Class to hold information about an Equate; it is used\n in a ProgramChangeRecord when an equate is created and\n when references to the Equate are updated.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor.\n@param name Equate name\n@param value Equate value\n@param refAddr Reference address (may be null for some event types)\n@param opIndex operand index for the reference; useful only if \n refAddr is not null. May be -1 if only dynamicHash applies.\n@param dynamicHash dynamic hash. May be 0 if only opIndex applies.","static":false,"name":"<init>","comment":"Constructor.","params":[{"type_long":"java.lang.String","name":"name","comment":"Equate name","type_short":"String"},{"type_long":"long","name":"value","comment":"Equate value","type_short":"long"},{"type_long":"ghidra.program.model.address.Address","name":"refAddr","comment":"Reference address (may be null for some event types)","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"operand index for the reference; useful only if \n refAddr is not null. May be -1 if only dynamicHash applies.","type_short":"int"},{"type_long":"long","name":"dynamicHash","comment":"dynamic hash. May be 0 if only opIndex applies.","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the equate name.","static":false,"name":"getName","comment":"Get the equate name.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Get the equate value.","static":false,"name":"getValue","comment":"Get the equate value.","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Get the reference address.","static":false,"name":"getReferenceAddress","comment":"Get the reference address.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Get the operand index of where the equate was placed;\n This value is meaningful only if the reference address is not null, and\n may be -1 if only the dynamicHash applies.","static":false,"name":"getOperandIndex","comment":"Get the operand index of where the equate was placed;\n This value is meaningful only if the reference address is not null, and\n may be -1 if only the dynamicHash applies.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Get the varnode dynamic hash of where the equate was placed;\n This value is meaningful only if the reference address is not null, and\n may be 0 if only the operand index applies.","static":false,"name":"getDynamicHash","comment":"Get the varnode dynamic hash of where the equate was placed;\n This value is meaningful only if the reference address is not null, and\n may be 0 if only the operand index applies.","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Return a meaningful string for debugging purposes.","static":false,"name":"toString","comment":"Return a meaningful string for debugging purposes.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"EquateInfo","comment":"Class to hold information about an Equate; it is used\n in a ProgramChangeRecord when an equate is created and\n when references to the Equate are updated.","fields":[{"type_long":"java.lang.String","javadoc":"","static":false,"name":"name","comment":"","type_short":"String","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"value","comment":"","type_short":"long","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"refAddr","comment":"","type_short":"Address","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"opIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"dynamicHash","comment":"","type_short":"long","constant_value":null}]}
