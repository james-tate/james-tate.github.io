{"implements":["ghidra.program.model.address.AddressSetView"],"javadoc":"Class to define a selection for a program.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a new empty ProgramSelection.","static":false,"name":"<init>","comment":"Construct a new empty ProgramSelection.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new empty ProgramSelection.\n@param addressFactory the address factory for the address set\n associated with this program selection.","static":false,"name":"<init>","comment":"Construct a new empty ProgramSelection.","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"addressFactory","comment":"the address factory for the address set\n associated with this program selection.","type_short":"AddressFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor.\n@param from the start of the selection\n@param to the end of the selection","static":false,"name":"<init>","comment":"Constructor.","params":[{"type_long":"ghidra.program.model.address.Address","name":"from","comment":"the start of the selection","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"to","comment":"the end of the selection","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor.\n@param addressFactory the address factory for the address set\n associated with this program selection.\n@param from the start of the selection\n@param to the end of the selection","static":false,"name":"<init>","comment":"Constructor.","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"addressFactory","comment":"the address factory for the address set\n associated with this program selection.","type_short":"AddressFactory"},{"type_long":"ghidra.program.model.address.Address","name":"from","comment":"the start of the selection","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"to","comment":"the end of the selection","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new ProgramSelection\n@param setView address set for the selection","static":false,"name":"<init>","comment":"Construct a new ProgramSelection","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"setView","comment":"address set for the selection","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new ProgramSelection\n@param addressFactory the address factory for the address set\n associated with this program selection.\n@param setView address set for the selection","static":false,"name":"<init>","comment":"Construct a new ProgramSelection","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"addressFactory","comment":"the address factory for the address set\n associated with this program selection.","type_short":"AddressFactory"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"setView","comment":"address set for the selection","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new ProgramSelection from the indicated interior selection.\n@param addressFactory the address factory for the address set\n associated with this program selection.\n@param sel the interior selection","static":false,"name":"<init>","comment":"Construct a new ProgramSelection from the indicated interior selection.","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"addressFactory","comment":"the address factory for the address set\n associated with this program selection.","type_short":"AddressFactory"},{"type_long":"ghidra.program.util.InteriorSelection","name":"sel","comment":"the interior selection","type_short":"InteriorSelection"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new ProgramSelection from the indicated interior selection.\n@param sel the interior selection","static":false,"name":"<init>","comment":"Construct a new ProgramSelection from the indicated interior selection.","params":[{"type_long":"ghidra.program.util.InteriorSelection","name":"sel","comment":"the interior selection","type_short":"InteriorSelection"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the interior selection.\n@return null if there is no interior selection","static":false,"name":"getInteriorSelection","comment":"Get the interior selection.","params":[],"throws":[],"return":{"type_long":"ghidra.program.util.InteriorSelection","comment":"null if there is no interior selection","type_short":"InteriorSelection"}},{"javadoc":"Return whether this ProgramSelection is equal to obj.","static":false,"name":"equals","comment":"Return whether this ProgramSelection is equal to obj.","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Test if the address exists within this set.\n <P>\n@param addr address to test.\n@return true if addr exists in the set, false otherwise.","static":false,"name":"contains","comment":"Test if the address exists within this set.\n ","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"address to test.","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if addr exists in the set, false otherwise.","type_short":"boolean"}},{"javadoc":"Test if the given address range is in the set.\n <P>\n@param start the first address in the range.\n@param end the last address in the range.\n@return true if entire range is contained within the set,\n         false otherwise.","static":false,"name":"contains","comment":"Test if the given address range is in the set.\n ","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the first address in the range.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"the last address in the range.","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if entire range is contained within the set,\n         false otherwise.","type_short":"boolean"}},{"javadoc":"Test if the given address set is a subset of this set.\n <P>\n@param rangeSet the set to test.\n@return true if the entire set is contained within this set,\n         false otherwise.","static":false,"name":"contains","comment":"Test if the given address set is a subset of this set.\n ","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"rangeSet","comment":"the set to test.","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the entire set is contained within this set,\n         false otherwise.","type_short":"boolean"}},{"javadoc":"Determine if this program selection intersects with the specified address set.\n@param addrSet address set to check intersection with.","static":false,"name":"intersects","comment":"Determine if this program selection intersects with the specified address set.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"address set to check intersection with.","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.address.AddressSetView#intersect(ghidra.program.model.address.AddressSetView)","static":false,"name":"intersect","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"view","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"@see ghidra.program.model.address.AddressSetView#intersectRange(ghidra.program.model.address.Address, ghidra.program.model.address.Address)","static":false,"name":"intersectRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"Returns true if this set is empty.","static":false,"name":"isEmpty","comment":"Returns true if this set is empty.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Return the minimum address for this set.","static":false,"name":"getMinAddress","comment":"Return the minimum address for this set.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Return the maximum address for this set.","static":false,"name":"getMaxAddress","comment":"Return the maximum address for this set.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Return the number of address ranges in this set.","static":false,"name":"getNumAddressRanges","comment":"Return the number of address ranges in this set.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns an iterator over the address ranges in this address set.\n@param atStart if true, the iterator is positioned at the minimum address.\n if false, the iterator is positioned at the maximum address.","static":false,"name":"getAddressRanges","comment":"Returns an iterator over the address ranges in this address set.","params":[{"type_long":"boolean","name":"atStart","comment":"if true, the iterator is positioned at the minimum address.\n if false, the iterator is positioned at the maximum address.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRangeIterator","comment":"","type_short":"AddressRangeIterator"}},{"javadoc":"Returns an iterator over the address ranges in this address set.","static":false,"name":"getAddressRanges","comment":"Returns an iterator over the address ranges in this address set.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRangeIterator","comment":"","type_short":"AddressRangeIterator"}},{"javadoc":"","static":false,"name":"iterator","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.address.AddressRange>","comment":"","type_short":"Iterator"}},{"javadoc":"Returns the number of addresses in this set.","static":false,"name":"getNumAddresses","comment":"Returns the number of addresses in this set.","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"@see ghidra.program.model.address.AddressSetView#getAddresses(boolean)","static":false,"name":"getAddresses","comment":"","params":[{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"@see ghidra.program.model.address.AddressSetView#getAddresses(ghidra.program.model.address.Address, boolean)","static":false,"name":"getAddresses","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"Returns true if and only if this set and the given\n address set contains exactly the same addresses.\n@param asv the address set to compare with this one.\n@return true if the specified set has the same addresses.","static":false,"name":"hasSameAddresses","comment":"Returns true if and only if this set and the given\n address set contains exactly the same addresses.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"asv","comment":"the address set to compare with this one.","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the specified set has the same addresses.","type_short":"boolean"}},{"javadoc":"@see AddressSetView#intersects(Address, Address)","static":false,"name":"intersects","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.address.AddressSetView#union(ghidra.program.model.address.AddressSetView)","static":false,"name":"union","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"view","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"@see ghidra.program.model.address.AddressSetView#xor(ghidra.program.model.address.AddressSetView)","static":false,"name":"xor","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"view","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"@see ghidra.program.model.address.AddressSetView#subtract(ghidra.program.model.address.AddressSetView)","static":false,"name":"subtract","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"view","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getAddressRanges","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRangeIterator","comment":"","type_short":"AddressRangeIterator"}},{"javadoc":"","static":false,"name":"getFirstRange","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRange","comment":"","type_short":"AddressRange"}},{"javadoc":"","static":false,"name":"getLastRange","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRange","comment":"","type_short":"AddressRange"}},{"javadoc":"","static":false,"name":"getRangeContaining","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRange","comment":"","type_short":"AddressRange"}},{"javadoc":"","static":false,"name":"iterator","comment":"","params":[{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.address.AddressRange>","comment":"","type_short":"Iterator"}},{"javadoc":"","static":false,"name":"iterator","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.address.AddressRange>","comment":"","type_short":"Iterator"}},{"javadoc":"","static":false,"name":"findFirstAddressInCommon","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}}],"name":"ProgramSelection","comment":"Class to define a selection for a program.","fields":[{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"","static":false,"name":"addressSet","comment":"","type_short":"AddressSet","constant_value":null},{"type_long":"ghidra.program.util.InteriorSelection","javadoc":"","static":false,"name":"interiorSelection","comment":"","type_short":"InteriorSelection","constant_value":null}]}
