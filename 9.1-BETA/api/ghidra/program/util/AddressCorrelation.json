{"implements":[],"javadoc":"Interface representing the address mapping for any means of correlating addresses \n between a source program and a destination program.","static":false,"methods":[{"javadoc":"Returns the AddressRange of a set of addresses in the destination\n program that correlates to corresponding range in the source program.\n@param sourceAddress the source program address\n@return the destination program address range, or null if the source program address maps \n         to one that is \"deleted\" in the destination program","static":false,"name":"getCorrelatedDestinationRange","comment":"Returns the AddressRange of a set of addresses in the destination\n program that correlates to corresponding range in the source program.","params":[{"type_long":"ghidra.program.model.address.Address","name":"sourceAddress","comment":"the source program address","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.model.address.AddressRange","comment":"the destination program address range, or null if the source program address maps \n         to one that is \"deleted\" in the destination program","type_short":"AddressRange"}},{"javadoc":"Returns the name of the correlating algorithm.\n@return the name of the correlating algorithm.","static":false,"name":"getName","comment":"Returns the name of the correlating algorithm.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the name of the correlating algorithm.","type_short":"String"}}],"name":"AddressCorrelation","comment":"Interface representing the address mapping for any means of correlating addresses \n between a source program and a destination program.","fields":[]}
