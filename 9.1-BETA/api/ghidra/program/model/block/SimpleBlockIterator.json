{"implements":["ghidra.program.model.block.CodeBlockIterator"],"javadoc":"<CODE>SimpleBlockIterator<\/CODE> is an implementation of\n <CODE>CodeBlockIterator<\/CODE> capable of iterating in\n the forward direction over \"simple blocks\".\n@see SimpleBlockModel","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a new iterator that will iterate over the entire\n program starting from its current minimum address.\n <P>\n@param model the BlockModel the iterator will use in its operations.\n@param monitor task monitor which allows user to cancel operation.\n@throws CancelledException if the monitor cancels the operation.","static":false,"name":"<init>","comment":"Creates a new iterator that will iterate over the entire\n program starting from its current minimum address.\n ","params":[{"type_long":"ghidra.program.model.block.SimpleBlockModel","name":"model","comment":"the BlockModel the iterator will use in its operations.","type_short":"SimpleBlockModel"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor which allows user to cancel operation.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the monitor cancels the operation.","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new iterator that will iterate over the\n program within a given address range set. All blocks which \n overlap the address set will be returned.\n <P>\n@param model the BlockModel the iterator will use in its operations.\n@param set the address range set which the iterator is to be\n               restricted to.\n@param monitor task monitor which allows user to cancel operation.\n@throws CancelledException if the monitor cancels the operation.","static":false,"name":"<init>","comment":"Creates a new iterator that will iterate over the\n program within a given address range set. All blocks which \n overlap the address set will be returned.\n ","params":[{"type_long":"ghidra.program.model.block.SimpleBlockModel","name":"model","comment":"the BlockModel the iterator will use in its operations.","type_short":"SimpleBlockModel"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"the address range set which the iterator is to be\n               restricted to.","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor which allows user to cancel operation.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the monitor cancels the operation.","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.block.CodeBlockIterator#hasNext()","static":false,"name":"hasNext","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.block.CodeBlockIterator#next()","static":false,"name":"next","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.model.block.CodeBlock","comment":"","type_short":"CodeBlock"}},{"javadoc":"Called for iterators restricted by an address range set,\n it will find the next block and set up nextBlock and\n nextAddr accordingly.\n@throws CancelledException if the monitor cancels the operation.","static":false,"name":"getNextInSet","comment":"Called for iterators restricted by an address range set,\n it will find the next block and set up nextBlock and\n nextAddr accordingly.","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the monitor cancels the operation.","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Find the next Address that starts a valid block","static":false,"name":"getNextAddress","comment":"Find the next Address that starts a valid block","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Finds the first block occurring in the given range.\n@param range the range to look for the block in.\n@return will return null if no code block can be found.\n@throws CancelledException if the monitor cancels the operation.","static":false,"name":"getFirstInRange","comment":"Finds the first block occurring in the given range.","params":[{"type_long":"ghidra.program.model.address.AddressRange","name":"range","comment":"the range to look for the block in.","type_short":"AddressRange"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the monitor cancels the operation.","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.model.block.CodeBlock","comment":"will return null if no code block can be found.","type_short":"CodeBlock"}}],"name":"SimpleBlockIterator","comment":"SimpleBlockIterator is an implementation of\n CodeBlockIterator capable of iterating in\n the forward direction over \"simple blocks\".","fields":[{"type_long":"ghidra.program.model.listing.Listing","javadoc":"","static":false,"name":"listing","comment":"","type_short":"Listing","constant_value":null},{"type_long":"ghidra.program.model.block.CodeBlock","javadoc":"","static":false,"name":"nextBlock","comment":"","type_short":"CodeBlock","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"nextAddr","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSetView","javadoc":"","static":false,"name":"addrSet","comment":"","type_short":"AddressSetView","constant_value":null},{"type_long":"ghidra.program.model.address.AddressRangeIterator","javadoc":"","static":false,"name":"rangeIter","comment":"","type_short":"AddressRangeIterator","constant_value":null},{"type_long":"ghidra.program.model.block.SimpleBlockModel","javadoc":"","static":false,"name":"model","comment":"","type_short":"SimpleBlockModel","constant_value":null},{"type_long":"ghidra.util.task.TaskMonitor","javadoc":"","static":false,"name":"monitor","comment":"","type_short":"TaskMonitor","constant_value":null}]}
