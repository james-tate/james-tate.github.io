{"implements":[],"javadoc":"Object to hold a category path and a datatype name.  They are held separately so that\n the datatype name can contain a categoryPath delimiter (\"\/\") character.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Create DatatypePath\n@param categoryPath the category path for the datatype\n@param dataTypeName the name of the datatype.\n@throws IllegalArgumentException if an invalid category path or dataTypeName is given.","static":false,"name":"<init>","comment":"Create DatatypePath","params":[{"type_long":"java.lang.String","name":"categoryPath","comment":"the category path for the datatype","type_short":"String"},{"type_long":"java.lang.String","name":"dataTypeName","comment":"the name of the datatype.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create DatatypePath\n@param categoryPath the category path for the datatype\n@param dataTypeName the name of the datatype.\n@throws IllegalArgumentException if a null category path or dataTypeName is given.","static":false,"name":"<init>","comment":"Create DatatypePath","params":[{"type_long":"ghidra.program.model.data.CategoryPath","name":"categoryPath","comment":"the category path for the datatype","type_short":"CategoryPath"},{"type_long":"java.lang.String","name":"dataTypeName","comment":"the name of the datatype.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the categoryPath for the datatype represented by this datatype path.\n (ie. the CategoryPath that contains the DataType that this DataTypePath points to).\n@return the parent {@link CategoryPath} of the {@link DataType} that this DataTypePath\n points to.","static":false,"name":"getCategoryPath","comment":"Returns the categoryPath for the datatype represented by this datatype path.\n (ie. the CategoryPath that contains the DataType that this DataTypePath points to).","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.CategoryPath","comment":"the parent CategoryPath of the DataType that this DataTypePath\n points to.","type_short":"CategoryPath"}},{"javadoc":"Determine if the specified otherCategoryPath is an ancestor of this data type\n path (i.e., does this data types category or any of its parent hierarchy correspond\n to the specified categoryPath).\n@param otherCategoryPath category path\n@return true if otherCategoryPath is an ancestor of this data type path, else false","static":false,"name":"isAncestor","comment":"Determine if the specified otherCategoryPath is an ancestor of this data type\n path (i.e., does this data types category or any of its parent hierarchy correspond\n to the specified categoryPath).","params":[{"type_long":"ghidra.program.model.data.CategoryPath","name":"otherCategoryPath","comment":"category path","type_short":"CategoryPath"}],"throws":[],"return":{"type_long":"boolean","comment":"true if otherCategoryPath is an ancestor of this data type path, else false","type_short":"boolean"}},{"javadoc":"Returns the name of the datatype.\n@return the name","static":false,"name":"getDataTypeName","comment":"Returns the name of the datatype.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the name","type_short":"String"}},{"javadoc":"Returns the full path of this datatype.  NOTE: if the datatype name contains any\n \"\/\" characters, then the resulting path string may be ambiguous as to where the\n category path ends and the datatype name begins.\n@return the full path","static":false,"name":"getPath","comment":"Returns the full path of this datatype.  NOTE: if the datatype name contains any\n \"\/\" characters, then the resulting path string may be ambiguous as to where the\n category path ends and the datatype name begins.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the full path","type_short":"String"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"DataTypePath","comment":"Object to hold a category path and a datatype name.  They are held separately so that\n the datatype name can contain a categoryPath delimiter (\"\/\") character.","fields":[{"type_long":"ghidra.program.model.data.CategoryPath","javadoc":"","static":false,"name":"categoryPath","comment":"","type_short":"CategoryPath","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"dataTypeName","comment":"","type_short":"String","constant_value":null}]}
