{"implements":[],"javadoc":"Exception thrown when an attempt is made to add a data type to a category\n and the category has a data type by that name but the types do not\n match.","static":false,"extends":"java.lang.RuntimeException","methods":[{"javadoc":"Construct a new DataTypeConflictException with no message","static":false,"name":"<init>","comment":"Construct a new DataTypeConflictException with no message","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new DataTypeConflictException with the given message\n@param msg the exception message","static":false,"name":"<init>","comment":"Construct a new DataTypeConflictException with the given message","params":[{"type_long":"java.lang.String","name":"msg","comment":"the exception message","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new DataTypeConflictException with the given datatypes.\n The message will indicate there is a conflict between the two data types.\n@param dt1 the first of the two conflicting data types. \n (The new data type.)\n@param dt2 the second of the two conflicting data types. \n (The existing data type.)","static":false,"name":"<init>","comment":"Construct a new DataTypeConflictException with the given datatypes.\n The message will indicate there is a conflict between the two data types.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt1","comment":"the first of the two conflicting data types. \n (The new data type.)","type_short":"DataType"},{"type_long":"ghidra.program.model.data.DataType","name":"dt2","comment":"the second of the two conflicting data types. \n (The existing data type.)","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the conflicting data types in a Data Type array of size 2. \n The first entry is the first data type in conflict. \n The second entry is the second data type in conflict. \n <P>Note: These values can be null. They are only known if this\n object was created using the constructor that has the conflicting\n data types as parameters.\n@return the two conflicting data types or nulls.","static":false,"name":"getConflictingDataTypes","comment":"Returns the conflicting data types in a Data Type array of size 2. \n The first entry is the first data type in conflict. \n The second entry is the second data type in conflict. \n Note: These values can be null. They are only known if this\n object was created using the constructor that has the conflicting\n data types as parameters.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType[]","comment":"the two conflicting data types or nulls.","type_short":"ghidra.program.model.data.DataType[]"}}],"name":"DataTypeConflictException","comment":"Exception thrown when an attempt is made to add a data type to a category\n and the category has a data type by that name but the types do not\n match.","fields":[{"type_long":"ghidra.program.model.data.DataType","javadoc":"","static":false,"name":"datatype1","comment":"","type_short":"DataType","constant_value":null},{"type_long":"ghidra.program.model.data.DataType","javadoc":"","static":false,"name":"datatype2","comment":"","type_short":"DataType","constant_value":null}]}
