{"implements":[],"javadoc":"DataTypeComponents are holders for the dataTypes that make up composite (Structures\n and Unions) dataTypes.\n <p>\n While most all components must have a fixed length greater than 0, structures support an\n optional trailing flexible array component whose length is zero and whose offset equals\n the length of the structure.","static":false,"methods":[{"javadoc":"Returns the dataType in this component.\n <p>\n NOTE: If this component corresponds to a structure flexible array the returned data type\n reflects the base type of the array (e.g., char is returned for a flexible char array).\n@return the dataType in this component","static":false,"name":"getDataType","comment":"Returns the dataType in this component.\n \n NOTE: If this component corresponds to a structure flexible array the returned data type\n reflects the base type of the array (e.g., char is returned for a flexible char array).","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"the dataType in this component","type_short":"DataType"}},{"javadoc":"returns the dataType that contains this component.\n@return the dataType that contains this component.","static":false,"name":"getParent","comment":"returns the dataType that contains this component.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"the dataType that contains this component.","type_short":"DataType"}},{"javadoc":"Determine if this component corresponds to a unsized flexible array which is\n permitted as the trailing component within a structure.\n@return true if component is a trailing flexible array component.","static":false,"name":"isFlexibleArrayComponent","comment":"Determine if this component corresponds to a unsized flexible array which is\n permitted as the trailing component within a structure.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if component is a trailing flexible array component.","type_short":"boolean"}},{"javadoc":"Determine if the specified component corresponds to a bit-field.\n@return true if bit-field else false","static":false,"name":"isBitFieldComponent","comment":"Determine if the specified component corresponds to a bit-field.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if bit-field else false","type_short":"boolean"}},{"javadoc":"Determine if the specified component corresponds to a zero-length bit-field.\n@return true if zer-length bit-field else false","static":false,"name":"isZeroBitFieldComponent","comment":"Determine if the specified component corresponds to a zero-length bit-field.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if zer-length bit-field else false","type_short":"boolean"}},{"javadoc":"Get the ordinal position within the parent dataType.\n <p>\n NOTE: The special case of a structure flexible array component returns an ordinal equal\n to the parent structure's {@link Structure#getNumComponents()} since it is not included\n in the list of normal components (see {@link Structure#getFlexibleArrayComponent()}.\n@return ordinal of this component within the parent data type.","static":false,"name":"getOrdinal","comment":"Get the ordinal position within the parent dataType.\n \n NOTE: The special case of a structure flexible array component returns an ordinal equal\n to the parent structure's Structure#getNumComponents() since it is not included\n in the list of normal components (see Structure#getFlexibleArrayComponent().","params":[],"throws":[],"return":{"type_long":"int","comment":"ordinal of this component within the parent data type.","type_short":"int"}},{"javadoc":"Get the byte offset of where this component begins relative to the start of the parent\n data type.  \n <p>\n NOTE: The special case of a structure flexible array component returns an offset equal\n to the length of the parent structure since the flexible array component is not included\n in a structure's length.\n@return offset of start of component relative to the start of the parent\n data type.","static":false,"name":"getOffset","comment":"Get the byte offset of where this component begins relative to the start of the parent\n data type.  \n \n NOTE: The special case of a structure flexible array component returns an offset equal\n to the length of the parent structure since the flexible array component is not included\n in a structure's length.","params":[],"throws":[],"return":{"type_long":"int","comment":"offset of start of component relative to the start of the parent\n data type.","type_short":"int"}},{"javadoc":"Get the byte offset of where this component ends relative to the start of the parent\n data type.\n <p>\n NOTE: The special case of a structure flexible array component returns -1 since its\n length is undefined.\n@return offset of end of component relative to the start of the parent\n data type.","static":false,"name":"getEndOffset","comment":"Get the byte offset of where this component ends relative to the start of the parent\n data type.\n \n NOTE: The special case of a structure flexible array component returns -1 since its\n length is undefined.","params":[],"throws":[],"return":{"type_long":"int","comment":"offset of end of component relative to the start of the parent\n data type.","type_short":"int"}},{"javadoc":"Get the length of this component.\n <p>\n NOTE: The special case of a structure flexible array component returns 0 since its\n length is undefined.\n@return the length of this component or 0 for a structure flexible array.","static":false,"name":"getLength","comment":"Get the length of this component.\n \n NOTE: The special case of a structure flexible array component returns 0 since its\n length is undefined.","params":[],"throws":[],"return":{"type_long":"int","comment":"the length of this component or 0 for a structure flexible array.","type_short":"int"}},{"javadoc":"Get the comment for this dataTypeComponent.","static":false,"name":"getComment","comment":"Get the comment for this dataTypeComponent.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Gets the default settings for this data type component.\n@return a Settings object that is the set of default values for this dataType component","static":false,"name":"getDefaultSettings","comment":"Gets the default settings for this data type component.","params":[],"throws":[],"return":{"type_long":"ghidra.docking.settings.Settings","comment":"a Settings object that is the set of default values for this dataType component","type_short":"Settings"}},{"javadoc":"Set default settings for this dataType.\n@param settings the new default settings.","static":false,"name":"setDefaultSettings","comment":"Set default settings for this dataType.","params":[{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"the new default settings.","type_short":"Settings"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the comment for the component.\n@param comment this components comment.","static":false,"name":"setComment","comment":"Sets the comment for the component.","params":[{"type_long":"java.lang.String","name":"comment","comment":"this components comment.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the name of the field name as a component of a Data Type.\n@return the name as a component of another Data Type.","static":false,"name":"getFieldName","comment":"Get the name of the field name as a component of a Data Type.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the name as a component of another Data Type.","type_short":"String"}},{"javadoc":"Sets the field name. If the field name is empty it will be set to null,\n which is the default field name. An exception is thrown if one of the\n parent's other components already has the specified field name.\n@param fieldName the new field name for this component.\n@throws DuplicateNameException if another component of the parent has\n the specified field name.","static":false,"name":"setFieldName","comment":"Sets the field name. If the field name is empty it will be set to null,\n which is the default field name. An exception is thrown if one of the\n parent's other components already has the specified field name.","params":[{"type_long":"java.lang.String","name":"fieldName","comment":"the new field name for this component.","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"if another component of the parent has\n the specified field name.","type_short":"DuplicateNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a default Field name.  Used only if a field name is not set.","static":false,"name":"getDefaultFieldName","comment":"Returns a default Field name.  Used only if a field name is not set.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns true if the given dataTypeComponent is equivalent to this dataTypeComponent.\n A dataTypeComponent is \"equivalent\" if the other component has a data type\n that is equivalent to this component's data type. The dataTypeComponents must\n also have the same offset, length, ordinal, field name, and comment.\n@param dtc the dataTypeComponent being tested for equivalence.\n@return true if the given dataTypeComponent is equivalent to this dataTypeComponent.","static":false,"name":"isEquivalent","comment":"Returns true if the given dataTypeComponent is equivalent to this dataTypeComponent.\n A dataTypeComponent is \"equivalent\" if the other component has a data type\n that is equivalent to this component's data type. The dataTypeComponents must\n also have the same offset, length, ordinal, field name, and comment.","params":[{"type_long":"ghidra.program.model.data.DataTypeComponent","name":"dtc","comment":"the dataTypeComponent being tested for equivalence.","type_short":"DataTypeComponent"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the given dataTypeComponent is equivalent to this dataTypeComponent.","type_short":"boolean"}}],"name":"DataTypeComponent","comment":"DataTypeComponents are holders for the dataTypes that make up composite (Structures\n and Unions) dataTypes.\n \n While most all components must have a fixed length greater than 0, structures support an\n optional trailing flexible array component whose length is zero and whose offset equals\n the length of the structure.","fields":[{"type_long":"java.lang.String","javadoc":"The default prefix for the name of a component.","static":true,"name":"DEFAULT_FIELD_NAME_PREFIX","comment":"The default prefix for the name of a component.","type_short":"String","constant_value":"\"field\""}]}
