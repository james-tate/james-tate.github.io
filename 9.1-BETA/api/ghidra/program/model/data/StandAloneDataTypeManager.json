{"implements":[],"javadoc":"Basic implementation of the DataTypeManger interface","static":false,"extends":"ghidra.program.database.data.DataTypeManagerDB","methods":[{"javadoc":"Default constructor for temporary data-type manager.\n@param rootName Name of the root category.","static":false,"name":"<init>","comment":"Default constructor for temporary data-type manager.","params":[{"type_long":"java.lang.String","name":"rootName","comment":"Name of the root category.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor for a data-type manager backed by a packed database file.\n When opening for UPDATE an automatic upgrade will be performed if required.\n@param packedDbfile packed datatype archive file (i.e., *.gdt resource).\n@param openMode open mode CREATE, READ_ONLY or UPDATE (see {@link DBConstants})\n@throws IOException a low-level IO error.  This exception may also be thrown\n when a version error occurs (cause is VersionException).","static":false,"name":"<init>","comment":"Constructor for a data-type manager backed by a packed database file.\n When opening for UPDATE an automatic upgrade will be performed if required.","params":[{"type_long":"generic.jar.ResourceFile","name":"packedDbfile","comment":"packed datatype archive file (i.e., *.gdt resource).","type_short":"ResourceFile"},{"type_long":"int","name":"openMode","comment":"open mode CREATE, READ_ONLY or UPDATE (see DBConstants)","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"a low-level IO error.  This exception may also be thrown\n when a version error occurs (cause is VersionException).","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setName","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"startTransaction","comment":"","params":[{"type_long":"java.lang.String","name":"description","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"flushEvents","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"endTransaction","comment":"","params":[{"type_long":"int","name":"transactionID","comment":"","type_short":"int"},{"type_long":"boolean","name":"commit","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"replaceDataTypeIDs","comment":"","params":[{"type_long":"long","name":"oldID","comment":"","type_short":"long"},{"type_long":"long","name":"newID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"deleteDataTypeIDs","comment":"","params":[{"type_long":"java.util.LinkedList<java.lang.Long>","name":"deletedIds","comment":"","type_short":"LinkedList"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"close","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"finalize","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDomainFileID","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getPath","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getType","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.ArchiveType","comment":"","type_short":"ArchiveType"}}],"name":"StandAloneDataTypeManager","comment":"Basic implementation of the DataTypeManger interface","fields":[{"type_long":"java.lang.String","javadoc":"","static":false,"name":"name","comment":"","type_short":"String","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"transactionCount","comment":"","type_short":"int","constant_value":null},{"type_long":"java.lang.Long","javadoc":"","static":false,"name":"transaction","comment":"","type_short":"Long","constant_value":null}]}
