{"implements":["ghidra.program.model.data.FileArchiveBasedDataTypeManager"],"javadoc":"DataTypeManager for a file. Can import categories from a file, or export\n categories to a packed database.","static":false,"extends":"ghidra.program.model.data.StandAloneDataTypeManager","methods":[{"javadoc":"Construct a new DataTypeFileManager\n@param packedDbfile file to load or create based upon openMode\n@param openMode one of the DBConstants: CREATE, UPDATE, READ_ONLY, UPGRADE\n@throws IOException","static":false,"name":"<init>","comment":"Construct a new DataTypeFileManager","params":[{"type_long":"generic.jar.ResourceFile","name":"packedDbfile","comment":"file to load or create based upon openMode","type_short":"ResourceFile"},{"type_long":"int","name":"openMode","comment":"one of the DBConstants: CREATE, UPDATE, READ_ONLY, UPGRADE","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"validateFilename","comment":"","params":[{"type_long":"generic.jar.ResourceFile","name":"packedDbfile","comment":"","type_short":"ResourceFile"}],"throws":[],"return":{"type_long":"generic.jar.ResourceFile","comment":"","type_short":"ResourceFile"}},{"javadoc":"Create a new data-type file archive\n@param packedDbfile archive file (filename must end with DataTypeFileManager.SUFFIX)\n@return data-type manager backed by specified packedDbFile\n@throws IOException","static":true,"name":"createFileArchive","comment":"Create a new data-type file archive","params":[{"type_long":"java.io.File","name":"packedDbfile","comment":"archive file (filename must end with DataTypeFileManager.SUFFIX)","type_short":"File"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.data.FileDataTypeManager","comment":"data-type manager backed by specified packedDbFile","type_short":"FileDataTypeManager"}},{"javadoc":"Open an existing data-type file archive\n@param packedDbfile archive file (filename must end with DataTypeFileManager.SUFFIX)\n@param openForUpdate if true archive will be open for update\n@return data-type manager backed by specified packedDbFile\n@throws IOException","static":true,"name":"openFileArchive","comment":"Open an existing data-type file archive","params":[{"type_long":"java.io.File","name":"packedDbfile","comment":"archive file (filename must end with DataTypeFileManager.SUFFIX)","type_short":"File"},{"type_long":"boolean","name":"openForUpdate","comment":"if true archive will be open for update","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.data.FileDataTypeManager","comment":"data-type manager backed by specified packedDbFile","type_short":"FileDataTypeManager"}},{"javadoc":"Open an existing data-type file archive\n@param packedDbfile archive file (filename must end with DataTypeFileManager.SUFFIX)\n@param openForUpdate if true archive will be open for update\n@return data-type manager backed by specified packedDbFile\n@throws IOException","static":true,"name":"openFileArchive","comment":"Open an existing data-type file archive","params":[{"type_long":"generic.jar.ResourceFile","name":"packedDbfile","comment":"archive file (filename must end with DataTypeFileManager.SUFFIX)","type_short":"ResourceFile"},{"type_long":"boolean","name":"openForUpdate","comment":"if true archive will be open for update","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.data.FileDataTypeManager","comment":"data-type manager backed by specified packedDbFile","type_short":"FileDataTypeManager"}},{"javadoc":"Saves the data type manager to the given file with a specific databaseId.\n NOTE: This method is intended for use in transforming one archive database to\n match another existing archive database.\n@param outputFilename filename for output\n@param databaseId new databaseId","static":false,"name":"saveAs","comment":"Saves the data type manager to the given file with a specific databaseId.\n NOTE: This method is intended for use in transforming one archive database to\n match another existing archive database.","params":[{"type_long":"java.io.File","name":"saveFile","comment":"","type_short":"File"},{"type_long":"ghidra.util.UniversalID","name":"newUniversalId","comment":"","type_short":"UniversalID"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateFileException","comment":"","type_short":"DuplicateFileException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Saves the data type manager to the given file\n@param outputFilename filename for output","static":false,"name":"saveAs","comment":"Saves the data type manager to the given file","params":[{"type_long":"java.io.File","name":"saveFile","comment":"","type_short":"File"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateFileException","comment":"","type_short":"DuplicateFileException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Save the category to source file.","static":false,"name":"save","comment":"Save the category to source file.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the filename for the current file.\n@return String filename, or null if there is no current file.","static":false,"name":"getFilename","comment":"Get the filename for the current file.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"String filename, or null if there is no current file.","type_short":"String"}},{"javadoc":"Convert the filename for the given file to have the packed database\n file extension.\n@param file file whose name is to be converted\n@return file if the filename already ends in the packed database\n file extension, or a new File object that has the packed database\n file extension","static":true,"name":"convertFilename","comment":"Convert the filename for the given file to have the packed database\n file extension.","params":[{"type_long":"java.io.File","name":"file","comment":"file whose name is to be converted","type_short":"File"}],"throws":[],"return":{"type_long":"java.io.File","comment":"file if the filename already ends in the packed database\n file extension, or a new File object that has the packed database\n file extension","type_short":"File"}},{"javadoc":"","static":false,"name":"updateRootCategoryName","comment":"","params":[{"type_long":"generic.jar.ResourceFile","name":"newFile","comment":"","type_short":"ResourceFile"},{"type_long":"ghidra.program.model.data.Category","name":"root","comment":"","type_short":"Category"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getRootName","comment":"","params":[{"type_long":"java.lang.String","name":"newName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"delete","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"close","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isClosed","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"finalize","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"delete","comment":"","params":[{"type_long":"java.io.File","name":"packedDbfile","comment":"","type_short":"File"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPath","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getType","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.ArchiveType","comment":"","type_short":"ArchiveType"}}],"name":"FileDataTypeManager","comment":"DataTypeManager for a file. Can import categories from a file, or export\n categories to a packed database.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"EXTENSION","comment":"","type_short":"String","constant_value":"\"gdt\""},{"type_long":"java.lang.String","javadoc":"Suffix for an archive file.","static":true,"name":"SUFFIX","comment":"Suffix for an archive file.","type_short":"String","constant_value":"\".gdt\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"OLD_EXTENSION","comment":"","type_short":"String","constant_value":"\"dtf\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"OLD_SUFFIX","comment":"","type_short":"String","constant_value":"\".dtf\""},{"type_long":"generic.jar.ResourceFile","javadoc":"","static":false,"name":"file","comment":"","type_short":"ResourceFile","constant_value":null},{"type_long":"ghidra.framework.store.db.PackedDatabase","javadoc":"","static":false,"name":"packedDB","comment":"","type_short":"PackedDatabase","constant_value":null}]}
