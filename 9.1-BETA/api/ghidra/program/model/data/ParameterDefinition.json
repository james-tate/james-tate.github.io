{"implements":["java.lang.Comparable"],"javadoc":"<code>ParameterDefinition<\/code> specifies a parameter which can be\n used to specify a function definition.","static":false,"methods":[{"javadoc":"Get the parameter ordinal\n@return the ordinal (index) of this parameter within the function signature.","static":false,"name":"getOrdinal","comment":"Get the parameter ordinal","params":[],"throws":[],"return":{"type_long":"int","comment":"the ordinal (index) of this parameter within the function signature.","type_short":"int"}},{"javadoc":"Get the Data Type of this variable\n@return the data type of the variable","static":false,"name":"getDataType","comment":"Get the Data Type of this variable","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"the data type of the variable","type_short":"DataType"}},{"javadoc":"Set the Data Type of this variable.\n@param type dataType the fixed-length datatype of the parameter\n@throws IllegalArgumentException if invalid parameter datatype specified","static":false,"name":"setDataType","comment":"Set the Data Type of this variable.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"dataType the fixed-length datatype of the parameter","type_short":"DataType"}],"throws":[{"type_long":"java.lang.IllegalArgumentException","comment":"if invalid parameter datatype specified","type_short":"IllegalArgumentException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the Name of this variable.\n@return the name of the variable or null if no name has been specified.","static":false,"name":"getName","comment":"Get the Name of this variable.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the name of the variable or null if no name has been specified.","type_short":"String"}},{"javadoc":"Get the length of this variable\n@return the length of the variable","static":false,"name":"getLength","comment":"Get the length of this variable","params":[],"throws":[],"return":{"type_long":"int","comment":"the length of the variable","type_short":"int"}},{"javadoc":"Set the name of this variable.\n@param name the name","static":false,"name":"setName","comment":"Set the name of this variable.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the Comment for this variable\n@return the comment","static":false,"name":"getComment","comment":"Get the Comment for this variable","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the comment","type_short":"String"}},{"javadoc":"Set the comment for this variable\n@param comment the comment","static":false,"name":"setComment","comment":"Set the comment for this variable","params":[{"type_long":"java.lang.String","name":"comment","comment":"the comment","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determine if a variable corresponds to a parameter which is equivalent to \n this parameter definition by both ordinal and datatype.  Name is not considered\n relevant.\n@param variable variable to be compared with this parameter definition.\n@return true if the specified variable represents the same parameter by ordinal\n and dataType.  False will always be returned if specified variable is\n not a {@link Parameter}.","static":false,"name":"isEquivalent","comment":"Determine if a variable corresponds to a parameter which is equivalent to \n this parameter definition by both ordinal and datatype.  Name is not considered\n relevant.","params":[{"type_long":"ghidra.program.model.listing.Variable","name":"variable","comment":"variable to be compared with this parameter definition.","type_short":"Variable"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the specified variable represents the same parameter by ordinal\n and dataType.  False will always be returned if specified variable is\n not a Parameter.","type_short":"boolean"}},{"javadoc":"Determine if parm is equivalent to this parameter definition by both ordinal \n and datatype.  Name is not considered relevant.\n@param parm parameter definition to be compared with this parameter definition.\n@return true if the specified parameter definition represents the same parameter \n by ordinal and dataType.","static":false,"name":"isEquivalent","comment":"Determine if parm is equivalent to this parameter definition by both ordinal \n and datatype.  Name is not considered relevant.","params":[{"type_long":"ghidra.program.model.data.ParameterDefinition","name":"parm","comment":"parameter definition to be compared with this parameter definition.","type_short":"ParameterDefinition"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the specified parameter definition represents the same parameter \n by ordinal and dataType.","type_short":"boolean"}}],"name":"ParameterDefinition","comment":"ParameterDefinition specifies a parameter which can be\n used to specify a function definition.","fields":[]}
