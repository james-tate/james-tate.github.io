{"implements":[],"javadoc":"This is a static utility class used to partition a set of long values into as many\n non-intersecting BitGroups as possible.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"merge","comment":"","params":[{"type_long":"java.util.List<ghidra.program.model.data.BitGroup>","name":"list","comment":"","type_short":"List"},{"type_long":"ghidra.program.model.data.BitGroup","name":"bitGroup","comment":"","type_short":"BitGroup"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Partition the given values into a list of non-intersecting BitGroups.\n@param values the values to be partitioned.\n@return a list of BitGroups with non-intersecting bits.","static":true,"name":"partition","comment":"Partition the given values into a list of non-intersecting BitGroups.","params":[{"type_long":"long[]","name":"values","comment":"the values to be partitioned.","type_short":"long[]"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.data.BitGroup>","comment":"a list of BitGroups with non-intersecting bits.","type_short":"List"}}],"name":"EnumValuePartitioner","comment":"This is a static utility class used to partition a set of long values into as many\n non-intersecting BitGroups as possible.","fields":[]}
