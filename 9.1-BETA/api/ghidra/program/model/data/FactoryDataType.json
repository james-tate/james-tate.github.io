{"implements":["ghidra.program.model.data.BuiltInDataType"],"javadoc":"A DataType class that creates data types dynamically should implement this interface.\n This prevents them being directly referred to by a data instance within the listing\n or within a composite (e.g., added to a composite using the structure editor).\n FactoryDataType's should never be parented (e.g., Pointer, Structure component, Typedef, etc.).","static":false,"methods":[{"javadoc":"Returns the appropriate DataType which corresponds to the specified \n memory location.\n@param buf memory location","static":false,"name":"getDataType","comment":"Returns the appropriate DataType which corresponds to the specified \n memory location.","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"memory location","type_short":"MemBuffer"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}}],"name":"FactoryDataType","comment":"A DataType class that creates data types dynamically should implement this interface.\n This prevents them being directly referred to by a data instance within the listing\n or within a composite (e.g., added to a composite using the structure editor).\n FactoryDataType's should never be parented (e.g., Pointer, Structure component, Typedef, etc.).","fields":[]}
