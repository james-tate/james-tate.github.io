{"implements":["java.lang.Comparable"],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"initialize","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Use this method if you want to grab a reference to a Processor given its\n name, but if it doesn't exist go ahead and create it anyway and return\n the new instance.\n@param name the name of the Processor you're looking for\/going to create\n@return the Processor","static":true,"name":"findOrPossiblyCreateProcessor","comment":"Use this method if you want to grab a reference to a Processor given its\n name, but if it doesn't exist go ahead and create it anyway and return\n the new instance.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the Processor you're looking for\/going to create","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Processor","comment":"the Processor","type_short":"Processor"}},{"javadoc":"Use this method to look up a Processor from a String when you want a ProcessorNotFoundException\n thrown if the Processor isn't found.\n <p>\n <b><u>Warning:<\/u><\/b> Use of this method depends upon languages being loaded.  See\n {@link DefaultLanguageService}.\n@param name the name of the Processor you're looking for\n@return the Processor\n@throws ProcessorNotFoundException if the processor doesn't exist yet","static":true,"name":"toProcessor","comment":"Use this method to look up a Processor from a String when you want a ProcessorNotFoundException\n thrown if the Processor isn't found.\n \n Warning: Use of this method depends upon languages being loaded.  See\n DefaultLanguageService.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the Processor you're looking for","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Processor","comment":"the Processor","type_short":"Processor"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"register","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Processor","comment":"","type_short":"Processor"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"compareTo","comment":"","params":[{"type_long":"ghidra.program.model.lang.Processor","name":"p","comment":"","type_short":"Processor"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"Processor","comment":"","fields":[{"type_long":"java.util.HashMap<java.lang.String,ghidra.program.model.lang.Processor>","javadoc":"","static":true,"name":"instances","comment":"","type_short":"HashMap","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"name","comment":"","type_short":"String","constant_value":null},{"type_long":"ghidra.program.model.lang.Processor.RegisterHook","javadoc":"","static":true,"name":"registerHook","comment":"","type_short":"RegisterHook","constant_value":null}]}
