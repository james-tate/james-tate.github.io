{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addRegister","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"description","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"int","name":"numBytes","comment":"","type_short":"int"},{"type_long":"boolean","name":"bigEndian","comment":"","type_short":"boolean"},{"type_long":"int","name":"typeFlags","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addRegister","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"description","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"int","name":"numBytes","comment":"","type_short":"int"},{"type_long":"int","name":"leastSignificantBit","comment":"","type_short":"int"},{"type_long":"int","name":"bitLength","comment":"","type_short":"int"},{"type_long":"boolean","name":"bigEndian","comment":"","type_short":"boolean"},{"type_long":"int","name":"typeFlags","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addRegister","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the processor context address of the first\n context register added to this builder.\n@return context address","static":false,"name":"getProcessContextAddress","comment":"Returns the processor context address of the first\n context register added to this builder.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"context address","type_short":"Address"}},{"javadoc":"","static":false,"name":"removeRegister","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getRegisterManager","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.RegisterManager","comment":"","type_short":"RegisterManager"}},{"javadoc":"","static":false,"name":"computeRegisters","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register[]","comment":"","type_short":"ghidra.program.model.lang.Register[]"}},{"javadoc":"","static":false,"name":"getChildren","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"parent","comment":"","type_short":"Register"},{"type_long":"java.util.List<ghidra.program.model.lang.Register>","name":"regList","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register[]","comment":"","type_short":"ghidra.program.model.lang.Register[]"}},{"javadoc":"","static":false,"name":"contains","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"parent","comment":"","type_short":"Register"},{"type_long":"ghidra.program.model.lang.Register","name":"child","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns the register with the given name;\n@param name the name of the register to retrieve","static":false,"name":"getRegister","comment":"Returns the register with the given name;","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the register to retrieve","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"","type_short":"Register"}},{"javadoc":"Rename a register.  This allows generic register names declared within the langauge \n specification (*.slaspec) to be renamed for a processor variant specification (*.pspec).\n@param oldName original register name\n@param newName new register name\n@return true if rename was successful, else false","static":false,"name":"renameRegister","comment":"Rename a register.  This allows generic register names declared within the langauge \n specification (*.slaspec) to be renamed for a processor variant specification (*.pspec).","params":[{"type_long":"java.lang.String","name":"oldName","comment":"original register name","type_short":"String"},{"type_long":"java.lang.String","name":"newName","comment":"new register name","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if rename was successful, else false","type_short":"boolean"}},{"javadoc":"Set the group name for the specified register\n@param registerName register name\n@param groupName group name\n@return true if register was found, else false","static":false,"name":"setGroup","comment":"Set the group name for the specified register","params":[{"type_long":"java.lang.String","name":"registerName","comment":"register name","type_short":"String"},{"type_long":"java.lang.String","name":"groupName","comment":"group name","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if register was found, else false","type_short":"boolean"}},{"javadoc":"Set a register flag for the specified register\n@param registerName register name\n@param registerFlag Register defined flag bit(s)\n@return true if register was found, else false","static":false,"name":"setFlag","comment":"Set a register flag for the specified register","params":[{"type_long":"java.lang.String","name":"registerName","comment":"register name","type_short":"String"},{"type_long":"int","name":"registerFlag","comment":"Register defined flag bit(s)","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"true if register was found, else false","type_short":"boolean"}},{"javadoc":"Add a vector lane size to the specified register.\n@param registerName register name\n@param registerFlag Register defined flag bit(s)\n@return true if register was found, else false\n@throws UnsupportedOperationException if register is unable to support the definition of \n lanes.\n@throws IllegalArgumentException if {@code laneSizeInBytes} is invalid","static":false,"name":"addLaneSize","comment":"Add a vector lane size to the specified register.","params":[{"type_long":"java.lang.String","name":"registerName","comment":"register name","type_short":"String"},{"type_long":"int","name":"laneSizeInBytes","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"true if register was found, else false","type_short":"boolean"}}],"name":"RegisterBuilder","comment":"","fields":[{"type_long":"java.util.ArrayList<ghidra.program.model.lang.Register>","javadoc":"","static":false,"name":"registerList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"java.util.HashMap<java.lang.String,ghidra.program.model.lang.Register>","javadoc":"","static":false,"name":"registerMap","comment":"","type_short":"HashMap","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"contextAddress","comment":"","type_short":"Address","constant_value":null}]}
