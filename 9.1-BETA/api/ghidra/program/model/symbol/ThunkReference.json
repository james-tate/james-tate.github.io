{"implements":["ghidra.program.model.symbol.DynamicReference"],"javadoc":"Implementation for a Thunk Function reference.\n These references are dynamic in nature and may not be explicitly added,\n removed or altered.  There presence is inferred by the existence\n of a thunk function.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Thunk reference constructor\n@param thunkAddr thunk function address\n@param thunkedAddr \"thunked\" function address","static":false,"name":"<init>","comment":"Thunk reference constructor","params":[{"type_long":"ghidra.program.model.address.Address","name":"thunkAddr","comment":"thunk function address","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"thunkedAddr","comment":"\"thunked\" function address","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#getFromAddress()","static":false,"name":"getFromAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#getToAddress()","static":false,"name":"getToAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#isPrimary()","static":false,"name":"isPrimary","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#getSymbolID()","static":false,"name":"getSymbolID","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#getReferenceType()","static":false,"name":"getReferenceType","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.RefType","comment":"","type_short":"RefType"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#getOperandIndex()","static":false,"name":"getOperandIndex","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#isMnemonicReference()","static":false,"name":"isMnemonicReference","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#isOperandReference()","static":false,"name":"isOperandReference","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see java.lang.Comparable#compareTo(Object)","static":false,"name":"compareTo","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"","type_short":"Reference"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see java.lang.Object#equals(Object)","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#isExternalReference()","static":false,"name":"isExternalReference","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#isOffsetReference()","static":false,"name":"isOffsetReference","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#isShiftedReference()","static":false,"name":"isShiftedReference","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#isEntryPointReference()","static":false,"name":"isEntryPointReference","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#isMemoryReference()","static":false,"name":"isMemoryReference","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#isRegisterReference()","static":false,"name":"isRegisterReference","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.Reference#isStackReference()","static":false,"name":"isStackReference","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getSource","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.SourceType","comment":"","type_short":"SourceType"}}],"name":"ThunkReference","comment":"Implementation for a Thunk Function reference.\n These references are dynamic in nature and may not be explicitly added,\n removed or altered.  There presence is inferred by the existence\n of a thunk function.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"OPINDEX","comment":"","type_short":"int","constant_value":"-2"},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"fromAddr","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"toAddr","comment":"","type_short":"Address","constant_value":null}]}
