{"implements":[],"javadoc":"Interface to define methods that are called when references are\n added or removed.","static":false,"methods":[{"javadoc":"Notification that the given memory reference has been added.\n@param ref the reference that was added.","static":false,"name":"memReferenceAdded","comment":"Notification that the given memory reference has been added.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"the reference that was added.","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification that the given memory reference has bee removed.\n@param ref the reference that was removed.","static":false,"name":"memReferenceRemoved","comment":"Notification that the given memory reference has bee removed.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"the reference that was removed.","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification that the reference type on the given memory reference\n has changed.\n@param newRef the reference with the new reference type.\n@param oldRef the reference with the old reference type.","static":false,"name":"memReferenceTypeChanged","comment":"Notification that the reference type on the given memory reference\n has changed.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"newRef","comment":"the reference with the new reference type.","type_short":"Reference"},{"type_long":"ghidra.program.model.symbol.Reference","name":"oldRef","comment":"the reference with the old reference type.","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification that the given memory reference has been set as\n the primary reference.\n@param ref the reference that is now primary.","static":false,"name":"memReferencePrimarySet","comment":"Notification that the given memory reference has been set as\n the primary reference.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"the reference that is now primary.","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification that the given memory reference is no longer the primary\n reference.\n@param ref the reference that was primary but now is not.","static":false,"name":"memReferencePrimaryRemoved","comment":"Notification that the given memory reference is no longer the primary\n reference.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"the reference that was primary but now is not.","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification that the given stack reference has been added.\n@param ref the stack reference that was added.","static":false,"name":"stackReferenceAdded","comment":"Notification that the given stack reference has been added.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"the stack reference that was added.","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification tbat the given stack reference has been removed.\n@param ref The stack reference that was removed","static":false,"name":"stackReferenceRemoved","comment":"Notification tbat the given stack reference has been removed.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"The stack reference that was removed","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification that the given external reference has been added.\n@param ref the external reference that was added.","static":false,"name":"externalReferenceAdded","comment":"Notification that the given external reference has been added.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"the external reference that was added.","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification that the given external reference has been removed.\n@param ref the external reference that was removed.","static":false,"name":"externalReferenceRemoved","comment":"Notification that the given external reference has been removed.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"the external reference that was removed.","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification that the external program name in the reference\n has changed.\n@param ref the external reference with its new external name.","static":false,"name":"externalReferenceNameChanged","comment":"Notification that the external program name in the reference\n has changed.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"the external reference with its new external name.","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ReferenceListener","comment":"Interface to define methods that are called when references are\n added or removed.","fields":[]}
