{"implements":[],"javadoc":"A basic block constructed from PcodeOps","static":false,"extends":"ghidra.program.model.pcode.PcodeBlock","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getStart","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getStop","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Is the given address in the range of instructions represented by this basic block\n@param addr is the Address\n@return true if the Address is contained","static":false,"name":"contains","comment":"Is the given address in the range of instructions represented by this basic block","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"is the Address","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the Address is contained","type_short":"boolean"}},{"javadoc":"Insert a new PcodeOp before a specific point in the list of PcodeOps\n@param iter points to the PcodeOp to insert before\n@param op is the new PcodeOp to insert","static":false,"name":"insertBefore","comment":"Insert a new PcodeOp before a specific point in the list of PcodeOps","params":[{"type_long":"java.util.Iterator<ghidra.program.model.pcode.PcodeOp>","name":"iter","comment":"points to the PcodeOp to insert before","type_short":"Iterator"},{"type_long":"ghidra.program.model.pcode.PcodeOp","name":"op","comment":"is the new PcodeOp to insert","type_short":"PcodeOp"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Insert a new PcodeOp after a specific point in the list of PcodeOps\n@param iter points to the PcodeOp to insert after\n@param op is the new PcodeOp to insert","static":false,"name":"insertAfter","comment":"Insert a new PcodeOp after a specific point in the list of PcodeOps","params":[{"type_long":"java.util.Iterator<ghidra.program.model.pcode.PcodeOp>","name":"iter","comment":"points to the PcodeOp to insert after","type_short":"Iterator"},{"type_long":"ghidra.program.model.pcode.PcodeOp","name":"op","comment":"is the new PcodeOp to insert","type_short":"PcodeOp"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Insert a PcodeOp at the end of the block\n@param op is the PcodeOp to insert","static":false,"name":"insertEnd","comment":"Insert a PcodeOp at the end of the block","params":[{"type_long":"ghidra.program.model.pcode.PcodeOp","name":"op","comment":"is the PcodeOp to insert","type_short":"PcodeOp"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove a PcodeOp from the block\n@param op is the PcodeOp to remove","static":false,"name":"remove","comment":"Remove a PcodeOp from the block","params":[{"type_long":"ghidra.program.model.pcode.PcodeOp","name":"op","comment":"is the PcodeOp to remove","type_short":"PcodeOp"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return an iterator over the PcodeOps in this basic block","static":false,"name":"getIterator","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.pcode.PcodeOp>","comment":"an iterator over the PcodeOps in this basic block","type_short":"Iterator"}},{"javadoc":"","static":false,"name":"saveXmlBody","comment":"","params":[{"type_long":"java.io.Writer","name":"writer","comment":"","type_short":"Writer"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"restoreXmlBody","comment":"","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"ghidra.program.model.pcode.BlockMap","name":"resolver","comment":"","type_short":"BlockMap"}],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"","type_short":"PcodeXMLException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"PcodeBlockBasic","comment":"A basic block constructed from PcodeOps","fields":[{"type_long":"ghidra.program.model.pcode.ListLinked<ghidra.program.model.pcode.PcodeOp>","javadoc":"","static":false,"name":"oplist","comment":"","type_short":"ListLinked","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"","static":false,"name":"cover","comment":"","type_short":"AddressSet","constant_value":null}]}
