{"implements":[],"javadoc":"A block (with in edges and out edges) that contains other blocks","static":false,"extends":"ghidra.program.model.pcode.PcodeBlock","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a block to this container. There are (initially) no edges between\n it and any other block in the container.\n@param bl is the new block to add","static":false,"name":"addBlock","comment":"Add a block to this container. There are (initially) no edges between\n it and any other block in the container.","params":[{"type_long":"ghidra.program.model.pcode.PcodeBlock","name":"bl","comment":"is the new block to add","type_short":"PcodeBlock"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Assign a unique index to all blocks in this container. After this call,\n getBlock(i) will return the block that satisfies block.getIndex() == i","static":false,"name":"setIndices","comment":"Assign a unique index to all blocks in this container. After this call,\n getBlock(i) will return the block that satisfies block.getIndex() == i","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return the number of blocks in this container","static":false,"name":"getSize","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"the number of blocks in this container","type_short":"int"}},{"javadoc":"Retrieve the i-th block from this container\n@param i is the index of the block to fetch\n@return ","static":false,"name":"getBlock","comment":"Retrieve the i-th block from this container","params":[{"type_long":"int","name":"i","comment":"is the index of the block to fetch","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeBlock","comment":"","type_short":"PcodeBlock"}},{"javadoc":"Add a directed edge between two blocks in this container\n@param begin is the \"from\" block of the edge\n@param end is the \"to\" block of the edge","static":false,"name":"addEdge","comment":"Add a directed edge between two blocks in this container","params":[{"type_long":"ghidra.program.model.pcode.PcodeBlock","name":"begin","comment":"is the \"from\" block of the edge","type_short":"PcodeBlock"},{"type_long":"ghidra.program.model.pcode.PcodeBlock","name":"end","comment":"is the \"to\" block of the edge","type_short":"PcodeBlock"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Recursively run through this structured BlockGraph finding the BlockCopy leaves.\n Using the BlockCopy altindex, lookup the original BlockCopy in -ingraph- and\n transfer the Object ref and Address into the leaf\n@param ingraph is the original flow graph","static":false,"name":"transferObjectRef","comment":"Recursively run through this structured BlockGraph finding the BlockCopy leaves.\n Using the BlockCopy altindex, lookup the original BlockCopy in -ingraph- and\n transfer the Object ref and Address into the leaf","params":[{"type_long":"ghidra.program.model.pcode.BlockGraph","name":"ingraph","comment":"is the original flow graph","type_short":"BlockGraph"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"saveXmlBody","comment":"","params":[{"type_long":"java.io.Writer","name":"writer","comment":"","type_short":"Writer"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"restoreXmlBody","comment":"","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"ghidra.program.model.pcode.BlockMap","name":"resolver","comment":"","type_short":"BlockMap"}],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"","type_short":"PcodeXMLException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Restore all blocks and edges in this container from an XML stream.\n@param parser is the XML stream parser\n@param factory is the AddressFactory used to construct any Address\n@throws PcodeXMLException if part of the XML description is invalid","static":false,"name":"restoreXml","comment":"Restore all blocks and edges in this container from an XML stream.","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"is the XML stream parser","type_short":"XmlPullParser"},{"type_long":"ghidra.program.model.address.AddressFactory","name":"factory","comment":"is the AddressFactory used to construct any Address","type_short":"AddressFactory"}],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"if part of the XML description is invalid","type_short":"PcodeXMLException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"BlockGraph","comment":"A block (with in edges and out edges) that contains other blocks","fields":[{"type_long":"java.util.ArrayList<ghidra.program.model.pcode.PcodeBlock>","javadoc":"","static":false,"name":"list","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"maxindex","comment":"","type_short":"int","constant_value":null}]}
