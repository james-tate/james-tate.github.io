{"implements":[],"javadoc":"Blocks of PcodeOps","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"typeToName","comment":"","params":[{"type_long":"int","name":"type","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"nameToType","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getType","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@return the first Address covered by this block","static":false,"name":"getStart","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the first Address covered by this block","type_short":"Address"}},{"javadoc":"@return the last Address covered by this block","static":false,"name":"getStop","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the last Address covered by this block","type_short":"Address"}},{"javadoc":"","static":false,"name":"setIndex","comment":"","params":[{"type_long":"int","name":"i","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getIndex","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getParent","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeBlock","comment":"","type_short":"PcodeBlock"}},{"javadoc":"","static":false,"name":"addInEdge","comment":"","params":[{"type_long":"ghidra.program.model.pcode.PcodeBlock","name":"b","comment":"","type_short":"PcodeBlock"},{"type_long":"int","name":"lab","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Restore the next input edge via XML\n@param parser\n@param resolver\n@throws PcodeXMLException","static":false,"name":"restoreNextInEdge","comment":"Restore the next input edge via XML","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"ghidra.program.model.pcode.BlockMap","name":"resolver","comment":"","type_short":"BlockMap"}],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"","type_short":"PcodeXMLException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Restore the next input edge via XML. Resolve block indices via a blockList\n@param parser\n@param blockList allows lookup of PcodeBlock via index\n@throws PcodeXMLException","static":false,"name":"restoreNextInEdge","comment":"Restore the next input edge via XML. Resolve block indices via a blockList","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"java.util.ArrayList<? extends ghidra.program.model.pcode.PcodeBlock>","name":"blockList","comment":"allows lookup of PcodeBlock via index","type_short":"ArrayList"}],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"","type_short":"PcodeXMLException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getIn","comment":"","params":[{"type_long":"int","name":"i","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeBlock","comment":"","type_short":"PcodeBlock"}},{"javadoc":"","static":false,"name":"getOut","comment":"","params":[{"type_long":"int","name":"i","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeBlock","comment":"","type_short":"PcodeBlock"}},{"javadoc":"Get reverse index of the i-th outgoing block. I.e this.getOut(i).getIn(reverse_index) == this\n@param i is the outgoing block to request reverse index from\n@return the reverse index","static":false,"name":"getOutRevIndex","comment":"Get reverse index of the i-th outgoing block. I.e this.getOut(i).getIn(reverse_index) == this","params":[{"type_long":"int","name":"i","comment":"is the outgoing block to request reverse index from","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"the reverse index","type_short":"int"}},{"javadoc":"Get reverse index of the i-th incoming block. I.e. this.getIn(i).getOut(reverse_index) == this\n@param i is the incoming block to request reverse index from\n@return the reverse index","static":false,"name":"getInRevIndex","comment":"Get reverse index of the i-th incoming block. I.e. this.getIn(i).getOut(reverse_index) == this","params":[{"type_long":"int","name":"i","comment":"is the incoming block to request reverse index from","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"the reverse index","type_short":"int"}},{"javadoc":"Assuming paths out of this block depend on a boolean condition\n@return the PcodeBlock coming out of this if the condition is false","static":false,"name":"getFalseOut","comment":"Assuming paths out of this block depend on a boolean condition","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeBlock","comment":"the PcodeBlock coming out of this if the condition is false","type_short":"PcodeBlock"}},{"javadoc":"Assuming paths out of this block depend on a boolean condition\n@return the PcodeBlock coming out of this if the condition is true","static":false,"name":"getTrueOut","comment":"Assuming paths out of this block depend on a boolean condition","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeBlock","comment":"the PcodeBlock coming out of this if the condition is true","type_short":"PcodeBlock"}},{"javadoc":"","static":false,"name":"getInSize","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getOutSize","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"calcDepth","comment":"","params":[{"type_long":"ghidra.program.model.pcode.PcodeBlock","name":"leaf","comment":"","type_short":"PcodeBlock"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getFrontLeaf","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeBlock","comment":"","type_short":"PcodeBlock"}},{"javadoc":"","static":false,"name":"saveXmlHeader","comment":"","params":[{"type_long":"java.lang.StringBuilder","name":"buffer","comment":"","type_short":"StringBuilder"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"restoreXmlHeader","comment":"","params":[{"type_long":"ghidra.xml.XmlElement","name":"el","comment":"","type_short":"XmlElement"}],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"","type_short":"PcodeXMLException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Serialize information about the block to XML,\n other than header and edge info\n@param writer is where to serialize to\n@throws IOException if there is a problem with the stream","static":false,"name":"saveXmlBody","comment":"Serialize information about the block to XML,\n other than header and edge info","params":[{"type_long":"java.io.Writer","name":"writer","comment":"is where to serialize to","type_short":"Writer"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is a problem with the stream","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"saveXmlEdges","comment":"","params":[{"type_long":"java.io.Writer","name":"writer","comment":"","type_short":"Writer"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Restore the any additional information beyond header and edges from XML\n@param parser is the XML parser\n@param resolver is for looking up edge references\n@throws PcodeXMLException for invalid XML descriptions","static":false,"name":"restoreXmlBody","comment":"Restore the any additional information beyond header and edges from XML","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"is the XML parser","type_short":"XmlPullParser"},{"type_long":"ghidra.program.model.pcode.BlockMap","name":"resolver","comment":"is for looking up edge references","type_short":"BlockMap"}],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"for invalid XML descriptions","type_short":"PcodeXMLException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"restoreXmlEdges","comment":"","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"ghidra.program.model.pcode.BlockMap","name":"resolver","comment":"","type_short":"BlockMap"}],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"","type_short":"PcodeXMLException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"saveXml","comment":"","params":[{"type_long":"java.io.Writer","name":"writer","comment":"","type_short":"Writer"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"restoreXml","comment":"","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"ghidra.program.model.pcode.BlockMap","name":"resolver","comment":"","type_short":"BlockMap"}],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"","type_short":"PcodeXMLException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"PcodeBlock","comment":"Blocks of PcodeOps","fields":[{"type_long":"int","javadoc":"","static":false,"name":"index","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"blocktype","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.program.model.pcode.PcodeBlock","javadoc":"","static":false,"name":"parent","comment":"","type_short":"PcodeBlock","constant_value":null},{"type_long":"java.util.ArrayList<ghidra.program.model.pcode.PcodeBlock.BlockEdge>","javadoc":"","static":false,"name":"intothis","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"java.util.ArrayList<ghidra.program.model.pcode.PcodeBlock.BlockEdge>","javadoc":"","static":false,"name":"outofthis","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"PLAIN","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"BASIC","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"GRAPH","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"COPY","comment":"","type_short":"int","constant_value":"3"},{"type_long":"int","javadoc":"","static":true,"name":"GOTO","comment":"","type_short":"int","constant_value":"4"},{"type_long":"int","javadoc":"","static":true,"name":"MULTIGOTO","comment":"","type_short":"int","constant_value":"5"},{"type_long":"int","javadoc":"","static":true,"name":"LIST","comment":"","type_short":"int","constant_value":"6"},{"type_long":"int","javadoc":"","static":true,"name":"CONDITION","comment":"","type_short":"int","constant_value":"7"},{"type_long":"int","javadoc":"","static":true,"name":"PROPERIF","comment":"","type_short":"int","constant_value":"8"},{"type_long":"int","javadoc":"","static":true,"name":"IFELSE","comment":"","type_short":"int","constant_value":"9"},{"type_long":"int","javadoc":"","static":true,"name":"IFGOTO","comment":"","type_short":"int","constant_value":"10"},{"type_long":"int","javadoc":"","static":true,"name":"WHILEDO","comment":"","type_short":"int","constant_value":"11"},{"type_long":"int","javadoc":"","static":true,"name":"DOWHILE","comment":"","type_short":"int","constant_value":"12"},{"type_long":"int","javadoc":"","static":true,"name":"SWITCH","comment":"","type_short":"int","constant_value":"13"},{"type_long":"int","javadoc":"","static":true,"name":"INFLOOP","comment":"","type_short":"int","constant_value":"14"}]}
