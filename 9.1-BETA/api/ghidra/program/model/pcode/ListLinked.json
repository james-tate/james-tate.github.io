{"implements":[],"javadoc":"A better linked list implementation than provided by java.util.\n \n TODO: Looks like the main benefit is a non-failing iterator.  In JDK 1.5\n this may not be needed.  1.5 has better Iterators in the collections classes.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add object to end of the list, any existing iterators remain valid\n@param o -- Object to be added\n@return Iterator to new object","static":false,"name":"add","comment":"Add object to end of the list, any existing iterators remain valid","params":[{"type_long":"T","name":"o","comment":"-- Object to be added","type_short":"T"}],"throws":[],"return":{"type_long":"java.util.Iterator<T>","comment":"Iterator to new object","type_short":"Iterator"}},{"javadoc":"Insert new object AFTER object pointed to by iterator, other Iterators remain valid\n@param itr Iterator to existing object\n@param o New object to add\n@return Iterator to new object","static":false,"name":"insertAfter","comment":"Insert new object AFTER object pointed to by iterator, other Iterators remain valid","params":[{"type_long":"java.util.Iterator<T>","name":"itr","comment":"Iterator to existing object","type_short":"Iterator"},{"type_long":"T","name":"o","comment":"New object to add","type_short":"T"}],"throws":[],"return":{"type_long":"java.util.Iterator<T>","comment":"Iterator to new object","type_short":"Iterator"}},{"javadoc":"Insert new object BEFORE object pointed to by iterator, other Iterators remain valid\n@param itr Iterator to existing object\n@param o New object to add\n@return Iterator to new object","static":false,"name":"insertBefore","comment":"Insert new object BEFORE object pointed to by iterator, other Iterators remain valid","params":[{"type_long":"java.util.Iterator<T>","name":"itr","comment":"Iterator to existing object","type_short":"Iterator"},{"type_long":"T","name":"o","comment":"New object to add","type_short":"T"}],"throws":[],"return":{"type_long":"java.util.Iterator<T>","comment":"Iterator to new object","type_short":"Iterator"}},{"javadoc":"Remove object from list indicated by Iterator, all iterators that point to objects other\n than this one remain valid\n@param itr Iterator to object to be removed","static":false,"name":"remove","comment":"Remove object from list indicated by Iterator, all iterators that point to objects other\n than this one remain valid","params":[{"type_long":"java.util.Iterator<T>","name":"itr","comment":"Iterator to object to be removed","type_short":"Iterator"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return an iterator over this linked list","static":false,"name":"iterator","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<T>","comment":"an iterator over this linked list","type_short":"Iterator"}},{"javadoc":"Get rid of all entries on the linked list.","static":false,"name":"clear","comment":"Get rid of all entries on the linked list.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ListLinked","comment":"A better linked list implementation than provided by java.util.\n \n TODO: Looks like the main benefit is a non-failing iterator.  In JDK 1.5\n this may not be needed.  1.5 has better Iterators in the collections classes.","fields":[{"type_long":"ghidra.program.model.pcode.ListLinked<T>.LinkedNode","javadoc":"","static":false,"name":"terminal","comment":"","type_short":"LinkedNode","constant_value":null}]}
