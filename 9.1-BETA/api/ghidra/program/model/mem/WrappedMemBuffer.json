{"implements":["ghidra.program.model.mem.MemBuffer"],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a wrapped MemBuffer with an adjustable base offset\n@param buf memory buffer\n@param offset base offset for this buffer relative to buf's address\n@throws AddressOutOfBoundsException","static":false,"name":"<init>","comment":"Construct a wrapped MemBuffer with an adjustable base offset","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"memory buffer","type_short":"MemBuffer"},{"type_long":"int","name":"offset","comment":"base offset for this buffer relative to buf's address","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOutOfBoundsException","comment":"","type_short":"AddressOutOfBoundsException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set new base offset relative to the associated MemBuffer's address\n@param offset new base offset of this buffer\n@throws AddressOutOfBoundsException","static":false,"name":"setBaseOffset","comment":"Set new base offset relative to the associated MemBuffer's address","params":[{"type_long":"int","name":"offset","comment":"new base offset of this buffer","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOutOfBoundsException","comment":"","type_short":"AddressOutOfBoundsException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Compute offset into original memBuffer, making sure the offset doesn't wrap\n@param offset the offset relative to the baseOffset.\n@return the offset relative to the original memBuffer.","static":false,"name":"computeOffset","comment":"Compute offset into original memBuffer, making sure the offset doesn't wrap","params":[{"type_long":"int","name":"offset","comment":"the offset relative to the baseOffset.","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"int","comment":"the offset relative to the original memBuffer.","type_short":"int"}},{"javadoc":"","static":false,"name":"getByte","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"byte","comment":"","type_short":"byte"}},{"javadoc":"","static":false,"name":"getBytes","comment":"","params":[{"type_long":"byte[]","name":"b","comment":"","type_short":"byte[]"},{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getInt","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getLong","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getBigInteger","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"boolean","name":"signed","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"java.math.BigInteger","comment":"","type_short":"BigInteger"}},{"javadoc":"","static":false,"name":"getMemory","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.mem.Memory","comment":"","type_short":"Memory"}},{"javadoc":"","static":false,"name":"getShort","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"","static":false,"name":"isBigEndian","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"WrappedMemBuffer","comment":"","fields":[{"type_long":"ghidra.program.model.mem.MemBuffer","javadoc":"","static":false,"name":"memBuffer","comment":"","type_short":"MemBuffer","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"baseOffset","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"address","comment":"","type_short":"Address","constant_value":null}]}
