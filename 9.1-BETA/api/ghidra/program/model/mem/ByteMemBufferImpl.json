{"implements":["ghidra.program.model.mem.MemBuffer"],"javadoc":"Simple byte buffer implementation of the memBuffer.  Since there is no\n actual memory object associated with this object, the getMemory method\n is not implemented and all gets are limited to the bytes supplied during\n construction.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a ByteMemBufferImpl object\n@param addr the address to associate with the bytes\n@param bytes the data that normally would be coming from memory.\n@param isBigEndian true for BigEndian, false for LittleEndian.","static":false,"name":"<init>","comment":"Construct a ByteMemBufferImpl object","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address to associate with the bytes","type_short":"Address"},{"type_long":"byte[]","name":"bytes","comment":"the data that normally would be coming from memory.","type_short":"byte[]"},{"type_long":"boolean","name":"isBigEndian","comment":"true for BigEndian, false for LittleEndian.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Convenience constructor using varargs for specifying byte values.\n@param addr the address to associate with the bytes\n@param isBigEndian true for BigEndian, false for LittleEndian.\n@param byteValues varargs for specifying the individual byte values.  The int argument\n will be truncated to a byte value.","static":false,"name":"<init>","comment":"Convenience constructor using varargs for specifying byte values.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address to associate with the bytes","type_short":"Address"},{"type_long":"boolean","name":"isBigEndian","comment":"true for BigEndian, false for LittleEndian.","type_short":"boolean"},{"type_long":"int[]","name":"byteValues","comment":"varargs for specifying the individual byte values.  The int argument\n will be truncated to a byte value.","type_short":"int[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get number of bytes contained within buffer\n@return byte count","static":false,"name":"getLength","comment":"Get number of bytes contained within buffer","params":[],"throws":[],"return":{"type_long":"int","comment":"byte count","type_short":"int"}},{"javadoc":"","static":false,"name":"getAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getByte","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"byte","comment":"","type_short":"byte"}},{"javadoc":"","static":false,"name":"getMemory","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.mem.Memory","comment":"","type_short":"Memory"}},{"javadoc":"","static":false,"name":"getBytes","comment":"","params":[{"type_long":"byte[]","name":"b","comment":"","type_short":"byte[]"},{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isBigEndian","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getShort","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"","static":false,"name":"getInt","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getLong","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getBigInteger","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"boolean","name":"signed","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"java.math.BigInteger","comment":"","type_short":"BigInteger"}}],"name":"ByteMemBufferImpl","comment":"Simple byte buffer implementation of the memBuffer.  Since there is no\n actual memory object associated with this object, the getMemory method\n is not implemented and all gets are limited to the bytes supplied during\n construction.","fields":[{"type_long":"byte[]","javadoc":"","static":false,"name":"bytes","comment":"","type_short":"byte[]","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"addr","comment":"","type_short":"Address","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isBigEndian","comment":"","type_short":"boolean","constant_value":null}]}
