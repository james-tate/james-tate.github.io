{"implements":[],"javadoc":"Interface for managing a set of PropertyManagers.","static":false,"methods":[{"javadoc":"Creates a new IntPropertyMap with the given name.\n@param propertyName the name for the new property.\n@exception DuplicateNameException thrown if a PropertyMap already\n exists with that name.","static":false,"name":"createIntPropertyMap","comment":"Creates a new IntPropertyMap with the given name.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"the name for the new property.","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.util.IntPropertyMap","comment":"","type_short":"IntPropertyMap"}},{"javadoc":"Creates a new LongPropertyMap with the given name.\n@param propertyName the name for the new property.\n@exception DuplicateNameException thrown if a PropertyMap already\n exists with that name.","static":false,"name":"createLongPropertyMap","comment":"Creates a new LongPropertyMap with the given name.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"the name for the new property.","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.util.LongPropertyMap","comment":"","type_short":"LongPropertyMap"}},{"javadoc":"Creates a new StringPropertyMap with the given name.\n@param propertyName the name for the new property.\n@exception DuplicateNameException thrown if a PropertyMap already\n exists with that name.","static":false,"name":"createStringPropertyMap","comment":"Creates a new StringPropertyMap with the given name.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"the name for the new property.","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.util.StringPropertyMap","comment":"","type_short":"StringPropertyMap"}},{"javadoc":"Creates a new ObjectPropertyMap with the given name.\n@param propertyName the name for the new property.\n@exception DuplicateNameException thrown if a PropertyMap already\n exists with that name.","static":false,"name":"createObjectPropertyMap","comment":"Creates a new ObjectPropertyMap with the given name.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"the name for the new property.","type_short":"String"},{"type_long":"java.lang.Class<? extends ghidra.util.Saveable>","name":"objectClass","comment":"","type_short":"Class"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.util.ObjectPropertyMap","comment":"","type_short":"ObjectPropertyMap"}},{"javadoc":"Creates a new VoidPropertyMap with the given name.\n@param propertyName the name for the new property.\n@exception DuplicateNameException thrown if a PropertyMap already\n exists with that name.","static":false,"name":"createVoidPropertyMap","comment":"Creates a new VoidPropertyMap with the given name.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"the name for the new property.","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.util.VoidPropertyMap","comment":"","type_short":"VoidPropertyMap"}},{"javadoc":"Returns the PropertyMap with the given name or null if no PropertyMap\n exists with that name.\n@param propertyName the name of the property to retrieve.","static":false,"name":"getPropertyMap","comment":"Returns the PropertyMap with the given name or null if no PropertyMap\n exists with that name.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"the name of the property to retrieve.","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.util.PropertyMap","comment":"","type_short":"PropertyMap"}},{"javadoc":"Returns the IntPropertyMap associated with the given name.\n@param propertyName the name of the property to retrieve.\n@throws TypeMismatchException if a propertyMap named propertyName\n exists but is not an IntPropertyMap.","static":false,"name":"getIntPropertyMap","comment":"Returns the IntPropertyMap associated with the given name.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"the name of the property to retrieve.","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.util.IntPropertyMap","comment":"","type_short":"IntPropertyMap"}},{"javadoc":"Returns the LongPropertyMap associated with the given name.\n@param propertyName the name of the property to retrieve.\n@throws TypeMismatchException if a propertyMap named propertyName\n exists but is not an LongPropertyMap.","static":false,"name":"getLongPropertyMap","comment":"Returns the LongPropertyMap associated with the given name.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"the name of the property to retrieve.","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.util.LongPropertyMap","comment":"","type_short":"LongPropertyMap"}},{"javadoc":"Returns the StringPropertyMap associated with the given name.\n@param propertyName the name of the property to retrieve.\n@throws TypeMismatchException if a propertyMap named propertyName\n exists but is not a StringPropertyMap.","static":false,"name":"getStringPropertyMap","comment":"Returns the StringPropertyMap associated with the given name.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"the name of the property to retrieve.","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.util.StringPropertyMap","comment":"","type_short":"StringPropertyMap"}},{"javadoc":"Returns the ObjectPropertyMap associated with the given name.\n@param propertyName the name of the property to retrieve.\n@throws TypeMismatchException if a propertyMap named propertyName\n exists but is not an ObjectPropertyMap.","static":false,"name":"getObjectPropertyMap","comment":"Returns the ObjectPropertyMap associated with the given name.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"the name of the property to retrieve.","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.util.ObjectPropertyMap","comment":"","type_short":"ObjectPropertyMap"}},{"javadoc":"Returns the VoidPropertyMap associated with the given name.\n@param propertyName the name of the property to retrieve.\n@throws TypeMismatchException if a propertyMap named propertyName\n exists but is not a VoidPropertyMap.","static":false,"name":"getVoidPropertyMap","comment":"Returns the VoidPropertyMap associated with the given name.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"the name of the property to retrieve.","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.util.VoidPropertyMap","comment":"","type_short":"VoidPropertyMap"}},{"javadoc":"Removes the PropertyMap with the given name.\n@param propertyName the name of the property to remove.\n@return true if a PropertyMap with that name was found (and removed)","static":false,"name":"removePropertyMap","comment":"Removes the PropertyMap with the given name.","params":[{"type_long":"java.lang.String","name":"propertyName","comment":"the name of the property to remove.","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if a PropertyMap with that name was found (and removed)","type_short":"boolean"}},{"javadoc":"Returns an iterator over the names of all existing PropertyMaps.","static":false,"name":"propertyManagers","comment":"Returns an iterator over the names of all existing PropertyMaps.","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<java.lang.String>","comment":"","type_short":"Iterator"}},{"javadoc":"Removes any property at the given address from all defined \n PropertyMaps.\n@param addr the address at which to remove all property values.","static":false,"name":"removeAll","comment":"Removes any property at the given address from all defined \n PropertyMaps.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address at which to remove all property values.","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes all properties in the given range from all user \n defined PropertyMaps.\n@param startAddr the first address in the range of addresses where \n propertie values are to be removed.\n@param endAddr the last address in the range of addresses where \n propertie values are to be removed.\n@param monitor monitors progress\n@throws CancelledException if the user cancelled the operation.","static":false,"name":"removeAll","comment":"Removes all properties in the given range from all user \n defined PropertyMaps.","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"the first address in the range of addresses where \n propertie values are to be removed.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"endAddr","comment":"the last address in the range of addresses where \n propertie values are to be removed.","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"monitors progress","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancelled the operation.","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"PropertyMapManager","comment":"Interface for managing a set of PropertyManagers.","fields":[]}
