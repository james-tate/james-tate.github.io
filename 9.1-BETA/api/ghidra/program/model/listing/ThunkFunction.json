{"implements":["ghidra.program.model.listing.Function"],"javadoc":"<code>ThunkFunction<\/code> corresponds to a fragment of code which simply passes control\n to a destination function.  All Function behaviors are mapped through to the current\n destination function.","static":false,"methods":[{"javadoc":"Set the destination function which corresponds to this thunk.\n@param function destination function","static":false,"name":"setDestinationFunction","comment":"Set the destination function which corresponds to this thunk.","params":[{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"destination function","type_short":"Function"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the current destination function entry point address.\n A function should exist at the specified address although there is no guarantee.\n If the address is within the EXTERNAL space, this a place-holder for a an external\n library function.\n@return destination function entry point address","static":false,"name":"getDestinationFunctionEntryPoint","comment":"Returns the current destination function entry point address.\n A function should exist at the specified address although there is no guarantee.\n If the address is within the EXTERNAL space, this a place-holder for a an external\n library function.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"destination function entry point address","type_short":"Address"}}],"name":"ThunkFunction","comment":"ThunkFunction corresponds to a fragment of code which simply passes control\n to a destination function.  All Function behaviors are mapped through to the current\n destination function.","fields":[]}
