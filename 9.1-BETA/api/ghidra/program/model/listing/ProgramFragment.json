{"implements":["ghidra.program.model.listing.Group","ghidra.program.model.address.AddressSetView"],"javadoc":"A <CODE>ProgramFragment<\/CODE> is a set of <CODE>CodeUnit<\/CODE>s that have been\n bundled together with some additional information such as a name, comment,\n alias, etc. Every code unit in the program is in one and only one fragment\n so the fragments form a partition of the program. Fragments in turn are the\n building blocks of <CODE>ProgramModule<\/CODE>s. Program fragments and modules \n allow the user to overlay a hierarchical structure upon the program which can then \n be used to control viewing and navigating the program.","static":false,"methods":[{"javadoc":"Returns whether this fragment contains the given code unit.<P>\n@param codeUnit the code unit being tested.\n@return true if the code unit is in the fragment, false otherwise.","static":false,"name":"contains","comment":"Returns whether this fragment contains the given code unit.","params":[{"type_long":"ghidra.program.model.listing.CodeUnit","name":"codeUnit","comment":"the code unit being tested.","type_short":"CodeUnit"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the code unit is in the fragment, false otherwise.","type_short":"boolean"}},{"javadoc":"Returns a forward iterator over the code units making up this fragment.","static":false,"name":"getCodeUnits","comment":"Returns a forward iterator over the code units making up this fragment.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.CodeUnitIterator","comment":"","type_short":"CodeUnitIterator"}},{"javadoc":"Moves all of the code units in a given range into this fragment.\n Note that <CODE>min<\/CODE> must the starting address of a code unit\n and <CODE>max<\/CODE> must be the ending address of a code unit.\n Furthermore every address in the given range must exist in program\n memory.<P>\n@param min min address of range specifying the code units to move\n@param max max address of range specifying the code units to move\n@exception NotFoundException thrown if any address between <CODE>min<\/CODE>\n and <CODE>max<\/CODE> (inclusive) does not belong to program memory.","static":false,"name":"move","comment":"Moves all of the code units in a given range into this fragment.\n Note that min must the starting address of a code unit\n and max must be the ending address of a code unit.\n Furthermore every address in the given range must exist in program\n memory.","params":[{"type_long":"ghidra.program.model.address.Address","name":"min","comment":"min address of range specifying the code units to move","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"max","comment":"max address of range specifying the code units to move","type_short":"Address"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ProgramFragment","comment":"A ProgramFragment is a set of CodeUnits that have been\n bundled together with some additional information such as a name, comment,\n alias, etc. Every code unit in the program is in one and only one fragment\n so the fragments form a partition of the program. Fragments in turn are the\n building blocks of ProgramModules. Program fragments and modules \n allow the user to overlay a hierarchical structure upon the program which can then \n be used to control viewing and navigating the program.","fields":[]}
