{"implements":["java.util.Comparator"],"javadoc":"Compares stack variable offsets; has a static factory method to get\n a StackVariableComparator.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Compares a stack variable offsets. One or both objects must be\n a StackVariable.\n@param obj1 a StackVariable or Integer\n@param obj2 a StackVariable or Integer\n <P>\n@return a negative integer, zero, or a positive integer\n  if the first argument is less than, equal to, or greater than the second.","static":false,"name":"compare","comment":"Compares a stack variable offsets. One or both objects must be\n a StackVariable.","params":[{"type_long":"java.lang.Object","name":"obj1","comment":"a StackVariable or Integer","type_short":"Object"},{"type_long":"java.lang.Object","name":"obj2","comment":"a StackVariable or Integer\n ","type_short":"Object"}],"throws":[],"return":{"type_long":"int","comment":"a negative integer, zero, or a positive integer\n  if the first argument is less than, equal to, or greater than the second.","type_short":"int"}},{"javadoc":"","static":false,"name":"getStackOffset","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.Integer","comment":"","type_short":"Integer"}},{"javadoc":"Returns a shared instance of a StackVariableComparator.","static":true,"name":"get","comment":"Returns a shared instance of a StackVariableComparator.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.StackVariableComparator","comment":"","type_short":"StackVariableComparator"}}],"name":"StackVariableComparator","comment":"Compares stack variable offsets; has a static factory method to get\n a StackVariableComparator.","fields":[{"type_long":"ghidra.program.model.listing.StackVariableComparator","javadoc":"","static":true,"name":"acomp","comment":"","type_short":"StackVariableComparator","constant_value":null}]}
