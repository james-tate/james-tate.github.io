{"implements":[],"javadoc":"ScalarFormat.java\n\n This class exists just to make it easy to hold onto sensible\n groupings and conventions for formatting scalars.  This is\n used by Scalar in the toString(ScalarFormat) and the \n addToStringBuffer(StringBuffer, ScalarFormat) methods.\n@version 1999\/02\/04","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"<p>Create a default ScalarFormat.  (hex, zeropadded, unsigned\n no pre or post strings)<\/p>","static":false,"name":"<init>","comment":"Create a default ScalarFormat.  (hex, zeropadded, unsigned\n no pre or post strings)","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"<p> Create a ScalarFormat with the given values.<\/p>\n@param radix the radix to use (only 2,8,10 and 16 are valid)..\n@param zeroPadded true if value should be 0 padded.\n@param signed true if value should be treated as signed.\n@param pre string to add after optional sign but before value.\n@param post string to add at end of the value.\n@throws IllegalArgumentException if radix is not one of (2,8,10,16).","static":false,"name":"<init>","comment":" Create a ScalarFormat with the given values.","params":[{"type_long":"int","name":"radix","comment":"the radix to use (only 2,8,10 and 16 are valid)..","type_short":"int"},{"type_long":"boolean","name":"zeroPadded","comment":"true if value should be 0 padded.","type_short":"boolean"},{"type_long":"boolean","name":"signed","comment":"true if value should be treated as signed.","type_short":"boolean"},{"type_long":"java.lang.String","name":"pre","comment":"string to add after optional sign but before value.","type_short":"String"},{"type_long":"java.lang.String","name":"post","comment":"string to add at end of the value.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"<p>Returns whether value should be zero padded.<\/p>\n@return whether value should be zero padded.","static":false,"name":"isZeroPadded","comment":"Returns whether value should be zero padded.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"whether value should be zero padded.","type_short":"boolean"}},{"javadoc":"<p>Returns whether value should be treated as signed.<\/p>\n@return whether value should be treated as signed.","static":false,"name":"isSigned","comment":"Returns whether value should be treated as signed.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"whether value should be treated as signed.","type_short":"boolean"}},{"javadoc":"<p>Returns the prefix string.<\/p>\n@return the prefix string.","static":false,"name":"getPre","comment":"Returns the prefix string.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the prefix string.","type_short":"String"}},{"javadoc":"<p>Returns the postfix string.<\/p>\n@return the postfix string.","static":false,"name":"getPost","comment":"Returns the postfix string.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the postfix string.","type_short":"String"}},{"javadoc":"<p>Returns the radix.<\/p>\n@return the radix.","static":false,"name":"getRadix","comment":"Returns the radix.","params":[],"throws":[],"return":{"type_long":"int","comment":"the radix.","type_short":"int"}},{"javadoc":"@see java.lang.Object#toString()","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"ScalarFormat","comment":"ScalarFormat.java\n\n This class exists just to make it easy to hold onto sensible\n groupings and conventions for formatting scalars.  This is\n used by Scalar in the toString(ScalarFormat) and the \n addToStringBuffer(StringBuffer, ScalarFormat) methods.","fields":[{"type_long":"boolean","javadoc":"","static":false,"name":"zeroPadded","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"signed","comment":"","type_short":"boolean","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"pre","comment":"","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"post","comment":"","type_short":"String","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"radix","comment":"","type_short":"int","constant_value":null}]}
