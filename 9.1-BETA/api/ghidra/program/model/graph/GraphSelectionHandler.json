{"implements":[],"javadoc":"Handler for selection\/location event mappings from\/to Ghidra and Renoir.","static":false,"methods":[{"javadoc":"Check if the graph is the active graph window.\n@return true if this handler is active because the window it is handling\n              is active","static":false,"name":"isActive","comment":"Check if the graph is the active graph window.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this handler is active because the window it is handling\n              is active","type_short":"boolean"}},{"javadoc":"Set the handler to active\/inactive based on whether the window it is\n handling is active or inactive.\n@param active true to activate the graph (may pop the graph window to the top)","static":false,"name":"setActive","comment":"Set the handler to active\/inactive based on whether the window it is\n handling is active or inactive.","params":[{"type_long":"boolean","name":"active","comment":"true to activate the graph (may pop the graph window to the top)","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Check if the graph is enabled to receive\/send events.\n@return true if this handler is enabled.","static":false,"name":"isEnabled","comment":"Check if the graph is enabled to receive\/send events.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this handler is enabled.","type_short":"boolean"}},{"javadoc":"Set the handler to enabled\/disabled.  This sets an enabled flag on\n this instance and has no affect on the other methods.\n@param enabled true to enable mapping selection\/location events","static":false,"name":"setEnabled","comment":"Set the handler to enabled\/disabled.  This sets an enabled flag on\n this instance and has no affect on the other methods.","params":[{"type_long":"boolean","name":"enabled","comment":"true to enable mapping selection\/location events","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Translate a Renoir Selection into a Ghidra selection.\n@param renoirSelections selection identifiers for selection within Renoir graph\n                        The Strings are the keys used for the graph vertex\n                        when generating the graph.","static":false,"name":"select","comment":"Translate a Renoir Selection into a Ghidra selection.","params":[{"type_long":"java.lang.String[]","name":"renoirSelections","comment":"selection identifiers for selection within Renoir graph\n                        The Strings are the keys used for the graph vertex\n                        when generating the graph.","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Translate a Renoir Location into a Ghidra location.\n@param renoirLocation string representing the location in renoir","static":false,"name":"locate","comment":"Translate a Renoir Location into a Ghidra location.","params":[{"type_long":"java.lang.String","name":"renoirLocation","comment":"string representing the location in renoir","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Translate a Ghidra selection into a renoir selection.\n@param ghidraSelection ghidra selection object\n@return set of strings that correspond to a Renoir selection\n          The strings should be the key strings used when generating the graph.","static":false,"name":"select","comment":"Translate a Ghidra selection into a renoir selection.","params":[{"type_long":"java.lang.Object","name":"ghidraSelection","comment":"ghidra selection object","type_short":"Object"}],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"set of strings that correspond to a Renoir selection\n          The strings should be the key strings used when generating the graph.","type_short":"java.lang.String[]"}},{"javadoc":"Translate a Ghidra location into a renoir location.\n@param ghidraLocation the location object to translate into a graph key string\n@return string representation of the location for Renoir.  This should be the\n                  key of the graph vertex that represents the ghidraLocation object\n                  on the graph.","static":false,"name":"locate","comment":"Translate a Ghidra location into a renoir location.","params":[{"type_long":"java.lang.Object","name":"ghidraLocation","comment":"the location object to translate into a graph key string","type_short":"Object"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"string representation of the location for Renoir.  This should be the\n                  key of the graph vertex that represents the ghidraLocation object\n                  on the graph.","type_short":"String"}},{"javadoc":"Handle Renoir notification.\n@param notificationType command from Renoir\n@return true if notification was handled and there is no need for any other \n handler to be notified.","static":false,"name":"notify","comment":"Handle Renoir notification.","params":[{"type_long":"java.lang.String","name":"notificationType","comment":"command from Renoir","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if notification was handled and there is no need for any other \n handler to be notified.","type_short":"boolean"}},{"javadoc":"Get brief text describing the type of graph.\n@return String describing the graph.","static":false,"name":"getGraphType","comment":"Get brief text describing the type of graph.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"String describing the graph.","type_short":"String"}}],"name":"GraphSelectionHandler","comment":"Handler for selection\/location event mappings from\/to Ghidra and Renoir.","fields":[]}
