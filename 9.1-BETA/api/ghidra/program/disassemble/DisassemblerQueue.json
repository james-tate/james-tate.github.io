{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor","static":false,"name":"<init>","comment":"Constructor","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"restrictedAddressSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determine if additional InstructionSets may be produced.  If true is returned,\n this queue will be ready to produce InstructionSet blocks.\n@param monitor cancellable task monitor\n@return true if additional InstructionSets may be produced","static":false,"name":"continueProducingInstructionSets","comment":"Determine if additional InstructionSets may be produced.  If true is returned,\n this queue will be ready to produce InstructionSet blocks.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"cancellable task monitor","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"true if additional InstructionSets may be produced","type_short":"boolean"}},{"javadoc":"Return next block to disassemble for the current InstructionSet.\n@param fallThruAddr specifies the next instruction to be disassembled if the \n previous instruction had a fall-through.  If specified, the previous block \n will be return.  If null, the next block to be disassembled will be returned.\n@param memory needed for normalization of SegementedAddresses (may be null).\n@param monitor cancellable task monitor\n@return next block to be disassembled or null if no more queued flows to process\n for current InstructionSet, or remaining flows fall outside restricted address set,\n monitor has cancelled disassembly.","static":false,"name":"getNextBlockToBeDisassembled","comment":"Return next block to disassemble for the current InstructionSet.","params":[{"type_long":"ghidra.program.model.address.Address","name":"fallThruAddr","comment":"specifies the next instruction to be disassembled if the \n previous instruction had a fall-through.  If specified, the previous block \n will be return.  If null, the next block to be disassembled will be returned.","type_short":"Address"},{"type_long":"ghidra.program.model.mem.Memory","name":"memory","comment":"needed for normalization of SegementedAddresses (may be null).","type_short":"Memory"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"cancellable task monitor","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.InstructionBlock","comment":"next block to be disassembled or null if no more queued flows to process\n for current InstructionSet, or remaining flows fall outside restricted address set,\n monitor has cancelled disassembly.","type_short":"InstructionBlock"}},{"javadoc":"@param instructionSet\n@return number of instructions added to program","static":false,"name":"instructionSetAddedToProgram","comment":"","params":[{"type_long":"ghidra.program.model.lang.InstructionSet","name":"instructionSet","comment":"","type_short":"InstructionSet"},{"type_long":"ghidra.program.disassemble.DisassemblerConflictHandler","name":"conflictHandler","comment":"","type_short":"DisassemblerConflictHandler"}],"throws":[],"return":{"type_long":"int","comment":"number of instructions added to program","type_short":"int"}},{"javadoc":"","static":false,"name":"getDisassemblyAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getDisassemblyFlowFromAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Queue priority delay-slot disassembly for current block.\n Fallthrough must be handled immediately with next InstructionSet\n to ensure that it remains the start of an InstructionBlock contained \n within current InstructionSet.\n Caller is responsible for adding flow to current block.\n@param flow instruction flow","static":false,"name":"queueDelaySlotFallthrough","comment":"Queue priority delay-slot disassembly for current block.\n Fallthrough must be handled immediately with next InstructionSet\n to ensure that it remains the start of an InstructionBlock contained \n within current InstructionSet.\n Caller is responsible for adding flow to current block.","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"delaySlotInstruction","comment":"","type_short":"Instruction"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Queue specified flow for processing within current InstructionSet.\n Caller is responsible for adding flow to current block.\n@param flow instruction flow","static":false,"name":"queueCurrentFlow","comment":"Queue specified flow for processing within current InstructionSet.\n Caller is responsible for adding flow to current block.","params":[{"type_long":"ghidra.program.model.lang.InstructionBlockFlow","name":"flow","comment":"instruction flow","type_short":"InstructionBlockFlow"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"checkMemoryRestriction","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"normalize","comment":"","params":[{"type_long":"ghidra.program.model.address.SegmentedAddress","name":"addr","comment":"","type_short":"SegmentedAddress"},{"type_long":"ghidra.program.model.mem.Memory","name":"memory","comment":"","type_short":"Memory"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}}],"name":"DisassemblerQueue","comment":"","fields":[{"type_long":"java.util.TreeSet<ghidra.program.model.lang.InstructionBlockFlow>","javadoc":"","static":false,"name":"orderedSeedQueue","comment":"","type_short":"TreeSet","constant_value":null},{"type_long":"java.util.TreeSet<ghidra.program.model.lang.InstructionBlockFlow>","javadoc":"","static":false,"name":"priorityQueue","comment":"","type_short":"TreeSet","constant_value":null},{"type_long":"java.util.TreeSet<ghidra.program.model.lang.InstructionBlockFlow>","javadoc":"","static":false,"name":"currentBranchQueue","comment":"","type_short":"TreeSet","constant_value":null},{"type_long":"java.util.HashSet<ghidra.program.model.lang.InstructionBlockFlow>","javadoc":"","static":false,"name":"processedBranchFlows","comment":"","type_short":"HashSet","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSetView","javadoc":"","static":false,"name":"restrictedAddressSet","comment":"","type_short":"AddressSetView","constant_value":null},{"type_long":"ghidra.program.model.lang.InstructionBlock","javadoc":"","static":false,"name":"lastBlock","comment":"","type_short":"InstructionBlock","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"lastBlockAddr","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"lastFlowFrom","comment":"","type_short":"Address","constant_value":null},{"type_long":"java.util.Comparator<ghidra.program.model.lang.InstructionBlockFlow>","javadoc":"","static":true,"name":"ORDERED_FLOW_COMPARATOR","comment":"","type_short":"Comparator","constant_value":null}]}
