{"implements":[],"javadoc":"A type of {@link FSRL} that is specific to the filesystem's identity.\n\n A FSRL's parent is always a FSRLRoot.\n <p>\n A FSRLRoot's parent is always a FSRL (ie. the container the filesystem data is in), or null.\n <p>\n Examples of relationship between FSRL and FSRLRoots:\n <p>\n <ul>\n \t<li>FSRLRoot [ file:\/\/ ]<br>\n\t  \"file:\/\/\"\n \t<li>FSRLRoot [ file:\/\/ ]  <---- FSRL [ \/filename.txt ]<br>\n \t  \"file:\/\/\/filename.txt\"\n  <li>FSRLRoot [ file:\/\/ ]  <---- FSRL [ \/filename.txt ] <--- FSRLRoot [ subfs:\/\/ ]<br>\n    \"file:\/\/\/filename.txt|subfs:\/\/\"","static":false,"extends":"ghidra.formats.gfilesystem.FSRL","methods":[{"javadoc":"Creates a {@link FSRLRoot} without a parent container, using the supplied\n {@code protocol} string as its type.\n@param protocol string protocol name\n@return new {@link FSRLRoot} instance.","static":true,"name":"makeRoot","comment":"Creates a FSRLRoot without a parent container, using the supplied\n  string as its type.","params":[{"type_long":"java.lang.String","name":"protocol","comment":"string protocol name","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.FSRLRoot","comment":"new FSRLRoot instance.","type_short":"FSRLRoot"}},{"javadoc":"Creates a {@link FSRLRoot} as a child of a container {@link FSRL}, using the supplied\n {@code protocol} string as its type.\n@param containerFile {@link FSRL} of the container that contains this nested filesystem.\n@param fstype the filesystem type.\n@return new {@link FSRLRoot} instance with a parent pointing to the specified containerFile.","static":true,"name":"nestedFS","comment":"Creates a FSRLRoot as a child of a container FSRL, using the supplied\n  string as its type.","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"containerFile","comment":"FSRL of the container that contains this nested filesystem.","type_short":"FSRL"},{"type_long":"java.lang.String","name":"fstype","comment":"the filesystem type.","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.FSRLRoot","comment":"new FSRLRoot instance with a parent pointing to the specified containerFile.","type_short":"FSRLRoot"}},{"javadoc":"Create a copy of {@code copyFSRL}, but using a different {@code containerFile} parent.\n <p>\n (ie. re-parents copyFSRL so its parent is containerFile)\n@param containerFile {@link FSRL} of new parent\n@param copyFSRL {@link FSRLRoot} that will be copied and re-parented.\n@return new {@link FSRLRoot}","static":true,"name":"nestedFS","comment":"Create a copy of , but using a different  parent.\n \n (ie. re-parents copyFSRL so its parent is containerFile)","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"containerFile","comment":"FSRL of new parent","type_short":"FSRL"},{"type_long":"ghidra.formats.gfilesystem.FSRLRoot","name":"copyFSRL","comment":"FSRLRoot that will be copied and re-parented.","type_short":"FSRLRoot"}],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.FSRLRoot","comment":"new FSRLRoot","type_short":"FSRLRoot"}},{"javadoc":"Private constructor used by static factory methods.\n <p>\n@param parent {@link FSRL} parent\n@param protocol string filesystem type.","static":false,"name":"<init>","comment":"Private constructor used by static factory methods.\n ","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"parent","comment":"FSRL parent","type_short":"FSRL"},{"type_long":"java.lang.String","name":"protocol","comment":"string filesystem type.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFS","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.FSRLRoot","comment":"","type_short":"FSRLRoot"}},{"javadoc":"Returns the \"protocol\" portion of this FSRLRoot, for example, in a FSRLRoot of\n \"file:\/\/\", this method would return \"file\".\n <p>\n@return string protocol \/ filesystem type.","static":false,"name":"getProtocol","comment":"Returns the \"protocol\" portion of this FSRLRoot, for example, in a FSRLRoot of\n \"file:\/\/\", this method would return \"file\".\n ","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"string protocol \/ filesystem type.","type_short":"String"}},{"javadoc":"Returns the parent containerfile FSRL, or null if this FSRLRoot specifies\n a root-level filesystem.\n <p>\n@return {@link FSRL} of the container object that this filesystem is nested under.","static":false,"name":"getContainer","comment":"Returns the parent containerfile FSRL, or null if this FSRLRoot specifies\n a root-level filesystem.\n ","params":[],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.FSRL","comment":"FSRL of the container object that this filesystem is nested under.","type_short":"FSRL"}},{"javadoc":"Returns true if there is a parent containerfile, or false if this FSRLRoot specifies\n a root-level filesystem.\n@return boolean true if this {@link FSRLRoot} has a parent container, or false if not.","static":false,"name":"hasContainer","comment":"Returns true if there is a parent containerfile, or false if this FSRLRoot specifies\n a root-level filesystem.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if this FSRLRoot has a parent container, or false if not.","type_short":"boolean"}},{"javadoc":"Always returns null for a FSRLRoot.\n@return null because this is a {@link FSRLRoot} instance which never has paths.","static":false,"name":"getPath","comment":"Always returns null for a FSRLRoot.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"null because this is a FSRLRoot instance which never has paths.","type_short":"String"}},{"javadoc":"Always returns null for a FSRLRoot.\n@return null because this is a {@link FSRLRoot} instance which never has a path and\n therefore doesn't have a name part of a path.","static":false,"name":"getName","comment":"Always returns null for a FSRLRoot.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"null because this is a FSRLRoot instance which never has a path and\n therefore doesn't have a name part of a path.","type_short":"String"}},{"javadoc":"Creates a new {@link FSRL} as a child of this {@link FSRLRoot}, using the supplied\n path and MD5 values.\n <p>\n@param newPath string path and filename of the object inside this filesystem, should\n not be null.\n@param newMD5 string md5 of the object inside this filesystem, null ok.\n@return new {@link FSRL} instance which is a child of this {@link FSRLRoot}.","static":false,"name":"withPathMD5","comment":"Creates a new FSRL as a child of this FSRLRoot, using the supplied\n path and MD5 values.\n ","params":[{"type_long":"java.lang.String","name":"newPath","comment":"string path and filename of the object inside this filesystem, should\n not be null.","type_short":"String"},{"type_long":"java.lang.String","name":"newMD5","comment":"string md5 of the object inside this filesystem, null ok.","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.FSRL","comment":"new FSRL instance which is a child of this FSRLRoot.","type_short":"FSRL"}},{"javadoc":"","static":false,"name":"appendToStringBuilder","comment":"","params":[{"type_long":"java.lang.StringBuilder","name":"sb","comment":"","type_short":"StringBuilder"},{"type_long":"boolean","name":"recurse","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"includeParams","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"includeFSRoot","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"FSRLRoot","comment":"A type of FSRL that is specific to the filesystem's identity.\n\n A FSRL's parent is always a FSRLRoot.\n \n A FSRLRoot's parent is always a FSRL (ie. the container the filesystem data is in), or null.\n \n Examples of relationship between FSRL and FSRLRoots:\n \n \n \tFSRLRoot [ file:\/\/ ]\n\t  \"file:\/\/\"\n \tFSRLRoot [ file:\/\/ ]  ---- FSRL [ \/filename.txt ]\n \t  \"file:\/\/\/filename.txt\"\n  FSRLRoot [ file:\/\/ ]  ---- FSRL [ \/filename.txt ] --- FSRLRoot [ subfs:\/\/ ]\n    \"file:\/\/\/filename.txt|subfs:\/\/\"","fields":[{"type_long":"int","javadoc":"Cached hashcode.  There should be relatively few instances of FSRLRoot objects in\n memory (1 per active filesystem) so this has little memory impact.","static":false,"name":"hashCode","comment":"Cached hashcode.  There should be relatively few instances of FSRLRoot objects in\n memory (1 per active filesystem) so this has little memory impact.","type_short":"int","constant_value":null}]}
