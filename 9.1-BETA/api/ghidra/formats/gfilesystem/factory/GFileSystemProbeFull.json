{"implements":["ghidra.formats.gfilesystem.factory.GFileSystemProbe"],"javadoc":"A {@link GFileSystemProbe} interface for filesystems that need all available\n references to the source file, including a {@link ByteProvider}.","static":false,"methods":[{"javadoc":"Probes the specified {@code containerFile} to determine if this filesystem implementation\n can handle the file.\n@param containerFSRL the {@link FSRL} of the file being probed\n@param byteProvider a {@link ByteProvider} containing the contents of the file being probed. \n Implementors of this method should <b>NOT<\/b> {@link ByteProvider#close() close()} this\n object.\n@param containerFile the {@link File} (probably in the filecache with non-useful filename)\n being probed.\n@param fsService a reference to the {@link FileSystemService} object\n@param monitor a {@link TaskMonitor} that should be polled to see if the user has\n requested to cancel the operation, and updated with progress information.\n@return {@code true} if the specified file is handled by this filesystem implementation, \n {@code false} if not.\n@throws IOException if there is an error reading files.\n@throws CancelledException if the user cancels","static":false,"name":"probe","comment":"Probes the specified  to determine if this filesystem implementation\n can handle the file.","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"containerFSRL","comment":"the FSRL of the file being probed","type_short":"FSRL"},{"type_long":"ghidra.app.util.bin.ByteProvider","name":"byteProvider","comment":"a ByteProvider containing the contents of the file being probed. \n Implementors of this method should NOT ByteProvider#close() this\n object.","type_short":"ByteProvider"},{"type_long":"java.io.File","name":"containerFile","comment":"the File (probably in the filecache with non-useful filename)\n being probed.","type_short":"File"},{"type_long":"ghidra.formats.gfilesystem.FileSystemService","name":"fsService","comment":"a reference to the FileSystemService object","type_short":"FileSystemService"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"a TaskMonitor that should be polled to see if the user has\n requested to cancel the operation, and updated with progress information.","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is an error reading files.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancels","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":" if the specified file is handled by this filesystem implementation, \n  if not.","type_short":"boolean"}}],"name":"GFileSystemProbeFull","comment":"A GFileSystemProbe interface for filesystems that need all available\n references to the source file, including a ByteProvider.","fields":[]}
