{"implements":[],"javadoc":"A helper class used by GFilesystem implementors that have a single file to handle lookups\n and requests for that file.\n <p>\n This class is patterned on FileSystemIndexHelper and has pretty much the same api.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a new instance.\n\n A \"root\" directory GFile will be auto-created for the filesystem.\n <p>\n@param fs the {@link GFileSystem} that this index will be for.\n@param fsFSRL the {@link FSRLRoot fsrl} of the filesystem itself.\n (this parameter is explicitly passed here so there is no possibility of trying to call\n back to the fs's {@link GFileSystem#getFSRL()} on a half-constructed filesystem.)\n@param payloadFilename name of the single file that this filesystem holds.\n@param length length of the payload file.\n@param payloadMD5 md5 of the payload file.","static":false,"name":"<init>","comment":"Creates a new instance.\n\n A \"root\" directory GFile will be auto-created for the filesystem.\n ","params":[{"type_long":"ghidra.formats.gfilesystem.GFileSystem","name":"fs","comment":"the GFileSystem that this index will be for.","type_short":"GFileSystem"},{"type_long":"ghidra.formats.gfilesystem.FSRLRoot","name":"fsFSRL","comment":"the FSRLRoot of the filesystem itself.\n (this parameter is explicitly passed here so there is no possibility of trying to call\n back to the fs's GFileSystem#getFSRL() on a half-constructed filesystem.)","type_short":"FSRLRoot"},{"type_long":"java.lang.String","name":"payloadFilename","comment":"name of the single file that this filesystem holds.","type_short":"String"},{"type_long":"long","name":"length","comment":"length of the payload file.","type_short":"long"},{"type_long":"java.lang.String","name":"payloadMD5","comment":"md5 of the payload file.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clears the data held by this object.","static":false,"name":"clear","comment":"Clears the data held by this object.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if this object has been {@link #clear()}'ed.\n@return boolean true if data has been cleared.","static":false,"name":"isClosed","comment":"Returns true if this object has been #clear()'ed.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if data has been cleared.","type_short":"boolean"}},{"javadoc":"Gets the 'payload' file, ie. the main file of this filesystem.\n@return {@link GFile} payload file.","static":false,"name":"getPayloadFile","comment":"Gets the 'payload' file, ie. the main file of this filesystem.","params":[],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.GFile","comment":"GFile payload file.","type_short":"GFile"}},{"javadoc":"Gets the root dir's FSRL.\n@return {@link FSRL} of the root dir.","static":false,"name":"getRootDirFSRL","comment":"Gets the root dir's FSRL.","params":[],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.FSRL","comment":"FSRL of the root dir.","type_short":"FSRL"}},{"javadoc":"Gets the root {@link GFile} object for this filesystem index.\n@return root {@link GFile} object.","static":false,"name":"getRootDir","comment":"Gets the root GFile object for this filesystem index.","params":[],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.GFile","comment":"root GFile object.","type_short":"GFile"}},{"javadoc":"Number of files in this index.\n@return number of file in this index.","static":false,"name":"getFileCount","comment":"Number of files in this index.","params":[],"throws":[],"return":{"type_long":"int","comment":"number of file in this index.","type_short":"int"}},{"javadoc":"Mirror's {@link GFileSystem#getListing(GFile)} interface.\n@param directory {@link GFile} directory to get the list of child files that have been\n added to this index, null means root directory.\n@return {@link List} of GFile files that are in the specified directory, never null.\n@throws IOException if already closed.","static":false,"name":"getListing","comment":"Mirror's GFileSystem#getListing(GFile) interface.","params":[{"type_long":"ghidra.formats.gfilesystem.GFile","name":"directory","comment":"GFile directory to get the list of child files that have been\n added to this index, null means root directory.","type_short":"GFile"}],"throws":[{"type_long":"java.io.IOException","comment":"if already closed.","type_short":"IOException"}],"return":{"type_long":"java.util.List<ghidra.formats.gfilesystem.GFile>","comment":"List of GFile files that are in the specified directory, never null.","type_short":"List"}},{"javadoc":"Mirror's {@link GFileSystem#lookup(String)} interface.\n@param path path and filename of a file to find (either \"\/\" for root or the payload file's\n path).\n@return {@link GFile} instance or null if requested path is not the same as\n the payload file.","static":false,"name":"lookup","comment":"Mirror's GFileSystem#lookup(String) interface.","params":[{"type_long":"java.lang.String","name":"path","comment":"path and filename of a file to find (either \"\/\" for root or the payload file's\n path).","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.GFile","comment":"GFile instance or null if requested path is not the same as\n the payload file.","type_short":"GFile"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"SingleFileSystemIndexHelper","comment":"A helper class used by GFilesystem implementors that have a single file to handle lookups\n and requests for that file.\n \n This class is patterned on FileSystemIndexHelper and has pretty much the same api.","fields":[{"type_long":"ghidra.formats.gfilesystem.GFile","javadoc":"","static":false,"name":"rootDir","comment":"","type_short":"GFile","constant_value":null},{"type_long":"ghidra.formats.gfilesystem.GFileImpl","javadoc":"","static":false,"name":"payloadFile","comment":"","type_short":"GFileImpl","constant_value":null}]}
