{"implements":["ghidra.app.merge.MergeProgressModifier"],"javadoc":"An interface to allow merging of domain objects.","static":false,"methods":[{"javadoc":"Merge domain objects and resolve any conflicts.\n@return true if the merge process completed successfully\n@throws CancelledException if the user canceled the merge process","static":false,"name":"merge","comment":"Merge domain objects and resolve any conflicts.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user canceled the merge process","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"true if the merge process completed successfully","type_short":"boolean"}},{"javadoc":"Sets the resolve information object for the indicated standardized name.\n This is how information is passed between merge managers.\n@param infoType the string indicating the type of resolve information\n@param infoObject the object for the named string. This information is\n determined by the merge manager that creates it.\n@see getResolveInformation(String)","static":false,"name":"setResolveInformation","comment":"Sets the resolve information object for the indicated standardized name.\n This is how information is passed between merge managers.","params":[{"type_long":"java.lang.String","name":"infoType","comment":"the string indicating the type of resolve information","type_short":"String"},{"type_long":"java.lang.Object","name":"infoObject","comment":"the object for the named string. This information is\n determined by the merge manager that creates it.","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Show the component that is used to resolve conflicts. This method\n is called by the MergeResolvers when user input is required. If the\n component is not null, this method blocks until the user either \n cancels the merge process or resolves a conflict. If comp is null,\n then the default component is displayed, and the method does not\n wait for user input.\n@param comp component to show; if component is null, show the \n default component and do not block\n@param componentID id or name for the component","static":false,"name":"showComponent","comment":"Show the component that is used to resolve conflicts. This method\n is called by the MergeResolvers when user input is required. If the\n component is not null, this method blocks until the user either \n cancels the merge process or resolves a conflict. If comp is null,\n then the default component is displayed, and the method does not\n wait for user input.","params":[{"type_long":"javax.swing.JComponent","name":"comp","comment":"component to show; if component is null, show the \n default component and do not block","type_short":"JComponent"},{"type_long":"java.lang.String","name":"componentID","comment":"id or name for the component","type_short":"String"},{"type_long":"ghidra.util.HelpLocation","name":"helpLoc","comment":"","type_short":"HelpLocation"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Enable the apply button according to the \"enabled\" parameter.","static":false,"name":"setApplyEnabled","comment":"Enable the apply button according to the \"enabled\" parameter.","params":[{"type_long":"boolean","name":"enabled","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clear the status text on the merge dialog.","static":false,"name":"clearStatusText","comment":"Clear the status text on the merge dialog.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the status text on the merge dialog.","static":false,"name":"setStatusText","comment":"Set the status text on the merge dialog.","params":[{"type_long":"java.lang.String","name":"msg","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DomainObjectMergeManager","comment":"An interface to allow merging of domain objects.","fields":[]}
