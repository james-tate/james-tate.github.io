{"implements":["ghidra.framework.task.GTaskListener"],"javadoc":"Used by the GTaskManager to efficiently manage multiple GTaskListeners.  \n <P>\n When an GTaskManager has multiple listeners, instead of having a list of listeners, listeners\n are chained together using MulticastTaskListeners. It avoids the creation of\n an iterator every time a listener method needs to be called.\n <P>\n For example, the GTaskManager has a single TaskListener variable that it notifies when its state\n changes.  If someone adds a listener, and the current listener is null, then it becomes the \n listener.  If it already has a listener, it will create a new MulticaseTaskListener taking in the\n old listener and the new listener.  When a TaskListener method is called, it simply calls the same\n method on those two listeners.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.framework.task.GTaskListener","name":"a","comment":"","type_short":"GTaskListener"},{"type_long":"ghidra.framework.task.GTaskListener","name":"b","comment":"","type_short":"GTaskListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"taskStarted","comment":"","params":[{"type_long":"ghidra.framework.task.GScheduledTask","name":"task","comment":"","type_short":"GScheduledTask"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"taskCompleted","comment":"","params":[{"type_long":"ghidra.framework.task.GScheduledTask","name":"task","comment":"","type_short":"GScheduledTask"},{"type_long":"ghidra.framework.task.GTaskResult","name":"result","comment":"","type_short":"GTaskResult"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"taskGroupScheduled","comment":"","params":[{"type_long":"ghidra.framework.task.GTaskGroup","name":"group","comment":"","type_short":"GTaskGroup"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"taskScheduled","comment":"","params":[{"type_long":"ghidra.framework.task.GScheduledTask","name":"scheduledTask","comment":"","type_short":"GScheduledTask"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"taskGroupStarted","comment":"","params":[{"type_long":"ghidra.framework.task.GTaskGroup","name":"taskGroup","comment":"","type_short":"GTaskGroup"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeListener","comment":"","params":[{"type_long":"ghidra.framework.task.GTaskListener","name":"listener","comment":"","type_short":"GTaskListener"}],"throws":[],"return":{"type_long":"ghidra.framework.task.GTaskListener","comment":"","type_short":"GTaskListener"}},{"javadoc":"","static":false,"name":"initialize","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"taskGroupCompleted","comment":"","params":[{"type_long":"ghidra.framework.task.GTaskGroup","name":"taskGroup","comment":"","type_short":"GTaskGroup"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"suspendedStateChanged","comment":"","params":[{"type_long":"boolean","name":"suspended","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"MulticastTaskListener","comment":"Used by the GTaskManager to efficiently manage multiple GTaskListeners.  \n \n When an GTaskManager has multiple listeners, instead of having a list of listeners, listeners\n are chained together using MulticastTaskListeners. It avoids the creation of\n an iterator every time a listener method needs to be called.\n \n For example, the GTaskManager has a single TaskListener variable that it notifies when its state\n changes.  If someone adds a listener, and the current listener is null, then it becomes the \n listener.  If it already has a listener, it will create a new MulticaseTaskListener taking in the\n old listener and the new listener.  When a TaskListener method is called, it simply calls the same\n method on those two listeners.","fields":[{"type_long":"ghidra.framework.task.GTaskListener","javadoc":"","static":false,"name":"a","comment":"","type_short":"GTaskListener","constant_value":null},{"type_long":"ghidra.framework.task.GTaskListener","javadoc":"","static":false,"name":"b","comment":"","type_short":"GTaskListener","constant_value":null}]}
