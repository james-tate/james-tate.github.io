{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create empty mangled filesystem\n@param rootPath path for root directory (must already exist).\n@param isVersioned if true item versioning will be enabled.\n@param readOnly if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException\n@param enableAsyncronousDispatching if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.\n@throws IOException","static":true,"name":"createMangledFilesystem","comment":"Create empty mangled filesystem","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"path for root directory (must already exist).","type_short":"String"},{"type_long":"boolean","name":"isVersioned","comment":"if true item versioning will be enabled.","type_short":"boolean"},{"type_long":"boolean","name":"readOnly","comment":"if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException","type_short":"boolean"},{"type_long":"boolean","name":"enableAsyncronousDispatching","comment":"if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.framework.store.local.MangledLocalFileSystem","comment":"","type_short":"MangledLocalFileSystem"}},{"javadoc":"Create empty original Indexed filesystem.  The original index file lacked any version indicator\n but will be treated as a version 0 index.\n@param rootPath path for root directory (must already exist).\n@param isVersioned if true item versioning will be enabled.\n@param readOnly if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException\n@param enableAsyncronousDispatching if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.\n@throws IOException","static":true,"name":"createOriginalIndexedFilesystem","comment":"Create empty original Indexed filesystem.  The original index file lacked any version indicator\n but will be treated as a version 0 index.","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"path for root directory (must already exist).","type_short":"String"},{"type_long":"boolean","name":"isVersioned","comment":"if true item versioning will be enabled.","type_short":"boolean"},{"type_long":"boolean","name":"readOnly","comment":"if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException","type_short":"boolean"},{"type_long":"boolean","name":"enableAsyncronousDispatching","comment":"if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem","comment":"","type_short":"IndexedLocalFileSystem"}},{"javadoc":"Create empty V0 Indexed filesystem.  This is an original Indexed filesystem with the addition \n of a version 0 indicator within the index file.\n@param rootPath path for root directory (must already exist).\n@param isVersioned if true item versioning will be enabled.\n@param readOnly if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException\n@param enableAsyncronousDispatching if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.\n@throws IOException","static":true,"name":"createIndexedV0Filesystem","comment":"Create empty V0 Indexed filesystem.  This is an original Indexed filesystem with the addition \n of a version 0 indicator within the index file.","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"path for root directory (must already exist).","type_short":"String"},{"type_long":"boolean","name":"isVersioned","comment":"if true item versioning will be enabled.","type_short":"boolean"},{"type_long":"boolean","name":"readOnly","comment":"if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException","type_short":"boolean"},{"type_long":"boolean","name":"enableAsyncronousDispatching","comment":"if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem","comment":"","type_short":"IndexedLocalFileSystem"}},{"javadoc":"Create empty mangled filesystem\n@param rootPath path for root directory (must already exist).\n@param isVersioned if true item versioning will be enabled.\n@param readOnly if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException\n@param enableAsyncronousDispatching if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.\n@throws IOException","static":true,"name":"createIndexedV1Filesystem","comment":"Create empty mangled filesystem","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"path for root directory (must already exist).","type_short":"String"},{"type_long":"boolean","name":"isVersioned","comment":"if true item versioning will be enabled.","type_short":"boolean"},{"type_long":"boolean","name":"readOnly","comment":"if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException","type_short":"boolean"},{"type_long":"boolean","name":"enableAsyncronousDispatching","comment":"if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.framework.store.local.IndexedV1LocalFileSystem","comment":"","type_short":"IndexedV1LocalFileSystem"}},{"javadoc":"","static":true,"name":"createRootDir","comment":"","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"LocalFilesystemTestUtils","comment":"","fields":[]}
