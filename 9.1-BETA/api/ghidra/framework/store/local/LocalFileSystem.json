{"implements":["ghidra.framework.store.FileSystem"],"javadoc":"<code>LocalFileSystem<\/code> provides access to FolderItem's which\n exist within a File-based directory structure.  Although FolderItem\n caching is highly recommended, it is not provided by this implementation\n and should be provided by an encompassing set of folder\/file objects.\n <p>\n A LocalFileSystem may optionally support version control of its\n FolderItem's.  When versioned, FolderItem's must be checked-out\n to create new versions.  When not versioned, the check-out mechanism\n is not used.\n <p>\n FileSystemListener's will only be notified of changes made by the\n associated LocalFileSystem instance.  For this reason, it is important\n that proper measures are taken to prevent concurrent modification of the\n underlying files\/directories by another instance or by any other\n means.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a local filesystem for existing data\n@param rootPath\n@param create\n@param isVersioned\n@param readOnly\n@param enableAsyncronousDispatching\n@return local filesystem\n@throws FileNotFoundException if specified rootPath does not exist\n@throws IOException if error occurs while reading\/writing index files","static":true,"name":"getLocalFileSystem","comment":"Construct a local filesystem for existing data","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"","type_short":"String"},{"type_long":"boolean","name":"create","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"isVersioned","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"readOnly","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"enableAsyncronousDispatching","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if error occurs while reading\/writing index files","type_short":"IOException"}],"return":{"type_long":"ghidra.framework.store.local.LocalFileSystem","comment":"local filesystem","type_short":"LocalFileSystem"}},{"javadoc":"","static":false,"name":"getUserName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns true if any file found within dir whose name starts\n with '~' character (e.g., ~index.dat, etc)\n@param dir\n@return true if any hidden file found with '~' prefix","static":true,"name":"hasAnyHiddenFiles","comment":"Returns true if any file found within dir whose name starts\n with '~' character (e.g., ~index.dat, etc)","params":[{"type_long":"java.io.File","name":"dir","comment":"","type_short":"File"}],"throws":[],"return":{"type_long":"boolean","comment":"true if any hidden file found with '~' prefix","type_short":"boolean"}},{"javadoc":"Constructor.\n@param file path path for root directory.\n@param isVersioned if true item versioning will be enabled.\n@param readOnly if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException\n@param enableAsyncronousDispatching if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.\n@throws FileNotFoundException if specified rootPath does not exist","static":false,"name":"<init>","comment":"Constructor.","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"","type_short":"String"},{"type_long":"boolean","name":"isVersioned","comment":"if true item versioning will be enabled.","type_short":"boolean"},{"type_long":"boolean","name":"readOnly","comment":"if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException","type_short":"boolean"},{"type_long":"boolean","name":"enableAsyncronousDispatching","comment":"if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.","type_short":"boolean"}],"throws":[{"type_long":"java.io.FileNotFoundException","comment":"if specified rootPath does not exist","type_short":"FileNotFoundException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"cleanupAfterConstruction","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor for an empty read-only file-system.","static":false,"name":"<init>","comment":"Constructor for an empty read-only file-system.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"cleanupTemporaryFiles","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associate file system with a specific repository logger\n@param repositoryLogger","static":false,"name":"setAssociatedRepositoryLogger","comment":"Associate file system with a specific repository logger","params":[{"type_long":"ghidra.framework.store.local.RepositoryLogger","name":"repositoryLogger","comment":"","type_short":"RepositoryLogger"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"log","comment":"","params":[{"type_long":"ghidra.framework.store.local.LocalFolderItem","name":"item","comment":"","type_short":"LocalFolderItem"},{"type_long":"java.lang.String","name":"msg","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"user","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"If set, the state of folder item resources will be continually refreshed.\n This is required if multiple instances exist for a single item.  The default is\n disabled.   This feature should be enabled for testing only since it may have a\n significant performance impact.  This does not provide locking which may be\n required for a shared environment (e.g., checkin locking is only managed by a\n single instance).\n@param validationRequired","static":true,"name":"setValidationRequired","comment":"If set, the state of folder item resources will be continually refreshed.\n This is required if multiple instances exist for a single item.  The default is\n disabled.   This feature should be enabled for testing only since it may have a\n significant performance impact.  This does not provide locking which may be\n required for a shared environment (e.g., checkin locking is only managed by a\n single instance).","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@returns true if folder item resources must be refreshed.\n@see #setValidationRequired()","static":true,"name":"isRefreshRequired","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isVersioned","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isOnline","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isReadOnly","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Find an existing storage location\n@param folderPath\n@param itemName\n@return storage location.  A non-null value does not guarantee that the associated\n item actually exists.\n@throws FileNotFoundException","static":false,"name":"findItemStorage","comment":"Find an existing storage location","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.FileNotFoundException","comment":"","type_short":"FileNotFoundException"}],"return":{"type_long":"ghidra.framework.store.local.LocalFileSystem.ItemStorage","comment":"storage location.  A non-null value does not guarantee that the associated\n item actually exists.","type_short":"ItemStorage"}},{"javadoc":"Allocate a new storage location\n@param folderPath\n@param itemName\n@return storage location\n@throws DuplicateFileException if item path has previously been allocated\n@throws IOException if invalid path\/item name specified\n@throws InvalidNameException if folderPath or itemName contains invalid characters","static":false,"name":"allocateItemStorage","comment":"Allocate a new storage location","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if invalid path\/item name specified","type_short":"IOException"},{"type_long":"ghidra.util.InvalidNameException","comment":"if folderPath or itemName contains invalid characters","type_short":"InvalidNameException"}],"return":{"type_long":"ghidra.framework.store.local.LocalFileSystem.ItemStorage","comment":"storage location","type_short":"ItemStorage"}},{"javadoc":"Deallocate item storage\n@param folderPath\n@param itemName\n@throws IOException","static":false,"name":"deallocateItemStorage","comment":"Deallocate item storage","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getItemNames","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"boolean","name":"includeHiddenFiles","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"@see ghidra.framework.store.FileSystem#getItemNames(java.lang.String)","static":false,"name":"getItemNames","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"","static":false,"name":"getItem","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.framework.store.local.LocalFolderItem","comment":"","type_short":"LocalFolderItem"}},{"javadoc":"Notification that FileID has been changed within propertyFile\n@param propertyFile\n@param oldFileId\n@throws IOException","static":false,"name":"fileIdChanged","comment":"Notification that FileID has been changed within propertyFile","params":[{"type_long":"ghidra.util.PropertyFile","name":"propertyFile","comment":"","type_short":"PropertyFile"},{"type_long":"java.lang.String","name":"oldFileId","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getItem","comment":"","params":[{"type_long":"java.lang.String","name":"fileID","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"java.lang.UnsupportedOperationException","comment":"","type_short":"UnsupportedOperationException"}],"return":{"type_long":"ghidra.framework.store.FolderItem","comment":"","type_short":"FolderItem"}},{"javadoc":"","static":false,"name":"createDatabase","comment":"","params":[{"type_long":"java.lang.String","name":"parentPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"fileID","comment":"","type_short":"String"},{"type_long":"db.buffers.BufferFile","name":"bufferFile","comment":"","type_short":"BufferFile"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"contentType","comment":"","type_short":"String"},{"type_long":"boolean","name":"resetDatabaseId","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"java.lang.String","name":"user","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.framework.store.local.LocalDatabaseItem","comment":"","type_short":"LocalDatabaseItem"}},{"javadoc":"","static":false,"name":"createTemporaryDatabase","comment":"","params":[{"type_long":"java.lang.String","name":"parentPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"fileID","comment":"","type_short":"String"},{"type_long":"db.buffers.BufferFile","name":"bufferFile","comment":"","type_short":"BufferFile"},{"type_long":"java.lang.String","name":"contentType","comment":"","type_short":"String"},{"type_long":"boolean","name":"resetDatabaseId","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.framework.store.local.LocalDatabaseItem","comment":"","type_short":"LocalDatabaseItem"}},{"javadoc":"","static":false,"name":"createDatabase","comment":"","params":[{"type_long":"java.lang.String","name":"parentPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"fileID","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"contentType","comment":"","type_short":"String"},{"type_long":"int","name":"bufferSize","comment":"","type_short":"int"},{"type_long":"java.lang.String","name":"user","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"projectPath","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.buffers.LocalManagedBufferFile","comment":"","type_short":"LocalManagedBufferFile"}},{"javadoc":"","static":false,"name":"createDataFile","comment":"","params":[{"type_long":"java.lang.String","name":"parentPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.io.InputStream","name":"istream","comment":"","type_short":"InputStream"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"contentType","comment":"","type_short":"String"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.framework.store.local.LocalDataFile","comment":"","type_short":"LocalDataFile"}},{"javadoc":"","static":false,"name":"createFile","comment":"","params":[{"type_long":"java.lang.String","name":"parentPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.io.File","name":"packedFile","comment":"","type_short":"File"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"java.lang.String","name":"user","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.framework.store.local.LocalDatabaseItem","comment":"","type_short":"LocalDatabaseItem"}},{"javadoc":"","static":false,"name":"moveItem","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"newFolderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"newName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"folderExists","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"fileExists","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"addFileSystemListener","comment":"","params":[{"type_long":"ghidra.framework.store.FileSystemListener","name":"listener","comment":"","type_short":"FileSystemListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeFileSystemListener","comment":"","params":[{"type_long":"ghidra.framework.store.FileSystemListener","name":"listener","comment":"","type_short":"FileSystemListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns file system listener.","static":false,"name":"getListener","comment":"Returns file system listener.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.store.FileSystemListener","comment":"","type_short":"FileSystemListener"}},{"javadoc":"@returns the maximum name length permitted for folders or items.","static":false,"name":"getMaxNameLength","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Validate a folder\/item name or path.\n@param name folder or item name\n@param isPath if true name represents full path\n@throws InvalidNameException if name is invalid","static":false,"name":"testValidName","comment":"Validate a folder\/item name or path.","params":[{"type_long":"java.lang.String","name":"name","comment":"folder or item name","type_short":"String"},{"type_long":"boolean","name":"isPath","comment":"if true name represents full path","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"if name is invalid","type_short":"InvalidNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return true if c is a valid character within the FileSystem.","static":true,"name":"isValidNameCharacter","comment":"","params":[{"type_long":"char","name":"c","comment":"","type_short":"char"}],"throws":[],"return":{"type_long":"boolean","comment":"true if c is a valid character within the FileSystem.","type_short":"boolean"}},{"javadoc":"Remove the directory which corresponds to the specified folder path if it is empty.\n If folder directory is removed, this method is invoked recursively for parent folder\n path which may also be removed if it is empty.\n This method is intended for use with a versioned file system\n which only retains folders if they contain one or more items or sub-folders.\n@param folderPath folder path","static":false,"name":"deleteEmptyVersionedFolders","comment":"Remove the directory which corresponds to the specified folder path if it is empty.\n If folder directory is removed, this method is invoked recursively for parent folder\n path which may also be removed if it is empty.\n This method is intended for use with a versioned file system\n which only retains folders if they contain one or more items or sub-folders.","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"folder path","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notify the filesystem that the property file and associated data files for\n an item have been removed from the filesystem.\n@param folderPath\n@param itemName\n@throws IOException","static":false,"name":"itemDeleted","comment":"Notify the filesystem that the property file and associated data files for\n an item have been removed from the filesystem.","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the full path for a specific folder or item\n@param parentPath full parent path\n@param name child folder or item name","static":true,"name":"getPath","comment":"Returns the full path for a specific folder or item","params":[{"type_long":"java.lang.String","name":"parentPath","comment":"full parent path","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"child folder or item name","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"getParentPath","comment":"","params":[{"type_long":"java.lang.String","name":"path","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"getName","comment":"","params":[{"type_long":"java.lang.String","name":"path","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"isShared","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"migrationInProgress","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Determines if the specified storage name corresponds to a hidden name\n@param name\n@return true if name is a hidden name","static":true,"name":"isHiddenDirName","comment":"Determines if the specified storage name corresponds to a hidden name","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if name is a hidden name","type_short":"boolean"}},{"javadoc":"Escape hidden prefix chars in name\n@param name\n@return escaped name","static":true,"name":"escapeHiddenDirPrefixChars","comment":"Escape hidden prefix chars in name","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"escaped name","type_short":"String"}},{"javadoc":"Unescape a non-hidden directory name\n@param name\n@return unescaped name or null if name is a hidden name","static":true,"name":"unescapeHiddenDirPrefixChars","comment":"Unescape a non-hidden directory name","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"unescaped name or null if name is a hidden name","type_short":"String"}},{"javadoc":"","static":true,"name":"countHiddenDirPrefixChars","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"LocalFileSystem","comment":"LocalFileSystem provides access to FolderItem's which\n exist within a File-based directory structure.  Although FolderItem\n caching is highly recommended, it is not provided by this implementation\n and should be provided by an encompassing set of folder\/file objects.\n \n A LocalFileSystem may optionally support version control of its\n FolderItem's.  When versioned, FolderItem's must be checked-out\n to create new versions.  When not versioned, the check-out mechanism\n is not used.\n \n FileSystemListener's will only be notified of changes made by the\n associated LocalFileSystem instance.  For this reason, it is important\n that proper measures are taken to prevent concurrent modification of the\n underlying files\/directories by another instance or by any other\n means.","fields":[{"type_long":"org.apache.logging.log4j.Logger","javadoc":"","static":true,"name":"log","comment":"","type_short":"Logger","constant_value":null},{"type_long":"char","javadoc":"Hidden directory name prefix.\n Should only be prepended to an escaped base-name.\n@see #escapeHiddenPrefixChars(String)","static":true,"name":"HIDDEN_DIR_PREFIX_CHAR","comment":"Hidden directory name prefix.\n Should only be prepended to an escaped base-name.","type_short":"char","constant_value":"~"},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"HIDDEN_DIR_PREFIX","comment":"","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"Hidden item name prefix.","static":true,"name":"HIDDEN_ITEM_PREFIX","comment":"Hidden item name prefix.","type_short":"String","constant_value":"\".ghidra.\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"INVALID_FILENAME_CHARS","comment":"","type_short":"String","constant_value":"\"\/\\'`\"*:<>?|\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"PROPERTY_EXT","comment":"","type_short":"String","constant_value":"\".prp\""},{"type_long":"boolean","javadoc":"","static":true,"name":"refreshRequired","comment":"","type_short":"boolean","constant_value":null},{"type_long":"java.io.File","javadoc":"","static":false,"name":"root","comment":"","type_short":"File","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isVersioned","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"readOnly","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.framework.store.FileSystemListenerList","javadoc":"","static":false,"name":"listeners","comment":"","type_short":"FileSystemListenerList","constant_value":null},{"type_long":"ghidra.framework.store.local.RepositoryLogger","javadoc":"","static":false,"name":"repositoryLogger","comment":"","type_short":"RepositoryLogger","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isShared","comment":"","type_short":"boolean","constant_value":null}]}
