{"implements":[],"javadoc":"Services that the Tool uses.","static":false,"methods":[{"javadoc":"Notify the framework that the tool is closing.\n@param tool tool that is closing","static":false,"name":"closeTool","comment":"Notify the framework that the tool is closing.","params":[{"type_long":"ghidra.framework.model.Tool","name":"tool","comment":"tool that is closing","type_short":"Tool"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Saves the tool's configuration in the standard\n tool location.\n@param tool tool to save.","static":false,"name":"saveTool","comment":"Saves the tool's configuration in the standard\n tool location.","params":[{"type_long":"ghidra.framework.model.Tool","name":"tool","comment":"tool to save.","type_short":"Tool"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Save the tool to the given location on the local file system.\n@param location file to export tool description into\n@param tool tool to export\n@throws FileNotFoundException thrown if the file's directory doesn't exist.\n@throws IOException thrown if there is an error writing the file.","static":false,"name":"exportTool","comment":"Save the tool to the given location on the local file system.","params":[{"type_long":"java.io.File","name":"location","comment":"file to export tool description into","type_short":"File"},{"type_long":"ghidra.framework.model.Tool","name":"tool","comment":"tool to export","type_short":"Tool"}],"throws":[{"type_long":"java.io.FileNotFoundException","comment":"thrown if the file's directory doesn't exist.","type_short":"FileNotFoundException"},{"type_long":"java.io.IOException","comment":"thrown if there is an error writing the file.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the tool chest for the project.","static":false,"name":"getToolChest","comment":"Get the tool chest for the project.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolChest","comment":"","type_short":"ToolChest"}},{"javadoc":"Find a running tool like the one specified that has the named domain file.\n If it finds a matching tool, then it is brought to the front.\n Otherwise, it creates one and runs it.\n It then invokes the specified event on the running tool.\n@param tool find\/create a tool like this one.\n@param domainFile open this file in the found\/created tool.\n@param event invoke this event on the found\/created tool","static":false,"name":"displaySimilarTool","comment":"Find a running tool like the one specified that has the named domain file.\n If it finds a matching tool, then it is brought to the front.\n Otherwise, it creates one and runs it.\n It then invokes the specified event on the running tool.","params":[{"type_long":"ghidra.framework.model.Tool","name":"tool","comment":"find\/create a tool like this one.","type_short":"Tool"},{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"open this file in the found\/created tool.","type_short":"DomainFile"},{"type_long":"ghidra.framework.plugintool.PluginEvent","name":"event","comment":"invoke this event on the found\/created tool","type_short":"PluginEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the default tool template used to open the tool.  Here <b>default<\/b> means the \n tool that should be used to open the given file, whether defined by the user or the \n system default.\n@param domainFile The file for which to find the preferred tool.\n@return The preferred tool that should be used to open the given file.","static":false,"name":"getDefaultToolTemplate","comment":"Returns the default tool template used to open the tool.  Here default means the \n tool that should be used to open the given file, whether defined by the user or the \n system default.","params":[{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"The file for which to find the preferred tool.","type_short":"DomainFile"}],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolTemplate","comment":"The preferred tool that should be used to open the given file.","type_short":"ToolTemplate"}},{"javadoc":"Returns a set of tools that can open the given domain file class.\n@param domainClass The domain file class type for which to get tools","static":false,"name":"getCompatibleTools","comment":"Returns a set of tools that can open the given domain file class.","params":[{"type_long":"java.lang.Class<? extends ghidra.framework.model.DomainObject>","name":"domainClass","comment":"The domain file class type for which to get tools","type_short":"Class"}],"throws":[],"return":{"type_long":"java.util.Set<ghidra.framework.model.ToolTemplate>","comment":"","type_short":"Set"}},{"javadoc":"Returns the {@link ToolAssociationInfo associations}, which describe content \n types and the tools used to open them, for all content types known to the system.\n@see #setContentTypeToolAssociations(Set)","static":false,"name":"getContentTypeToolAssociations","comment":"Returns the ToolAssociationInfo, which describe content \n types and the tools used to open them, for all content types known to the system.","params":[],"throws":[],"return":{"type_long":"java.util.Set<ghidra.framework.model.ToolAssociationInfo>","comment":"","type_short":"Set"}},{"javadoc":"Sets the  {@link ToolAssociationInfo associations}, which describe content \n types and the tools used to open them, for the system.\n@param infos The associations to be applied\n@see #getContentTypeToolAssociations()","static":false,"name":"setContentTypeToolAssociations","comment":"Sets the  ToolAssociationInfo, which describe content \n types and the tools used to open them, for the system.","params":[{"type_long":"java.util.Set<ghidra.framework.model.ToolAssociationInfo>","name":"infos","comment":"The associations to be applied","type_short":"Set"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Launch the default tool; if domainFile is not null, this file will\n be opened in the tool.\n@param domainFile the file to open; may be null\n@see #setDefaultTool(ToolTemplate)","static":false,"name":"launchDefaultTool","comment":"Launch the default tool; if domainFile is not null, this file will\n be opened in the tool.","params":[{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"the file to open; may be null","type_short":"DomainFile"}],"throws":[],"return":{"type_long":"ghidra.framework.model.Tool","comment":"","type_short":"Tool"}},{"javadoc":"Launch the tool with the given name\n@param toolName name of the tool to launch\n@param domainFile the file to open; may be null","static":false,"name":"launchTool","comment":"Launch the tool with the given name","params":[{"type_long":"java.lang.String","name":"toolName","comment":"name of the tool to launch","type_short":"String"},{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"the file to open; may be null","type_short":"DomainFile"}],"throws":[],"return":{"type_long":"ghidra.framework.model.Tool","comment":"","type_short":"Tool"}},{"javadoc":"Add a listener that will be notified when the default tool\n specification changes.","static":false,"name":"addDefaultToolChangeListener","comment":"Add a listener that will be notified when the default tool\n specification changes.","params":[{"type_long":"ghidra.framework.model.DefaultToolChangeListener","name":"listener","comment":"","type_short":"DefaultToolChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove the listener.","static":false,"name":"removeDefaultToolChangeListener","comment":"Remove the listener.","params":[{"type_long":"ghidra.framework.model.DefaultToolChangeListener","name":"listener","comment":"","type_short":"DefaultToolChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return array of running tools\n@return array of Tools","static":false,"name":"getRunningTools","comment":"Return array of running tools","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.Tool[]","comment":"array of Tools","type_short":"ghidra.framework.model.Tool[]"}},{"javadoc":"Returns true if this tool should be saved base on the state of other runnings instances of\n the same tool\n@param tool the tool to check for saving\n@return true if the tool should be saved","static":false,"name":"canAutoSave","comment":"Returns true if this tool should be saved base on the state of other runnings instances of\n the same tool","params":[{"type_long":"ghidra.framework.model.Tool","name":"tool","comment":"the tool to check for saving","type_short":"Tool"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the tool should be saved","type_short":"boolean"}}],"name":"ToolServices","comment":"Services that the Tool uses.","fields":[{"type_long":"java.lang.String","javadoc":"The default tool name for Ghidra","static":true,"name":"DEFAULT_TOOLNAME","comment":"The default tool name for Ghidra","type_short":"String","constant_value":"\"DefaultTool\""}]}
