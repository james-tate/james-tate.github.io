{"implements":[],"javadoc":"Interface for methods to create, open, and delete projects; maintains a\n list of known project views that the user opened. \n It has a handle to the currently opened project. A project can be\n opened by one user at a time.","static":false,"methods":[{"javadoc":"Create a project on the local filesystem.\n@param projectLocator location for where the project should be created\n@param repAdapter repository adapter if this project is to be a \n        shared project; may be null if the project is not shared.\n@param remember if false the new project should not be remembered (i.e., recently opened, etc.)\n@return the new project\n@throws IOException if user cannot access\/write the project location","static":false,"name":"createProject","comment":"Create a project on the local filesystem.","params":[{"type_long":"ghidra.framework.model.ProjectLocator","name":"projectLocator","comment":"location for where the project should be created","type_short":"ProjectLocator"},{"type_long":"ghidra.framework.client.RepositoryAdapter","name":"repAdapter","comment":"repository adapter if this project is to be a \n        shared project; may be null if the project is not shared.","type_short":"RepositoryAdapter"},{"type_long":"boolean","name":"remember","comment":"if false the new project should not be remembered (i.e., recently opened, etc.)","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if user cannot access\/write the project location","type_short":"IOException"}],"return":{"type_long":"ghidra.framework.model.Project","comment":"the new project","type_short":"Project"}},{"javadoc":"Get list of projects that user most recently opened.\n@return list of project URLs","static":false,"name":"getRecentProjects","comment":"Get list of projects that user most recently opened.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ProjectLocator[]","comment":"list of project URLs","type_short":"ghidra.framework.model.ProjectLocator[]"}},{"javadoc":"Get list of projects that user most recently viewed.\n@return list of project URLs","static":false,"name":"getRecentViewedProjects","comment":"Get list of projects that user most recently viewed.","params":[],"throws":[],"return":{"type_long":"java.net.URL[]","comment":"list of project URLs","type_short":"java.net.URL[]"}},{"javadoc":"Get the project that is currently open.\n@return currently open project, return null if there is no\n project opened","static":false,"name":"getActiveProject","comment":"Get the project that is currently open.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.Project","comment":"currently open project, return null if there is no\n project opened","type_short":"Project"}},{"javadoc":"Get the last opened (active) project.\n@return project last opened by the user; returns NULL if a project\n was never opened OR the last opened project is no longer valid","static":false,"name":"getLastOpenedProject","comment":"Get the last opened (active) project.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ProjectLocator","comment":"project last opened by the user; returns NULL if a project\n was never opened OR the last opened project is no longer valid","type_short":"ProjectLocator"}},{"javadoc":"Set the projectLocator of last opened (active) project; this projectLocator is returned\n in the getLastOpenedProject() method.\n@param projectLocator project location of last project that was opened","static":false,"name":"setLastOpenedProject","comment":"Set the projectLocator of last opened (active) project; this projectLocator is returned\n in the getLastOpenedProject() method.","params":[{"type_long":"ghidra.framework.model.ProjectLocator","name":"projectLocator","comment":"project location of last project that was opened","type_short":"ProjectLocator"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Keep the projectLocator on the list of known projects.\n@param projectLocator project location","static":false,"name":"rememberProject","comment":"Keep the projectLocator on the list of known projects.","params":[{"type_long":"ghidra.framework.model.ProjectLocator","name":"projectLocator","comment":"project location","type_short":"ProjectLocator"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Keep the url on the list of known projects.\n@param url project identifier","static":false,"name":"rememberViewedProject","comment":"Keep the url on the list of known projects.","params":[{"type_long":"java.net.URL","name":"url","comment":"project identifier","type_short":"URL"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove the project url from the list of known viewed projects.\n@param url project identifier","static":false,"name":"forgetViewedProject","comment":"Remove the project url from the list of known viewed projects.","params":[{"type_long":"java.net.URL","name":"url","comment":"project identifier","type_short":"URL"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Open a project from the file system. Add the project url\n to the list of known projects.\n@param projectLocator project location\n@param doRestore true if the project should be restored\n@param resetOwner if true, the owner of the project will be changed to the current user.\n@return opened project\n@throws NotFoundException if the file for the project was\n not found.\n@throws NotOwnerException if the project owner is not the user\n@throws LockException if the project is already opened by another user","static":false,"name":"openProject","comment":"Open a project from the file system. Add the project url\n to the list of known projects.","params":[{"type_long":"ghidra.framework.model.ProjectLocator","name":"projectLocator","comment":"project location","type_short":"ProjectLocator"},{"type_long":"boolean","name":"doRestore","comment":"true if the project should be restored","type_short":"boolean"},{"type_long":"boolean","name":"resetOwner","comment":"if true, the owner of the project will be changed to the current user.","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"if the file for the project was\n not found.","type_short":"NotFoundException"},{"type_long":"ghidra.util.NotOwnerException","comment":"if the project owner is not the user","type_short":"NotOwnerException"},{"type_long":"ghidra.framework.store.LockException","comment":"if the project is already opened by another user","type_short":"LockException"}],"return":{"type_long":"ghidra.framework.model.Project","comment":"opened project","type_short":"Project"}},{"javadoc":"Delete the project in the given location.\n@param projectLocator project location\n@return false if no project was deleted.","static":false,"name":"deleteProject","comment":"Delete the project in the given location.","params":[{"type_long":"ghidra.framework.model.ProjectLocator","name":"projectLocator","comment":"project location","type_short":"ProjectLocator"}],"throws":[],"return":{"type_long":"boolean","comment":"false if no project was deleted.","type_short":"boolean"}},{"javadoc":"Returns true if a project with the given projectLocator exists.\n@param projectLocator project location","static":false,"name":"projectExists","comment":"Returns true if a project with the given projectLocator exists.","params":[{"type_long":"ghidra.framework.model.ProjectLocator","name":"projectLocator","comment":"project location","type_short":"ProjectLocator"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Establish a connection to the given host and port number.\n@param host server name or IP address\n@param portNumber server port or 0 for default\n@param forceConnect if true and currently not connected, an attempt will be be to connect\n@return a handle to the remote server containing shared repositories","static":false,"name":"getRepositoryServerAdapter","comment":"Establish a connection to the given host and port number.","params":[{"type_long":"java.lang.String","name":"host","comment":"server name or IP address","type_short":"String"},{"type_long":"int","name":"portNumber","comment":"server port or 0 for default","type_short":"int"},{"type_long":"boolean","name":"forceConnect","comment":"if true and currently not connected, an attempt will be be to connect","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.framework.client.RepositoryServerAdapter","comment":"a handle to the remote server containing shared repositories","type_short":"RepositoryServerAdapter"}},{"javadoc":"Get the information that was last used to access a repository\n managed by a Ghidra server.","static":false,"name":"getMostRecentServerInfo","comment":"Get the information that was last used to access a repository\n managed by a Ghidra server.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ServerInfo","comment":"","type_short":"ServerInfo"}},{"javadoc":"Return the user's ToolChest","static":false,"name":"getUserToolChest","comment":"Return the user's ToolChest","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolChest","comment":"","type_short":"ToolChest"}}],"name":"ProjectManager","comment":"Interface for methods to create, open, and delete projects; maintains a\n list of known project views that the user opened. \n It has a handle to the currently opened project. A project can be\n opened by one user at a time.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"APPLICATION_TOOL_EXTENSION","comment":"","type_short":"String","constant_value":"\".tcd\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"APPLICATION_TOOLS_DIR_NAME","comment":"","type_short":"String","constant_value":"\"tools\""}]}
