{"implements":["docking.DockingTool","ghidra.framework.model.ToolListener"],"javadoc":"A Tool represents a collection of Plugins that are the basic building\n blocks. The plugins cooperate with one another to achieve certain\n functionality. The tool interface defines methods called by the \n Project that manages the tools.","static":false,"methods":[{"javadoc":"Tells the tool to stop functioning and release its resources.\n The tool should dispose of all its windows and other resources.","static":false,"name":"exit","comment":"Tells the tool to stop functioning and release its resources.\n The tool should dispose of all its windows and other resources.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Can this tool be closed?\n@param isExiting true if all of Ghidra is closing, false if just this tool is closing.\n@return true if the tool is in a state that it can be closed.","static":false,"name":"canClose","comment":"Can this tool be closed?","params":[{"type_long":"boolean","name":"isExiting","comment":"true if all of Ghidra is closing, false if just this tool is closing.","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the tool is in a state that it can be closed.","type_short":"boolean"}},{"javadoc":"Can the domain File be closed?\n <br>Note: This forces plugins to terminate any tasks they have running for the \n indicated domain object and apply any unsaved data to the domain object. If they can't do \n this or the user cancels then this returns false.\n@return false any of the plugins reports that the domain object \n should not be closed","static":false,"name":"canCloseDomainFile","comment":"Can the domain File be closed?\n Note: This forces plugins to terminate any tasks they have running for the \n indicated domain object and apply any unsaved data to the domain object. If they can't do \n this or the user cancels then this returns false.","params":[{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"","type_short":"DomainFile"}],"throws":[],"return":{"type_long":"boolean","comment":"false any of the plugins reports that the domain object \n should not be closed","type_short":"boolean"}},{"javadoc":"Fire the plugin event by notifying the event manager which\n calls the listeners.\n@param event plugin event","static":false,"name":"firePluginEvent","comment":"Fire the plugin event by notifying the event manager which\n calls the listeners.","params":[{"type_long":"ghidra.framework.plugintool.PluginEvent","name":"event","comment":"plugin event","type_short":"PluginEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the name associated with the tool","static":false,"name":"getToolName","comment":"Returns the name associated with the tool","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Sets the type name of the tool.\n@param toolName the basename to use when setting the tool's name\n@exception PropertyVetoException thrown if a VetoableChangeListener\n rejects the change","static":false,"name":"setToolName","comment":"Sets the type name of the tool.","params":[{"type_long":"java.lang.String","name":"toolName","comment":"the basename to use when setting the tool's name","type_short":"String"}],"throws":[{"type_long":"java.beans.PropertyVetoException","comment":"","type_short":"PropertyVetoException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a unique(within the active project) name to a tool instance.\n@param instanceName unique tool instance name","static":false,"name":"putInstanceName","comment":"Associates a unique(within the active project) name to a tool instance.","params":[{"type_long":"java.lang.String","name":"instanceName","comment":"unique tool instance name","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the tool's unique name.","static":false,"name":"getInstanceName","comment":"Returns the tool's unique name.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the names of all the possible ToolEvents that this\n tool might generate.  Used by the ConnectionManager to connect\n tools together.","static":false,"name":"getToolEventNames","comment":"Returns the names of all the possible ToolEvents that this\n tool might generate.  Used by the ConnectionManager to connect\n tools together.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Returns a list of eventNames that this Tool is interested in.","static":false,"name":"getConsumedToolEventNames","comment":"Returns a list of eventNames that this Tool is interested in.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"When the user drags a data file onto a tool, an event will be fired\n that the tool will respond to by accepting the data.\n@param data the data to be used by the running tool","static":false,"name":"acceptDomainFiles","comment":"When the user drags a data file onto a tool, an event will be fired\n that the tool will respond to by accepting the data.","params":[{"type_long":"ghidra.framework.model.DomainFile[]","name":"data","comment":"the data to be used by the running tool","type_short":"ghidra.framework.model.DomainFile[]"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get the domain files that this tool currently has open.","static":false,"name":"getDomainFiles","comment":"Get the domain files that this tool currently has open.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.DomainFile[]","comment":"","type_short":"ghidra.framework.model.DomainFile[]"}},{"javadoc":"Adds a ToolListener to be notified for any of a Tool's ToolEvents.\n The listener will be notified of any events that this tool generates.\n@param listener ToolListener to be added to receive all events","static":false,"name":"addToolListener","comment":"Adds a ToolListener to be notified for any of a Tool's ToolEvents.\n The listener will be notified of any events that this tool generates.","params":[{"type_long":"ghidra.framework.model.ToolListener","name":"listener","comment":"ToolListener to be added to receive all events","type_short":"ToolListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes a ToolListener from receiving any event generated by this Tool.\n The tool will still recieve specific events that it has registered for.\n@param listener The ToolListener to be removed from receiving all events.","static":false,"name":"removeToolListener","comment":"Removes a ToolListener from receiving any event generated by this Tool.\n The tool will still recieve specific events that it has registered for.","params":[{"type_long":"ghidra.framework.model.ToolListener","name":"listener","comment":"The ToolListener to be removed from receiving all events.","type_short":"ToolListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add property change listener.","static":false,"name":"addPropertyChangeListener","comment":"Add property change listener.","params":[{"type_long":"java.beans.PropertyChangeListener","name":"l","comment":"","type_short":"PropertyChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove property change listener.","static":false,"name":"removePropertyChangeListener","comment":"Remove property change listener.","params":[{"type_long":"java.beans.PropertyChangeListener","name":"l","comment":"","type_short":"PropertyChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the classes of the data types that this tool supports,\n i.e., what data types can be dropped onto this tool.","static":false,"name":"getSupportedDataTypes","comment":"Get the classes of the data types that this tool supports,\n i.e., what data types can be dropped onto this tool.","params":[],"throws":[],"return":{"type_long":"java.lang.Class<?>[]","comment":"","type_short":"java.lang.Class<?>[]"}},{"javadoc":"Tells tool to write its data state from the given output stream.\n@param isTransactionState true if saving the toolstate is for a potential undo\/redo\n (database transaction)","static":false,"name":"saveDataStateToXml","comment":"Tells tool to write its data state from the given output stream.","params":[{"type_long":"boolean","name":"isTransactionState","comment":"true if saving the toolstate is for a potential undo\/redo\n (database transaction)","type_short":"boolean"}],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"Tells tool to read its data state from the given input stream.\n@param element XML data state","static":false,"name":"restoreDataStateFromXml","comment":"Tells tool to read its data state from the given input stream.","params":[{"type_long":"org.jdom.Element","name":"element","comment":"XML data state","type_short":"Element"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the icon for this tool.\n@param iconURL icon location","static":false,"name":"setIconURL","comment":"Set the icon for this tool.","params":[{"type_long":"docking.util.image.ToolIconURL","name":"iconURL","comment":"icon location","type_short":"ToolIconURL"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the url for the icon that this tool is using.","static":false,"name":"getIconURL","comment":"Get the url for the icon that this tool is using.","params":[],"throws":[],"return":{"type_long":"docking.util.image.ToolIconURL","comment":"","type_short":"ToolIconURL"}},{"javadoc":"Returns a ToolTemplate for this Tool that describes the state of the tool.\n@return a ToolTemplate for this Tool that describes the state of the tool.","static":false,"name":"getToolTemplate","comment":"Returns a ToolTemplate for this Tool that describes the state of the tool.","params":[{"type_long":"boolean","name":"includeConfigState","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolTemplate","comment":"a ToolTemplate for this Tool that describes the state of the tool.","type_short":"ToolTemplate"}},{"javadoc":"Save the tool and return its state as a ToolTemplate. Forces a complete \n regeneration of the tool template.\n@return a toolTemplate for this tool.","static":false,"name":"saveToolToToolTemplate","comment":"Save the tool and return its state as a ToolTemplate. Forces a complete \n regeneration of the tool template.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolTemplate","comment":"a toolTemplate for this tool.","type_short":"ToolTemplate"}},{"javadoc":"Saves the tool's Docking Window layout and positioning information to an XML element.\n@return the element containing the DockingWindow's layout information.","static":false,"name":"saveWindowingDataToXml","comment":"Saves the tool's Docking Window layout and positioning information to an XML element.","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"the element containing the DockingWindow's layout information.","type_short":"Element"}},{"javadoc":"Restores the tool's Docking Window layout and positioning information from an XML element.\n@param windowData the element containing the information.","static":false,"name":"restoreWindowingDataFromXml","comment":"Restores the tool's Docking Window layout and positioning information from an XML element.","params":[{"type_long":"org.jdom.Element","name":"windowData","comment":"the element containing the information.","type_short":"Element"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if this tool should save its data, based upon its changed state and the state\n of Ghidra's saving method.\n@return true if this tool should save its data","static":false,"name":"shouldSave","comment":"Returns true if this tool should save its data, based upon its changed state and the state\n of Ghidra's saving method.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this tool should save its data","type_short":"boolean"}},{"javadoc":"","static":false,"name":"saveToXml","comment":"","params":[{"type_long":"boolean","name":"includeConfigState","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}}],"name":"Tool","comment":"A Tool represents a collection of Plugins that are the basic building\n blocks. The plugins cooperate with one another to achieve certain\n functionality. The tool interface defines methods called by the \n Project that manages the tools.","fields":[{"type_long":"java.lang.String","javadoc":"Name of the property for the tool name.","static":true,"name":"TOOL_NAME_PROPERTY","comment":"Name of the property for the tool name.","type_short":"String","constant_value":"\"ToolName\""},{"type_long":"java.lang.String","javadoc":"Name of the property for the tool icon.","static":true,"name":"ICON_PROPERTY_NAME","comment":"Name of the property for the tool icon.","type_short":"String","constant_value":"\"Icon\""},{"type_long":"java.lang.String","javadoc":"Name of the property for the description of the tool.","static":true,"name":"DESCRIPTION_PROPERTY_NAME","comment":"Name of the property for the description of the tool.","type_short":"String","constant_value":"\"Description\""},{"type_long":"java.lang.String","javadoc":"Name of the property for the number of plugins the tool has.","static":true,"name":"PLUGIN_COUNT_PROPERTY_NAME","comment":"Name of the property for the number of plugins the tool has.","type_short":"String","constant_value":"\"PluginCount\""}]}
