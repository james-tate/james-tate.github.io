{"implements":[],"javadoc":"Interface to define methods to manage tools in a central location.","static":false,"methods":[{"javadoc":"Get the tool template for the given tool name.\n@param toolName name of tool\n@return null if there is no tool template for the given\n toolName.","static":false,"name":"getToolTemplate","comment":"Get the tool template for the given tool name.","params":[{"type_long":"java.lang.String","name":"toolName","comment":"name of tool","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolTemplate","comment":"null if there is no tool template for the given\n toolName.","type_short":"ToolTemplate"}},{"javadoc":"Get the tool templates from the tool chest.\n@return list of tool template","static":false,"name":"getToolTemplates","comment":"Get the tool templates from the tool chest.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolTemplate[]","comment":"list of tool template","type_short":"ghidra.framework.model.ToolTemplate[]"}},{"javadoc":"Add a listener to be notified when the tool chest is changed.\n@param l listener to add","static":false,"name":"addToolChestChangeListener","comment":"Add a listener to be notified when the tool chest is changed.","params":[{"type_long":"ghidra.framework.model.ToolChestChangeListener","name":"l","comment":"listener to add","type_short":"ToolChestChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove a listener that is listening to when the tool chest is changed.\n@param l to remove","static":false,"name":"removeToolChestChangeListener","comment":"Remove a listener that is listening to when the tool chest is changed.","params":[{"type_long":"ghidra.framework.model.ToolChestChangeListener","name":"l","comment":"to remove","type_short":"ToolChestChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add tool template to the tool chest.\n <br>\n Note: If the given tool template name already exists in the project, then the name will \n be altered by appending an underscore and a one-up value.  The <code>template<\/code>\n parameter's name is also updated with then new name. \n <p>\n To simply replace a tool with without changing its name, call \n {@link #replaceToolTemplate(ToolTemplate)}\n@param template tool template to add","static":false,"name":"addToolTemplate","comment":"Add tool template to the tool chest.\n \n Note: If the given tool template name already exists in the project, then the name will \n be altered by appending an underscore and a one-up value.  The template\n parameter's name is also updated with then new name. \n \n To simply replace a tool with without changing its name, call \n #replaceToolTemplate(ToolTemplate)","params":[{"type_long":"ghidra.framework.model.ToolTemplate","name":"template","comment":"tool template to add","type_short":"ToolTemplate"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Remove entry (toolTemplate or toolSet) from the tool chest.\n@param toolName name of toolConfig or toolSet to remove\n@return true if the toolConfig or toolset was\n successfully removed from the tool chest.","static":false,"name":"remove","comment":"Remove entry (toolTemplate or toolSet) from the tool chest.","params":[{"type_long":"java.lang.String","name":"toolName","comment":"name of toolConfig or toolSet to remove","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the toolConfig or toolset was\n successfully removed from the tool chest.","type_short":"boolean"}},{"javadoc":"Get the number of tools in this tool chest.\n@return tool count.","static":false,"name":"getToolCount","comment":"Get the number of tools in this tool chest.","params":[],"throws":[],"return":{"type_long":"int","comment":"tool count.","type_short":"int"}},{"javadoc":"Performs the same action as calling {@link #remove(String)} and then \n {@link #addToolTemplate(ToolTemplate)}.  However, calling this method prevents state from \n being lost in the transition, such as position in the tool chest and default tool status.\n@param template The template to add to the tool chest, replacing any tools with the same name.\n@return True if the template was added.","static":false,"name":"replaceToolTemplate","comment":"Performs the same action as calling #remove(String) and then \n #addToolTemplate(ToolTemplate).  However, calling this method prevents state from \n being lost in the transition, such as position in the tool chest and default tool status.","params":[{"type_long":"ghidra.framework.model.ToolTemplate","name":"template","comment":"The template to add to the tool chest, replacing any tools with the same name.","type_short":"ToolTemplate"}],"throws":[],"return":{"type_long":"boolean","comment":"True if the template was added.","type_short":"boolean"}}],"name":"ToolChest","comment":"Interface to define methods to manage tools in a central location.","fields":[]}
