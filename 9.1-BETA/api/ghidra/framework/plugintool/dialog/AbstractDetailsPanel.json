{"implements":[],"javadoc":"Abstract class that defines a panel for displaying name\/value pairs with html-formatting. \n <p>\n This is used with the {@link ExtensionDetailsPanel} and the {@link PluginDetailsPanel}","static":false,"extends":"javax.swing.JPanel","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets attributes for the different pieces of information being displayed in this \n panel.","static":false,"name":"createFieldAttributes","comment":"Sets attributes for the different pieces of information being displayed in this \n panel.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a new {@link SimpleAttributeSet} with all attributes set by the caller.\n@param fontFamily the font to use\n@param fontSize the font size\n@param bold if true, render text bold\n@param color the foreground text color\n@return a new attribute set","static":false,"name":"createAttributeSet","comment":"Returns a new SimpleAttributeSet with all attributes set by the caller.","params":[{"type_long":"java.lang.String","name":"fontFamily","comment":"the font to use","type_short":"String"},{"type_long":"int","name":"fontSize","comment":"the font size","type_short":"int"},{"type_long":"boolean","name":"bold","comment":"if true, render text bold","type_short":"boolean"},{"type_long":"java.awt.Color","name":"color","comment":"the foreground text color","type_short":"Color"}],"throws":[],"return":{"type_long":"javax.swing.text.SimpleAttributeSet","comment":"a new attribute set","type_short":"SimpleAttributeSet"}},{"javadoc":"Returns a new {@link SimpleAttributeSet} with the following default attributes set:\n <ul>\n <li>FontFamily: \"Tahoma\"<\/li>\n <li>FontSize: 11<\/li>\n <li>Bold: True<\/li>\n <\/ul>\n@param color the foreground text color\n@return a new attribute set","static":false,"name":"createAttributeSet","comment":"Returns a new SimpleAttributeSet with the following default attributes set:\n \n FontFamily: \"Tahoma\"\n FontSize: 11\n Bold: True\n ","params":[{"type_long":"java.awt.Color","name":"color","comment":"the foreground text color","type_short":"Color"}],"throws":[],"return":{"type_long":"javax.swing.text.SimpleAttributeSet","comment":"a new attribute set","type_short":"SimpleAttributeSet"}},{"javadoc":"Clears the text in the details pane.","static":false,"name":"clear","comment":"Clears the text in the details pane.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates the main dialog components.","static":false,"name":"createMainPanel","comment":"Creates the main dialog components.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Inserts an html-formatted string into the given buffer. This is meant to be used\n for inserting the name of each row in the description text.\n@param buffer the string buffer to add to\n@param rowName the name of the row to add","static":false,"name":"insertRowTitle","comment":"Inserts an html-formatted string into the given buffer. This is meant to be used\n for inserting the name of each row in the description text.","params":[{"type_long":"java.lang.StringBuilder","name":"buffer","comment":"the string buffer to add to","type_short":"StringBuilder"},{"type_long":"java.lang.String","name":"rowName","comment":"the name of the row to add","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Inserts an html-formatted string into the given buffer. This is meant to be used\n for inserting the value of each row in the description text.\n@param buffer the string buffer to add to\n@param value the text to add\n@param attrSet the structure containing formatting information","static":false,"name":"insertRowValue","comment":"Inserts an html-formatted string into the given buffer. This is meant to be used\n for inserting the value of each row in the description text.","params":[{"type_long":"java.lang.StringBuilder","name":"buffer","comment":"the string buffer to add to","type_short":"StringBuilder"},{"type_long":"java.lang.String","name":"value","comment":"the text to add","type_short":"String"},{"type_long":"javax.swing.text.SimpleAttributeSet","name":"attrSet","comment":"the structure containing formatting information","type_short":"SimpleAttributeSet"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds text to a string buffer as an html-formatted string, adding formatting information\n as specified.\n@param string the string to add\n@param attributeSet the formatting instructions\n@param buffer the string buffer to add to","static":false,"name":"insertHTMLString","comment":"Adds text to a string buffer as an html-formatted string, adding formatting information\n as specified.","params":[{"type_long":"java.lang.String","name":"string","comment":"the string to add","type_short":"String"},{"type_long":"javax.swing.text.SimpleAttributeSet","name":"attributeSet","comment":"the formatting instructions","type_short":"SimpleAttributeSet"},{"type_long":"java.lang.StringBuilder","name":"buffer","comment":"the string buffer to add to","type_short":"StringBuilder"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Inserts a single line of html into a {@link StringBuffer}, with the given attributes.\n@param string the string to insert\n@param attributeSet the attributes to apply\n@param buffer the string buffer","static":false,"name":"insertHTMLLine","comment":"Inserts a single line of html into a StringBuffer, with the given attributes.","params":[{"type_long":"java.lang.String","name":"string","comment":"the string to insert","type_short":"String"},{"type_long":"javax.swing.text.SimpleAttributeSet","name":"attributeSet","comment":"the attributes to apply","type_short":"SimpleAttributeSet"},{"type_long":"java.lang.StringBuilder","name":"buffer","comment":"the string buffer","type_short":"StringBuilder"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a stringified version of the {@link Color} provided; eg: \"8c0000\"\n@param color the color to parse\n@return string version of the color","static":false,"name":"createColorString","comment":"Returns a stringified version of the Color provided; eg: \"8c0000\"","params":[{"type_long":"java.awt.Color","name":"color","comment":"the color to parse","type_short":"Color"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"string version of the color","type_short":"String"}},{"javadoc":"Returns a string with line breaks at the boundary of the window it's being displayed in. \n Without this the description would just run on in one long line.\n@param descr the string to format\n@return the formatted string","static":false,"name":"formatDescription","comment":"Returns a string with line breaks at the boundary of the window it's being displayed in. \n Without this the description would just run on in one long line.","params":[{"type_long":"java.lang.String","name":"descr","comment":"the string to format","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the formatted string","type_short":"String"}},{"javadoc":"Returns the maximum size that one line of text can be when formatting the description.\n@return the number of characters in the string","static":false,"name":"getMaxStringWidth","comment":"Returns the maximum size that one line of text can be when formatting the description.","params":[],"throws":[],"return":{"type_long":"int","comment":"the number of characters in the string","type_short":"int"}}],"name":"AbstractDetailsPanel","comment":"Abstract class that defines a panel for displaying name\/value pairs with html-formatting. \n \n This is used with the ExtensionDetailsPanel and the PluginDetailsPanel","fields":[{"type_long":"int","javadoc":"","static":true,"name":"LEFT_COLUMN_WIDTH","comment":"","type_short":"int","constant_value":"150"},{"type_long":"int","javadoc":"","static":true,"name":"RIGHT_MARGIN","comment":"","type_short":"int","constant_value":"30"},{"type_long":"javax.swing.text.SimpleAttributeSet","javadoc":"","static":true,"name":"titleAttrSet","comment":"","type_short":"SimpleAttributeSet","constant_value":null},{"type_long":"javax.swing.JLabel","javadoc":"","static":false,"name":"textLabel","comment":"","type_short":"JLabel","constant_value":null},{"type_long":"java.awt.Font","javadoc":"","static":false,"name":"defaultFont","comment":"","type_short":"Font","constant_value":null},{"type_long":"javax.swing.JScrollPane","javadoc":"","static":false,"name":"sp","comment":"","type_short":"JScrollPane","constant_value":null}]}
