{"implements":["ghidra.framework.plugintool.ServiceProvider"],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"decorate","comment":"","params":[{"type_long":"ghidra.framework.plugintool.ServiceProvider","name":"delegate","comment":"","type_short":"ServiceProvider"}],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.ServiceProviderDecorator","comment":"","type_short":"ServiceProviderDecorator"}},{"javadoc":"","static":true,"name":"createEmptyDecorator","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.ServiceProviderDecorator","comment":"","type_short":"ServiceProviderDecorator"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.framework.plugintool.ServiceProvider","name":"delegate","comment":"","type_short":"ServiceProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a service that will override any service contained in the delegate \n {@link ServiceProvider}. \n \n <P>Note: this will not notify any clients that services have been changed.  This means \n that you should call this method before passing this service provider on to your clients.\n@param serviceClass the service class\n@param service the service implementation","static":false,"name":"overrideService","comment":"Adds a service that will override any service contained in the delegate \n ServiceProvider. \n \n Note: this will not notify any clients that services have been changed.  This means \n that you should call this method before passing this service provider on to your clients.","params":[{"type_long":"java.lang.Class<T>","name":"serviceClass","comment":"the service class","type_short":"Class"},{"type_long":"java.lang.Object","name":"service","comment":"the service implementation","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getService","comment":"","params":[{"type_long":"java.lang.Class<T>","name":"serviceClass","comment":"","type_short":"Class"}],"throws":[],"return":{"type_long":"T","comment":"","type_short":"T"}},{"javadoc":"","static":false,"name":"addServiceListener","comment":"","params":[{"type_long":"ghidra.framework.plugintool.util.ServiceListener","name":"listener","comment":"","type_short":"ServiceListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeServiceListener","comment":"","params":[{"type_long":"ghidra.framework.plugintool.util.ServiceListener","name":"listener","comment":"","type_short":"ServiceListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ServiceProviderDecorator","comment":"","fields":[{"type_long":"ghidra.framework.plugintool.ServiceProvider","javadoc":"","static":false,"name":"delegate","comment":"","type_short":"ServiceProvider","constant_value":null},{"type_long":"java.util.Map<java.lang.Class<?>,java.lang.Object>","javadoc":"","static":false,"name":"overriddenServices","comment":"","type_short":"Map","constant_value":null}]}
