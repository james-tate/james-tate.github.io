{"implements":[],"javadoc":"Provides a service interface that allows the user to get Options and to check for the \n existence of options.","static":false,"methods":[{"javadoc":"Get the list of options for all categories.\n@return the list of options for all categories.","static":false,"name":"getOptions","comment":"Get the list of options for all categories.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.options.Options[]","comment":"the list of options for all categories.","type_short":"ghidra.framework.options.Options[]"}},{"javadoc":"Get the options for the given category name.\n@param category name of category\n@return the options for the given category name.","static":false,"name":"getOptions","comment":"Get the options for the given category name.","params":[{"type_long":"java.lang.String","name":"category","comment":"name of category","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.framework.options.ToolOptions","comment":"the options for the given category name.","type_short":"ToolOptions"}},{"javadoc":"Return whether an Options object exists for the given category.\n@param category name of the category\n@return true if an Options object exists","static":false,"name":"hasOptions","comment":"Return whether an Options object exists for the given category.","params":[{"type_long":"java.lang.String","name":"category","comment":"name of the category","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if an Options object exists","type_short":"boolean"}},{"javadoc":"Shows Options Dialog with the node denoted by \"category\" being displayed.  The value is\n expected to be the name of a node in the options tree, residing under the root node.  You \n may also provide the name of such a node, followed by the options delimiter, followed by\n the name of a child node under that node.  For example, suppose in the options tree exists\n a node <pre>Root->Foo<\/pre>  You may pass the value \"Foo\" to get that node.  Or, suppose\n in the options tree exists a node <pre>Root->Foo->childNode1<\/pre>  In this case, you may\n pass the value \"Foo.childNode1\", where the '.' character is the delimiter of the \n {@link ToolOptions} class (this is the value at the time of writing this documentation).\n \n <p>\n The filter text parameter is used to set the contents filter text of the options.  You may\n use this parameter to filter the tree; for example, to show only the node in the tree that\n you want the user to see.\n@param category The category of options to have displayed\n@param filterText An optional value used to filter the nodes visible in the options tree.\n                   You may pass <tt>null<\/tt> or the empty string <tt>\"\"<\/tt> here if you\n                   do not desire filtering.\n@throws IllegalArgumentException if the given <tt>category<\/tt> value does not exist in\n                                  the tree of options.","static":false,"name":"showOptionsDialog","comment":"Shows Options Dialog with the node denoted by \"category\" being displayed.  The value is\n expected to be the name of a node in the options tree, residing under the root node.  You \n may also provide the name of such a node, followed by the options delimiter, followed by\n the name of a child node under that node.  For example, suppose in the options tree exists\n a node Root-Foo  You may pass the value \"Foo\" to get that node.  Or, suppose\n in the options tree exists a node Root-Foo-childNode1  In this case, you may\n pass the value \"Foo.childNode1\", where the '.' character is the delimiter of the \n ToolOptions class (this is the value at the time of writing this documentation).\n \n \n The filter text parameter is used to set the contents filter text of the options.  You may\n use this parameter to filter the tree; for example, to show only the node in the tree that\n you want the user to see.","params":[{"type_long":"java.lang.String","name":"category","comment":"The category of options to have displayed","type_short":"String"},{"type_long":"java.lang.String","name":"filterText","comment":"An optional value used to filter the nodes visible in the options tree.\n                   You may pass null or the empty string \"\" here if you\n                   do not desire filtering.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"OptionsService","comment":"Provides a service interface that allows the user to get Options and to check for the \n existence of options.","fields":[]}
