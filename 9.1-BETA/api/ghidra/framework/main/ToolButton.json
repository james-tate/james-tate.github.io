{"implements":["docking.dnd.Draggable","docking.dnd.Droppable"],"javadoc":"Component that is a drop target for a DataTreeTransferable object.\n If the object contains a domain file that is supported by a tool of\n this tool template, then a tool is launched with the data in it.\n <p>\n This button can be used in one of two ways: to launch new instances of an associated tool \n template, or to represent a running tool.","static":false,"extends":"docking.widgets.EmptyBorderButton","methods":[{"javadoc":"Construct a tool button that does not represent a running tool, using\n the default tool icon.","static":false,"name":"<init>","comment":"Construct a tool button that does not represent a running tool, using\n the default tool icon.","params":[{"type_long":"ghidra.framework.main.FrontEndPlugin","name":"plugin","comment":"","type_short":"FrontEndPlugin"},{"type_long":"ghidra.framework.model.ToolTemplate","name":"template","comment":"","type_short":"ToolTemplate"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a tool label that represents a running tool, using the\n default RUNNING_TOOL icon.","static":false,"name":"<init>","comment":"Construct a tool label that represents a running tool, using the\n default RUNNING_TOOL icon.","params":[{"type_long":"ghidra.framework.main.FrontEndPlugin","name":"plugin","comment":"","type_short":"FrontEndPlugin"},{"type_long":"ghidra.framework.model.Tool","name":"tool","comment":"","type_short":"Tool"},{"type_long":"ghidra.framework.model.ToolTemplate","name":"template","comment":"","type_short":"ToolTemplate"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a tool label that represents a running tool.","static":false,"name":"<init>","comment":"Construct a tool label that represents a running tool.","params":[{"type_long":"ghidra.framework.main.FrontEndPlugin","name":"plugin","comment":"","type_short":"FrontEndPlugin"},{"type_long":"ghidra.framework.model.Tool","name":"tool","comment":"","type_short":"Tool"},{"type_long":"ghidra.framework.model.ToolTemplate","name":"template","comment":"","type_short":"ToolTemplate"},{"type_long":"docking.util.image.ToolIconURL","name":"iconURL","comment":"","type_short":"ToolIconURL"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the tool tip text.","static":false,"name":"getToolTipText","comment":"Get the tool tip text.","params":[{"type_long":"java.awt.event.MouseEvent","name":"event","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"launchTool","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"","type_short":"DomainFile"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set drag feedback according to the OK parameter.\n@param ok true means the drop action is OK\n@param e event that has current state of drag and drop operation","static":false,"name":"dragUnderFeedback","comment":"Set drag feedback according to the OK parameter.","params":[{"type_long":"boolean","name":"ok","comment":"true means the drop action is OK","type_short":"boolean"},{"type_long":"java.awt.dnd.DropTargetDragEvent","name":"e","comment":"event that has current state of drag and drop operation","type_short":"DropTargetDragEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return true if is OK to drop the transferable at the location\n specified the event.\n@param e event that has current state of drag and drop operation","static":false,"name":"isDropOk","comment":"Return true if is OK to drop the transferable at the location\n specified the event.","params":[{"type_long":"java.awt.dnd.DropTargetDragEvent","name":"e","comment":"event that has current state of drag and drop operation","type_short":"DropTargetDragEvent"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"The given list must contain only valid domain files (i.e., no folders or null items)\n@param nodeList The list of DataTreeNode objects to validate\n@return true if <b>all<\/b> items in the list are supported","static":false,"name":"containsSupportedDataTypes","comment":"The given list must contain only valid domain files (i.e., no folders or null items)","params":[{"type_long":"java.util.List<ghidra.framework.model.DomainFile>","name":"fileList","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"boolean","comment":"true if all items in the list are supported","type_short":"boolean"}},{"javadoc":"Revert back to normal if any drag feedback was set.","static":false,"name":"undoDragUnderFeedback","comment":"Revert back to normal if any drag feedback was set.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add the object to the droppable component. The DropTgtAdapter\n calls this method from its drop() method.\n@param obj Transferable object that is to be dropped.\n@param e has current state of drop operation\n@param f represents the opaque concept of a data format as\n would appear on a clipboard, during drag and drop.","static":false,"name":"add","comment":"Add the object to the droppable component. The DropTgtAdapter\n calls this method from its drop() method.","params":[{"type_long":"java.lang.Object","name":"obj","comment":"Transferable object that is to be dropped.","type_short":"Object"},{"type_long":"java.awt.dnd.DropTargetDropEvent","name":"event","comment":"","type_short":"DropTargetDropEvent"},{"type_long":"java.awt.datatransfer.DataFlavor","name":"f","comment":"represents the opaque concept of a data format as\n would appear on a clipboard, during drag and drop.","type_short":"DataFlavor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"showFilesNotAcceptedMessage","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFile[]","name":"domainFiles","comment":"","type_short":"ghidra.framework.model.DomainFile[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addFromToolButton","comment":"","params":[{"type_long":"ghidra.framework.main.ToolButton","name":"toolButton","comment":"","type_short":"ToolButton"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Connect the tools in both directions.","static":false,"name":"connectTools","comment":"Connect the tools in both directions.","params":[{"type_long":"ghidra.framework.model.Tool","name":"t1","comment":"","type_short":"Tool"},{"type_long":"ghidra.framework.model.Tool","name":"t2","comment":"","type_short":"Tool"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Connect all events in the connection object.","static":false,"name":"connectAll","comment":"Connect all events in the connection object.","params":[{"type_long":"ghidra.framework.model.ToolConnection","name":"tc","comment":"","type_short":"ToolConnection"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return true if the domain file's object class is supported by\n this tool.","static":false,"name":"isSupportedDataType","comment":"Return true if the domain file's object class is supported by\n this tool.","params":[{"type_long":"ghidra.framework.model.DomainFile","name":"file","comment":"","type_short":"DomainFile"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getVersionedObject","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFile","name":"file","comment":"","type_short":"DomainFile"},{"type_long":"int","name":"versionNumber","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.framework.model.DomainObject","comment":"","type_short":"DomainObject"}},{"javadoc":"Fix the button state after dragging\/dropping, since this is broken in Java","static":false,"name":"resetButtonAfterDrag","comment":"Fix the button state after dragging\/dropping, since this is broken in Java","params":[{"type_long":"javax.swing.JButton","name":"button","comment":"","type_short":"JButton"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Method called when the drag operation exits the drop target\n without dropping.","static":false,"name":"dragCanceled","comment":"Method called when the drag operation exits the drop target\n without dropping.","params":[{"type_long":"java.awt.dnd.DragSourceDropEvent","name":"event","comment":"","type_short":"DragSourceDropEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return true if the object at the location in the DragGesture\n event is draggable.\n@param e event passed to a DragGestureListener via its\n dragGestureRecognized() method when a particular DragGestureRecognizer\n detects a platform dependent Drag and Drop action initiating\n gesture has occurred on the Component it is tracking.\n@see docking.dnd.DragGestureAdapter","static":false,"name":"isStartDragOk","comment":"Return true if the object at the location in the DragGesture\n event is draggable.","params":[{"type_long":"java.awt.dnd.DragGestureEvent","name":"e","comment":"event passed to a DragGestureListener via its\n dragGestureRecognized() method when a particular DragGestureRecognizer\n detects a platform dependent Drag and Drop action initiating\n gesture has occurred on the Component it is tracking.","type_short":"DragGestureEvent"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Called by the DragGestureAdapter to start the drag.","static":false,"name":"getDragSourceListener","comment":"Called by the DragGestureAdapter to start the drag.","params":[],"throws":[],"return":{"type_long":"java.awt.dnd.DragSourceListener","comment":"","type_short":"DragSourceListener"}},{"javadoc":"Get the object to transfer.\n@param p location of object to transfer\n@return object to transfer","static":false,"name":"getTransferable","comment":"Get the object to transfer.","params":[{"type_long":"java.awt.Point","name":"p","comment":"location of object to transfer","type_short":"Point"}],"throws":[],"return":{"type_long":"java.awt.datatransfer.Transferable","comment":"object to transfer","type_short":"Transferable"}},{"javadoc":"Do the move operation; called when the drag and drop operation\n completes.\n@see ghidra.util.bean.dnd.DragSourceAdapter#dragDropEnd","static":false,"name":"move","comment":"Do the move operation; called when the drag and drop operation\n completes.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the drag actions supported by this drag source:\n <UL>\n <li>DnDConstants.ACTION_MOVE\n <li>DnDConstants.ACTION_COPY\n <li>DnDConstants.ACTION_COPY_OR_MOVE\n <\/li>\n@return the drag actions","static":false,"name":"getDragAction","comment":"Get the drag actions supported by this drag source:\n \n DnDConstants.ACTION_MOVE\n DnDConstants.ACTION_COPY\n DnDConstants.ACTION_COPY_OR_MOVE\n ","params":[],"throws":[],"return":{"type_long":"int","comment":"the drag actions","type_short":"int"}},{"javadoc":"Set the tool template for this button.","static":false,"name":"setToolTemplate","comment":"Set the tool template for this button.","params":[{"type_long":"ghidra.framework.model.ToolTemplate","name":"template","comment":"","type_short":"ToolTemplate"},{"type_long":"javax.swing.Icon","name":"icon","comment":"","type_short":"Icon"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getToolTemplate","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolTemplate","comment":"","type_short":"ToolTemplate"}},{"javadoc":"Return whether this tool button represents a running tool.","static":false,"name":"isRunningTool","comment":"Return whether this tool button represents a running tool.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Close the running tool.","static":false,"name":"closeTool","comment":"Close the running tool.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getRunningTool","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.Tool","comment":"","type_short":"Tool"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"activateTool","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doLaunchTool","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFile[]","name":"domainFiles","comment":"","type_short":"ghidra.framework.model.DomainFile[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"openFilesAndOpenToolAsNecessary","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFile[]","name":"domainFiles","comment":"","type_short":"ghidra.framework.model.DomainFile[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"openFilesAndOpenToolAsNecessary","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFile[]","name":"domainFiles","comment":"","type_short":"ghidra.framework.model.DomainFile[]"},{"type_long":"java.lang.Runnable","name":"finishedCallback","comment":"","type_short":"Runnable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"launchToolWithAnimationAndOpenFiles","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFile[]","name":"domainFiles","comment":"","type_short":"ghidra.framework.model.DomainFile[]"},{"type_long":"javax.swing.JFrame","name":"toolFrame","comment":"","type_short":"JFrame"},{"type_long":"ghidra.util.bean.GGlassPane","name":"toolGlassPane","comment":"","type_short":"GGlassPane"},{"type_long":"java.lang.Runnable","name":"finishedCallback","comment":"","type_short":"Runnable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"openDomainFiles","comment":"","params":[{"type_long":"ghidra.framework.model.Tool","name":"tool","comment":"","type_short":"Tool"},{"type_long":"ghidra.framework.model.DomainFile[]","name":"domainFiles","comment":"","type_short":"ghidra.framework.model.DomainFile[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set up the objects so we can be a drag and drop site.","static":false,"name":"setUpDragDrop","comment":"Set up the objects so we can be a drag and drop site.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"generateIcon","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.Icon","comment":"","type_short":"Icon"}},{"javadoc":"","static":false,"name":"setHelpLocation","comment":"","params":[{"type_long":"java.lang.String","name":"anchorTag","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"handleMouseReleased","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ToolButton","comment":"Component that is a drop target for a DataTreeTransferable object.\n If the object contains a domain file that is supported by a tool of\n this tool template, then a tool is launched with the data in it.\n \n This button can be used in one of two ways: to launch new instances of an associated tool \n template, or to represent a running tool.","fields":[{"type_long":"java.lang.Runnable","javadoc":"","static":true,"name":"DUMMY_CALLBACK_RUNNABLE","comment":"","type_short":"Runnable","constant_value":null},{"type_long":"java.awt.dnd.DropTarget","javadoc":"","static":false,"name":"dropTarget","comment":"","type_short":"DropTarget","constant_value":null},{"type_long":"docking.dnd.DropTgtAdapter","javadoc":"","static":false,"name":"dropTargetAdapter","comment":"","type_short":"DropTgtAdapter","constant_value":null},{"type_long":"java.awt.datatransfer.DataFlavor[]","javadoc":"","static":false,"name":"acceptableFlavors","comment":"","type_short":"java.awt.datatransfer.DataFlavor[]","constant_value":null},{"type_long":"java.awt.dnd.DragSource","javadoc":"","static":false,"name":"dragSource","comment":"","type_short":"DragSource","constant_value":null},{"type_long":"docking.dnd.DragGestureAdapter","javadoc":"","static":false,"name":"dragGestureAdapter","comment":"","type_short":"DragGestureAdapter","constant_value":null},{"type_long":"docking.dnd.DragSrcAdapter","javadoc":"","static":false,"name":"dragSourceAdapter","comment":"","type_short":"DragSrcAdapter","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"dragAction","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.framework.main.FrontEndPlugin","javadoc":"","static":false,"name":"plugin","comment":"","type_short":"FrontEndPlugin","constant_value":null},{"type_long":"ghidra.framework.model.ToolTemplate","javadoc":"","static":false,"name":"template","comment":"","type_short":"ToolTemplate","constant_value":null},{"type_long":"ghidra.framework.model.Tool","javadoc":"","static":false,"name":"associatedRunningTool","comment":"","type_short":"Tool","constant_value":null},{"type_long":"ghidra.framework.model.DefaultToolChangeListener","javadoc":"","static":false,"name":"toolChangeListener","comment":"","type_short":"DefaultToolChangeListener","constant_value":null},{"type_long":"ghidra.framework.model.ToolServices","javadoc":"","static":false,"name":"toolServices","comment":"","type_short":"ToolServices","constant_value":null}]}
