{"implements":[],"javadoc":"Class for saving values in \"serializable safe\" way.  Classes that want to be\n able to save their state can do so using the SaveState object.\n The idea is that each state variable in the class\n is first saved into a SaveState object via a String key.  Then the SaveState\n object is written out to an XML element.  When the save state object is\n to be restored, the saveState object is constructed with an XML Element\n that contains all of the name\/value pairs. Since the \"get\" methods require\n a default value, the object that is recovering its state variables\n will be successfully initialized even if\n the given key,value pair is not found in the SaveState object.\n <p> <i>Note: Names for options are assumed to be unique. When a putXXX()\n method is called, if a value already exists for a name, it will\n be overwritten.<\/i>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a new saveState object.\n@param name of the state","static":false,"name":"<init>","comment":"Creates a new saveState object.","params":[{"type_long":"java.lang.String","name":"name","comment":"of the state","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Default Constructor for SaveState; uses \"SAVE_STATE\" as the\n name of the state.\n@see java.lang.Object#Object()","static":false,"name":"<init>","comment":"Default Constructor for SaveState; uses \"SAVE_STATE\" as the\n name of the state.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a SaveState from a file containing XML from a previously saved SaveState.\n@param file the file containing the XML to read.\n@throws IOException if the file can't be read or is not formatted properly for a SaveState","static":false,"name":"<init>","comment":"Construct a SaveState from a file containing XML from a previously saved SaveState.","params":[{"type_long":"java.io.File","name":"file","comment":"the file containing the XML to read.","type_short":"File"}],"throws":[{"type_long":"java.io.IOException","comment":"if the file can't be read or is not formatted properly for a SaveState","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new SaveState object using the given XML element.\n@param root XML contents of the save state","static":false,"name":"<init>","comment":"Construct a new SaveState object using the given XML element.","params":[{"type_long":"org.jdom.Element","name":"root","comment":"XML contents of the save state","type_short":"Element"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Save this object to an XML element.\n@return Element XML element containing the state","static":false,"name":"saveToXml","comment":"Save this object to an XML element.","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"Element XML element containing the state","type_short":"Element"}},{"javadoc":"","static":true,"name":"getXmlElementFromFile","comment":"","params":[{"type_long":"java.io.File","name":"file","comment":"","type_short":"File"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"Write the saveState to a file as XML\n@param file the file to write to.\n@throws FileNotFoundException if the file does not represent a valid file path.\n@throws IOException if the file could not be written","static":false,"name":"saveToFile","comment":"Write the saveState to a file as XML","params":[{"type_long":"java.io.File","name":"file","comment":"the file to write to.","type_short":"File"}],"throws":[{"type_long":"java.io.FileNotFoundException","comment":"if the file does not represent a valid file path.","type_short":"FileNotFoundException"},{"type_long":"java.io.IOException","comment":"if the file could not be written","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Save this object to an XML element.\n Restrict child elements to the set specified.\n@param restrictedSet restricted set of element names or null for all names\n@return Element XML element containing the state","static":false,"name":"saveToXml","comment":"Save this object to an XML element.\n Restrict child elements to the set specified.","params":[{"type_long":"java.util.Set<java.lang.String>","name":"restrictedSet","comment":"restricted set of element names or null for all names","type_short":"Set"}],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"Element XML element containing the state","type_short":"Element"}},{"javadoc":"","static":false,"name":"createElementFromElement","comment":"","params":[{"type_long":"java.lang.String","name":"internalKey","comment":"","type_short":"String"},{"type_long":"org.jdom.Element","name":"internalElement","comment":"","type_short":"Element"}],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"Return whether anything was added to this save state.","static":false,"name":"isEmpty","comment":"Return whether anything was added to this save state.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Remove the object identified by the given name.","static":false,"name":"remove","comment":"Remove the object identified by the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clear all objects from the save state.","static":false,"name":"clear","comment":"Clear all objects from the save state.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return the number of objects in the save state.","static":false,"name":"size","comment":"Return the number of objects in the save state.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Return the names of the objects saved in the state.\n@return String[] array will be zero length if the save state\n is empty","static":false,"name":"getNames","comment":"Return the names of the objects saved in the state.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"String[] array will be zero length if the save state\n is empty","type_short":"java.lang.String[]"}},{"javadoc":"","static":false,"name":"putObject","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getObject","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.Object","comment":"","type_short":"Object"}},{"javadoc":"Associates an integer value with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putInt","comment":"Associates an integer value with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"int","name":"value","comment":"The value in the name,value pair.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a byte value with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putByte","comment":"Associates a byte value with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"byte","name":"value","comment":"The value in the name,value pair.","type_short":"byte"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a short value with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putShort","comment":"Associates a short value with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"short","name":"value","comment":"The value in the name,value pair.","type_short":"short"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a long value with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putLong","comment":"Associates a long value with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"long","name":"value","comment":"The value in the name,value pair.","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a String value with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putString","comment":"Associates a String value with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"java.lang.String","name":"value","comment":"The value in the name,value pair.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a boolean value with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putBoolean","comment":"Associates a boolean value with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"boolean","name":"value","comment":"The value in the name,value pair.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a float value with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putFloat","comment":"Associates a float value with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"float","name":"value","comment":"The value in the name,value pair.","type_short":"float"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a double value with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putDouble","comment":"Associates a double value with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"double","name":"value","comment":"The value in the name,value pair.","type_short":"double"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the int value for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the int value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getInt","comment":"Gets the int value for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"int","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"the int value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"int"}},{"javadoc":"Gets the byte value for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the byte value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getByte","comment":"Gets the byte value for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"byte","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"byte"}],"throws":[],"return":{"type_long":"byte","comment":"the byte value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"byte"}},{"javadoc":"Gets the short value for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the short value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getShort","comment":"Gets the short value for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"short","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"short"}],"throws":[],"return":{"type_long":"short","comment":"the short value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"short"}},{"javadoc":"Gets the long value for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the long value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getLong","comment":"Gets the long value for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"long","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"long"}],"throws":[],"return":{"type_long":"long","comment":"the long value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"long"}},{"javadoc":"Gets the boolean value for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the boolean value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getBoolean","comment":"Gets the boolean value for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"boolean","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"the boolean value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"boolean"}},{"javadoc":"Gets the String value for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the String value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getString","comment":"Gets the String value for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"java.lang.String","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the String value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"String"}},{"javadoc":"Gets the float value for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the float value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getFloat","comment":"Gets the float value for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"float","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"float"}],"throws":[],"return":{"type_long":"float","comment":"the float value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"float"}},{"javadoc":"Gets the double value for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the double value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getDouble","comment":"Gets the double value for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"double","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"double"}],"throws":[],"return":{"type_long":"double","comment":"the double value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"double"}},{"javadoc":"Associates an integer array with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putInts","comment":"Associates an integer array with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"int[]","name":"value","comment":"The value in the name,value pair.","type_short":"int[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a byte array with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putBytes","comment":"Associates a byte array with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"byte[]","name":"value","comment":"The value in the name,value pair.","type_short":"byte[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a short array with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putShorts","comment":"Associates a short array with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"short[]","name":"value","comment":"The value in the name,value pair.","type_short":"short[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a long array with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putLongs","comment":"Associates a long array with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"long[]","name":"value","comment":"The value in the name,value pair.","type_short":"long[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a String array with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putStrings","comment":"Associates a String array with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"java.lang.String[]","name":"value","comment":"The value in the name,value pair.","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates an Enum with the given name.\n@param name The name in the name,value pair.\n@param value The Enum value in the name,value pair.","static":false,"name":"putEnum","comment":"Associates an Enum with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"java.lang.Enum<?>","name":"value","comment":"The Enum value in the name,value pair.","type_short":"Enum"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a boolean array with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putBooleans","comment":"Associates a boolean array with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"boolean[]","name":"value","comment":"The value in the name,value pair.","type_short":"boolean[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a float array with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putFloats","comment":"Associates a float array with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"float[]","name":"value","comment":"The value in the name,value pair.","type_short":"float[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a double value with the given name.\n@param name The name in the name,value pair.\n@param value The value in the name,value pair.","static":false,"name":"putDoubles","comment":"Associates a double value with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name in the name,value pair.","type_short":"String"},{"type_long":"double[]","name":"value","comment":"The value in the name,value pair.","type_short":"double[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the int array for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the int array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getInts","comment":"Gets the int array for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"int[]","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"int[]"}],"throws":[],"return":{"type_long":"int[]","comment":"the int array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"int[]"}},{"javadoc":"Gets the byte array for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the byte array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getBytes","comment":"Gets the byte array for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"byte[]","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"byte[]"}],"throws":[],"return":{"type_long":"byte[]","comment":"the byte array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"byte[]"}},{"javadoc":"Gets the short array for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the short array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getShorts","comment":"Gets the short array for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"short[]","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"short[]"}],"throws":[],"return":{"type_long":"short[]","comment":"the short array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"short[]"}},{"javadoc":"Gets the long array for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the long array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getLongs","comment":"Gets the long array for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"long[]","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"long[]"}],"throws":[],"return":{"type_long":"long[]","comment":"the long array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"long[]"}},{"javadoc":"Gets the boolean array for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the boolean array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getBooleans","comment":"Gets the boolean array for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"boolean[]","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"boolean[]"}],"throws":[],"return":{"type_long":"boolean[]","comment":"the boolean array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"boolean[]"}},{"javadoc":"Gets the String array for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the String array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getStrings","comment":"Gets the String array for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"java.lang.String[]","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"the String array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"java.lang.String[]"}},{"javadoc":"Gets the Enum value for the given name.\n@param name the name of the pair.\n@param defaultValue the default Enum value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the Enum value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getEnum","comment":"Gets the Enum value for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"T","name":"defaultValue","comment":"the default Enum value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"T"}],"throws":[],"return":{"type_long":"T","comment":"the Enum value associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"T"}},{"javadoc":"Gets the float array for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the float array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getFloats","comment":"Gets the float array for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"float[]","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"float[]"}],"throws":[],"return":{"type_long":"float[]","comment":"the float array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"float[]"}},{"javadoc":"Gets the double array for the given name.\n@param name the name of the pair.\n@param defaultValue the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.\n@return the double array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","static":false,"name":"getDoubles","comment":"Gets the double array for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the pair.","type_short":"String"},{"type_long":"double[]","name":"defaultValue","comment":"the default value to be returned if the name does\n not exist in the map, or it does not contain the proper object type.","type_short":"double[]"}],"throws":[],"return":{"type_long":"double[]","comment":"the double array associated with the given name or the defaultValue\n passed in if the name doesn't exist or is the wrong type.","type_short":"double[]"}},{"javadoc":"Returns true if the SaveState object has a value for the given name.","static":false,"name":"hasValue","comment":"Returns true if the SaveState object has a value for the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Adds an XML element to the\n saved state object. Used by plugins that have more\n complicated state information that needs to be saved.\n@param name the name to associate with the element\n@param element XML element which is the root of an\n XML sub-tree.","static":false,"name":"putXmlElement","comment":"Adds an XML element to the\n saved state object. Used by plugins that have more\n complicated state information that needs to be saved.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name to associate with the element","type_short":"String"},{"type_long":"org.jdom.Element","name":"element","comment":"XML element which is the root of an\n XML sub-tree.","type_short":"Element"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the root of an XML sub-tree associated with the\n given name.\n@param name The name associated with the desired Element.\n@return The root of an XML sub-tree associated with the\n given name.","static":false,"name":"getXmlElement","comment":"Returns the root of an XML sub-tree associated with the\n given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name associated with the desired Element.","type_short":"String"}],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"The root of an XML sub-tree associated with the\n given name.","type_short":"Element"}}],"name":"SaveState","comment":"Class for saving values in \"serializable safe\" way.  Classes that want to be\n able to save their state can do so using the SaveState object.\n The idea is that each state variable in the class\n is first saved into a SaveState object via a String key.  Then the SaveState\n object is written out to an XML element.  When the save state object is\n to be restored, the saveState object is constructed with an XML Element\n that contains all of the name\/value pairs. Since the \"get\" methods require\n a default value, the object that is recovering its state variables\n will be successfully initialized even if\n the given key,value pair is not found in the SaveState object.\n  Note: Names for options are assumed to be unique. When a putXXX()\n method is called, if a value already exists for a name, it will\n be overwritten.","fields":[{"type_long":"java.util.HashMap<java.lang.String,java.lang.Object>","javadoc":"","static":false,"name":"map","comment":"","type_short":"HashMap","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"saveStateName","comment":"","type_short":"String","constant_value":null}]}
