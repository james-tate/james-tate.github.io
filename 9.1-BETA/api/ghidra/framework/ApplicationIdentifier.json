{"implements":[],"javadoc":"Class to represent an application's unique identifier.  An application identifier is made up\n of an application name, an application version, and an application release name.\n <pre>\n The identifier format is (\\.+) - \\d\\.\\d(\\.\\d)?(\\-.+)? _ (\\.+)\n                          name         version        release name\n <\/pre>\n Application names will be converted to all lowercase and application release names will be\n converted to all uppercase.  Both will have spaces removed from their names.\n <p>\n Examples:\n <li>ghidra-7.4_DEV","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a new {@link ApplicationIdentifier} object from an {@link ApplicationProperties}.\n@param applicationProperties An {@link ApplicationProperties}.\n@throws IllegalArgumentException if required elements from the {@link ApplicationProperties} \n   were missing or otherwise failed to parse.  The exception's message has more detailed \n   information about why it failed.","static":false,"name":"<init>","comment":"Creates a new ApplicationIdentifier object from an ApplicationProperties.","params":[{"type_long":"ghidra.framework.ApplicationProperties","name":"applicationProperties","comment":"An ApplicationProperties.","type_short":"ApplicationProperties"}],"throws":[{"type_long":"java.lang.IllegalArgumentException","comment":"if required elements from the ApplicationProperties \n   were missing or otherwise failed to parse.  The exception's message has more detailed \n   information about why it failed.","type_short":"IllegalArgumentException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new {@link ApplicationIdentifier} object from the given string.\n@param identifier An identifier string.\n@throws IllegalArgumentException if the identifier string failed to parse.  The \n   exception's message has more detailed information about why it failed.","static":false,"name":"<init>","comment":"Creates a new ApplicationIdentifier object from the given string.","params":[{"type_long":"java.lang.String","name":"identifier","comment":"An identifier string.","type_short":"String"}],"throws":[{"type_long":"java.lang.IllegalArgumentException","comment":"if the identifier string failed to parse.  The \n   exception's message has more detailed information about why it failed.","type_short":"IllegalArgumentException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the application name.\n@return The application name.","static":false,"name":"getApplicationName","comment":"Gets the application name.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"The application name.","type_short":"String"}},{"javadoc":"Gets the {@link ApplicationVersion application version}.\n@return The {@link ApplicationVersion application version}.","static":false,"name":"getApplicationVersion","comment":"Gets the ApplicationVersion.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.ApplicationVersion","comment":"The ApplicationVersion.","type_short":"ApplicationVersion"}},{"javadoc":"Gets the application release name.\n@return The application release name.","static":false,"name":"getApplicationReleaseName","comment":"Gets the application release name.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"The application release name.","type_short":"String"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Parses application identifier components out of the given version string.\n@param identifier An identifier string.\n@throws IllegalArgumentException if the identifier string failed to parse.  The \n   exception's message has more detailed information about why it failed.","static":false,"name":"parse","comment":"Parses application identifier components out of the given version string.","params":[{"type_long":"java.lang.String","name":"identifier","comment":"An identifier string.","type_short":"String"}],"throws":[{"type_long":"java.lang.IllegalArgumentException","comment":"if the identifier string failed to parse.  The \n   exception's message has more detailed information about why it failed.","type_short":"IllegalArgumentException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ApplicationIdentifier","comment":"Class to represent an application's unique identifier.  An application identifier is made up\n of an application name, an application version, and an application release name.\n \n The identifier format is (\\.+) - \\d\\.\\d(\\.\\d)?(\\-.+)? _ (\\.+)\n                          name         version        release name\n \n Application names will be converted to all lowercase and application release names will be\n converted to all uppercase.  Both will have spaces removed from their names.\n \n Examples:\n ghidra-7.4_DEV","fields":[{"type_long":"java.lang.String","javadoc":"","static":false,"name":"applicationName","comment":"","type_short":"String","constant_value":null},{"type_long":"ghidra.framework.ApplicationVersion","javadoc":"","static":false,"name":"applicationVersion","comment":"","type_short":"ApplicationVersion","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"applicationReleaseName","comment":"","type_short":"String","constant_value":null}]}
