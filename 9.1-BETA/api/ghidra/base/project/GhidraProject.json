{"implements":[],"javadoc":"Helper class for using Ghidra in a \"batch\" mode. This class provides methods\n for importing, opening, saving, and analyzing program.\n <p>\n <b>Note: <\/b>Before using this class you must initialize the Ghidra system.  See\n {@link Application#initializeApplication} for more information.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Returns an instance of an open Ghidra Project that can be used to\n open\/save programs.\n@param projectsDir the directory containing the Ghidra project.\n@param projectName the name of the ghidra project.\n@return an open ghidra project.\n@throws IOException if there was a problem accessing the project","static":true,"name":"openProject","comment":"Returns an instance of an open Ghidra Project that can be used to\n open\/save programs.","params":[{"type_long":"java.lang.String","name":"projectsDir","comment":"the directory containing the Ghidra project.","type_short":"String"},{"type_long":"java.lang.String","name":"projectName","comment":"the name of the ghidra project.","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the project","type_short":"IOException"}],"return":{"type_long":"ghidra.base.project.GhidraProject","comment":"an open ghidra project.","type_short":"GhidraProject"}},{"javadoc":"Returns an instance of an open Ghidra Project that can be used to\n open\/save programs.\n@param projectsDir the directory containing the Ghidra project.\n@param projectName the name of the ghidra project.\n@param restoreProject if true the project tool state is restored\n@return an open ghidra project.\n@throws IOException if there was a problem accessing the project","static":true,"name":"openProject","comment":"Returns an instance of an open Ghidra Project that can be used to\n open\/save programs.","params":[{"type_long":"java.lang.String","name":"projectsDir","comment":"the directory containing the Ghidra project.","type_short":"String"},{"type_long":"java.lang.String","name":"projectName","comment":"the name of the ghidra project.","type_short":"String"},{"type_long":"boolean","name":"restoreProject","comment":"if true the project tool state is restored","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the project","type_short":"IOException"}],"return":{"type_long":"ghidra.base.project.GhidraProject","comment":"an open ghidra project.","type_short":"GhidraProject"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"projectParentDir","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"projectName","comment":"","type_short":"String"},{"type_long":"boolean","name":"restoreProject","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new non-shared Ghidra project to be used for storing programs.\n \n <P><B>Note:  Calling this method will delete any existing project files on disk that \n match the given project name. \n <\/B>\n@param projectDirPath the directory path to contain the new Ghidra project.\n@param projectName the name of the project to be created.\n@param temporary if true, deletes the the project when it is closed - useful for testing.\n@return an open ghidra project.\n@throws IOException if there was a problem accessing the project","static":true,"name":"createProject","comment":"Creates a new non-shared Ghidra project to be used for storing programs.\n \n Note:  Calling this method will delete any existing project files on disk that \n match the given project name. \n ","params":[{"type_long":"java.lang.String","name":"projectDirPath","comment":"the directory path to contain the new Ghidra project.","type_short":"String"},{"type_long":"java.lang.String","name":"projectName","comment":"the name of the project to be created.","type_short":"String"},{"type_long":"boolean","name":"temporary","comment":"if true, deletes the the project when it is closed - useful for testing.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the project","type_short":"IOException"}],"return":{"type_long":"ghidra.base.project.GhidraProject","comment":"an open ghidra project.","type_short":"GhidraProject"}},{"javadoc":"Get\/Create shared repository.\n@param host Ghidra Server host\n@param port Ghidra Server port (0 = use default port)\n@param repositoryName\n@param createIfNeeded if true repository will be created if it does not exist\n@throws DuplicateNameException","static":true,"name":"getServerRepository","comment":"Get\/Create shared repository.","params":[{"type_long":"java.lang.String","name":"host","comment":"Ghidra Server host","type_short":"String"},{"type_long":"int","name":"port","comment":"Ghidra Server port (0 = use default port)","type_short":"int"},{"type_long":"java.lang.String","name":"repositoryName","comment":"","type_short":"String"},{"type_long":"boolean","name":"createIfNeeded","comment":"if true repository will be created if it does not exist","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.framework.client.RepositoryAdapter","comment":"","type_short":"RepositoryAdapter"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.framework.model.Project","name":"project","comment":"","type_short":"Project"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"projectParentDir","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"projectName","comment":"","type_short":"String"},{"type_long":"ghidra.framework.client.RepositoryAdapter","name":"repository","comment":"","type_short":"RepositoryAdapter"},{"type_long":"boolean","name":"temporary","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the project manager\n@return the project manager","static":false,"name":"getProjectManager","comment":"Returns the project manager","params":[],"throws":[],"return":{"type_long":"ghidra.framework.project.DefaultProjectManager","comment":"the project manager","type_short":"DefaultProjectManager"}},{"javadoc":"Returns the underlying Project instance or null if project was opened for\n READ access only.","static":false,"name":"getProject","comment":"Returns the underlying Project instance or null if project was opened for\n READ access only.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.Project","comment":"","type_short":"Project"}},{"javadoc":"Closes the ghidra project, closing (without saving!) any open programs in\n that project. Also deletes the project if created as a temporary project.","static":false,"name":"close","comment":"Closes the ghidra project, closing (without saving!) any open programs in\n that project. Also deletes the project if created as a temporary project.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Updates the flag passed to this project at construction time.\n@param toDelete true to delete on close; false in the opposite condition","static":false,"name":"setDeleteOnClose","comment":"Updates the flag passed to this project at construction time.","params":[{"type_long":"boolean","name":"toDelete","comment":"true to delete on close; false in the opposite condition","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Closes the given program. Any changes in the program will be lost.\n@param program the program to close.","static":false,"name":"close","comment":"Closes the given program. Any changes in the program will be lost.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to close.","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Opens a program.\n@param folderPath the path of the program within the project. (\"\\\" is root)\n@param programName the name of the program to open.\n@param readOnly flag if the program will only be read and not written.\n@return an open program.\n@throws IOException if there was a problem accessing the program","static":false,"name":"openProgram","comment":"Opens a program.","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"the path of the program within the project. (\"\\\" is root)","type_short":"String"},{"type_long":"java.lang.String","name":"programName","comment":"the name of the program to open.","type_short":"String"},{"type_long":"boolean","name":"readOnly","comment":"flag if the program will only be read and not written.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the program","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"an open program.","type_short":"Program"}},{"javadoc":"Saves any changes in the program back to its file. If the program does\n not have an associated file (it was created), then it is an error to call\n this method, use saveAs instead.\n Any open transaction will be terminated.\n@param program the program to be saved.\n@throws IOException if there was a problem accessing the program","static":false,"name":"save","comment":"Saves any changes in the program back to its file. If the program does\n not have an associated file (it was created), then it is an error to call\n this method, use saveAs instead.\n Any open transaction will be terminated.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to be saved.","type_short":"Program"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the program","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the root folder for the Ghidra project.","static":false,"name":"getRootFolder","comment":"Get the root folder for the Ghidra project.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.DomainFolder","comment":"","type_short":"DomainFolder"}},{"javadoc":"Saves the given program to the project with the given name.\n@param program the program to be saved\n@param folderPath the path where to save the program.\n@param name the name to save the program as.\n@param overWrite if true, any existing program with that name will be\n            over-written.\n@throws DuplicateFileException if a file exists with that name and overwrite is false or overwrite failed\n@throws InvalidNameException the name is null or has invalid characters.\n@throws IOException if there was a problem accessing the program","static":false,"name":"saveAs","comment":"Saves the given program to the project with the given name.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to be saved","type_short":"Program"},{"type_long":"java.lang.String","name":"folderPath","comment":"the path where to save the program.","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"the name to save the program as.","type_short":"String"},{"type_long":"boolean","name":"overWrite","comment":"if true, any existing program with that name will be\n            over-written.","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"the name is null or has invalid characters.","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"if there was a problem accessing the program","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Saves the given program to as a packed file.\n@param program the program to be saved\n@param file the packed file destination.\n@param overWrite if true, any existing program with that name will be\n            over-written.\n@throws DuplicateNameException if a file exists with that name and overwrite is false or overwrite failed\n@throws InvalidNameException the name is null or has invalid characters.\n@throws IOException if there was a problem accessing the program","static":false,"name":"saveAsPackedFile","comment":"Saves the given program to as a packed file.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to be saved","type_short":"Program"},{"type_long":"java.io.File","name":"file","comment":"the packed file destination.","type_short":"File"},{"type_long":"boolean","name":"overWrite","comment":"if true, any existing program with that name will be\n            over-written.","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"the name is null or has invalid characters.","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"if there was a problem accessing the program","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a checkpoint in the program. Any changes since the last\n checkpoint can be instantly undone by calling the rollback command.\n@param program the program to be checkpointed.","static":false,"name":"checkPoint","comment":"Creates a checkpoint in the program. Any changes since the last\n checkpoint can be instantly undone by calling the rollback command.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to be checkpointed.","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Rolls back any changes to the program since the last checkpoint.\n@param program the program to be rolled back.","static":false,"name":"rollback","comment":"Rolls back any changes to the program since the last checkpoint.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to be rolled back.","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Invokes the auto-analyzer on the program. Depending on which analyzers\n are in the classpath, generally will disassemble at entry points, and\n create and analyze functions that are called.\n@param program the program to analyze.","static":true,"name":"analyze","comment":"Invokes the auto-analyzer on the program. Depending on which analyzers\n are in the classpath, generally will disassemble at entry points, and\n create and analyze functions that are called.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to analyze.","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Debug version of the auto_analyzer. Same as regular analyzer except that\n any stack traces are not trapped.\n@param program the program to be analyzed\n@param debug true to allow stack traces to propagate out.","static":false,"name":"analyze","comment":"Debug version of the auto_analyzer. Same as regular analyzer except that\n any stack traces are not trapped.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to be analyzed","type_short":"Program"},{"type_long":"boolean","name":"debug","comment":"true to allow stack traces to propagate out.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a PropertList containing all the analysis option properties that\n can be set. Changing the value of the analysis properties will affect\n what happens when the analyze call is made.\n@param program the program whose analysis options are to be set.","static":false,"name":"getAnalysisOptions","comment":"Returns a PropertList containing all the analysis option properties that\n can be set. Changing the value of the analysis properties will affect\n what happens when the analyze call is made.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program whose analysis options are to be set.","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.framework.options.Options","comment":"","type_short":"Options"}},{"javadoc":"Executes the give command on the program.\n@param cmd the command to be applied to the program.\n@param program the program on which the command is to be applied.","static":false,"name":"execute","comment":"Executes the give command on the program.","params":[{"type_long":"ghidra.framework.cmd.Command","name":"cmd","comment":"the command to be applied to the program.","type_short":"Command"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program on which the command is to be applied.","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initializeProgram","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"boolean","name":"readOnly","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"importProgram","comment":"","params":[{"type_long":"java.io.File","name":"file","comment":"","type_short":"File"},{"type_long":"ghidra.program.model.lang.Language","name":"language","comment":"","type_short":"Language"},{"type_long":"ghidra.program.model.lang.CompilerSpec","name":"compilerSpec","comment":"","type_short":"CompilerSpec"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"","static":false,"name":"importProgram","comment":"","params":[{"type_long":"java.io.File","name":"file","comment":"","type_short":"File"},{"type_long":"ghidra.framework.model.DomainFolder","name":"domainFolder","comment":"","type_short":"DomainFolder"},{"type_long":"ghidra.program.model.lang.Language","name":"language","comment":"","type_short":"Language"},{"type_long":"ghidra.program.model.lang.CompilerSpec","name":"compilerSpec","comment":"","type_short":"CompilerSpec"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"","static":false,"name":"importProgram","comment":"","params":[{"type_long":"java.io.File","name":"file","comment":"","type_short":"File"},{"type_long":"ghidra.program.model.lang.Processor","name":"processor","comment":"","type_short":"Processor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"","static":false,"name":"importProgram","comment":"","params":[{"type_long":"java.io.File","name":"file","comment":"","type_short":"File"},{"type_long":"java.lang.Class<? extends ghidra.app.util.opinion.Loader>","name":"loaderClass","comment":"","type_short":"Class"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"","static":false,"name":"importProgram","comment":"","params":[{"type_long":"java.io.File","name":"file","comment":"","type_short":"File"},{"type_long":"java.lang.Class<? extends ghidra.app.util.opinion.Loader>","name":"loaderClass","comment":"","type_short":"Class"},{"type_long":"ghidra.program.model.lang.Language","name":"language","comment":"","type_short":"Language"},{"type_long":"ghidra.program.model.lang.CompilerSpec","name":"compilerSpec","comment":"","type_short":"CompilerSpec"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"","static":false,"name":"importProgram","comment":"","params":[{"type_long":"java.io.File","name":"file","comment":"","type_short":"File"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"","static":false,"name":"importProgram","comment":"","params":[{"type_long":"java.io.File","name":"file","comment":"","type_short":"File"},{"type_long":"ghidra.framework.model.DomainFolder","name":"domainFolder","comment":"","type_short":"DomainFolder"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"","static":false,"name":"importProgramFast","comment":"","params":[{"type_long":"java.io.File","name":"file","comment":"","type_short":"File"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"","static":true,"name":"deletePreviousProject","comment":"","params":[{"type_long":"java.lang.String","name":"projectDirectoryPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"projectName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"importByStealingCodeFromAutoImporterByUsingBestGuess","comment":"","params":[{"type_long":"java.io.File","name":"file","comment":"","type_short":"File"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}}],"name":"GhidraProject","comment":"Helper class for using Ghidra in a \"batch\" mode. This class provides methods\n for importing, opening, saving, and analyzing program.\n \n Note: Before using this class you must initialize the Ghidra system.  See\n Application#initializeApplication for more information.","fields":[{"type_long":"ghidra.util.task.TaskMonitor","javadoc":"","static":true,"name":"MONITOR","comment":"","type_short":"TaskMonitor","constant_value":null},{"type_long":"ghidra.base.project.GhidraProject.GhidraProjectManager","javadoc":"","static":false,"name":"projectManager","comment":"","type_short":"GhidraProjectManager","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"deleteOnClose","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.framework.model.Project","javadoc":"","static":false,"name":"project","comment":"","type_short":"Project","constant_value":null},{"type_long":"ghidra.framework.model.ProjectData","javadoc":"","static":false,"name":"projectData","comment":"","type_short":"ProjectData","constant_value":null},{"type_long":"java.util.HashMap<ghidra.program.model.listing.Program,java.lang.Integer>","javadoc":"","static":false,"name":"openPrograms","comment":"","type_short":"HashMap","constant_value":null}]}
