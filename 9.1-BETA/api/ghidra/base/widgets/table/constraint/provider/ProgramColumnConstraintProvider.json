{"implements":["docking.widgets.table.constraint.ColumnConstraintProvider"],"javadoc":"Class for providing Program related column type constraints.  Addresses get converted to\n UnsignedLong (via BigInteger) and many others get converted to Strings.  For example, some\n tables have a column whose type is \"Symbol\", but the column just displays the symbol's name.\n So we created a number of \"Symbol\" constraints, but they are just adapters to the\n various String constraints.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getColumnConstraints","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Collection<docking.widgets.table.constraint.ColumnConstraint<?>>","comment":"","type_short":"Collection"}}],"name":"ProgramColumnConstraintProvider","comment":"Class for providing Program related column type constraints.  Addresses get converted to\n UnsignedLong (via BigInteger) and many others get converted to Strings.  For example, some\n tables have a column whose type is \"Symbol\", but the column just displays the symbol's name.\n So we created a number of \"Symbol\" constraints, but they are just adapters to the\n various String constraints.","fields":[]}
