{"implements":[],"javadoc":"A utility class to manage LookAndFeel (LaF) settings.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Loads settings from {@link Preferences}.","static":true,"name":"loadFromPreferences","comment":"Loads settings from Preferences.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the {@link Preferences} value for whether to use inverted colors when paiting.\n@return the {@link Preferences} value for whether to use inverted colors when paiting.","static":true,"name":"getUseInvertedColorsPreference","comment":"Returns the Preferences value for whether to use inverted colors when paiting.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"the Preferences value for whether to use inverted colors when paiting.","type_short":"boolean"}},{"javadoc":"Returns the currently installed LaF.\n@return the currently installed LaF.","static":true,"name":"getInstalledLookAndFeelName","comment":"Returns the currently installed LaF.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the currently installed LaF.","type_short":"String"}},{"javadoc":"Set the look and feel (LAF) indicated by the string passed in as a parameter.  \n The string value can be either the class name of the LAF, as returned by \n <tt>LookAndFeelInfo.getClassName()<\/tt> or the name as returned by \n <tt>LookAndFeelInfo.getName()<\/tt>.\n <p>\n Note: to be effective, this call needs to be made before any components have been created\n and shown.\n@param lookAndFeelName the string indicating which look and feel is desired (see above)","static":true,"name":"setLookAndFeel","comment":"Set the look and feel (LAF) indicated by the string passed in as a parameter.  \n The string value can be either the class name of the LAF, as returned by \n LookAndFeelInfo.getClassName() or the name as returned by \n LookAndFeelInfo.getName().\n \n Note: to be effective, this call needs to be made before any components have been created\n and shown.","params":[{"type_long":"java.lang.String","name":"lookAndFeelName","comment":"the string indicating which look and feel is desired (see above)","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns all installed LaFs.  This will vary by OS.\n@return all installed LaFs.","static":true,"name":"getLookAndFeelNames","comment":"Returns all installed LaFs.  This will vary by OS.","params":[],"throws":[],"return":{"type_long":"java.util.List<java.lang.String>","comment":"all installed LaFs.","type_short":"List"}},{"javadoc":"","static":true,"name":"installLookAndFeelByName","comment":"","params":[{"type_long":"java.lang.String","name":"lookAndFeelName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.lang.ClassNotFoundException","comment":"","type_short":"ClassNotFoundException"},{"type_long":"java.lang.InstantiationException","comment":"","type_short":"InstantiationException"},{"type_long":"java.lang.IllegalAccessException","comment":"","type_short":"IllegalAccessException"},{"type_long":"javax.swing.UnsupportedLookAndFeelException","comment":"","type_short":"UnsupportedLookAndFeelException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"findLookAndFeelClassName","comment":"","params":[{"type_long":"java.lang.String","name":"lookAndFeelName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"setUseInvertedColors","comment":"","params":[{"type_long":"boolean","name":"useInvertedColors","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Fixes issues in the currently running look and feel.","static":true,"name":"fixupLookAndFeelIssues","comment":"Fixes issues in the currently running look and feel.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"installGlobalLookAndFeelAttributes","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"installPopupMenuSettingsOverride","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"installGlobalFontSizeOverride","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"installCustomLookAndFeelActions","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"registerAction","comment":"","params":[{"type_long":"javax.swing.Action","name":"action","comment":"","type_short":"Action"},{"type_long":"javax.swing.KeyStroke","name":"keyStroke","comment":"","type_short":"KeyStroke"},{"type_long":"java.lang.String[]","name":"prefixValues","comment":"","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Allows you to globally set the font size (don't use this method!)","static":true,"name":"setGlobalFontSizeOverride","comment":"Allows you to globally set the font size (don't use this method!)","params":[{"type_long":"int","name":"fontSize","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the name of the default LookAndFeel for the current OS.","static":true,"name":"getDefaultLookAndFeelName","comment":"Returns the name of the default LookAndFeel for the current OS.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns true if the given UI object is using the Aqua Look and Feel.\n@param UI the UI to examine.\n@return true if the UI is using Aqua","static":true,"name":"isUsingAquaUI","comment":"Returns true if the given UI object is using the Aqua Look and Feel.","params":[{"type_long":"javax.swing.plaf.ComponentUI","name":"UI","comment":"the UI to examine.","type_short":"ComponentUI"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the UI is using Aqua","type_short":"boolean"}},{"javadoc":"Returns true if 'Nimbus' is the current Look and Feel\n@return true if 'Nimbus' is the current Look and Feel","static":true,"name":"isUsingNimbusUI","comment":"Returns true if 'Nimbus' is the current Look and Feel","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if 'Nimbus' is the current Look and Feel","type_short":"boolean"}}],"name":"DockingWindowsLookAndFeelUtils","comment":"A utility class to manage LookAndFeel (LaF) settings.","fields":[{"type_long":"java.lang.String","javadoc":"Preference name for look and feel for the application.","static":true,"name":"LAST_LOOK_AND_FEEL_KEY","comment":"Preference name for look and feel for the application.","type_short":"String","constant_value":"\"LastLookAndFeel\""},{"type_long":"java.lang.String","javadoc":"Preference name for whether to use inverted colors.","static":true,"name":"USE_INVERTED_COLORS_KEY","comment":"Preference name for whether to use inverted colors.","type_short":"String","constant_value":"\"LookAndFeel.UseInvertedColors\""},{"type_long":"java.lang.String","javadoc":"Metal is the non-system, generic Java Look and Feel.","static":true,"name":"METAL_LOOK_AND_FEEL","comment":"Metal is the non-system, generic Java Look and Feel.","type_short":"String","constant_value":"\"Metal\""},{"type_long":"java.lang.String","javadoc":"Default Look and feel for the current platform.","static":true,"name":"SYSTEM_LOOK_AND_FEEL","comment":"Default Look and feel for the current platform.","type_short":"String","constant_value":"\"System\""},{"type_long":"java.lang.String","javadoc":"The most stable Linux LaF.","static":true,"name":"NIMBUS_LOOK_AND_FEEL","comment":"The most stable Linux LaF.","type_short":"String","constant_value":"\"Nimbus\""},{"type_long":"javax.swing.RepaintManager","javadoc":"","static":true,"name":"defaultSwingRepaintManager","comment":"","type_short":"RepaintManager","constant_value":null}]}
