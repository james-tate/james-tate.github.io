{"implements":["ghidra.app.merge.listing.ListingMergeConstants"],"javadoc":"Abstract class that other function mergers can extend to get basic constants and methods \n for merging function changes. \n <br>Important: This class is intended to be used only for a single program \n version merge.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.merge.ProgramMultiUserMergeManager","name":"mergeManager","comment":"","type_short":"ProgramMultiUserMergeManager"},{"type_long":"ghidra.program.model.listing.Program[]","name":"programs","comment":"","type_short":"ghidra.program.model.listing.Program[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"init","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Given a program and the ID of a datatype from that program, this method returns the\n associated data type in the Result program.\n@param dtID the ID of the data type in the \"fromProgram\".\n@param fromProgram the program that contains the data type with the specified ID.\n@return the associated data type in the Result program.","static":false,"name":"getResultDataType","comment":"Given a program and the ID of a datatype from that program, this method returns the\n associated data type in the Result program.","params":[{"type_long":"long","name":"dtID","comment":"the ID of the data type in the \"fromProgram\".","type_short":"long"},{"type_long":"ghidra.program.model.listing.Program","name":"fromProgram","comment":"the program that contains the data type with the specified ID.","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"the associated data type in the Result program.","type_short":"DataType"}},{"javadoc":"Saves information indicating there is a conflict that needs to be resolved for a\n particular part of a function as indicated by the type.\n@param functions the matching set of functions from Result, Latest, My, and Original\n (Some may be null) which have the detailed type of conflict.\n@param functionConflictFlags function conflict flags to be set\n \t(FUNC_RETURN_TYPE, FUNC_RETURN_ADDRESS_OFFSET, FUNC_STACK_PURGE_SIZE, FUNC_NAME\n \tFUNC_INLINE, FUNC_NO_RETURN, FUNC_CALLING_CONVENTION, FUNC_VAR_STORAGE\n \tFUNC_CUSTOM_STORAGE, FUNC_VAR_DETAILS, FUNC_SIGNATURE)","static":false,"name":"saveFunctionDetailConflict","comment":"Saves information indicating there is a conflict that needs to be resolved for a\n particular part of a function as indicated by the type.","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"the matching set of functions from Result, Latest, My, and Original\n (Some may be null) which have the detailed type of conflict.","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"int","name":"functionConflictFlags","comment":"function conflict flags to be set\n \t(FUNC_RETURN_TYPE, FUNC_RETURN_ADDRESS_OFFSET, FUNC_STACK_PURGE_SIZE, FUNC_NAME\n \tFUNC_INLINE, FUNC_NO_RETURN, FUNC_CALLING_CONVENTION, FUNC_VAR_STORAGE\n \tFUNC_CUSTOM_STORAGE, FUNC_VAR_DETAILS, FUNC_SIGNATURE)","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getInfoTitle","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getErrorTitle","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Determines whether or not the part of the function, indicated by the type value, is in\n conflict for the matching set of functions. If not, then the function change is auto merged.\n@param functions the matching set of functions from Result, Latest, My, and Original \n (Some may be null.)\n@param type (FUNC_RETURN_TYPE, FUNC_RETURN_ADDRESS_OFFSET,\n FUNC_PARAMETER_OFFSET, FUNC_LOCAL_SIZE, FUNC_STACK_PURGE_SIZE, FUNC_NAME, FUNC_INLINE, \n FUNC_NO_RETURN, FUNC_CALLING_CONVENTION)\n@param latestMyChanges bit mask indicating the types of differences between Latest and My function.\n@param originalLatestChanges bit mask indicating the types of differences between Original and Latest function.\n@param originalMyChanges bit mask indicating the types of differences between Original and My function.\n@param monitor the merge status monitor for cancelling the merge and for reporting status.\n@return 0 if there isn't a conflict. Otherwise, if that type of conflict exists then \n the type is returned.","static":false,"name":"determineFunctionConflict","comment":"Determines whether or not the part of the function, indicated by the type value, is in\n conflict for the matching set of functions. If not, then the function change is auto merged.","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"the matching set of functions from Result, Latest, My, and Original \n (Some may be null.)","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"int","name":"type","comment":"(FUNC_RETURN_TYPE, FUNC_RETURN_ADDRESS_OFFSET,\n FUNC_PARAMETER_OFFSET, FUNC_LOCAL_SIZE, FUNC_STACK_PURGE_SIZE, FUNC_NAME, FUNC_INLINE, \n FUNC_NO_RETURN, FUNC_CALLING_CONVENTION)","type_short":"int"},{"type_long":"int","name":"latestMyChanges","comment":"bit mask indicating the types of differences between Latest and My function.","type_short":"int"},{"type_long":"int","name":"originalLatestChanges","comment":"bit mask indicating the types of differences between Original and Latest function.","type_short":"int"},{"type_long":"int","name":"originalMyChanges","comment":"bit mask indicating the types of differences between Original and My function.","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the merge status monitor for cancelling the merge and for reporting status.","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"int","comment":"0 if there isn't a conflict. Otherwise, if that type of conflict exists then \n the type is returned.","type_short":"int"}},{"javadoc":"Process any dynamic name conflict and determine if there is any direct name conflict.\n Note: This method eliminates any conflict between a defined function name and \n a dynamic, FUN_..., function name.\n@param functions the matching set of functions from Result, Latest, My, and Original.\n@param monitor the merge status monitor\n@return true if there is still a name conflict after this method is called.","static":false,"name":"hasUnresolvedFunctionNameConflict","comment":"Process any dynamic name conflict and determine if there is any direct name conflict.\n Note: This method eliminates any conflict between a defined function name and \n a dynamic, FUN_..., function name.","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"the matching set of functions from Result, Latest, My, and Original.","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the merge status monitor","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"true if there is still a name conflict after this method is called.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isDefaultName","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"","type_short":"Function"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"ProgramMerge that is used to merge from the Latest program into the ResultProgram\n@return the ProgramMerge for the Latest program.","static":false,"name":"getMergeLatest","comment":"ProgramMerge that is used to merge from the Latest program into the ResultProgram","params":[],"throws":[],"return":{"type_long":"ghidra.program.util.ProgramMerge","comment":"the ProgramMerge for the Latest program.","type_short":"ProgramMerge"}},{"javadoc":"ProgramMerge that is used to merge from the My program into the ResultProgram\n@return the ProgramMerge for the My program.","static":false,"name":"getMergeMy","comment":"ProgramMerge that is used to merge from the My program into the ResultProgram","params":[],"throws":[],"return":{"type_long":"ghidra.program.util.ProgramMerge","comment":"the ProgramMerge for the My program.","type_short":"ProgramMerge"}},{"javadoc":"ProgramMerge that is used to merge from the Original program into the ResultProgram\n@return the ProgramMerge for the Original program.","static":false,"name":"getMergeOriginal","comment":"ProgramMerge that is used to merge from the Original program into the ResultProgram","params":[],"throws":[],"return":{"type_long":"ghidra.program.util.ProgramMerge","comment":"the ProgramMerge for the Original program.","type_short":"ProgramMerge"}},{"javadoc":"Compares the functions (Latest, Original, My) to determine where conflicting changes\n have been made to Latest and My. It then saves the conflict info within the merger for \n later resolution and processing.\n@param functions the matching set of functions from Result, Latest, My, and Original.\n (Use MergeConstants.RESULT, LATEST, MY, ORIGINAL to reference these.)\n@param ignoreNames true indicates that function name differences should not be detected.\n@param monitor the merge status monitor\n@throws CancelledException if merge has been cancelled.","static":false,"name":"determineFunctionConflicts","comment":"Compares the functions (Latest, Original, My) to determine where conflicting changes\n have been made to Latest and My. It then saves the conflict info within the merger for \n later resolution and processing.","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"the matching set of functions from Result, Latest, My, and Original.\n (Use MergeConstants.RESULT, LATEST, MY, ORIGINAL to reference these.)","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"boolean","name":"ignoreNames","comment":"true indicates that function name differences should not be detected.","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the merge status monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if merge has been cancelled.","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"determineStorageConflict","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.app.merge.listing.FunctionVariableStorageConflicts","comment":"","type_short":"FunctionVariableStorageConflicts"}},{"javadoc":"Compares the functions (Latest, Original, My) to determine if a parameter signature \n conflict exists and auto-merges any signature change if possible, otherwise \n the {@link #FUNC_SIGNATURE} conflict flag may be set for the current function\n signaling the merger for later resolution and processing.\n@param functions the matching set of functions from Result, Latest, My, and Original.\n@param monitor the merge status monitor\n@return true if signatures match and a check should be performed for parameter detail \n conflicts, otherwise false is returned and the {@link #FUNC_SIGNATURE} conflict flag\n may be set for the current function\n@throws CancelledException if merge has been cancelled.","static":false,"name":"determineSignatureConflicts","comment":"Compares the functions (Latest, Original, My) to determine if a parameter signature \n conflict exists and auto-merges any signature change if possible, otherwise \n the #FUNC_SIGNATURE conflict flag may be set for the current function\n signaling the merger for later resolution and processing.","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"the matching set of functions from Result, Latest, My, and Original.","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the merge status monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if merge has been cancelled.","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"true if signatures match and a check should be performed for parameter detail \n conflicts, otherwise false is returned and the #FUNC_SIGNATURE conflict flag\n may be set for the current function","type_short":"boolean"}},{"javadoc":"","static":false,"name":"functionReturnDiffers","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"func1","comment":"","type_short":"Function"},{"type_long":"ghidra.program.model.listing.Function","name":"func2","comment":"","type_short":"Function"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"determineReturnConflict","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"boolean","name":"autoMerge","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"determineParameterInfoConflicts","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"boolean","name":"autoMerge","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.merge.listing.AbstractFunctionMerger.ParamInfoConflict>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"isSameParamSig","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"f1","comment":"","type_short":"Function"},{"type_long":"ghidra.program.model.listing.Function","name":"f2","comment":"","type_short":"Function"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isSameParamInfo","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"f1","comment":"","type_short":"Function"},{"type_long":"ghidra.program.model.listing.Function","name":"f2","comment":"","type_short":"Function"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"determineVariableConflict","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"int","name":"varType","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.listing.Variable","name":"var","comment":"","type_short":"Variable"},{"type_long":"int","name":"latestMyChanges","comment":"","type_short":"int"},{"type_long":"int","name":"originalLatestChanges","comment":"","type_short":"int"},{"type_long":"int","name":"originalMyChanges","comment":"","type_short":"int"},{"type_long":"boolean","name":"autoMerge","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"mergeParameter","comment":"","params":[{"type_long":"int","name":"type","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"int","name":"ordinal","comment":"","type_short":"int"},{"type_long":"ghidra.program.util.ProgramMerge","name":"pgmMerge","comment":"","type_short":"ProgramMerge"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeParameter","comment":"","params":[{"type_long":"int","name":"type","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"int","name":"ordinal","comment":"","type_short":"int"},{"type_long":"int","name":"currentConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeParameter","comment":"","params":[{"type_long":"int","name":"type","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"int","name":"ordinal","comment":"","type_short":"int"},{"type_long":"int","name":"currentConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeLocalVariable","comment":"","params":[{"type_long":"int","name":"type","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Variable[]","name":"vars","comment":"","type_short":"ghidra.program.model.listing.Variable[]"},{"type_long":"int","name":"currentConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeVariable","comment":"","params":[{"type_long":"int","name":"type","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Variable","name":"var","comment":"","type_short":"Variable"},{"type_long":"ghidra.program.util.ProgramMerge","name":"pgmMerge","comment":"","type_short":"ProgramMerge"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Compares the two functions and determines where the function information \n differs (name, return type, return address offset, parameter offset, \n local size, stack purge size). Sets bits within the int value indicating \n which info differs between the two functions.\n@param func1 the first function\n@param func2 the second function\n@return an int with bits set indicating where the two functions differ.","static":true,"name":"getFunctionDiffs","comment":"Compares the two functions and determines where the function information \n differs (name, return type, return address offset, parameter offset, \n local size, stack purge size). Sets bits within the int value indicating \n which info differs between the two functions.","params":[{"type_long":"ghidra.program.model.listing.Function","name":"func1","comment":"the first function","type_short":"Function"},{"type_long":"ghidra.program.model.listing.Function","name":"func2","comment":"the second function","type_short":"Function"}],"throws":[],"return":{"type_long":"int","comment":"an int with bits set indicating where the two functions differ.","type_short":"int"}},{"javadoc":"Determines differences between two variables.\n@param var1 the first variable\n@param var2 the second variable\n@return an int with bits set indicating where the two variables differ.","static":false,"name":"getVariableDiffs","comment":"Determines differences between two variables.","params":[{"type_long":"ghidra.program.model.listing.Variable","name":"var1","comment":"the first variable","type_short":"Variable"},{"type_long":"ghidra.program.model.listing.Variable","name":"var2","comment":"the second variable","type_short":"Variable"}],"throws":[],"return":{"type_long":"int","comment":"an int with bits set indicating where the two variables differ.","type_short":"int"}},{"javadoc":"","static":false,"name":"determineLocalVariableInfoConflicts","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"boolean","name":"autoMerge","comment":"","type_short":"boolean"},{"type_long":"ghidra.app.merge.listing.FunctionVariableStorageConflicts","name":"storageConflicts","comment":"","type_short":"FunctionVariableStorageConflicts"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"java.util.List<ghidra.app.merge.listing.AbstractFunctionMerger.LocalVariableConflict>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"countSetBits","comment":"","params":[{"type_long":"int","name":"bits","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"mergeFunctionDetail","comment":"","params":[{"type_long":"int","name":"type","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"ghidra.program.util.ProgramMerge","name":"pgmMerge","comment":"","type_short":"ProgramMerge"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeFunctionDetail","comment":"","params":[{"type_long":"int","name":"type","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getProgramListingMerge","comment":"","params":[{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.util.ProgramMerge","comment":"","type_short":"ProgramMerge"}},{"javadoc":"","static":false,"name":"getEntryPoint","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"handleProgramMergeMessages","comment":"","params":[{"type_long":"ghidra.program.util.ProgramMerge","name":"pm","comment":"","type_short":"ProgramMerge"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeParameters","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeParamInfo","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entryPt","comment":"","type_short":"Address"},{"type_long":"java.util.List<ghidra.app.merge.listing.AbstractFunctionMerger.ParamInfoConflict>","name":"paramInfoConflicts","comment":"","type_short":"List"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeParamInfo","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entryPt","comment":"","type_short":"Address"},{"type_long":"ghidra.app.merge.listing.AbstractFunctionMerger.ParamInfoConflict","name":"pc","comment":"","type_short":"ParamInfoConflict"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeParamInfo","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"java.util.List<ghidra.app.merge.listing.AbstractFunctionMerger.ParamInfoConflict>","name":"paramInfoConflicts","comment":"","type_short":"List"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeParamInfo","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"ghidra.app.merge.listing.AbstractFunctionMerger.ParamInfoConflict","name":"pc","comment":"","type_short":"ParamInfoConflict"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeLocals","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entryPt","comment":"","type_short":"Address"},{"type_long":"java.util.List<ghidra.app.merge.listing.AbstractFunctionMerger.LocalVariableConflict>","name":"localVarConflicts","comment":"","type_short":"List"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeLocal","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entryPt","comment":"","type_short":"Address"},{"type_long":"ghidra.app.merge.listing.AbstractFunctionMerger.LocalVariableConflict","name":"localVarConflict","comment":"","type_short":"LocalVariableConflict"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeFunctionDetails","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeHigherPrioritySignatureSource","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeFunctionReturn","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getEmptyVerticalPanel","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.merge.listing.VerticalChoicesPanel","comment":"","type_short":"VerticalChoicesPanel"}},{"javadoc":"","static":false,"name":"getEmptyScrollingListChoicesPanel","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.merge.listing.ScrollingListChoicesPanel","comment":"","type_short":"ScrollingListChoicesPanel"}},{"javadoc":"","static":false,"name":"getEmptyVariousPanel","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.merge.listing.VariousChoicesPanel","comment":"","type_short":"VariousChoicesPanel"}},{"javadoc":"","static":false,"name":"getReturnString","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"func","comment":"","type_short":"Function"},{"type_long":"boolean","name":"includeStorage","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getReturnInfo","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"pgm","comment":"","type_short":"Program"},{"type_long":"java.lang.String","name":"returnStr","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"prefix","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"suffix","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"","static":false,"name":"getSignatureInfo","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"pgm","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Function","name":"f","comment":"","type_short":"Function"},{"type_long":"java.lang.String","name":"prefix","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"suffix","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"","static":false,"name":"setupConflictPanel","comment":"","params":[{"type_long":"ghidra.app.merge.tool.ListingMergePanel","name":"listingPanel","comment":"","type_short":"ListingMergePanel"},{"type_long":"javax.swing.JPanel","name":"conflictPanel","comment":"","type_short":"JPanel"},{"type_long":"ghidra.program.model.address.Address","name":"entryPt","comment":"","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"showConflictPanelException","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entryPt","comment":"","type_short":"Address"},{"type_long":"java.lang.Exception","name":"e","comment":"","type_short":"Exception"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns an array of strings to display for a row of variable information.\n@param var\n@param option\n@return ","static":false,"name":"getVariableInfo","comment":"Returns an array of strings to display for a row of variable information.","params":[{"type_long":"ghidra.program.model.listing.Variable","name":"var","comment":"","type_short":"Variable"},{"type_long":"java.lang.String","name":"option","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Converts a user choice into a conflictOption\n@param choice the user choice\n@return the conflictOption","static":false,"name":"getOptionForChoice","comment":"Converts a user choice into a conflictOption","params":[{"type_long":"int","name":"choice","comment":"the user choice","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"the conflictOption","type_short":"int"}},{"javadoc":"","static":false,"name":"clearConflictPanel","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"runSwing","comment":"","params":[{"type_long":"java.lang.Runnable","name":"r","comment":"","type_short":"Runnable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clears all text from the error buffer.","static":false,"name":"clearResolveErrors","comment":"Clears all text from the error buffer.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This is a generic method for displaying the contents of the error \n buffer to the user.","static":false,"name":"showResolveErrors","comment":"This is a generic method for displaying the contents of the error \n buffer to the user.","params":[{"type_long":"java.lang.String","name":"title","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clears all text from the information buffer.","static":false,"name":"clearResolveInfo","comment":"Clears all text from the information buffer.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This is a generic method for displaying the contents of the information \n buffer to the user.","static":false,"name":"showResolveInfo","comment":"This is a generic method for displaying the contents of the information \n buffer to the user.","params":[{"type_long":"java.lang.String","name":"title","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createLocalVariableConflictPanel","comment":"","params":[{"type_long":"ghidra.app.merge.listing.AbstractFunctionMerger.LocalVariableConflict","name":"lvc","comment":"","type_short":"LocalVariableConflict"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.app.merge.listing.VariousChoicesPanel","comment":"","type_short":"VariousChoicesPanel"}},{"javadoc":"","static":false,"name":"createRemoveConflictPanel","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.app.merge.listing.VerticalChoicesPanel","comment":"","type_short":"VerticalChoicesPanel"}},{"javadoc":"","static":false,"name":"mergeFunction","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entryPt","comment":"","type_short":"Address"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createStorageConflictPanel","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entryPt","comment":"","type_short":"Address"},{"type_long":"generic.stl.Pair<java.util.List<ghidra.program.model.listing.Variable>,java.util.List<ghidra.program.model.listing.Variable>>","name":"pair","comment":"","type_short":"Pair"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.app.merge.listing.ScrollingListChoicesPanel","comment":"","type_short":"ScrollingListChoicesPanel"}},{"javadoc":"","static":false,"name":"mergeVariableStorage","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entryPt","comment":"","type_short":"Address"},{"type_long":"generic.stl.Pair<java.util.List<ghidra.program.model.listing.Variable>,java.util.List<ghidra.program.model.listing.Variable>>","name":"pair","comment":"","type_short":"Pair"},{"type_long":"int","name":"currentConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getVariableDetails","comment":"","params":[{"type_long":"java.util.List<ghidra.program.model.listing.Variable>","name":"list","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"java.util.List<java.lang.String[]>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"createParameterSigConflictPanel","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.app.merge.listing.VerticalChoicesPanel","comment":"","type_short":"VerticalChoicesPanel"}},{"javadoc":"","static":false,"name":"getConflictPrefixString","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"createFunctionConflictPanel","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.app.merge.listing.VariousChoicesPanel","comment":"","type_short":"VariousChoicesPanel"}},{"javadoc":"","static":false,"name":"createFunctionReturnConflictPanel","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function[]","name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.app.merge.listing.VerticalChoicesPanel","comment":"","type_short":"VerticalChoicesPanel"}},{"javadoc":"Creates the panel for resolving a conflict due to a variable being removed.\n@param entryPt the function entry point for the function variables.\n@param vars variables from the different programs [0]=Original, [1]=Latest, [2]=My\n@param monitor status monitor\n@return the panel","static":false,"name":"createRemovedVarConflictPanel","comment":"Creates the panel for resolving a conflict due to a variable being removed.","params":[{"type_long":"ghidra.app.merge.listing.AbstractFunctionMerger.LocalVariableConflict","name":"lvc","comment":"","type_short":"LocalVariableConflict"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"status monitor","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.app.merge.listing.VerticalChoicesPanel","comment":"the panel","type_short":"VerticalChoicesPanel"}},{"javadoc":"","static":false,"name":"getFunctionPrompt","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"","type_short":"Function"},{"type_long":"java.lang.String","name":"version","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Updates the progress message details associated with this phase of the merge.\n@param progressMessage a message indicating what is currently occurring in this phase.\n Null indicates to use the default message.","static":false,"name":"updateProgressMessage","comment":"Updates the progress message details associated with this phase of the merge.","params":[{"type_long":"java.lang.String","name":"message","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"AbstractFunctionMerger","comment":"Abstract class that other function mergers can extend to get basic constants and methods \n for merging function changes. \n Important: This class is intended to be used only for a single program \n version merge.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"BODY_CONFLICT_START","comment":"","type_short":"int","constant_value":"35"},{"type_long":"int","javadoc":"","static":true,"name":"BODY_CONFLICT_SIZE","comment":"","type_short":"int","constant_value":"25"},{"type_long":"int","javadoc":"","static":true,"name":"FUNCTION_CONFLICT_START","comment":"","type_short":"int","constant_value":"60"},{"type_long":"int","javadoc":"","static":true,"name":"FUNCTION_CONFLICT_SIZE","comment":"","type_short":"int","constant_value":"25"},{"type_long":"int","javadoc":"","static":true,"name":"DETAILS_CONFLICT_START","comment":"","type_short":"int","constant_value":"85"},{"type_long":"int","javadoc":"","static":true,"name":"DETAILS_CONFLICT_SIZE","comment":"","type_short":"int","constant_value":"15"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_OVERLAP","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_BODY","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_REMOVE","comment":"","type_short":"int","constant_value":"4"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_THUNK","comment":"","type_short":"int","constant_value":"8"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_RETURN","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_RETURN_ADDRESS_OFFSET","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_STACK_PURGE_SIZE","comment":"","type_short":"int","constant_value":"16"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_NAME","comment":"","type_short":"int","constant_value":"32"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_INLINE","comment":"","type_short":"int","constant_value":"64"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_NO_RETURN","comment":"","type_short":"int","constant_value":"128"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_CALLING_CONVENTION","comment":"","type_short":"int","constant_value":"256"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_VAR_STORAGE","comment":"","type_short":"int","constant_value":"1024"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_SIGNATURE","comment":"","type_short":"int","constant_value":"2048"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_LOCAL_DETAILS","comment":"","type_short":"int","constant_value":"4096"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_PARAM_DETAILS","comment":"","type_short":"int","constant_value":"8192"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_SIGNATURE_SOURCE","comment":"","type_short":"int","constant_value":"32768"},{"type_long":"int","javadoc":"","static":true,"name":"FUNC_DETAIL_MASK","comment":"","type_short":"int","constant_value":"498"},{"type_long":"int","javadoc":"","static":true,"name":"VAR_NAME","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"VAR_DATATYPE","comment":"","type_short":"int","constant_value":"4"},{"type_long":"int","javadoc":"","static":true,"name":"VAR_COMMENT","comment":"","type_short":"int","constant_value":"16"},{"type_long":"int","javadoc":"","static":true,"name":"VAR_REMOVED","comment":"","type_short":"int","constant_value":"512"},{"type_long":"int","javadoc":"","static":true,"name":"HEADER","comment":"","type_short":"int","constant_value":"-1"},{"type_long":"int","javadoc":"","static":true,"name":"RESULT","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"LATEST","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"MY","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"ORIGINAL","comment":"","type_short":"int","constant_value":"3"},{"type_long":"int","javadoc":"","static":true,"name":"ORIGINAL_VAR","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"LATEST_VAR","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"MY_VAR","comment":"","type_short":"int","constant_value":"2"},{"type_long":"java.lang.StringBuffer","javadoc":"","static":false,"name":"errorBuf","comment":"","type_short":"StringBuffer","constant_value":null},{"type_long":"java.lang.StringBuffer","javadoc":"","static":false,"name":"infoBuf","comment":"","type_short":"StringBuffer","constant_value":null},{"type_long":"ghidra.app.merge.ProgramMultiUserMergeManager","javadoc":"","static":false,"name":"mergeManager","comment":"","type_short":"ProgramMultiUserMergeManager","constant_value":null},{"type_long":"ghidra.program.model.listing.Program[]","javadoc":"","static":false,"name":"programs","comment":"","type_short":"ghidra.program.model.listing.Program[]","constant_value":null},{"type_long":"ghidra.program.model.listing.FunctionManager[]","javadoc":"","static":false,"name":"functionManagers","comment":"","type_short":"ghidra.program.model.listing.FunctionManager[]","constant_value":null},{"type_long":"ghidra.app.merge.listing.ListingMergeManager","javadoc":"","static":false,"name":"listingMergeManager","comment":"","type_short":"ListingMergeManager","constant_value":null},{"type_long":"ghidra.program.model.address.AddressFactory","javadoc":"","static":false,"name":"resultAddressFactory","comment":"","type_short":"AddressFactory","constant_value":null},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","javadoc":"","static":false,"name":"latestResolvedDts","comment":"","type_short":"LongObjectHashtable","constant_value":null},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","javadoc":"","static":false,"name":"myResolvedDts","comment":"","type_short":"LongObjectHashtable","constant_value":null},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","javadoc":"","static":false,"name":"origResolvedDts","comment":"","type_short":"LongObjectHashtable","constant_value":null},{"type_long":"ghidra.app.merge.tool.ListingMergePanel","javadoc":"","static":false,"name":"listingMergePanel","comment":"","type_short":"ListingMergePanel","constant_value":null},{"type_long":"ghidra.app.merge.listing.VerticalChoicesPanel","javadoc":"","static":false,"name":"verticalConflictPanel","comment":"","type_short":"VerticalChoicesPanel","constant_value":null},{"type_long":"ghidra.app.merge.listing.VariousChoicesPanel","javadoc":"","static":false,"name":"variousConflictPanel","comment":"","type_short":"VariousChoicesPanel","constant_value":null},{"type_long":"ghidra.app.merge.listing.ScrollingListChoicesPanel","javadoc":"","static":false,"name":"scrollingListConflictPanel","comment":"","type_short":"ScrollingListChoicesPanel","constant_value":null},{"type_long":"ghidra.app.merge.listing.ConflictPanel","javadoc":"","static":false,"name":"currentConflictPanel","comment":"","type_short":"ConflictPanel","constant_value":null},{"type_long":"ghidra.util.task.TaskMonitor","javadoc":"","static":false,"name":"currentMonitor","comment":"","type_short":"TaskMonitor","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"overlapChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"bodyChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"functionReturnChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"removeChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"detailsChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"variableStorageChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"parameterSignatureChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"parameterInfoChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"removedLocalVariableChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"localVariableDetailChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"thunkChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"","static":false,"name":"removeSet","comment":"","type_short":"AddressSet","constant_value":null},{"type_long":"ghidra.util.datastruct.ObjectIntHashtable<ghidra.program.model.address.Address>","javadoc":"","static":false,"name":"funcConflicts","comment":"","type_short":"ObjectIntHashtable","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"","static":false,"name":"funcSet","comment":"","type_short":"AddressSet","constant_value":null},{"type_long":"java.lang.String[]","javadoc":"","static":true,"name":"STORAGE_CONFLICT_CHOICES","comment":"","type_short":"java.lang.String[]","constant_value":null},{"type_long":"java.lang.String[]","javadoc":"","static":true,"name":"STORAGE_CONFLICT_HEADINGS","comment":"","type_short":"java.lang.String[]","constant_value":null}]}
