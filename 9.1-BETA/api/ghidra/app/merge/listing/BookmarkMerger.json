{"implements":[],"javadoc":"Class for merging bookmark changes. This class can merge non-conflicting\n bookmark changes that were made to the checked out version. It can determine\n where there are conflicts between the latest checked in version and my\n checked out version. It can then manually merge the conflicting bookmarks.\n <br>Important: This class is intended to be used only for a single program \n version merge. It should be constructed, followed by an autoMerge(), and lastly\n each address with a conflict should have mergeConflicts() called on it.","static":false,"extends":"ghidra.app.merge.listing.AbstractListingMerger","methods":[{"javadoc":"Constructs a comments merger.\n@param listingMergeMgr the listing merge manager that owns this merger.","static":false,"name":"<init>","comment":"Constructs a comments merger.","params":[{"type_long":"ghidra.app.merge.listing.ListingMergeManager","name":"listingMergeMgr","comment":"the listing merge manager that owns this merger.","type_short":"ListingMergeManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"init","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getConflictType","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"apply","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"autoMerge","comment":"","params":[{"type_long":"int","name":"progressMin","comment":"","type_short":"int"},{"type_long":"int","name":"progressMax","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.program.util.ProgramConflictException","comment":"","type_short":"ProgramConflictException"},{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"checkOriginalBookmark","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Bookmark","name":"currentBookmark","comment":"","type_short":"Bookmark"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"checkOriginalNoteBookmark","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Bookmark","name":"currentBookmark","comment":"","type_short":"Bookmark"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"checkOriginalNonNoteBookmark","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Bookmark","name":"currentBookmark","comment":"","type_short":"Bookmark"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"checkAddedBookmark","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Bookmark","name":"currentBookmark","comment":"","type_short":"Bookmark"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"checkAddedNoteBookmark","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Bookmark","name":"currentBookmark","comment":"","type_short":"Bookmark"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"checkAddedNonNoteBookmark","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Bookmark","name":"currentBookmark","comment":"","type_short":"Bookmark"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addConflict","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"java.lang.String","name":"bookmarkType","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"bookmarkCategory","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hasConflict","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getConflictCount","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getConflictsPanel","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"java.lang.String","name":"bookmarkType","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"bookmarkCategory","comment":"","type_short":"String"},{"type_long":"javax.swing.event.ChangeListener","name":"changeListener","comment":"","type_short":"ChangeListener"}],"throws":[],"return":{"type_long":"ghidra.app.merge.listing.VerticalChoicesPanel","comment":"","type_short":"VerticalChoicesPanel"}},{"javadoc":"Gets a standardized array of strings that represent the bookmark information for \n each column of a bookmark info row that will be presented in a table format.\n@param version the program version that provided the bookmark.\n@param bookmark the bookmark having its information presented.\n@return the standardized bookmark information.","static":false,"name":"getBookmarkInfo","comment":"Gets a standardized array of strings that represent the bookmark information for \n each column of a bookmark info row that will be presented in a table format.","params":[{"type_long":"int","name":"version","comment":"the program version that provided the bookmark.","type_short":"int"},{"type_long":"ghidra.program.model.listing.Bookmark","name":"bookmark","comment":"the bookmark having its information presented.","type_short":"Bookmark"}],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"the standardized bookmark information.","type_short":"java.lang.String[]"}},{"javadoc":"Gets a standard string to display for the version info of the bookmark info.\n Provides different strings depending on whether the bookmark is null\n indicating it was removed or not null indicating the user can choose to keep it.\n@param version the program version that provided the bookmark.\n@param bookmark the bookmark having its information presented.\n@returnthe version information string.","static":false,"name":"getChoice","comment":"Gets a standard string to display for the version info of the bookmark info.\n Provides different strings depending on whether the bookmark is null\n indicating it was removed or not null indicating the user can choose to keep it.","params":[{"type_long":"java.lang.String","name":"version","comment":"the program version that provided the bookmark.","type_short":"String"},{"type_long":"ghidra.program.model.listing.Bookmark","name":"bookmark","comment":"the bookmark having its information presented.","type_short":"Bookmark"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"mergeConflicts","comment":"","params":[{"type_long":"ghidra.app.merge.tool.ListingMergePanel","name":"listingPanel","comment":"","type_short":"ListingMergePanel"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"merge","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"java.lang.String","name":"bookmarkType","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"bookmarkCategory","comment":"","type_short":"String"},{"type_long":"int","name":"chosenConflictOption","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"showMergePanel","comment":"","params":[{"type_long":"ghidra.app.merge.tool.ListingMergePanel","name":"listingPanel","comment":"","type_short":"ListingMergePanel"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"java.lang.String","name":"bookmarkType","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"bookmarkCategory","comment":"","type_short":"String"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getConflicts","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"","type_short":"AddressSetView"}}],"name":"BookmarkMerger","comment":"Class for merging bookmark changes. This class can merge non-conflicting\n bookmark changes that were made to the checked out version. It can determine\n where there are conflicts between the latest checked in version and my\n checked out version. It can then manually merge the conflicting bookmarks.\n Important: This class is intended to be used only for a single program \n version merge. It should be constructed, followed by an autoMerge(), and lastly\n each address with a conflict should have mergeConflicts() called on it.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"BOOKMARKS_PHASE","comment":"","type_short":"String","constant_value":"\"Bookmarks\""},{"type_long":"ghidra.app.merge.listing.VerticalChoicesPanel","javadoc":"","static":false,"name":"conflictPanel","comment":"","type_short":"VerticalChoicesPanel","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"type","comment":"","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"category","comment":"","type_short":"String","constant_value":null},{"type_long":"ghidra.program.model.listing.BookmarkManager","javadoc":"","static":false,"name":"originalBookmarkMgr","comment":"","type_short":"BookmarkManager","constant_value":null},{"type_long":"ghidra.program.model.listing.BookmarkManager","javadoc":"","static":false,"name":"latestBookmarkMgr","comment":"","type_short":"BookmarkManager","constant_value":null},{"type_long":"ghidra.program.model.listing.BookmarkManager","javadoc":"","static":false,"name":"myBookmarkMgr","comment":"","type_short":"BookmarkManager","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"","static":false,"name":"conflictSet","comment":"","type_short":"AddressSet","constant_value":null},{"type_long":"java.util.Hashtable<ghidra.program.model.address.Address,java.util.ArrayList<ghidra.app.merge.listing.BookmarkMerger.BookmarkUid>>","javadoc":"","static":false,"name":"conflicts","comment":"","type_short":"Hashtable","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"","static":false,"name":"resolvedSet","comment":"","type_short":"AddressSet","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"bookmarkChoice","comment":"","type_short":"int","constant_value":null}]}
