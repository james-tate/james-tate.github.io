{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the string name for the constant define of the section type.\n@param type the section type\n@return string name for the constant define of the section type","static":true,"name":"getTypeName","comment":"Returns the string name for the constant define of the section type.","params":[{"type_long":"int","name":"type","comment":"the section type","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"string name for the constant define of the section type","type_short":"String"}}],"name":"SectionTypes","comment":"","fields":[{"type_long":"int","javadoc":"256 section types","static":true,"name":"SECTION_TYPE_MASK","comment":"256 section types","type_short":"int","constant_value":"255"},{"type_long":"int","javadoc":"Type: regular section","static":true,"name":"S_REGULAR","comment":"Type: regular section","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"Type: zero fill on demand section","static":true,"name":"S_ZEROFILL","comment":"Type: zero fill on demand section","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"Type: section with only literal C strings","static":true,"name":"S_CSTRING_LITERALS","comment":"Type: section with only literal C strings","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"Type: section with only 4 byte literals","static":true,"name":"S_4BYTE_LITERALS","comment":"Type: section with only 4 byte literals","type_short":"int","constant_value":"3"},{"type_long":"int","javadoc":"Type: section with only 8 byte literals","static":true,"name":"S_8BYTE_LITERALS","comment":"Type: section with only 8 byte literals","type_short":"int","constant_value":"4"},{"type_long":"int","javadoc":"Type: section with only pointers to literals","static":true,"name":"S_LITERAL_POINTERS","comment":"Type: section with only pointers to literals","type_short":"int","constant_value":"5"},{"type_long":"int","javadoc":"Type: section with only non-lazy symbol pointers","static":true,"name":"S_NON_LAZY_SYMBOL_POINTERS","comment":"Type: section with only non-lazy symbol pointers","type_short":"int","constant_value":"6"},{"type_long":"int","javadoc":"Type: section with only lazy symbol pointers","static":true,"name":"S_LAZY_SYMBOL_POINTERS","comment":"Type: section with only lazy symbol pointers","type_short":"int","constant_value":"7"},{"type_long":"int","javadoc":"Type: section with only symbol stubs, byte size of stub in the reserved2 field","static":true,"name":"S_SYMBOL_STUBS","comment":"Type: section with only symbol stubs, byte size of stub in the reserved2 field","type_short":"int","constant_value":"8"},{"type_long":"int","javadoc":"Type: section with only function pointers for initialization","static":true,"name":"S_MOD_INIT_FUNC_POINTERS","comment":"Type: section with only function pointers for initialization","type_short":"int","constant_value":"9"},{"type_long":"int","javadoc":"Type: section with only function pointers for termination","static":true,"name":"S_MOD_TERM_FUNC_POINTERS","comment":"Type: section with only function pointers for termination","type_short":"int","constant_value":"10"},{"type_long":"int","javadoc":"Type: section contains symbols that are to be coalesced","static":true,"name":"S_COALESCED","comment":"Type: section contains symbols that are to be coalesced","type_short":"int","constant_value":"11"},{"type_long":"int","javadoc":"Type: zero fill on demand section (that can be larger than 4 gigabytes)","static":true,"name":"S_GB_ZEROFILL","comment":"Type: zero fill on demand section (that can be larger than 4 gigabytes)","type_short":"int","constant_value":"12"},{"type_long":"int","javadoc":"Type: section with only pairs of function pointers for interposing","static":true,"name":"S_INTERPOSING","comment":"Type: section with only pairs of function pointers for interposing","type_short":"int","constant_value":"13"},{"type_long":"int","javadoc":"section with only 16 byte literals","static":true,"name":"S_16BYTE_LITERALS","comment":"section with only 16 byte literals","type_short":"int","constant_value":"14"},{"type_long":"int","javadoc":"section contains DTrace Object Format","static":true,"name":"S_DTRACE_DOF","comment":"section contains DTrace Object Format","type_short":"int","constant_value":"15"},{"type_long":"int","javadoc":"section with only lazy symbol pointers to lazy loaded dylibs","static":true,"name":"S_LAZY_DYLIB_SYMBOL_POINTERS","comment":"section with only lazy symbol pointers to lazy loaded dylibs","type_short":"int","constant_value":"16"},{"type_long":"int","javadoc":"Section types to support thread local variables.\n Template of initial values to TLVs.","static":true,"name":"S_THREAD_LOCAL_REGULAR","comment":"Section types to support thread local variables.\n Template of initial values to TLVs.","type_short":"int","constant_value":"17"},{"type_long":"int","javadoc":"Section types to support thread local variables.\n Template of initial values to TLVs.","static":true,"name":"S_THREAD_LOCAL_ZEROFILL","comment":"Section types to support thread local variables.\n Template of initial values to TLVs.","type_short":"int","constant_value":"18"},{"type_long":"int","javadoc":"Section types to support thread local variables.\n TLV descriptors.","static":true,"name":"S_THREAD_LOCAL_VARIABLES","comment":"Section types to support thread local variables.\n TLV descriptors.","type_short":"int","constant_value":"19"},{"type_long":"int","javadoc":"Section types to support thread local variables.\n Pointers to TLV descriptors.","static":true,"name":"S_THREAD_LOCAL_VARIABLE_POINTERS","comment":"Section types to support thread local variables.\n Pointers to TLV descriptors.","type_short":"int","constant_value":"20"},{"type_long":"int","javadoc":"Section types to support thread local variables.\n Functions to call to initialize TLV values.","static":true,"name":"S_THREAD_LOCAL_INIT_FUNCTION_POINTERS","comment":"Section types to support thread local variables.\n Functions to call to initialize TLV values.","type_short":"int","constant_value":"21"}]}
