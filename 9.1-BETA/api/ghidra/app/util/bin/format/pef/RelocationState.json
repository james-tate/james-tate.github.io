{"implements":[],"javadoc":"This class maintains the running state while\n applying relocations.\n <p>\n <b><code>relocAddress<\/code><\/b>\n Holds an address within the section where the relocations\n are to be performed. The initial value is the base address\n of the section to be relocated.\n <p>\n <b><code>importIndex<\/code><\/b>\n Holds a symbol index, which is used to access an\n imported symbol's address. This address can then\n be used for relocations. The initial value is 0.\n <p>\n <b><code>sectionC<\/code><\/b>\n Holds the memory address of an instantiated section\n within the PEF container, this variable is used by relocation\n instructions that relocate section addresses. The initial \n value is the memory address of section 0 (if that section\n is present and instantiated), otherwise it is 0.\n <p>\n <b><code>sectionD<\/code><\/b>\n Holds the memory address of an instantiated section\n within the PEF container, this variable is used by relocation\n instructions that relocate section addresses. The initial \n value is the memory address of section 1 (if that section\n is present and instantiated), otherwise it is 0.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new relocation state\n@param header the PEF container header\n@param relocationHeader the specific relocation header for this state\n@param program the program being relocated\n@param sectionMap the map of section headers to memory blocks","static":false,"name":"<init>","comment":"Constructs a new relocation state","params":[{"type_long":"ghidra.app.util.bin.format.pef.ContainerHeader","name":"header","comment":"the PEF container header","type_short":"ContainerHeader"},{"type_long":"ghidra.app.util.bin.format.pef.LoaderRelocationHeader","name":"relocationHeader","comment":"the specific relocation header for this state","type_short":"LoaderRelocationHeader"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program being relocated","type_short":"Program"},{"type_long":"ghidra.app.util.bin.format.pef.ImportStateCache","name":"importState","comment":"","type_short":"ImportStateCache"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Increments the import index by one.","static":false,"name":"incrementImportIndex","comment":"Increments the import index by one.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Increments the relocation address by the given addend\n@param addend the amount to increment the relocation address","static":false,"name":"incrementRelocationAddress","comment":"Increments the relocation address by the given addend","params":[{"type_long":"int","name":"addend","comment":"the amount to increment the relocation address","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the relocation address.\n@param relocationAddress the new relocation address","static":false,"name":"setRelocationAddress","comment":"Sets the relocation address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"relocationAddress","comment":"the new relocation address","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the sectionC variable to given address.\n@param sectionC the new sectionC address","static":false,"name":"setSectionC","comment":"Set the sectionC variable to given address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"sectionC","comment":"the new sectionC address","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the sectionD variable to given address.\n@param sectionD the new sectionD address","static":false,"name":"setSectionD","comment":"Set the sectionD variable to given address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"sectionD","comment":"the new sectionD address","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the current import index.\n@return the current import index","static":false,"name":"getImportIndex","comment":"Returns the current import index.","params":[],"throws":[],"return":{"type_long":"int","comment":"the current import index","type_short":"int"}},{"javadoc":"Sets the import index.\n@param importIndex the new import index value","static":false,"name":"setImportIndex","comment":"Sets the import index.","params":[{"type_long":"int","name":"importIndex","comment":"the new import index value","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the current relocation address.\n@return the current relocation address","static":false,"name":"getRelocationAddress","comment":"Returns the current relocation address.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the current relocation address","type_short":"Address"}},{"javadoc":"Returns the current sectionC address.\n@return the current sectionC address","static":false,"name":"getSectionC","comment":"Returns the current sectionC address.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the current sectionC address","type_short":"Address"}},{"javadoc":"Returns the current sectionD address.\n@return the current sectionD address","static":false,"name":"getSectionD","comment":"Returns the current sectionD address.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the current sectionD address","type_short":"Address"}},{"javadoc":"","static":false,"name":"initializeSectionC","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Adds the fixup address to the contents stored at address,\n then creates a pointer at address.\n@param address the address to fixup\n@param fixupAddress the value to use in fixup\n@param log message log for recording errors","static":false,"name":"fixupMemory","comment":"Adds the fixup address to the contents stored at address,\n then creates a pointer at address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address to fixup","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"fixupAddress","comment":"the value to use in fixup","type_short":"Address"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"message log for recording errors","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Increments the integer in memory at the specified address\n@param program the program\n@param address the address to increment\n@param addend the value to add\n@param log a message log","static":false,"name":"relocateMemoryAt","comment":"Increments the integer in memory at the specified address","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address to increment","type_short":"Address"},{"type_long":"int","name":"addend","comment":"the value to add","type_short":"int"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"a message log","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getBlockContaining","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.mem.MemoryBlock","comment":"","type_short":"MemoryBlock"}},{"javadoc":"","static":false,"name":"initializeSectionD","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Returns the base address of the section to be relocated.\n@return the base address of the section to be relocated","static":false,"name":"getSectionToBeRelocated","comment":"Returns the base address of the section to be relocated.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the base address of the section to be relocated","type_short":"Address"}}],"name":"RelocationState","comment":"This class maintains the running state while\n applying relocations.\n \n relocAddress\n Holds an address within the section where the relocations\n are to be performed. The initial value is the base address\n of the section to be relocated.\n \n importIndex\n Holds a symbol index, which is used to access an\n imported symbol's address. This address can then\n be used for relocations. The initial value is 0.\n \n sectionC\n Holds the memory address of an instantiated section\n within the PEF container, this variable is used by relocation\n instructions that relocate section addresses. The initial \n value is the memory address of section 0 (if that section\n is present and instantiated), otherwise it is 0.\n \n sectionD\n Holds the memory address of an instantiated section\n within the PEF container, this variable is used by relocation\n instructions that relocate section addresses. The initial \n value is the memory address of section 1 (if that section\n is present and instantiated), otherwise it is 0.","fields":[{"type_long":"ghidra.app.util.bin.format.pef.ContainerHeader","javadoc":"","static":false,"name":"header","comment":"","type_short":"ContainerHeader","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pef.LoaderRelocationHeader","javadoc":"","static":false,"name":"relocationHeader","comment":"","type_short":"LoaderRelocationHeader","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pef.ImportStateCache","javadoc":"","static":false,"name":"importState","comment":"","type_short":"ImportStateCache","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"importIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"relocationAddress","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"sectionC","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"sectionD","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program","comment":"","type_short":"Program","constant_value":null},{"type_long":"ghidra.program.model.mem.Memory","javadoc":"","static":false,"name":"memory","comment":"","type_short":"Memory","constant_value":null},{"type_long":"ghidra.program.model.mem.MemoryBlock[]","javadoc":"","static":false,"name":"blocks","comment":"","type_short":"ghidra.program.model.mem.MemoryBlock[]","constant_value":null}]}
