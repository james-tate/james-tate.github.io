{"implements":[],"javadoc":"A helper class to parsing different types of \n debug information from a debug directory","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new debug directory parser.\n@param reader the binary reader\n@param ptr the pointer into the binary reader\n@param size the size of the directory\n@param ntHeader\n@throws IOException if an I\/O error occurs","static":true,"name":"createDebugDirectoryParser","comment":"Constructs a new debug directory parser.","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"the binary reader","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"long","name":"ptr","comment":"the pointer into the binary reader","type_short":"long"},{"type_long":"int","name":"size","comment":"the size of the directory","type_short":"int"},{"type_long":"ghidra.app.util.bin.format.pe.OffsetValidator","name":"validator","comment":"","type_short":"OffsetValidator"}],"throws":[{"type_long":"java.io.IOException","comment":"if an I\/O error occurs","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.DebugDirectoryParser","comment":"","type_short":"DebugDirectoryParser"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initDebugDirectoryParser","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"long","name":"ptr","comment":"","type_short":"long"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"ghidra.app.util.bin.format.pe.OffsetValidator","name":"validator","comment":"","type_short":"OffsetValidator"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDebugDirectories","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.DebugDirectory[]","comment":"","type_short":"ghidra.app.util.bin.format.pe.debug.DebugDirectory[]"}},{"javadoc":"Returns the miscellaneous debug information, or null if it does not exists.\n@return the miscellaneous debug information","static":false,"name":"getDebugMisc","comment":"Returns the miscellaneous debug information, or null if it does not exists.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.DebugMisc","comment":"the miscellaneous debug information","type_short":"DebugMisc"}},{"javadoc":"Returns the CodeView debug information, or null if it does not exists.\n@return the CodeView debug information","static":false,"name":"getDebugCodeView","comment":"Returns the CodeView debug information, or null if it does not exists.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.DebugCodeView","comment":"the CodeView debug information","type_short":"DebugCodeView"}},{"javadoc":"Returns the COFF debug information, or null if it does not exists.\n@return the COFF debug information","static":false,"name":"getDebugCOFFSymbolsHeader","comment":"Returns the COFF debug information, or null if it does not exists.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.DebugCOFFSymbolsHeader","comment":"the COFF debug information","type_short":"DebugCOFFSymbolsHeader"}},{"javadoc":"Returns the Fixup debug information, or null if it does not exists.\n@return the Fixup debug information","static":false,"name":"getDebugFixup","comment":"Returns the Fixup debug information, or null if it does not exists.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.DebugFixup","comment":"the Fixup debug information","type_short":"DebugFixup"}}],"name":"DebugDirectoryParser","comment":"A helper class to parsing different types of \n debug information from a debug directory","fields":[{"type_long":"byte","javadoc":"Unknown debug type.","static":true,"name":"IMAGE_DEBUG_TYPE_UNKNOWN","comment":"Unknown debug type.","type_short":"byte","constant_value":"0"},{"type_long":"byte","javadoc":"COFF debug type.","static":true,"name":"IMAGE_DEBUG_TYPE_COFF","comment":"COFF debug type.","type_short":"byte","constant_value":"1"},{"type_long":"byte","javadoc":"CodeView debug type.","static":true,"name":"IMAGE_DEBUG_TYPE_CODEVIEW","comment":"CodeView debug type.","type_short":"byte","constant_value":"2"},{"type_long":"byte","javadoc":"FPO debug type.","static":true,"name":"IMAGE_DEBUG_TYPE_FPO","comment":"FPO debug type.","type_short":"byte","constant_value":"3"},{"type_long":"byte","javadoc":"Misc debug type.","static":true,"name":"IMAGE_DEBUG_TYPE_MISC","comment":"Misc debug type.","type_short":"byte","constant_value":"4"},{"type_long":"byte","javadoc":"Exception debug type.","static":true,"name":"IMAGE_DEBUG_TYPE_EXCEPTION","comment":"Exception debug type.","type_short":"byte","constant_value":"5"},{"type_long":"byte","javadoc":"Fixup debug type.","static":true,"name":"IMAGE_DEBUG_TYPE_FIXUP","comment":"Fixup debug type.","type_short":"byte","constant_value":"6"},{"type_long":"byte","javadoc":"OMAP-To-Source debug type.","static":true,"name":"IMAGE_DEBUG_TYPE_OMAP_TO_SRC","comment":"OMAP-To-Source debug type.","type_short":"byte","constant_value":"7"},{"type_long":"byte","javadoc":"OMAP-From-Source debug type.","static":true,"name":"IMAGE_DEBUG_TYPE_OMAP_FROM_SRC","comment":"OMAP-From-Source debug type.","type_short":"byte","constant_value":"8"},{"type_long":"byte","javadoc":"Borland debug type.","static":true,"name":"IMAGE_DEBUG_TYPE_BORLAND","comment":"Borland debug type.","type_short":"byte","constant_value":"9"},{"type_long":"byte","javadoc":"Reserved debug type.","static":true,"name":"IMAGE_DEBUG_TYPE_RESERVED10","comment":"Reserved debug type.","type_short":"byte","constant_value":"10"},{"type_long":"byte","javadoc":"CLS ID debug type.","static":true,"name":"IMAGE_DEBUG_TYPE_CLSID","comment":"CLS ID debug type.","type_short":"byte","constant_value":"11"},{"type_long":"java.util.ArrayList<ghidra.app.util.bin.format.pe.debug.DebugDirectory>","javadoc":"","static":false,"name":"debugFormatList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.debug.DebugMisc","javadoc":"","static":false,"name":"miscDebug","comment":"","type_short":"DebugMisc","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.debug.DebugCodeView","javadoc":"","static":false,"name":"codeViewDebug","comment":"","type_short":"DebugCodeView","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.debug.DebugCOFFSymbolsHeader","javadoc":"","static":false,"name":"coffDebug","comment":"","type_short":"DebugCOFFSymbolsHeader","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.debug.DebugFixup","javadoc":"","static":false,"name":"fixupDebug","comment":"","type_short":"DebugFixup","constant_value":null}]}
