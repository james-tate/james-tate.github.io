{"implements":["ghidra.app.util.bin.StructConverter","ghidra.app.util.bin.format.pe.PeMarkupable"],"javadoc":"<pre>\n typedef struct IMAGE_COR20_HEADER\n {\n     \/\/ Header versioning\n    DWORD                   cb;                      \/\/ Size of the structure              \n    WORD                    MajorRuntimeVersion;     \/\/ Version of the CLR Runtime\n    WORD                    MinorRuntimeVersion;     \/\/ Version of the CLR Runtime\n\n    \/\/ Symbol table and startup information\n    IMAGE_DATA_DIRECTORY    MetaData;                \/\/ A Data Directory giving RVA and Size of MetaData      \n    DWORD                   Flags;\n    union {\n      DWORD                 EntryPointRVA;           \/\/ Points to the .NET native EntryPoint method\n      DWORD                 EntryPointToken;         \/\/ Points to the .NET IL EntryPoint method\n    };\n\n    \/\/ Binding information\n    IMAGE_DATA_DIRECTORY    Resources;               \/\/ A Data Directory for Resources, which are referenced in the MetaData\n    IMAGE_DATA_DIRECTORY    StrongNameSignature;     \/\/ A Data Directory for unique .NET assembly signatures\n\n    \/\/ Regular fixup and binding information\n    IMAGE_DATA_DIRECTORY    CodeManagerTable;        \/\/ Always 0\n    IMAGE_DATA_DIRECTORY    VTableFixups;            \/\/ Not well documented VTable used by languages who don't follow the common type system runtime model\n    IMAGE_DATA_DIRECTORY    ExportAddressTableJumps; \/\/ Always 0 in normal .NET assemblies, only present in native images\n\n    \/\/ Precompiled image info (internal use only - set to zero)\n    IMAGE_DATA_DIRECTORY    ManagedNativeHeader;\n\n};\n<\/pre>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createImageCor20Header","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"long","name":"index","comment":"","type_short":"long"},{"type_long":"ghidra.app.util.bin.format.pe.NTHeader","name":"ntHeader","comment":"","type_short":"NTHeader"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.pe.ImageCor20Header","comment":"","type_short":"ImageCor20Header"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initIMAGE_COR20_HEADER","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"long","name":"index","comment":"","type_short":"long"},{"type_long":"ghidra.app.util.bin.format.pe.NTHeader","name":"ntHeader","comment":"","type_short":"NTHeader"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Parses this header\n@return True if parsing completed successfully; otherwise, false.\n@throws IOException If there was an IO problem while parsing.","static":false,"name":"parse","comment":"Parses this header","params":[],"throws":[{"type_long":"java.io.IOException","comment":"If there was an IO problem while parsing.","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"True if parsing completed successfully; otherwise, false.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"markup","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"boolean","name":"isBinary","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"","type_short":"MessageLog"},{"type_long":"ghidra.app.util.bin.format.pe.NTHeader","name":"ntHeader","comment":"","type_short":"NTHeader"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.program.model.util.CodeUnitInsertionException","comment":"","type_short":"CodeUnitInsertionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"Gets the size of this structure in bytes.\n@return The size of this structure in bytes.","static":false,"name":"getCb","comment":"Gets the size of this structure in bytes.","params":[],"throws":[],"return":{"type_long":"int","comment":"The size of this structure in bytes.","type_short":"int"}},{"javadoc":"Gets the major runtime version.\n@return The major runtime version.","static":false,"name":"getMajorRuntimeVersion","comment":"Gets the major runtime version.","params":[],"throws":[],"return":{"type_long":"short","comment":"The major runtime version.","type_short":"short"}},{"javadoc":"Gets the major runtime version.\n@return The major runtime version.","static":false,"name":"getMinorRuntimeVersion","comment":"Gets the major runtime version.","params":[],"throws":[],"return":{"type_long":"short","comment":"The major runtime version.","type_short":"short"}},{"javadoc":"Gets the MetaData directory.\n@return The MetaData directory.","static":false,"name":"getMetadata","comment":"Gets the MetaData directory.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.cli.CliMetadataDirectory","comment":"The MetaData directory.","type_short":"CliMetadataDirectory"}},{"javadoc":"Gets the flags.\n@return The flags.","static":false,"name":"getFlags","comment":"Gets the flags.","params":[],"throws":[],"return":{"type_long":"int","comment":"The flags.","type_short":"int"}},{"javadoc":"Gets the entry point token (or RVA).\n@return The entry point token (or RVA).","static":false,"name":"getEntryPointToken","comment":"Gets the entry point token (or RVA).","params":[],"throws":[],"return":{"type_long":"int","comment":"The entry point token (or RVA).","type_short":"int"}},{"javadoc":"Gets the Resources directory.\n@return The Resources directory.","static":false,"name":"getResources","comment":"Gets the Resources directory.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.DefaultDataDirectory","comment":"The Resources directory.","type_short":"DefaultDataDirectory"}},{"javadoc":"Gets the StrongNameSignature directory.\n@return The StrongNameSignature directory.","static":false,"name":"getStrongNameSignature","comment":"Gets the StrongNameSignature directory.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.DefaultDataDirectory","comment":"The StrongNameSignature directory.","type_short":"DefaultDataDirectory"}},{"javadoc":"Gets the CodeManagerTable directory.\n@return The CodeManagerTable directory.","static":false,"name":"getCodeManagerTable","comment":"Gets the CodeManagerTable directory.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.DefaultDataDirectory","comment":"The CodeManagerTable directory.","type_short":"DefaultDataDirectory"}},{"javadoc":"Gets the VTableFixups directory.\n@return The VTableFixups directory.","static":false,"name":"getVTableFixups","comment":"Gets the VTableFixups directory.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.DefaultDataDirectory","comment":"The VTableFixups directory.","type_short":"DefaultDataDirectory"}},{"javadoc":"Gets the ExportAddressTableJumps directory.\n@return The ExportAddressTableJumps directory.","static":false,"name":"getExportAddressTableJumps","comment":"Gets the ExportAddressTableJumps directory.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.DefaultDataDirectory","comment":"The ExportAddressTableJumps directory.","type_short":"DefaultDataDirectory"}},{"javadoc":"Gets the ManagedNativeHeader directory.\n@return The ManagedNativeHeader directory.","static":false,"name":"getManagedNativeHeader","comment":"Gets the ManagedNativeHeader directory.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.DefaultDataDirectory","comment":"The ManagedNativeHeader directory.","type_short":"DefaultDataDirectory"}}],"name":"ImageCor20Header","comment":"\n typedef struct IMAGE_COR20_HEADER\n {\n     \/\/ Header versioning\n    DWORD                   cb;                      \/\/ Size of the structure              \n    WORD                    MajorRuntimeVersion;     \/\/ Version of the CLR Runtime\n    WORD                    MinorRuntimeVersion;     \/\/ Version of the CLR Runtime\n\n    \/\/ Symbol table and startup information\n    IMAGE_DATA_DIRECTORY    MetaData;                \/\/ A Data Directory giving RVA and Size of MetaData      \n    DWORD                   Flags;\n    union {\n      DWORD                 EntryPointRVA;           \/\/ Points to the .NET native EntryPoint method\n      DWORD                 EntryPointToken;         \/\/ Points to the .NET IL EntryPoint method\n    };\n\n    \/\/ Binding information\n    IMAGE_DATA_DIRECTORY    Resources;               \/\/ A Data Directory for Resources, which are referenced in the MetaData\n    IMAGE_DATA_DIRECTORY    StrongNameSignature;     \/\/ A Data Directory for unique .NET assembly signatures\n\n    \/\/ Regular fixup and binding information\n    IMAGE_DATA_DIRECTORY    CodeManagerTable;        \/\/ Always 0\n    IMAGE_DATA_DIRECTORY    VTableFixups;            \/\/ Not well documented VTable used by languages who don't follow the common type system runtime model\n    IMAGE_DATA_DIRECTORY    ExportAddressTableJumps; \/\/ Always 0 in normal .NET assemblies, only present in native images\n\n    \/\/ Precompiled image info (internal use only - set to zero)\n    IMAGE_DATA_DIRECTORY    ManagedNativeHeader;\n\n};\n","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"NAME","comment":"","type_short":"String","constant_value":"\"IMAGE_COR20_HEADER\""},{"type_long":"int","javadoc":"","static":false,"name":"cb","comment":"","type_short":"int","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"majorRuntimeVersion","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"minorRuntimeVersion","comment":"","type_short":"short","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.cli.CliMetadataDirectory","javadoc":"","static":false,"name":"metadata","comment":"","type_short":"CliMetadataDirectory","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"flags","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"entryPointToken","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.DefaultDataDirectory","javadoc":"","static":false,"name":"resources","comment":"","type_short":"DefaultDataDirectory","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.DefaultDataDirectory","javadoc":"","static":false,"name":"strongNameSignature","comment":"","type_short":"DefaultDataDirectory","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.DefaultDataDirectory","javadoc":"","static":false,"name":"codeManagerTable","comment":"","type_short":"DefaultDataDirectory","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.DefaultDataDirectory","javadoc":"","static":false,"name":"vTableFixups","comment":"","type_short":"DefaultDataDirectory","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.DefaultDataDirectory","javadoc":"","static":false,"name":"exportAddressTableJumps","comment":"","type_short":"DefaultDataDirectory","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.DefaultDataDirectory","javadoc":"","static":false,"name":"managedNativeHeader","comment":"","type_short":"DefaultDataDirectory","constant_value":null}]}
