{"implements":[],"javadoc":"<pre>\n typedef struct OMFSegMap {\n     unsigned short  cSeg;        \/\/ total number of segment descriptors\n     unsigned short  cSegLog;     \/\/ number of logical segment descriptors\n     OMFSegMapDesc   rgDesc[0];   \/\/ array of segment descriptors\n };\n <\/pre>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createOMFSegMap","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"ptr","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.OMFSegMap","comment":"","type_short":"OMFSegMap"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initOMFSegMap","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"ptr","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the total number of segment descriptors.\n@return the total number of segment descriptors","static":false,"name":"getSegmentDescriptorCount","comment":"Returns the total number of segment descriptors.","params":[],"throws":[],"return":{"type_long":"short","comment":"the total number of segment descriptors","type_short":"short"}},{"javadoc":"Returns the number of logical segment descriptors.\n@return the number of logical segment descriptors","static":false,"name":"getLogicalSegmentDescriptorCount","comment":"Returns the number of logical segment descriptors.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of logical segment descriptors","type_short":"short"}},{"javadoc":"Returns the array of segment descriptors.\n@return the array of segment descriptors","static":false,"name":"getSegmentDescriptor","comment":"Returns the array of segment descriptors.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.OMFSegMapDesc[]","comment":"the array of segment descriptors","type_short":"ghidra.app.util.bin.format.pe.debug.OMFSegMapDesc[]"}}],"name":"OMFSegMap","comment":"\n typedef struct OMFSegMap {\n     unsigned short  cSeg;        \/\/ total number of segment descriptors\n     unsigned short  cSegLog;     \/\/ number of logical segment descriptors\n     OMFSegMapDesc   rgDesc[0];   \/\/ array of segment descriptors\n };\n ","fields":[{"type_long":"short","javadoc":"","static":false,"name":"cSeg","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"cSegLog","comment":"","type_short":"short","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.debug.OMFSegMapDesc[]","javadoc":"","static":false,"name":"segmentMapDesc","comment":"","type_short":"ghidra.app.util.bin.format.pe.debug.OMFSegMapDesc[]","constant_value":null}]}
