{"implements":[],"javadoc":"A class to represent the Object Module Format (OMF) Segment Mapping Descriptor data structure.\n <br>\n <pre>\n typedef struct OMFSegMapDesc {\n     unsigned short  flags;       \/\/ descriptor flags bit field\n     unsigned short  ovl;         \/\/ the logical overlay number\n     unsigned short  group;       \/\/ group index into the descriptor array\n     unsigned short  frame;       \/\/ logical segment index - interpreted via flags\n     unsigned short  iSegName;    \/\/ segment or group name - index into sstSegName\n     unsigned short  iClassName;  \/\/ class name - index into sstSegName\n     unsigned long   offset;      \/\/ byte offset of the logical within the physical segment\n     unsigned long   cbSeg;       \/\/ byte count of the logical segment or group\n } OMFSegMapDesc;\n <\/pre>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createOMFSegMapDesc","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"ptr","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.OMFSegMapDesc","comment":"","type_short":"OMFSegMapDesc"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initOMFSegMapDesc","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"ptr","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the descriptor flags bit field.\n@return the descriptor flags bit field","static":false,"name":"getFlags","comment":"Returns the descriptor flags bit field.","params":[],"throws":[],"return":{"type_long":"short","comment":"the descriptor flags bit field","type_short":"short"}},{"javadoc":"Returns the logical overlay number.\n@return the logical overlay number","static":false,"name":"getLogicalOverlayNumber","comment":"Returns the logical overlay number.","params":[],"throws":[],"return":{"type_long":"short","comment":"the logical overlay number","type_short":"short"}},{"javadoc":"Returns the group index into the descriptor array.\n@return the group index into the descriptor array","static":false,"name":"getGroupIndex","comment":"Returns the group index into the descriptor array.","params":[],"throws":[],"return":{"type_long":"short","comment":"the group index into the descriptor array","type_short":"short"}},{"javadoc":"Returns the logical segment index - interpreted via flags.\n@return the logical segment index - interpreted via flags","static":false,"name":"getLogicalSegmentIndex","comment":"Returns the logical segment index - interpreted via flags.","params":[],"throws":[],"return":{"type_long":"short","comment":"the logical segment index - interpreted via flags","type_short":"short"}},{"javadoc":"Returns the segment or group name - index into sstSegName.\n@return the segment or group name - index into sstSegName","static":false,"name":"getSegmentName","comment":"Returns the segment or group name - index into sstSegName.","params":[],"throws":[],"return":{"type_long":"short","comment":"the segment or group name - index into sstSegName","type_short":"short"}},{"javadoc":"Returns the class name - index into sstSegName.\n@return the class name - index into sstSegName","static":false,"name":"getClassName","comment":"Returns the class name - index into sstSegName.","params":[],"throws":[],"return":{"type_long":"short","comment":"the class name - index into sstSegName","type_short":"short"}},{"javadoc":"Returns the byte offset of the logical within the physical segment.\n@return the byte offset of the logical within the physical segment","static":false,"name":"getByteOffset","comment":"Returns the byte offset of the logical within the physical segment.","params":[],"throws":[],"return":{"type_long":"int","comment":"the byte offset of the logical within the physical segment","type_short":"int"}},{"javadoc":"Returns the byte count of the logical segment or group.\n@return the byte count of the logical segment or group","static":false,"name":"getByteCount","comment":"Returns the byte count of the logical segment or group.","params":[],"throws":[],"return":{"type_long":"int","comment":"the byte count of the logical segment or group","type_short":"int"}}],"name":"OMFSegMapDesc","comment":"A class to represent the Object Module Format (OMF) Segment Mapping Descriptor data structure.\n \n \n typedef struct OMFSegMapDesc {\n     unsigned short  flags;       \/\/ descriptor flags bit field\n     unsigned short  ovl;         \/\/ the logical overlay number\n     unsigned short  group;       \/\/ group index into the descriptor array\n     unsigned short  frame;       \/\/ logical segment index - interpreted via flags\n     unsigned short  iSegName;    \/\/ segment or group name - index into sstSegName\n     unsigned short  iClassName;  \/\/ class name - index into sstSegName\n     unsigned long   offset;      \/\/ byte offset of the logical within the physical segment\n     unsigned long   cbSeg;       \/\/ byte count of the logical segment or group\n } OMFSegMapDesc;\n ","fields":[{"type_long":"int","javadoc":"","static":true,"name":"IMAGE_SIZEOF_OMF_SEG_MAP_DESC","comment":"","type_short":"int","constant_value":"20"},{"type_long":"short","javadoc":"","static":false,"name":"flags","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"ovl","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"group","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"frame","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"iSegName","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"iClassName","comment":"","type_short":"short","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"offset","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"cbSeg","comment":"","type_short":"int","constant_value":null}]}
