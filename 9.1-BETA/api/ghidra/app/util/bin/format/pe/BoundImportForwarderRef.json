{"implements":["ghidra.app.util.bin.StructConverter","ghidra.app.util.bin.ByteArrayConverter"],"javadoc":"A class to represent the \n <code>IMAGE_BOUND_FORWARDER_REF<\/code>\n data structure defined in <b><code>winnt.h<\/code><\/b>.\n <p>\n <pre>\n typedef struct _IMAGE_BOUND_FORWARDER_REF {\n     DWORD   TimeDateStamp;\n     WORD    OffsetModuleName;\n     WORD    Reserved;\n } IMAGE_BOUND_FORWARDER_REF, *PIMAGE_BOUND_FORWARDER_REF;\n <\/pre>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"@param reader the binary reader\n@param readerIndex the index into the binary reader\n@param biddIndex the index where the bound import data directory begins","static":true,"name":"createBoundImportForwarderRef","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"the binary reader","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"readerIndex","comment":"the index into the binary reader","type_short":"int"},{"type_long":"int","name":"biddIndex","comment":"the index where the bound import data directory begins","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.pe.BoundImportForwarderRef","comment":"","type_short":"BoundImportForwarderRef"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initBoundImportForwarderRef","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"readerIndex","comment":"","type_short":"int"},{"type_long":"int","name":"biddIndex","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.app.util.bin.ByteArrayConverter#toBytes(ghidra.util.DataConverter)","static":false,"name":"toBytes","comment":"","params":[{"type_long":"ghidra.util.DataConverter","name":"dc","comment":"","type_short":"DataConverter"}],"throws":[],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}},{"javadoc":"Returns the time stamp.\n@return the time stamp","static":false,"name":"getTimeDateStamp","comment":"Returns the time stamp.","params":[],"throws":[],"return":{"type_long":"int","comment":"the time stamp","type_short":"int"}},{"javadoc":"Returns the offset, relative the beginning of the Bound Import Table,\n to the import name.\n@return the offset to the import name","static":false,"name":"getOffsetModuleName","comment":"Returns the offset, relative the beginning of the Bound Import Table,\n to the import name.","params":[],"throws":[],"return":{"type_long":"short","comment":"the offset to the import name","type_short":"short"}},{"javadoc":"","static":false,"name":"setOffsetModuleName","comment":"","params":[{"type_long":"short","name":"offset","comment":"","type_short":"short"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the reserved word (use unknown).\n@return the reserved word","static":false,"name":"getReserved","comment":"Returns the reserved word (use unknown).","params":[],"throws":[],"return":{"type_long":"short","comment":"the reserved word","type_short":"short"}},{"javadoc":"Returns the imported module name.\n@return the imported module name","static":false,"name":"getModuleName","comment":"Returns the imported module name.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the imported module name","type_short":"String"}},{"javadoc":"@see ghidra.app.util.bin.StructConverter#toDataType()","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}}],"name":"BoundImportForwarderRef","comment":"A class to represent the \n IMAGE_BOUND_FORWARDER_REF\n data structure defined in winnt.h.\n \n \n typedef struct _IMAGE_BOUND_FORWARDER_REF {\n     DWORD   TimeDateStamp;\n     WORD    OffsetModuleName;\n     WORD    Reserved;\n } IMAGE_BOUND_FORWARDER_REF, *PIMAGE_BOUND_FORWARDER_REF;\n ","fields":[{"type_long":"java.lang.String","javadoc":"The name to use when converting into a structure data type.","static":true,"name":"NAME","comment":"The name to use when converting into a structure data type.","type_short":"String","constant_value":"\"IMAGE_BOUND_FORWARDER_REF\""},{"type_long":"int","javadoc":"The size of the <code>IMAGE_BOUND_FORWARDER_REF<\/code> in bytes.","static":true,"name":"IMAGE_SIZEOF_BOUND_IMPORT_FORWARDER_REF","comment":"The size of the IMAGE_BOUND_FORWARDER_REF in bytes.","type_short":"int","constant_value":"8"},{"type_long":"int","javadoc":"","static":false,"name":"timeDateStamp","comment":"","type_short":"int","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"offsetModuleName","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"reserved","comment":"","type_short":"short","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"moduleName","comment":"","type_short":"String","constant_value":null}]}
