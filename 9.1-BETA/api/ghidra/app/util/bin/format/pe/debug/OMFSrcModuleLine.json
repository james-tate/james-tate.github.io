{"implements":[],"javadoc":"A class to represent the Object Module Format (OMF) Source Module Line data structure.\n <br>\n short seg            - segment index.\n <br>\n short cPair          - Count or number of source line pairs to follow.\n <br>\n int [] offsets       - offset within the code segment of the start of the line.\n <br>\n short [] linenumbers - line numbers that are in the source file that cause code to be emitted to the code segment.\n <br>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createOMFSrcModuleLine","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"ptr","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.OMFSrcModuleLine","comment":"","type_short":"OMFSrcModuleLine"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initOMFSrcModuleLine","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"ptr","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the count or number of source line pairs to follow.\n@return the count or number of source line pairs to follow","static":false,"name":"getPairCount","comment":"Returns the count or number of source line pairs to follow.","params":[],"throws":[],"return":{"type_long":"short","comment":"the count or number of source line pairs to follow","type_short":"short"}},{"javadoc":"Returns the line numbers that are in the source file that cause code to be emitted to the code segment.\n@return the line numbers that are in the source file that cause code to be emitted to the code segment","static":false,"name":"getLinenumbers","comment":"Returns the line numbers that are in the source file that cause code to be emitted to the code segment.","params":[],"throws":[],"return":{"type_long":"short[]","comment":"the line numbers that are in the source file that cause code to be emitted to the code segment","type_short":"short[]"}},{"javadoc":"Returns the offset within the code segment of the start of the line.\n@return the offset within the code segment of the start of the line","static":false,"name":"getOffsets","comment":"Returns the offset within the code segment of the start of the line.","params":[],"throws":[],"return":{"type_long":"int[]","comment":"the offset within the code segment of the start of the line","type_short":"int[]"}},{"javadoc":"Returns the segment index.\n@return the segment index","static":false,"name":"getSegmentIndex","comment":"Returns the segment index.","params":[],"throws":[],"return":{"type_long":"short","comment":"the segment index","type_short":"short"}},{"javadoc":"","static":false,"name":"getByteCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"OMFSrcModuleLine","comment":"A class to represent the Object Module Format (OMF) Source Module Line data structure.\n \n short seg            - segment index.\n \n short cPair          - Count or number of source line pairs to follow.\n \n int [] offsets       - offset within the code segment of the start of the line.\n \n short [] linenumbers - line numbers that are in the source file that cause code to be emitted to the code segment.\n ","fields":[{"type_long":"short","javadoc":"","static":false,"name":"seg","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"cPair","comment":"","type_short":"short","constant_value":null},{"type_long":"int[]","javadoc":"","static":false,"name":"offsets","comment":"","type_short":"int[]","constant_value":null},{"type_long":"short[]","javadoc":"","static":false,"name":"linenumbers","comment":"","type_short":"short[]","constant_value":null}]}
