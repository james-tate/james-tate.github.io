{"implements":["ghidra.app.util.bin.StructConverter","ghidra.app.util.bin.ByteArrayConverter"],"javadoc":"A class to represent the \n <code>IMAGE_BOUND_IMPORT_DESCRIPTOR<\/code>\n data structure defined in <b><code>winnt.h<\/code><\/b>.\n <p>\n <pre>\n typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {\n     DWORD   TimeDateStamp;\n     WORD    OffsetModuleName;\n     WORD    NumberOfModuleForwarderRefs;\n     \/\/ Array of zero or more IMAGE_BOUND_FORWARDER_REF follows\n } IMAGE_BOUND_IMPORT_DESCRIPTOR,  *PIMAGE_BOUND_IMPORT_DESCRIPTOR;\n <\/pre>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createBoundImportDescriptor","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"readerIndex","comment":"","type_short":"int"},{"type_long":"int","name":"biddIndex","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.pe.BoundImportDescriptor","comment":"","type_short":"BoundImportDescriptor"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initBoundImportDescriptor","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"readerIndex","comment":"","type_short":"int"},{"type_long":"int","name":"biddIndex","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"int","name":"timeDateStamp","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the time\/data stamp of the imported DLL.\n@return the time\/data stamp of the imported DLL","static":false,"name":"getTimeDateStamp","comment":"Returns the time\/data stamp of the imported DLL.","params":[],"throws":[],"return":{"type_long":"int","comment":"the time\/data stamp of the imported DLL","type_short":"int"}},{"javadoc":"Returns an offset to a string with the name of the imported DLL.\n@return an offset to a string with the name","static":false,"name":"getOffsetModuleName","comment":"Returns an offset to a string with the name of the imported DLL.","params":[],"throws":[],"return":{"type_long":"short","comment":"an offset to a string with the name","type_short":"short"}},{"javadoc":"","static":false,"name":"setOffsetModuleName","comment":"","params":[{"type_long":"short","name":"offset","comment":"","type_short":"short"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the number of IMAGE_BOUND_FORWARDER_REF \n structures that immediately follow this structure.\n@return the number of IMAGE_BOUND_FORWARDER_REF structures that immediately follow this structure","static":false,"name":"getNumberOfModuleForwarderRefs","comment":"Returns the number of IMAGE_BOUND_FORWARDER_REF \n structures that immediately follow this structure.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of IMAGE_BOUND_FORWARDER_REF structures that immediately follow this structure","type_short":"short"}},{"javadoc":"Returns the module name of the imported DLL.\n@return the module name of the imported DLL","static":false,"name":"getModuleName","comment":"Returns the module name of the imported DLL.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the module name of the imported DLL","type_short":"String"}},{"javadoc":"Returns the forwarder ref at the specified index\n@param index the index of the forwarder ref\n@return the forwarder ref at the specified index","static":false,"name":"getBoundImportForwarderRef","comment":"Returns the forwarder ref at the specified index","params":[{"type_long":"int","name":"index","comment":"the index of the forwarder ref","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.BoundImportForwarderRef","comment":"the forwarder ref at the specified index","type_short":"BoundImportForwarderRef"}},{"javadoc":"@see java.lang.Object#toString()","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see ghidra.app.util.bin.StructConverter#toDataType()","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"@see ghidra.app.util.bin.ByteArrayConverter#toBytes(ghidra.util.DataConverter)","static":false,"name":"toBytes","comment":"","params":[{"type_long":"ghidra.util.DataConverter","name":"dc","comment":"","type_short":"DataConverter"}],"throws":[],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}}],"name":"BoundImportDescriptor","comment":"A class to represent the \n IMAGE_BOUND_IMPORT_DESCRIPTOR\n data structure defined in winnt.h.\n \n \n typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {\n     DWORD   TimeDateStamp;\n     WORD    OffsetModuleName;\n     WORD    NumberOfModuleForwarderRefs;\n     \/\/ Array of zero or more IMAGE_BOUND_FORWARDER_REF follows\n } IMAGE_BOUND_IMPORT_DESCRIPTOR,  *PIMAGE_BOUND_IMPORT_DESCRIPTOR;\n ","fields":[{"type_long":"java.lang.String","javadoc":"The name to use when converting into a structure data type.","static":true,"name":"NAME","comment":"The name to use when converting into a structure data type.","type_short":"String","constant_value":"\"IMAGE_BOUND_IMPORT_DESCRIPTOR\""},{"type_long":"int","javadoc":"The size of the <code>IMAGE_BOUND_IMPORT_DESCRIPTOR<\/code> in bytes.","static":true,"name":"IMAGE_SIZEOF_BOUND_IMPORT_DESCRIPTOR","comment":"The size of the IMAGE_BOUND_IMPORT_DESCRIPTOR in bytes.","type_short":"int","constant_value":"8"},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"moduleName","comment":"","type_short":"String","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"timeDateStamp","comment":"","type_short":"int","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"offsetModuleName","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"numberOfModuleForwarderRefs","comment":"","type_short":"short","constant_value":null},{"type_long":"java.util.List<ghidra.app.util.bin.format.pe.BoundImportForwarderRef>","javadoc":"","static":false,"name":"forwarders","comment":"","type_short":"List","constant_value":null}]}
