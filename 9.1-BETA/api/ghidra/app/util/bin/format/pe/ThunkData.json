{"implements":["ghidra.app.util.bin.StructConverter","ghidra.app.util.bin.ByteArrayConverter"],"javadoc":"A class to represent the \n <b><code>IMAGE_THUNK_DATA32 struct<\/code><\/b>\n as defined in \n <b><code>winnt.h<\/code><\/b>.\n \n <pre>\n typedef struct _IMAGE_THUNK_DATA32 {\n     union {\n         DWORD ForwarderString;  \/\/ PBYTE\n         DWORD Function;         \/\/ PDWORD\n         DWORD Ordinal;\n         DWORD AddressOfData;    \/\/ PIMAGE_IMPORT_BY_NAME\n     } u1;\n } IMAGE_THUNK_DATA32;\n typedef IMAGE_THUNK_DATA32 * PIMAGE_THUNK_DATA32;\n <\/pre>\n \n <pre>\n typedef struct _IMAGE_THUNK_DATA64 {\n     union {\n         PBYTE  ForwarderString;\n         PDWORD Function;\n         ULONGLONG Ordinal;\n         PIMAGE_IMPORT_BY_NAME  AddressOfData;\n     } u1;\n } IMAGE_THUNK_DATA64;\n typedef IMAGE_THUNK_DATA64 * PIMAGE_THUNK_DATA64;\n <\/pre>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createThunkData","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"index","comment":"","type_short":"int"},{"type_long":"boolean","name":"is64bit","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.pe.ThunkData","comment":"","type_short":"ThunkData"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initThunkData","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"index","comment":"","type_short":"int"},{"type_long":"boolean","name":"is64bit","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new thunk data with the specified value\n@param value the new thunk value","static":false,"name":"<init>","comment":"Constructs a new thunk data with the specified value","params":[{"type_long":"int","name":"value","comment":"the new thunk value","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the size of the thunk (in bytes) based on the size of the\n executable (32 vs 64 bit).\n@return the size of the thunk (in bytes)","static":false,"name":"getStructSize","comment":"Returns the size of the thunk (in bytes) based on the size of the\n executable (32 vs 64 bit).","params":[],"throws":[],"return":{"type_long":"int","comment":"the size of the thunk (in bytes)","type_short":"int"}},{"javadoc":"Returns the struct name.\n@return the struct name","static":false,"name":"getStructName","comment":"Returns the struct name.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the struct name","type_short":"String"}},{"javadoc":"Sets the value of the thunk.\n@param value the new thunk value","static":false,"name":"setValue","comment":"Sets the value of the thunk.","params":[{"type_long":"int","name":"value","comment":"the new thunk value","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the forward string pointer.\n@return the forward string pointer","static":false,"name":"getForwarderString","comment":"Returns the forward string pointer.","params":[],"throws":[],"return":{"type_long":"long","comment":"the forward string pointer","type_short":"long"}},{"javadoc":"Returns the function pointer.\n@return the function pointer","static":false,"name":"getFunction","comment":"Returns the function pointer.","params":[],"throws":[],"return":{"type_long":"long","comment":"the function pointer","type_short":"long"}},{"javadoc":"Returns the ordinal.\n@return the ordinal","static":false,"name":"getOrdinal","comment":"Returns the ordinal.","params":[],"throws":[],"return":{"type_long":"long","comment":"the ordinal","type_short":"long"}},{"javadoc":"","static":false,"name":"isOrdinal","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns the address of the data.\n@return the address of the data","static":false,"name":"getAddressOfData","comment":"Returns the address of the data.","params":[],"throws":[],"return":{"type_long":"long","comment":"the address of the data","type_short":"long"}},{"javadoc":"","static":false,"name":"setImportByName","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.pe.ImportByName","name":"ibn","comment":"","type_short":"ImportByName"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the underlying import by name structure.\n@return the underlying import by name structure","static":false,"name":"getImportByName","comment":"Returns the underlying import by name structure.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.ImportByName","comment":"the underlying import by name structure","type_short":"ImportByName"}},{"javadoc":"@see ghidra.app.util.bin.StructConverter#toDataType()","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"@see ghidra.app.util.bin.ByteArrayConverter#toBytes(ghidra.util.DataConverter)","static":false,"name":"toBytes","comment":"","params":[{"type_long":"ghidra.util.DataConverter","name":"dc","comment":"","type_short":"DataConverter"}],"throws":[],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}}],"name":"ThunkData","comment":"A class to represent the \n IMAGE_THUNK_DATA32 struct\n as defined in \n winnt.h.\n \n \n typedef struct _IMAGE_THUNK_DATA32 {\n     union {\n         DWORD ForwarderString;  \/\/ PBYTE\n         DWORD Function;         \/\/ PDWORD\n         DWORD Ordinal;\n         DWORD AddressOfData;    \/\/ PIMAGE_IMPORT_BY_NAME\n     } u1;\n } IMAGE_THUNK_DATA32;\n typedef IMAGE_THUNK_DATA32 * PIMAGE_THUNK_DATA32;\n \n \n \n typedef struct _IMAGE_THUNK_DATA64 {\n     union {\n         PBYTE  ForwarderString;\n         PDWORD Function;\n         ULONGLONG Ordinal;\n         PIMAGE_IMPORT_BY_NAME  AddressOfData;\n     } u1;\n } IMAGE_THUNK_DATA64;\n typedef IMAGE_THUNK_DATA64 * PIMAGE_THUNK_DATA64;\n ","fields":[{"type_long":"boolean","javadoc":"","static":false,"name":"is64bit","comment":"","type_short":"boolean","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"value","comment":"","type_short":"long","constant_value":null},{"type_long":"ghidra.app.util.bin.format.pe.ImportByName","javadoc":"","static":false,"name":"ibn","comment":"","type_short":"ImportByName","constant_value":null}]}
