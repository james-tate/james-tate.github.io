{"implements":[],"javadoc":"<pre>\n typedef struct DATASYM32 {\n     unsigned short  reclen;         \/\/ Record length\n     unsigned short  rectyp;         \/\/ S_LDATA32, S_GDATA32 or S_PUB32\n     CV_uoff32_t     off;            \/\/ (unsigned long)\n     unsigned short  seg;\n     CV_typ_t        typind;         \/\/ Type index (unsigned short)\n     unsigned char   name[1];        \/\/ Length-prefixed name\n } DATASYM32;\n <\/pre>","static":false,"extends":"ghidra.app.util.bin.format.pe.debug.DebugSymbol","methods":[{"javadoc":"","static":true,"name":"createDataSym32","comment":"","params":[{"type_long":"short","name":"length","comment":"","type_short":"short"},{"type_long":"short","name":"type","comment":"","type_short":"short"},{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"ptr","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.DataSym32","comment":"","type_short":"DataSym32"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initDataSym32","comment":"","params":[{"type_long":"short","name":"length","comment":"","type_short":"short"},{"type_long":"short","name":"type","comment":"","type_short":"short"},{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"ptr","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getTypeIndex","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getNameChar","comment":"","params":[],"throws":[],"return":{"type_long":"byte","comment":"","type_short":"byte"}}],"name":"DataSym32","comment":"\n typedef struct DATASYM32 {\n     unsigned short  reclen;         \/\/ Record length\n     unsigned short  rectyp;         \/\/ S_LDATA32, S_GDATA32 or S_PUB32\n     CV_uoff32_t     off;            \/\/ (unsigned long)\n     unsigned short  seg;\n     CV_typ_t        typind;         \/\/ Type index (unsigned short)\n     unsigned char   name[1];        \/\/ Length-prefixed name\n } DATASYM32;\n ","fields":[{"type_long":"short","javadoc":"","static":false,"name":"typeIndex","comment":"","type_short":"short","constant_value":null},{"type_long":"byte","javadoc":"","static":false,"name":"nameChar","comment":"","type_short":"byte","constant_value":null}]}
