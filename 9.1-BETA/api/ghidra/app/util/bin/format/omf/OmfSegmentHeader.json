{"implements":[],"javadoc":"","static":false,"extends":"ghidra.app.util.bin.format.omf.OmfRecord","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"int","name":"num","comment":"","type_short":"int"},{"type_long":"int","name":"datatype","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"","type_short":"BinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return true if this is a code segment","static":false,"name":"isCode","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this is a code segment","type_short":"boolean"}},{"javadoc":"@return true if this segment is readable","static":false,"name":"isReadable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this segment is readable","type_short":"boolean"}},{"javadoc":"@return true if this segment is writable","static":false,"name":"isWritable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this segment is writable","type_short":"boolean"}},{"javadoc":"@return true if this segment is executable","static":false,"name":"isExecutable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this segment is executable","type_short":"boolean"}},{"javadoc":"@return the segment selector needed for this object","static":false,"name":"getFrameDatum","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"the segment selector needed for this object","type_short":"int"}},{"javadoc":"@param language is the Program language for this binary\n@return the starting Address for this segment","static":false,"name":"getAddress","comment":"","params":[{"type_long":"ghidra.program.model.lang.Language","name":"language","comment":"is the Program language for this binary","type_short":"Language"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the starting Address for this segment","type_short":"Address"}},{"javadoc":"@return the name of this segment","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the name of this segment","type_short":"String"}},{"javadoc":"@return the class name of this segment","static":false,"name":"getClassName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the class name of this segment","type_short":"String"}},{"javadoc":"@return the name of the overlay, or the empty string","static":false,"name":"getOverlayName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the name of the overlay, or the empty string","type_short":"String"}},{"javadoc":"@return the load image address for this segment","static":false,"name":"getStartAddress","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"the load image address for this segment","type_short":"long"}},{"javadoc":"@return the length of the segment in bytes","static":false,"name":"getSegmentLength","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"the length of the segment in bytes","type_short":"long"}},{"javadoc":"@return the alignment required for this segment","static":false,"name":"getAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"the alignment required for this segment","type_short":"int"}},{"javadoc":"@return special combining rules for this segment","static":false,"name":"getCombine","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"special combining rules for this segment","type_short":"int"}},{"javadoc":"@return true if this block uses filler other than zero bytes","static":false,"name":"hasNonZeroData","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this block uses filler other than zero bytes","type_short":"boolean"}},{"javadoc":"Sort the data-blocks within this segment","static":false,"name":"sortData","comment":"Sort the data-blocks within this segment","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get an InputStream that reads in the raw data for this segment\n@param reader is the image file reader\n@param log the log\n@return the InputStream\n@throws IOException for problems reading from the image file","static":false,"name":"getRawDataStream","comment":"Get an InputStream that reads in the raw data for this segment","params":[{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"is the image file reader","type_short":"BinaryReader"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"the log","type_short":"MessageLog"}],"throws":[{"type_long":"java.io.IOException","comment":"for problems reading from the image file","type_short":"IOException"}],"return":{"type_long":"java.io.InputStream","comment":"the InputStream","type_short":"InputStream"}},{"javadoc":"Given the first possible address where this segment can reside, relocate the\n segment based on this address and alignment considerations.\n@param firstValidAddress is the first possible Address for the segment\n@param alignOverride if non-negative, overrides alignment info from the segment header\n@return the next possible address for following segments\n@throws OmfException for bad alignment information","static":false,"name":"relocateSegment","comment":"Given the first possible address where this segment can reside, relocate the\n segment based on this address and alignment considerations.","params":[{"type_long":"long","name":"firstValidAddress","comment":"is the first possible Address for the segment","type_short":"long"},{"type_long":"int","name":"alignOverride","comment":"if non-negative, overrides alignment info from the segment header","type_short":"int"}],"throws":[{"type_long":"ghidra.app.util.bin.format.omf.OmfException","comment":"for bad alignment information","type_short":"OmfException"}],"return":{"type_long":"long","comment":"the next possible address for following segments","type_short":"long"}},{"javadoc":"Resolve special names from the name list such as: segment, class, overlay, names.\n This routine also determines the read\/write\/execute permissions for the segment\n based on the class name.\n@param nameList is the array of names associated with the file\n@throws OmfException for improper name indices","static":false,"name":"resolveNames","comment":"Resolve special names from the name list such as: segment, class, overlay, names.\n This routine also determines the read\/write\/execute permissions for the segment\n based on the class name.","params":[{"type_long":"java.util.ArrayList<java.lang.String>","name":"nameList","comment":"is the array of names associated with the file","type_short":"ArrayList"}],"throws":[{"type_long":"ghidra.app.util.bin.format.omf.OmfException","comment":"for improper name indices","type_short":"OmfException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add an explicit data-block to this segment.\n@param rec is the data-block","static":false,"name":"addEnumeratedData","comment":"Add an explicit data-block to this segment.","params":[{"type_long":"ghidra.app.util.bin.format.omf.OmfEnumeratedData","name":"rec","comment":"is the data-block","type_short":"OmfEnumeratedData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add an explicit data-block to this segment that might extend\n the length of this segment.  Borland compilers in particular produce\n data-blocks that can extend the segment in this way.\n@param rec is the data-block","static":false,"name":"appendEnumeratedData","comment":"Add an explicit data-block to this segment that might extend\n the length of this segment.  Borland compilers in particular produce\n data-blocks that can extend the segment in this way.","params":[{"type_long":"ghidra.app.util.bin.format.omf.OmfEnumeratedData","name":"rec","comment":"is the data-block","type_short":"OmfEnumeratedData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a compressed-form data-block to this segment\n@param rec is the data-block","static":false,"name":"addIteratedData","comment":"Add a compressed-form data-block to this segment","params":[{"type_long":"ghidra.app.util.bin.format.omf.OmfIteratedData","name":"rec","comment":"is the data-block","type_short":"OmfIteratedData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"OmfSegmentHeader","comment":"","fields":[{"type_long":"byte","javadoc":"","static":false,"name":"segAttr","comment":"","type_short":"byte","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"frameNumber","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"offset","comment":"","type_short":"int","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"segmentLength","comment":"","type_short":"long","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"segmentNameIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"classNameIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"overlayNameIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"segmentName","comment":"","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"className","comment":"","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"overlayName","comment":"","type_short":"String","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isCode","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isReadable","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isWritable","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isExecutable","comment":"","type_short":"boolean","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"vma","comment":"","type_short":"long","constant_value":null},{"type_long":"java.util.ArrayList<ghidra.app.util.bin.format.omf.OmfData>","javadoc":"","static":false,"name":"dataBlocks","comment":"","type_short":"ArrayList","constant_value":null}]}
