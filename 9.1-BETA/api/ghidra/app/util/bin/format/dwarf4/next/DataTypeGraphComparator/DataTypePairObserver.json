{"implements":[],"javadoc":"","static":true,"methods":[{"javadoc":"Callback method called with a {@link DataType} from the first\/left\/src graph and\n its matching DataType element from the second\/right\/dest graph.\n <p>\n This callback can choose to abort traversing the tree of child types if it returns\n false.  (ie. if this was a Pointer DataType, returning false would stop\n the graph comparator from comparing the DataType pointed to by this Pointer)\n <p>\n@param dt1 element from the first\/left\/src DataType graph\n@param dt2 matching element from the second\/right\/dest DataType graph\n@return false if abort this subtree, true if continue","static":false,"name":"observe","comment":"Callback method called with a DataType from the first\/left\/src graph and\n its matching DataType element from the second\/right\/dest graph.\n \n This callback can choose to abort traversing the tree of child types if it returns\n false.  (ie. if this was a Pointer DataType, returning false would stop\n the graph comparator from comparing the DataType pointed to by this Pointer)\n ","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt1","comment":"element from the first\/left\/src DataType graph","type_short":"DataType"},{"type_long":"ghidra.program.model.data.DataType","name":"dt2","comment":"matching element from the second\/right\/dest DataType graph","type_short":"DataType"}],"throws":[],"return":{"type_long":"boolean","comment":"false if abort this subtree, true if continue","type_short":"boolean"}}],"name":"DataTypePairObserver","comment":"","fields":[]}
