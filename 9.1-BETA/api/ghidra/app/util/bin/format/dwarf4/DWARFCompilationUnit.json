{"implements":[],"javadoc":"A DWARF \"CompilationUnit\" is a contiguous block of {@link DebugInfoEntry DIE} records found\n in a \".debug_info\" section of an ELF program.  The compilation unit block starts with a\n header that has a few important values and flags, and is followed by the DIE records.\n <p>\n The first DIE record must be a DW_TAG_compile_unit (see {@link DWARFCompileUnit},\n and {@link #getCompileUnit()}).\n <p>\n DIE records are identified by their byte offset in the \".debug_info\" section.\n <p>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a new {@link DWARFCompilationUnit} by reading a compilationUnit's header data\n from the debug_info section and the debug_abbr section and its compileUnit DIE (ie.\n the first DIE right after the header).\n <p>\n Returns NULL if there was an ignorable error while reading the compilation unit (and\n leaves the input stream at the next compilation unit to read), otherwise throws\n an IOException if there was an unrecoverable error.\n@param debugInfoBR\n@param debugAbbrBR\n@param cuNumber\n@param helper\n@param monitor\n@return \n@throws DWARFException\n@throws IOException\n@throws CancelledException","static":true,"name":"readCompilationUnit","comment":"Creates a new DWARFCompilationUnit by reading a compilationUnit's header data\n from the debug_info section and the debug_abbr section and its compileUnit DIE (ie.\n the first DIE right after the header).\n \n Returns NULL if there was an ignorable error while reading the compilation unit (and\n leaves the input stream at the next compilation unit to read), otherwise throws\n an IOException if there was an unrecoverable error.","params":[{"type_long":"ghidra.app.util.bin.format.dwarf4.next.DWARFProgram","name":"dwarfProgram","comment":"","type_short":"DWARFProgram"},{"type_long":"ghidra.app.util.bin.BinaryReader","name":"debugInfoBR","comment":"","type_short":"BinaryReader"},{"type_long":"ghidra.app.util.bin.BinaryReader","name":"debugAbbrBR","comment":"","type_short":"BinaryReader"},{"type_long":"int","name":"cuNumber","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.app.util.bin.format.dwarf4.DWARFException","comment":"","type_short":"DWARFException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.app.util.bin.format.dwarf4.DWARFCompilationUnit","comment":"","type_short":"DWARFCompilationUnit"}},{"javadoc":"This ctor is public only for junit tests.  Do not use directly.\n@param dwarfProgram\n@param startOffset\n@param endOffset\n@param length\n@param format\n@param version\n@param abbreviationOffset\n@param pointerSize\n@param compUnitNumber\n@param firstDIEOffset\n@param codeToAbbreviationMap","static":false,"name":"<init>","comment":"This ctor is public only for junit tests.  Do not use directly.","params":[{"type_long":"ghidra.app.util.bin.format.dwarf4.next.DWARFProgram","name":"dwarfProgram","comment":"","type_short":"DWARFProgram"},{"type_long":"long","name":"startOffset","comment":"","type_short":"long"},{"type_long":"long","name":"endOffset","comment":"","type_short":"long"},{"type_long":"long","name":"length","comment":"","type_short":"long"},{"type_long":"int","name":"format","comment":"","type_short":"int"},{"type_long":"short","name":"version","comment":"","type_short":"short"},{"type_long":"long","name":"abbreviationOffset","comment":"","type_short":"long"},{"type_long":"byte","name":"pointerSize","comment":"","type_short":"byte"},{"type_long":"int","name":"compUnitNumber","comment":"","type_short":"int"},{"type_long":"long","name":"firstDIEOffset","comment":"","type_short":"long"},{"type_long":"java.util.Map<java.lang.Integer,ghidra.app.util.bin.format.dwarf4.DWARFAbbreviation>","name":"codeToAbbreviationMap","comment":"","type_short":"Map"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getCompileUnit","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.dwarf4.DWARFCompileUnit","comment":"","type_short":"DWARFCompileUnit"}},{"javadoc":"","static":false,"name":"setCompileUnit","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.dwarf4.DWARFCompileUnit","name":"compUnit","comment":"","type_short":"DWARFCompileUnit"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getProgram","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.dwarf4.next.DWARFProgram","comment":"","type_short":"DWARFProgram"}},{"javadoc":"An unsigned long (4 bytes in 32-bit or 8 bytes in 64-bit format) representing\n the length of the .debug_info contribution for that compilation unit,\n not including the length field itself.\n@return the length in bytes of the this compilation unit","static":false,"name":"getLength","comment":"An unsigned long (4 bytes in 32-bit or 8 bytes in 64-bit format) representing\n the length of the .debug_info contribution for that compilation unit,\n not including the length field itself.","params":[],"throws":[],"return":{"type_long":"long","comment":"the length in bytes of the this compilation unit","type_short":"long"}},{"javadoc":"A 1-byte unsigned integer representing the size\n in bytes of an address on the target\n architecture. If the system uses segmented addressing, this\n value represents the size of the offset portion of an address.\n@return the size in bytes of pointers","static":false,"name":"getPointerSize","comment":"A 1-byte unsigned integer representing the size\n in bytes of an address on the target\n architecture. If the system uses segmented addressing, this\n value represents the size of the offset portion of an address.","params":[],"throws":[],"return":{"type_long":"byte","comment":"the size in bytes of pointers","type_short":"byte"}},{"javadoc":"Returns the byte offset to the start of this compilation unit.\n@return the byte offset to the start of this compilation unit","static":false,"name":"getStartOffset","comment":"Returns the byte offset to the start of this compilation unit.","params":[],"throws":[],"return":{"type_long":"long","comment":"the byte offset to the start of this compilation unit","type_short":"long"}},{"javadoc":"Returns the byte offset to the end of this compilation unit.\n@return the byte offset to the end of this compilation unit","static":false,"name":"getEndOffset","comment":"Returns the byte offset to the end of this compilation unit.","params":[],"throws":[],"return":{"type_long":"long","comment":"the byte offset to the end of this compilation unit","type_short":"long"}},{"javadoc":"Returns either DWARF_32 or DWARF_64 depending on the current compilation unit format\n@return DWARF_32 or DWARF_64 constant depending on the current compilation unit format","static":false,"name":"getFormat","comment":"Returns either DWARF_32 or DWARF_64 depending on the current compilation unit format","params":[],"throws":[],"return":{"type_long":"int","comment":"DWARF_32 or DWARF_64 constant depending on the current compilation unit format","type_short":"int"}},{"javadoc":"Returns true if the {@code offset} value is within\n this compUnit's start and end position in the debug_info section.\n@param offset DIE offset\n@return true if within range of this compunit","static":false,"name":"containsOffset","comment":"Returns true if the  value is within\n this compUnit's start and end position in the debug_info section.","params":[{"type_long":"long","name":"offset","comment":"DIE offset","type_short":"long"}],"throws":[],"return":{"type_long":"boolean","comment":"true if within range of this compunit","type_short":"boolean"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getCodeToAbbreviationMap","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Map<java.lang.Integer,ghidra.app.util.bin.format.dwarf4.DWARFAbbreviation>","comment":"","type_short":"Map"}},{"javadoc":"","static":false,"name":"getFirstDIEOffset","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getCompUnitNumber","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Reads the {@link DebugInfoEntry} records for this compilation unit from the .debug_info\n section.\n <p>\n@param entries List of DIE records that is written to by this method.  This list should\n be empty if the caller only wants this CU's records (ie. normal mode), or the list\n can be used to accumulate all DIE records (preload all DIE mode).\n@param monitor {@link TaskMonitor} to watch for cancelation\n@throws IOException if error reading data\n@throws DWARFException if error in DWARF structure\n@throws CancelledException if user cancels.","static":false,"name":"readDIEs","comment":"Reads the DebugInfoEntry records for this compilation unit from the .debug_info\n section.\n ","params":[{"type_long":"java.util.List<ghidra.app.util.bin.format.dwarf4.DebugInfoEntry>","name":"entries","comment":"List of DIE records that is written to by this method.  This list should\n be empty if the caller only wants this CU's records (ie. normal mode), or the list\n can be used to accumulate all DIE records (preload all DIE mode).","type_short":"List"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"TaskMonitor to watch for cancelation","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"if error reading data","type_short":"IOException"},{"type_long":"ghidra.app.util.bin.format.dwarf4.DWARFException","comment":"if error in DWARF structure","type_short":"DWARFException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if user cancels.","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DWARFCompilationUnit","comment":"A DWARF \"CompilationUnit\" is a contiguous block of DebugInfoEntry records found\n in a \".debug_info\" section of an ELF program.  The compilation unit block starts with a\n header that has a few important values and flags, and is followed by the DIE records.\n \n The first DIE record must be a DW_TAG_compile_unit (see DWARFCompileUnit,\n and #getCompileUnit()).\n \n DIE records are identified by their byte offset in the \".debug_info\" section.\n ","fields":[{"type_long":"int","javadoc":"","static":true,"name":"DWARF_32","comment":"","type_short":"int","constant_value":"32"},{"type_long":"int","javadoc":"","static":true,"name":"DWARF_64","comment":"","type_short":"int","constant_value":"64"},{"type_long":"ghidra.app.util.bin.format.dwarf4.next.DWARFProgram","javadoc":"Reference to the owning {@link DWARFProgram}.","static":false,"name":"dwarfProgram","comment":"Reference to the owning DWARFProgram.","type_short":"DWARFProgram","constant_value":null},{"type_long":"long","javadoc":"Offset in the debug_info section of this compUnit's header","static":false,"name":"startOffset","comment":"Offset in the debug_info section of this compUnit's header","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"Offset in the debug_info section of the end of this compUnit.  (right after\n the last DIE record)","static":false,"name":"endOffset","comment":"Offset in the debug_info section of the end of this compUnit.  (right after\n the last DIE record)","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"Length in bytes of this compUnit header and DIE records.","static":false,"name":"length","comment":"Length in bytes of this compUnit header and DIE records.","type_short":"long","constant_value":null},{"type_long":"int","javadoc":"{@link #DWARF_32} or {@link #DWARF_64}","static":false,"name":"format","comment":"#DWARF_32 or #DWARF_64","type_short":"int","constant_value":null},{"type_long":"short","javadoc":"DWARF ver number, as read from the compunit structure, currently not used but being kept.","static":false,"name":"version","comment":"DWARF ver number, as read from the compunit structure, currently not used but being kept.","type_short":"short","constant_value":null},{"type_long":"int","javadoc":"Sequential number of this compUnit","static":false,"name":"compUnitNumber","comment":"Sequential number of this compUnit","type_short":"int","constant_value":null},{"type_long":"byte","javadoc":"Size of pointers that are held in DIEs in this compUnit.","static":false,"name":"pointerSize","comment":"Size of pointers that are held in DIEs in this compUnit.","type_short":"byte","constant_value":null},{"type_long":"long","javadoc":"Offset in the abbr section of this compUnit's abbreviations.","static":false,"name":"abbreviationOffset","comment":"Offset in the abbr section of this compUnit's abbreviations.","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"Offset in the debug_info section of the first DIE of this compUnit.","static":false,"name":"firstDIEOffset","comment":"Offset in the debug_info section of the first DIE of this compUnit.","type_short":"long","constant_value":null},{"type_long":"java.util.Map<java.lang.Integer,ghidra.app.util.bin.format.dwarf4.DWARFAbbreviation>","javadoc":"Map of abbrevCode to {@link DWARFAbbreviation} instances.","static":false,"name":"codeToAbbreviationMap","comment":"Map of abbrevCode to DWARFAbbreviation instances.","type_short":"Map","constant_value":null},{"type_long":"ghidra.app.util.bin.format.dwarf4.DWARFCompileUnit","javadoc":"The contents of the first DIE (that must be a compile unit) in this compUnit.","static":false,"name":"compUnit","comment":"The contents of the first DIE (that must be a compile unit) in this compUnit.","type_short":"DWARFCompileUnit","constant_value":null}]}
