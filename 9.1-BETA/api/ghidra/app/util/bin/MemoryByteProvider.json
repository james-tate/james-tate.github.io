{"implements":["ghidra.app.util.bin.ByteProvider"],"javadoc":"A Byte Provider implementation based on Memory.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new provider for a specific address space.\n@param memory the memory","static":false,"name":"<init>","comment":"Constructs a new provider for a specific address space.","params":[{"type_long":"ghidra.program.model.mem.Memory","name":"memory","comment":"the memory","type_short":"Memory"},{"type_long":"ghidra.program.model.address.AddressSpace","name":"space","comment":"","type_short":"AddressSpace"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new provider relative to the base address.\n@param memory the memory\n@param baseAddress the relative base address","static":false,"name":"<init>","comment":"Constructs a new provider relative to the base address.","params":[{"type_long":"ghidra.program.model.mem.Memory","name":"memory","comment":"the memory","type_short":"Memory"},{"type_long":"ghidra.program.model.address.Address","name":"baseAddress","comment":"the relative base address","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getInputStream","comment":"","params":[{"type_long":"long","name":"index","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.io.InputStream","comment":"","type_short":"InputStream"}},{"javadoc":"","static":false,"name":"getFile","comment":"","params":[],"throws":[],"return":{"type_long":"java.io.File","comment":"","type_short":"File"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getAbsolutePath","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"length","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"isValidIndex","comment":"","params":[{"type_long":"long","name":"index","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"readByte","comment":"","params":[{"type_long":"long","name":"index","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"byte","comment":"","type_short":"byte"}},{"javadoc":"","static":false,"name":"readBytes","comment":"","params":[{"type_long":"long","name":"index","comment":"","type_short":"long"},{"type_long":"long","name":"length","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}},{"javadoc":"","static":false,"name":"close","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"MemoryByteProvider","comment":"A Byte Provider implementation based on Memory.","fields":[{"type_long":"ghidra.program.model.mem.Memory","javadoc":"","static":false,"name":"memory","comment":"","type_short":"Memory","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"baseAddress","comment":"","type_short":"Address","constant_value":null}]}
