{"implements":[],"javadoc":"Convenience methods for creating memory blocks.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new uninitialized memory block.\n@param program the program in which to create the block.\n@param isOverlay if true, the block will be created in a new overlay space for that block\n@param name the name of the new block.\n@param start the starting address of the new block.\n@param length the length of the new block\n@param comment the comment text to associate with the new block.\n@param source the source of the block (This field is not well defined - currently another comment)\n@param r the read permission for the new block.\n@param w the write permission for the new block.\n@param x the execute permission for the new block.\n@param log a {@link MessageLog} for appending error messages\n@return the newly created block or null if the operation failed.","static":true,"name":"createUninitializedBlock","comment":"Creates a new uninitialized memory block.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program in which to create the block.","type_short":"Program"},{"type_long":"boolean","name":"isOverlay","comment":"if true, the block will be created in a new overlay space for that block","type_short":"boolean"},{"type_long":"java.lang.String","name":"name","comment":"the name of the new block.","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the starting address of the new block.","type_short":"Address"},{"type_long":"long","name":"length","comment":"the length of the new block","type_short":"long"},{"type_long":"java.lang.String","name":"comment","comment":"the comment text to associate with the new block.","type_short":"String"},{"type_long":"java.lang.String","name":"source","comment":"the source of the block (This field is not well defined - currently another comment)","type_short":"String"},{"type_long":"boolean","name":"r","comment":"the read permission for the new block.","type_short":"boolean"},{"type_long":"boolean","name":"w","comment":"the write permission for the new block.","type_short":"boolean"},{"type_long":"boolean","name":"x","comment":"the execute permission for the new block.","type_short":"boolean"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"a MessageLog for appending error messages","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"ghidra.program.model.mem.MemoryBlock","comment":"the newly created block or null if the operation failed.","type_short":"MemoryBlock"}},{"javadoc":"Create a new initialized memory block.  Initialized to all zeros.\n@param program the program in which to create the block.\n@param isOverlay if true, the block will be created in a new overlay space for that block\n@param name the name of the new block.\n@param start the starting address of the new block.\n@param is source of the data used to fill the block or null for zero initialization.\n@param length the length of the new block\n@param comment the comment text to associate with the new block.\n@param source the source of the block (This field is not well defined - currently another comment)\n@param r the read permission for the new block.\n@param w the write permission for the new block.\n@param x the execute permission for the new block.\n@param log a {@link MessageLog} for appending error messages\n@return the newly created block or null if the operation failed.","static":true,"name":"createInitializedBlock","comment":"Create a new initialized memory block.  Initialized to all zeros.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program in which to create the block.","type_short":"Program"},{"type_long":"boolean","name":"isOverlay","comment":"if true, the block will be created in a new overlay space for that block","type_short":"boolean"},{"type_long":"java.lang.String","name":"name","comment":"the name of the new block.","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the starting address of the new block.","type_short":"Address"},{"type_long":"long","name":"length","comment":"the length of the new block","type_short":"long"},{"type_long":"java.lang.String","name":"comment","comment":"the comment text to associate with the new block.","type_short":"String"},{"type_long":"java.lang.String","name":"source","comment":"the source of the block (This field is not well defined - currently another comment)","type_short":"String"},{"type_long":"boolean","name":"r","comment":"the read permission for the new block.","type_short":"boolean"},{"type_long":"boolean","name":"w","comment":"the write permission for the new block.","type_short":"boolean"},{"type_long":"boolean","name":"x","comment":"the execute permission for the new block.","type_short":"boolean"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"a MessageLog for appending error messages","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"ghidra.program.model.mem.MemoryBlock","comment":"the newly created block or null if the operation failed.","type_short":"MemoryBlock"}},{"javadoc":"Creates a new bit mapped memory block. (A bit mapped block is a block where each byte value\n is either 1 or 0 and the value is taken from a bit in a byte at some other address in memory)\n@param program the program in which to create the block.\n@param name the name of the new block.\n@param start the starting address of the new block.\n@param base the address of the region in memory to map to.\n@param length the length of the new block\n@param comment the comment text to associate with the new block.\n@param source the source of the block (This field is not well defined - currently another comment)\n@param r the read permission for the new block.\n@param w the write permission for the new block.\n@param x the execute permission for the new block.\n@param log a {@link StringBuffer} for appending error messages\n@return the new created block","static":true,"name":"createBitMappedBlock","comment":"Creates a new bit mapped memory block. (A bit mapped block is a block where each byte value\n is either 1 or 0 and the value is taken from a bit in a byte at some other address in memory)","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program in which to create the block.","type_short":"Program"},{"type_long":"java.lang.String","name":"name","comment":"the name of the new block.","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the starting address of the new block.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"base","comment":"the address of the region in memory to map to.","type_short":"Address"},{"type_long":"int","name":"length","comment":"the length of the new block","type_short":"int"},{"type_long":"java.lang.String","name":"comment","comment":"the comment text to associate with the new block.","type_short":"String"},{"type_long":"java.lang.String","name":"source","comment":"the source of the block (This field is not well defined - currently another comment)","type_short":"String"},{"type_long":"boolean","name":"r","comment":"the read permission for the new block.","type_short":"boolean"},{"type_long":"boolean","name":"w","comment":"the write permission for the new block.","type_short":"boolean"},{"type_long":"boolean","name":"x","comment":"the execute permission for the new block.","type_short":"boolean"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"a StringBuffer for appending error messages","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"ghidra.program.model.mem.MemoryBlock","comment":"the new created block","type_short":"MemoryBlock"}},{"javadoc":"Creates a new byte mapped memory block. (A byte mapped block is a block where each byte value\n is taken from a byte at some other address in memory)\n@param program the program in which to create the block.\n@param name the name of the new block.\n@param start the starting address of the new block.\n@param base the address of the region in memory to map to.\n@param length the length of the new block\n@param comment the comment text to associate with the new block.\n@param source the source of the block (This field is not well defined - currently another comment)\n@param r the read permission for the new block.\n@param w the write permission for the new block.\n@param x the execute permission for the new block.\n@param log a {@link MessageLog} for appending error messages\n@return the new created block","static":true,"name":"createByteMappedBlock","comment":"Creates a new byte mapped memory block. (A byte mapped block is a block where each byte value\n is taken from a byte at some other address in memory)","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program in which to create the block.","type_short":"Program"},{"type_long":"java.lang.String","name":"name","comment":"the name of the new block.","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the starting address of the new block.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"base","comment":"the address of the region in memory to map to.","type_short":"Address"},{"type_long":"int","name":"length","comment":"the length of the new block","type_short":"int"},{"type_long":"java.lang.String","name":"comment","comment":"the comment text to associate with the new block.","type_short":"String"},{"type_long":"java.lang.String","name":"source","comment":"the source of the block (This field is not well defined - currently another comment)","type_short":"String"},{"type_long":"boolean","name":"r","comment":"the read permission for the new block.","type_short":"boolean"},{"type_long":"boolean","name":"w","comment":"the write permission for the new block.","type_short":"boolean"},{"type_long":"boolean","name":"x","comment":"the execute permission for the new block.","type_short":"boolean"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"a MessageLog for appending error messages","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"ghidra.program.model.mem.MemoryBlock","comment":"the new created block","type_short":"MemoryBlock"}},{"javadoc":"Creates a new initialized block in memory using the bytes from a {@link FileBytes} object.\n If there is a conflict when creating this block (some other block occupies at least some\n of the addresses that would be occupied by the new block), then an attempt will be made\n to create the new block in an overlay.\n@param program the program in which to create the block.\n@param isOverlay if true, the block will be created in a new overlay space for that block\n@param name the name of the new block.\n@param start the starting address of the new block.\n@param fileBytes the {@link FileBytes} object that supplies the bytes for this block.\n@param offset the offset into the {@link FileBytes} object where the bytes for this block reside.\n@param length the length of the new block\n@param comment the comment text to associate with the new block.\n@param source the source of the block (This field is not well defined - currently another comment)\n@param r the read permission for the new block.\n@param w the write permission for the new block.\n@param x the execute permission for the new block.\n@param log a {@link MessageLog} for appending error messages\n@return the new created block\n@throws AddressOverflowException if the address","static":true,"name":"createInitializedBlock","comment":"Creates a new initialized block in memory using the bytes from a FileBytes object.\n If there is a conflict when creating this block (some other block occupies at least some\n of the addresses that would be occupied by the new block), then an attempt will be made\n to create the new block in an overlay.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program in which to create the block.","type_short":"Program"},{"type_long":"boolean","name":"isOverlay","comment":"if true, the block will be created in a new overlay space for that block","type_short":"boolean"},{"type_long":"java.lang.String","name":"name","comment":"the name of the new block.","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the starting address of the new block.","type_short":"Address"},{"type_long":"ghidra.program.database.mem.FileBytes","name":"fileBytes","comment":"the FileBytes object that supplies the bytes for this block.","type_short":"FileBytes"},{"type_long":"long","name":"offset","comment":"the offset into the FileBytes object where the bytes for this block reside.","type_short":"long"},{"type_long":"long","name":"length","comment":"the length of the new block","type_short":"long"},{"type_long":"java.lang.String","name":"comment","comment":"the comment text to associate with the new block.","type_short":"String"},{"type_long":"java.lang.String","name":"source","comment":"the source of the block (This field is not well defined - currently another comment)","type_short":"String"},{"type_long":"boolean","name":"r","comment":"the read permission for the new block.","type_short":"boolean"},{"type_long":"boolean","name":"w","comment":"the write permission for the new block.","type_short":"boolean"},{"type_long":"boolean","name":"x","comment":"the execute permission for the new block.","type_short":"boolean"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"a MessageLog for appending error messages","type_short":"MessageLog"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"if the address","type_short":"AddressOverflowException"}],"return":{"type_long":"ghidra.program.model.mem.MemoryBlock","comment":"the new created block","type_short":"MemoryBlock"}},{"javadoc":"","static":true,"name":"createBlockNoDuplicateName","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"java.lang.String","name":"blockName","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.database.mem.FileBytes","name":"fileBytes","comment":"","type_short":"FileBytes"},{"type_long":"long","name":"offset","comment":"","type_short":"long"},{"type_long":"long","name":"length","comment":"","type_short":"long"}],"throws":[{"type_long":"ghidra.framework.store.LockException","comment":"","type_short":"LockException"},{"type_long":"ghidra.program.model.mem.MemoryConflictException","comment":"","type_short":"MemoryConflictException"},{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"","type_short":"AddressOverflowException"}],"return":{"type_long":"ghidra.program.model.mem.MemoryBlock","comment":"","type_short":"MemoryBlock"}},{"javadoc":"Creates a new initialized block in memory using the bytes from the given input stream.\n If there is a conflict when creating this block (some other block occupies at least some\n of the addresses that would be occupied by the new block), then an attempt will be made\n to create the new block in an overlay.\n@param program the program in which to create the block.\n@param isOverlay if true, the block will be created in a new overlay space for that block\n@param name the name of the new block.\n@param start the starting address of the new block.\n@param dataInput the {@link InputStream} object that supplies the bytes for this block.\n@param dataLength the length of the new block\n@param comment the comment text to associate with the new block.\n@param source the source of the block (This field is not well defined - currently another comment)\n@param r the read permission for the new block.\n@param w the write permission for the new block.\n@param x the execute permission for the new block.\n@param log a {@link MessageLog} for appending error messages\n@param monitor the monitor for canceling this potentially long running operation.\n@return the new created block\n@throws AddressOverflowException if the address","static":true,"name":"createInitializedBlock","comment":"Creates a new initialized block in memory using the bytes from the given input stream.\n If there is a conflict when creating this block (some other block occupies at least some\n of the addresses that would be occupied by the new block), then an attempt will be made\n to create the new block in an overlay.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program in which to create the block.","type_short":"Program"},{"type_long":"boolean","name":"isOverlay","comment":"if true, the block will be created in a new overlay space for that block","type_short":"boolean"},{"type_long":"java.lang.String","name":"name","comment":"the name of the new block.","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the starting address of the new block.","type_short":"Address"},{"type_long":"java.io.InputStream","name":"dataInput","comment":"the InputStream object that supplies the bytes for this block.","type_short":"InputStream"},{"type_long":"long","name":"dataLength","comment":"the length of the new block","type_short":"long"},{"type_long":"java.lang.String","name":"comment","comment":"the comment text to associate with the new block.","type_short":"String"},{"type_long":"java.lang.String","name":"source","comment":"the source of the block (This field is not well defined - currently another comment)","type_short":"String"},{"type_long":"boolean","name":"r","comment":"the read permission for the new block.","type_short":"boolean"},{"type_long":"boolean","name":"w","comment":"the write permission for the new block.","type_short":"boolean"},{"type_long":"boolean","name":"x","comment":"the execute permission for the new block.","type_short":"boolean"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"a MessageLog for appending error messages","type_short":"MessageLog"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the monitor for canceling this potentially long running operation.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"if the address","type_short":"AddressOverflowException"}],"return":{"type_long":"ghidra.program.model.mem.MemoryBlock","comment":"the new created block","type_short":"MemoryBlock"}},{"javadoc":"Adjusts the name of the fragment at the given address to the given name.\n@param program the program whose fragment is to be renamed.\n@param address the address of the fragment to be renamed.\n@param name the new name for the fragment.","static":true,"name":"adjustFragment","comment":"Adjusts the name of the fragment at the given address to the given name.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program whose fragment is to be renamed.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address of the fragment to be renamed.","type_short":"Address"},{"type_long":"java.lang.String","name":"name","comment":"the new name for the fragment.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new {@link FileBytes} object using all the bytes from a {@link ByteProvider}\n@param program the program in which to create a new FileBytes object\n@param provider the ByteProvider from which to get the bytes.\n@return the newly created FileBytes object.\n@param monitor the monitor for canceling this potentially long running operation.\n@throws IOException if an IOException occurred.","static":true,"name":"createFileBytes","comment":"Creates a new FileBytes object using all the bytes from a ByteProvider","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program in which to create a new FileBytes object","type_short":"Program"},{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"the ByteProvider from which to get the bytes.","type_short":"ByteProvider"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the monitor for canceling this potentially long running operation.","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"if an IOException occurred.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.database.mem.FileBytes","comment":"the newly created FileBytes object.","type_short":"FileBytes"}},{"javadoc":"Creates a new {@link FileBytes} object using a portion of the bytes from a {@link ByteProvider}\n@param program the program in which to create a new FileBytes object\n@param provider the ByteProvider from which to get the bytes.\n@param offset the offset into the ByteProvider from which to start loading bytes.\n@param length the number of bytes to load\n@param monitor the monitor for canceling this potentially long running operation.\n@return the newly created FileBytes object.\n@throws IOException if an IOException occurred.\n@throws CancelledException if the user cancelled the operation","static":true,"name":"createFileBytes","comment":"Creates a new FileBytes object using a portion of the bytes from a ByteProvider","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program in which to create a new FileBytes object","type_short":"Program"},{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"the ByteProvider from which to get the bytes.","type_short":"ByteProvider"},{"type_long":"long","name":"offset","comment":"the offset into the ByteProvider from which to start loading bytes.","type_short":"long"},{"type_long":"long","name":"length","comment":"the number of bytes to load","type_short":"long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the monitor for canceling this potentially long running operation.","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"if an IOException occurred.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancelled the operation","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.database.mem.FileBytes","comment":"the newly created FileBytes object.","type_short":"FileBytes"}},{"javadoc":"","static":true,"name":"setBlockAttributes","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemoryBlock","name":"block","comment":"","type_short":"MemoryBlock"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"source","comment":"","type_short":"String"},{"type_long":"boolean","name":"r","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"w","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"x","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"MemoryBlockUtils","comment":"Convenience methods for creating memory blocks.","fields":[]}
