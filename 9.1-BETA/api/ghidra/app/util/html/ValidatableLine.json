{"implements":[],"javadoc":"A loose concept that represents a line of text, potentially with multiple parts, that can\n be validated against other instances and can change the color of the text.\n <p>\n Validation is performed against another {@link ValidatableLine}, which will be set by \n calling {@link #setValidationLine(ValidatableLine)}.","static":false,"methods":[{"javadoc":"","static":false,"name":"updateColor","comment":"","params":[{"type_long":"ghidra.app.util.html.ValidatableLine","name":"otherLine","comment":"","type_short":"ValidatableLine"},{"type_long":"java.awt.Color","name":"invalidColor","comment":"","type_short":"Color"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isDiffColored","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"matches","comment":"","params":[{"type_long":"ghidra.app.util.html.ValidatableLine","name":"otherLine","comment":"","type_short":"ValidatableLine"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"copy","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.html.ValidatableLine","comment":"","type_short":"ValidatableLine"}},{"javadoc":"","static":false,"name":"getText","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Sets the other line that this line is validated against.  The other line may be a full, \n partial, or no match at all.\n@param line the line against which this line is validated","static":false,"name":"setValidationLine","comment":"Sets the other line that this line is validated against.  The other line may be a full, \n partial, or no match at all.","params":[{"type_long":"ghidra.app.util.html.ValidatableLine","name":"line","comment":"the line against which this line is validated","type_short":"ValidatableLine"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"True means that this line has been matched against another line, <b>regardless of whether \n the two lines are the same or not<\/b>.\n@return true if this line has been matched against another line","static":false,"name":"isValidated","comment":"True means that this line has been matched against another line, regardless of whether \n the two lines are the same or not.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this line has been matched against another line","type_short":"boolean"}}],"name":"ValidatableLine","comment":"A loose concept that represents a line of text, potentially with multiple parts, that can\n be validated against other instances and can change the color of the text.\n \n Validation is performed against another ValidatableLine, which will be set by \n calling #setValidationLine(ValidatableLine).","fields":[{"type_long":"java.awt.Color","javadoc":"","static":true,"name":"INVALID_COLOR","comment":"","type_short":"Color","constant_value":null}]}
