{"implements":[],"javadoc":"Exports the current program (or program selection) as bytes in Intel Hex format. \n <p>\n The output defaults to lines of 16-bytes but this is configurable using the\n {@link #recordSizeOption} attribute. This allows users to select any record size\n up to the max of 0xFF. Users may also choose to <code>Drop Extra Bytes<\/code>, which will\n cause only lines that match the max record size to be printed; any other \n bytes will be dropped. If this option is not set, every byte will be represented in the output.","static":false,"extends":"ghidra.app.util.exporter.Exporter","methods":[{"javadoc":"Constructs a new Intel Hex exporter. This will use a record size of 16 (the default)\n and will export ALL bytes in the program or selection (even if the total length\n is not a multiple of 16.","static":false,"name":"<init>","comment":"Constructs a new Intel Hex exporter. This will use a record size of 16 (the default)\n and will export ALL bytes in the program or selection (even if the total length\n is not a multiple of 16.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new Intel Hex exporter with a custom record size.\n@param recordSize the record size to use when writing to the output file\n@param dropBytes if true, bytes at the end of the file that don't match the specified \n record size will be dropped","static":false,"name":"<init>","comment":"Constructs a new Intel Hex exporter with a custom record size.","params":[{"type_long":"int","name":"recordSize","comment":"the record size to use when writing to the output file","type_short":"int"},{"type_long":"boolean","name":"dropBytes","comment":"if true, bytes at the end of the file that don't match the specified \n record size will be dropped","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor\n@param name the name of the exporter\n@param extension the extension to use for the output file\n@param help location of Ghidra help","static":false,"name":"<init>","comment":"Constructor","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the exporter","type_short":"String"},{"type_long":"java.lang.String","name":"extension","comment":"the extension to use for the output file","type_short":"String"},{"type_long":"ghidra.util.HelpLocation","name":"help","comment":"location of Ghidra help","type_short":"HelpLocation"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getOptions","comment":"","params":[{"type_long":"ghidra.app.util.DomainObjectService","name":"domainObjectService","comment":"","type_short":"DomainObjectService"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.Option>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"setOptions","comment":"","params":[{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"","type_short":"List"}],"throws":[{"type_long":"ghidra.app.util.OptionException","comment":"","type_short":"OptionException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"export","comment":"","params":[{"type_long":"java.io.File","name":"file","comment":"","type_short":"File"},{"type_long":"ghidra.framework.model.DomainObject","name":"domainObj","comment":"","type_short":"DomainObject"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.app.util.exporter.ExporterException","comment":"","type_short":"ExporterException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dumpMemory","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.mem.Memory","name":"memory","comment":"","type_short":"Memory"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSetView","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"java.util.List<ghidra.app.util.opinion.IntelHexRecord>","comment":"","type_short":"List"}}],"name":"IntelHexExporter","comment":"Exports the current program (or program selection) as bytes in Intel Hex format. \n \n The output defaults to lines of 16-bytes but this is configurable using the\n #recordSizeOption attribute. This allows users to select any record size\n up to the max of 0xFF. Users may also choose to Drop Extra Bytes, which will\n cause only lines that match the max record size to be printed; any other \n bytes will be dropped. If this option is not set, every byte will be represented in the output.","fields":[{"type_long":"ghidra.app.util.Option","javadoc":"Option allowing the user to select the address space","static":false,"name":"addressSpaceOption","comment":"Option allowing the user to select the address space","type_short":"Option","constant_value":null},{"type_long":"ghidra.app.util.exporter.IntelHexExporter.RecordSizeOption","javadoc":"Option allowing the user to select the number of bytes in each line of output","static":false,"name":"recordSizeOption","comment":"Option allowing the user to select the number of bytes in each line of output","type_short":"RecordSizeOption","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"DEFAULT_RECORD_SIZE","comment":"","type_short":"int","constant_value":"16"}]}
