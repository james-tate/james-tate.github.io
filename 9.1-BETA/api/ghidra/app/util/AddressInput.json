{"implements":[],"javadoc":"Panel for user input of addresses.  Handles case with multiple address\n spaces.","static":false,"extends":"javax.swing.JPanel","methods":[{"javadoc":"Constructor for AddressInput.","static":false,"name":"<init>","comment":"Constructor for AddressInput.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the field to display the given address","static":false,"name":"setAddress","comment":"Set the field to display the given address","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the address in the field or null if the address can't\n be parsed.\n@throws NullPointerException if AddressFactory has not been set.","static":false,"name":"getAddress","comment":"Returns the address in the field or null if the address can't\n be parsed.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Returns the address space selected in the combobox or in the input text itself\n if specified (eg: \"register:1\"). If the address space is not specified; returns the\n default space.\n@throws NullPointerException if AddressFactory has not been set.","static":false,"name":"getAddressSpace","comment":"Returns the address space selected in the combobox or in the input text itself\n if specified (eg: \"register:1\"). If the address space is not specified; returns the\n default space.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSpace","comment":"","type_short":"AddressSpace"}},{"javadoc":"Returns true if the Address input field contains text.\n The getAddress() method will return null if text is not\n a valid address.","static":false,"name":"hasInput","comment":"Returns true if the Address input field contains text.\n The getAddress() method will return null if text is not\n a valid address.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Set the address factory to be used to parse addresses.  Also\n used to set the combo box with the list of valid address spaces\n if there is more than one space.","static":false,"name":"setAddressFactory","comment":"Set the address factory to be used to parse addresses.  Also\n used to set the combo box with the list of valid address spaces\n if there is more than one space.","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"factory","comment":"","type_short":"AddressFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getAddressFactory","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressFactory","comment":"","type_short":"AddressFactory"}},{"javadoc":"Set the address factory to be used to parse addresses. Also used to set the combo box\n with the list of valid address spaces if there is more than one space.\n@param factory address factory to use\n@param filterOverlaySpaces true if overlay spaces should not appear in the combo box\n for the address spaces.\n@param allowOtherSpace true if the OTHER space should appear in the combo box for \n the address spaces","static":false,"name":"setAddressFactory","comment":"Set the address factory to be used to parse addresses. Also used to set the combo box\n with the list of valid address spaces if there is more than one space.","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"factory","comment":"address factory to use","type_short":"AddressFactory"},{"type_long":"boolean","name":"filterOverlaySpaces","comment":"true if overlay spaces should not appear in the combo box\n for the address spaces.","type_short":"boolean"},{"type_long":"boolean","name":"allowOtherSpace","comment":"true if the OTHER space should appear in the combo box for \n the address spaces","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the selected combo box item\n to the default address space.","static":false,"name":"selectDefaultAddressSpace","comment":"Sets the selected combo box item\n to the default address space.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clear the offset part of the address field.","static":false,"name":"clear","comment":"Clear the offset part of the address field.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Select the text field that is the offset.","static":false,"name":"select","comment":"Select the text field that is the offset.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the offset part of the address field.\n@return String","static":false,"name":"getValue","comment":"Get the offset part of the address field.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"String","type_short":"String"}},{"javadoc":"Set the offset part of the address field.\n@param value the offset value string","static":false,"name":"setValue","comment":"Set the offset part of the address field.","params":[{"type_long":"java.lang.String","name":"value","comment":"the offset value string","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isEnabled","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"containsAddressSpaces","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Set the address space (if it is shown) such that it is not editable.\n If the combo box is shown for multiple address spaces, then\n the combo box is replaced with a fixed uneditable text field that shows\n the currently selected address space.\n@param state false means that the combo box should not be editable","static":false,"name":"setAddressSpaceEditable","comment":"Set the address space (if it is shown) such that it is not editable.\n If the combo box is shown for multiple address spaces, then\n the combo box is replaced with a fixed uneditable text field that shows\n the currently selected address space.","params":[{"type_long":"boolean","name":"state","comment":"false means that the combo box should not be editable","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a change listener that will be notified anytime this address value\n in this panel changes\n@param listener the change listener to be notified.","static":false,"name":"addChangeListener","comment":"Adds a change listener that will be notified anytime this address value\n in this panel changes","params":[{"type_long":"javax.swing.event.ChangeListener","name":"listener","comment":"the change listener to be notified.","type_short":"ChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add an action listener that will be notified anytime the user presses the\n return key while in the text field.\n@param listener the action listener to be notified.","static":false,"name":"addActionListener","comment":"Add an action listener that will be notified anytime the user presses the\n return key while in the text field.","params":[{"type_long":"java.awt.event.ActionListener","name":"listener","comment":"the action listener to be notified.","type_short":"ActionListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the action listener from the list to be notified.\n@param listener","static":false,"name":"removeActionListener","comment":"Removes the action listener from the list to be notified.","params":[{"type_long":"java.awt.event.ActionListener","name":"listener","comment":"","type_short":"ActionListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see java.awt.Component#setEnabled(boolean)","static":false,"name":"setEnabled","comment":"","params":[{"type_long":"boolean","name":"enabled","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the text field to be editable according to the state param.","static":false,"name":"setEditable","comment":"Set the text field to be editable according to the state param.","params":[{"type_long":"boolean","name":"state","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isEditable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"stateChanged","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"showAddressSpaceCombo","comment":"","params":[{"type_long":"boolean","name":"showCombo","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"requestFocus","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getAddressTextField","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.JTextField","comment":"","type_short":"JTextField"}},{"javadoc":"","static":false,"name":"getAddressSpaceTextField","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.JTextField","comment":"","type_short":"JTextField"}}],"name":"AddressInput","comment":"Panel for user input of addresses.  Handles case with multiple address\n spaces.","fields":[{"type_long":"javax.swing.JTextField","javadoc":"","static":false,"name":"textField","comment":"","type_short":"JTextField","constant_value":null},{"type_long":"javax.swing.JComboBox<ghidra.program.model.address.AddressSpace>","javadoc":"","static":false,"name":"combo","comment":"","type_short":"JComboBox","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"comboAdded","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.program.model.address.AddressFactory","javadoc":"","static":false,"name":"addrFactory","comment":"","type_short":"AddressFactory","constant_value":null},{"type_long":"javax.swing.event.ChangeListener","javadoc":"","static":false,"name":"changeListener","comment":"","type_short":"ChangeListener","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"updatingAddress","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"updateSpaceField","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"stateChanging","comment":"","type_short":"boolean","constant_value":null},{"type_long":"javax.swing.JTextField","javadoc":"","static":false,"name":"spaceField","comment":"","type_short":"JTextField","constant_value":null},{"type_long":"java.util.Comparator<ghidra.program.model.address.AddressSpace>","javadoc":"","static":true,"name":"ADDRESS_SPACE_SORT_COMPARATOR","comment":"","type_short":"Comparator","constant_value":null}]}
