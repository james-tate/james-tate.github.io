{"implements":[],"javadoc":"XML manager for the Symbol Table.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Following the use of read on the SYMBOL_TABLE element, this method should be invoked\n to determine if a second pass is required to process local.\n@return true if a second pass is required","static":false,"name":"isSecondPassRequired","comment":"Following the use of read on the SYMBOL_TABLE element, this method should be invoked\n to determine if a second pass is required to process local.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if a second pass is required","type_short":"boolean"}},{"javadoc":"Process the symbol table section of the XML file.\n@param parser xml reader\n@param isOverwritePrimary true means to overwrite the primary symbol\n if one already exists\n@param monitor monitor that can be canceled","static":false,"name":"read","comment":"Process the symbol table section of the XML file.","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"xml reader","type_short":"XmlPullParser"},{"type_long":"boolean","name":"isOverwritePrimary","comment":"true means to overwrite the primary symbol\n if one already exists","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"monitor that can be canceled","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Process the symbol table section of the XML file.\n@param parser xml reader\n@param isOverwritePrimary true means to overwrite the primary symbol\n if one already exists\n@param monitor monitor that can be canceled","static":false,"name":"readPass2","comment":"Process the symbol table section of the XML file.","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"xml reader","type_short":"XmlPullParser"},{"type_long":"boolean","name":"isOverwritePrimary","comment":"true means to overwrite the primary symbol\n if one already exists","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"monitor that can be canceled","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"read","comment":"","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"boolean","name":"isOverwritePrimary","comment":"","type_short":"boolean"},{"type_long":"int","name":"passNumber","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Write out the XML for the symbol table.\n@param writer writer for XML\n@param monitor monitor that can be canceled\n should be written\n@throws IOException","static":false,"name":"write","comment":"Write out the XML for the symbol table.","params":[{"type_long":"ghidra.util.xml.XmlWriter","name":"writer","comment":"writer for XML","type_short":"XmlWriter"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"monitor that can be canceled\n should be written","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"checkGlobal","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"symbol","comment":"","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns the name of symbol qualified with\n any namespace information.\n For example, \"User32.dll::SomeClass::printf\".","static":false,"name":"getNamespace","comment":"Returns the name of symbol qualified with\n any namespace information.\n For example, \"User32.dll::SomeClass::printf\".","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"symbol","comment":"","type_short":"Symbol"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"processSymbol","comment":"","params":[{"type_long":"ghidra.xml.XmlElement","name":"element","comment":"","type_short":"XmlElement"},{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"int","name":"passNumber","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"SymbolTableXmlMgr","comment":"XML manager for the Symbol Table.","fields":[{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program","comment":"","type_short":"Program","constant_value":null},{"type_long":"ghidra.program.model.symbol.SymbolTable","javadoc":"","static":false,"name":"symbolTable","comment":"","type_short":"SymbolTable","constant_value":null},{"type_long":"ghidra.app.util.importer.MessageLog","javadoc":"","static":false,"name":"log","comment":"","type_short":"MessageLog","constant_value":null},{"type_long":"ghidra.program.model.address.AddressFactory","javadoc":"","static":false,"name":"factory","comment":"","type_short":"AddressFactory","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"overwritePrimary","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"secondPassRequired","comment":"","type_short":"boolean","constant_value":null}]}
