{"implements":[],"javadoc":"Manages the open\/close state of structures and arrays at specific addresses.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Marks the given data as open.  This method notifies listeners of changes.\n@param data The data to open.","static":false,"name":"openData","comment":"Marks the given data as open.  This method notifies listeners of changes.","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"The data to open.","type_short":"Data"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Marks the given data as open.  This method notifies listeners of changes.\n@param data The data to open.","static":false,"name":"closeData","comment":"Marks the given data as open.  This method notifies listeners of changes.","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"The data to open.","type_short":"Data"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Marks the data path (and any parents at that address) as open\n@param address the address to open\n@param path the data component path to open","static":false,"name":"open","comment":"Marks the data path (and any parents at that address) as open","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address to open","type_short":"Address"},{"type_long":"int[]","name":"path","comment":"the data component path to open","type_short":"int[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"exactOpen","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"int[]","name":"path","comment":"","type_short":"int[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Marks the composite at the given address and component path as closed\n@param address the address of the composite to close\n@param path the component path of the composite to close. Used for\n composites inside of other composites.","static":false,"name":"close","comment":"Marks the composite at the given address and component path as closed","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address of the composite to close","type_short":"Address"},{"type_long":"int[]","name":"path","comment":"the component path of the composite to close. Used for\n composites inside of other composites.","type_short":"int[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"computeActualLength","comment":"","params":[{"type_long":"int[]","name":"levels","comment":"","type_short":"int[]"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Tests if the data at the given address is open\n@param address the address to test if open","static":false,"name":"isOpen","comment":"Tests if the data at the given address is open","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address to test if open","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Test is the data at the given address and component path is open\n@param address the address to test\n@param path the component path to test.","static":false,"name":"isOpen","comment":"Test is the data at the given address and component path is open","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address to test","type_short":"Address"},{"type_long":"int[]","name":"path","comment":"the component path to test.","type_short":"int[]"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns the index of the component that is open at the given address.\n@param address the address to find the open index.\n@param path the component path.","static":false,"name":"getOpenIndex","comment":"Returns the index of the component that is open at the given address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address to find the open index.","type_short":"Address"},{"type_long":"int[]","name":"path","comment":"the component path.","type_short":"int[]"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isOpen","comment":"","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"","type_short":"Data"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"toggleOpen","comment":"","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"","type_short":"Data"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toggleTopLevelData","comment":"","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"","type_short":"Data"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyDataToggled","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"openAllData","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"addresses","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toggleAllDataInAddresses","comment":"","params":[{"type_long":"boolean","name":"open","comment":"","type_short":"boolean"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"addresses","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"openAllData","comment":"","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"","type_short":"Data"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"closeAllData","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"addresses","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"closeAllData","comment":"","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"","type_short":"Data"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toggleDataRecursively","comment":"","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"","type_short":"Data"},{"type_long":"boolean","name":"openState","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toggleDataRecursivlyUsingSubMonitor","comment":"","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"","type_short":"Data"},{"type_long":"boolean","name":"openState","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a change listener to be notified when a location is open or closed.\n@param l the listener to be notified.","static":false,"name":"addChangeListener","comment":"Adds a change listener to be notified when a location is open or closed.","params":[{"type_long":"javax.swing.event.ChangeListener","name":"l","comment":"the listener to be notified.","type_short":"ChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the listener.\n@param l the listener to remove.","static":false,"name":"removeChangeListener","comment":"Removes the listener.","params":[{"type_long":"javax.swing.event.ChangeListener","name":"l","comment":"the listener to remove.","type_short":"ChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"OpenCloseManager","comment":"Manages the open\/close state of structures and arrays at specific addresses.","fields":[{"type_long":"java.util.Map<ghidra.program.model.address.Address,int[]>","javadoc":"The map stores an int[] for each address that has something open.\n If map.get(address) returns null then outermost level is closed.","static":false,"name":"map","comment":"The map stores an int[] for each address that has something open.\n If map.get(address) returns null then outermost level is closed.","type_short":"Map","constant_value":null},{"type_long":"java.util.List<javax.swing.event.ChangeListener>","javadoc":"","static":false,"name":"listeners","comment":"","type_short":"List","constant_value":null}]}
