{"implements":["ghidra.util.classfinder.ExtensionPoint","java.awt.event.FocusListener"],"javadoc":"The CodeComparisonPanel class should be extended by any class that is to be discovered by\n the {@link FunctionComparisonPanel} class and included as a form of comparing two sections \n of code within the same or different programs.\n <br><br>\n NOTE:  ALL CodeComparisonPanel CLASSES MUST END IN \"CodeComparisonPanel\".  \n If not, the ClassSearcher will not find them.","static":false,"extends":"javax.swing.JPanel","methods":[{"javadoc":"Base constructor\n@param owner the name of the owner of this component (typically the name of the plugin that \n owns this panel.)\n@param tool the tool that contains the component.","static":false,"name":"<init>","comment":"Base constructor","params":[{"type_long":"java.lang.String","name":"owner","comment":"the name of the owner of this component (typically the name of the plugin that \n owns this panel.)","type_short":"String"},{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"the tool that contains the component.","type_short":"PluginTool"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"The GUI component for this CodeComparisonPanel. A CodeComparisonPanel provides a \n dual display with a left and right side for comparing some part of the code for two programs.\n@return the component.","static":false,"name":"getComponent","comment":"The GUI component for this CodeComparisonPanel. A CodeComparisonPanel provides a \n dual display with a left and right side for comparing some part of the code for two programs.","params":[],"throws":[],"return":{"type_long":"javax.swing.JComponent","comment":"the component.","type_short":"JComponent"}},{"javadoc":"The title for this code comparison component.\n@return the title.","static":false,"name":"getTitle","comment":"The title for this code comparison component.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the title.","type_short":"String"}},{"javadoc":"Specifies the two programs to be compared by this panel.\n@param leftProgram the program for the left side.\n@param rightProgram the program for the right side.","static":false,"name":"setPrograms","comment":"Specifies the two programs to be compared by this panel.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"leftProgram","comment":"the program for the left side.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"rightProgram","comment":"the program for the right side.","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Displays a comparison of two program's functions.\n@param leftFunction the function to show in the left side of the code comparison view\n@param rightFunction the function to show in the right side of the code comparison view","static":false,"name":"loadFunctions","comment":"Displays a comparison of two program's functions.","params":[{"type_long":"ghidra.program.model.listing.Function","name":"leftFunction","comment":"the function to show in the left side of the code comparison view","type_short":"Function"},{"type_long":"ghidra.program.model.listing.Function","name":"rightFunction","comment":"the function to show in the right side of the code comparison view","type_short":"Function"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Displays a comparison of two program's data items.\n@param leftData the data item to show in the left side of the code comparison view\n@param rightData the data item to show in the right side of the code comparison view","static":false,"name":"loadData","comment":"Displays a comparison of two program's data items.","params":[{"type_long":"ghidra.program.model.listing.Data","name":"leftData","comment":"the data item to show in the left side of the code comparison view","type_short":"Data"},{"type_long":"ghidra.program.model.listing.Data","name":"rightData","comment":"the data item to show in the right side of the code comparison view","type_short":"Data"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Displays program information for a particular set of addresses in the two programs \n being compared.\n@param leftProgram the program in the left side of the code comparison view\n@param rightProgram the program in the right side of the code comparison view\n@param leftAddresses the addresses of the program info to show in the left side\n@param rightAddresses the addresses of the program info to show in the right side","static":false,"name":"loadAddresses","comment":"Displays program information for a particular set of addresses in the two programs \n being compared.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"leftProgram","comment":"the program in the left side of the code comparison view","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"rightProgram","comment":"the program in the right side of the code comparison view","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"leftAddresses","comment":"the addresses of the program info to show in the left side","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"rightAddresses","comment":"the addresses of the program info to show in the right side","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Cleans up resources when this panel is no longer needed.","static":false,"name":"dispose","comment":"Cleans up resources when this panel is no longer needed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Enable\/disable navigation in this panel using the mouse.\n@param enabled false disables mouse navigation.","static":false,"name":"setMouseNavigationEnabled","comment":"Enable\/disable navigation in this panel using the mouse.","params":[{"type_long":"boolean","name":"enabled","comment":"false disables mouse navigation.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the actions for this CodeComparisonPanel.\n@return an array containing the actions","static":false,"name":"getActions","comment":"Get the actions for this CodeComparisonPanel.","params":[],"throws":[],"return":{"type_long":"docking.action.DockingAction[]","comment":"an array containing the actions","type_short":"docking.action.DockingAction[]"}},{"javadoc":"Determines if this panel is intended to take the place of another and if so it returns \n the class of the panel to be superseded.\n@return the class for the CodeComparisonPanel that this one supersedes \n or null if it doesn't supersede another panel.","static":false,"name":"getPanelThisSupersedes","comment":"Determines if this panel is intended to take the place of another and if so it returns \n the class of the panel to be superseded.","params":[],"throws":[],"return":{"type_long":"java.lang.Class<? extends ghidra.app.util.viewer.util.CodeComparisonPanel<T>>","comment":"the class for the CodeComparisonPanel that this one supersedes \n or null if it doesn't supersede another panel.","type_short":"Class"}},{"javadoc":"Returns the context object which corresponds to the area of focus within this provider's \n component. Null is returned when there is no context.\n@param componentProvider the provider that includes this code comparison component.\n@param event mouse event which corresponds to this request.\n May be null for key-stroke or other non-mouse event.\n@return the action context for the area of focus in this component.","static":false,"name":"getActionContext","comment":"Returns the context object which corresponds to the area of focus within this provider's \n component. Null is returned when there is no context.","params":[{"type_long":"docking.ComponentProvider","name":"componentProvider","comment":"the provider that includes this code comparison component.","type_short":"ComponentProvider"},{"type_long":"java.awt.event.MouseEvent","name":"event","comment":"mouse event which corresponds to this request.\n May be null for key-stroke or other non-mouse event.","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"docking.ActionContext","comment":"the action context for the area of focus in this component.","type_short":"ActionContext"}},{"javadoc":"Called when the indicated program has been restored because of an Undo\/Redo.\n This method allows this CodeComparisonPanel to take an appropriate action (such as\n refreshing itself) to respond to the program changing.\n@param program the program that was restored.","static":false,"name":"programRestored","comment":"Called when the indicated program has been restored because of an Undo\/Redo.\n This method allows this CodeComparisonPanel to take an appropriate action (such as\n refreshing itself) to respond to the program changing.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program that was restored.","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determines if the left code panel currently has focus.\n@return true if the left side of the code comparison has focus.","static":false,"name":"leftPanelHasFocus","comment":"Determines if the left code panel currently has focus.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the left side of the code comparison has focus.","type_short":"boolean"}},{"javadoc":"A CodeComparisonPanel should provide a title based on what the code comparison panel\n is displaying. This method sets a prefix string that should be prepended to each\n of the code comparison panel's titles.\n@param leftTitlePrefix the prefix string to prepend to the left panel's title.\n@param rightTitlePrefix the prefix string to prepend to the right panel's title.","static":false,"name":"setTitlePrefixes","comment":"A CodeComparisonPanel should provide a title based on what the code comparison panel\n is displaying. This method sets a prefix string that should be prepended to each\n of the code comparison panel's titles.","params":[{"type_long":"java.lang.String","name":"leftTitlePrefix","comment":"the prefix string to prepend to the left panel's title.","type_short":"String"},{"type_long":"java.lang.String","name":"rightTitlePrefix","comment":"the prefix string to prepend to the right panel's title.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the program being viewed in the left side of this panel.\n@return the program or null","static":false,"name":"getLeftProgram","comment":"Gets the program being viewed in the left side of this panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"the program or null","type_short":"Program"}},{"javadoc":"Gets the program being viewed in the right side of this panel.\n@return the program or null","static":false,"name":"getRightProgram","comment":"Gets the program being viewed in the right side of this panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"the program or null","type_short":"Program"}},{"javadoc":"Gets the function loaded in the left side of this panel.\n@return the function or null","static":false,"name":"getLeftFunction","comment":"Gets the function loaded in the left side of this panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"the function or null","type_short":"Function"}},{"javadoc":"Gets the function loaded in the right side of this panel.\n@return the function or null","static":false,"name":"getRightFunction","comment":"Gets the function loaded in the right side of this panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"the function or null","type_short":"Function"}},{"javadoc":"Gets the data loaded in the left side of this panel.\n@return the data or null","static":false,"name":"getLeftData","comment":"Gets the data loaded in the left side of this panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"the data or null","type_short":"Data"}},{"javadoc":"Gets the data loaded in the right side of this panel.\n@return the data or null","static":false,"name":"getRightData","comment":"Gets the data loaded in the right side of this panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"the data or null","type_short":"Data"}},{"javadoc":"Gets the addresses loaded in the left side of this panel.\n@return the addresses or an empty set","static":false,"name":"getLeftAddresses","comment":"Gets the addresses loaded in the left side of this panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"the addresses or an empty set","type_short":"AddressSetView"}},{"javadoc":"Gets the addresses loaded in the right side of this panel.\n@return the addresses or an empty set","static":false,"name":"getRightAddresses","comment":"Gets the addresses loaded in the right side of this panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"the addresses or an empty set","type_short":"AddressSetView"}},{"javadoc":"Refreshes the left side of this panel.","static":false,"name":"refreshLeftPanel","comment":"Refreshes the left side of this panel.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Refreshes the right side of this panel.","static":false,"name":"refreshRightPanel","comment":"Refreshes the right side of this panel.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"focusLost","comment":"","params":[{"type_long":"java.awt.event.FocusEvent","name":"e","comment":"","type_short":"FocusEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Updates the enablement for any actions created by this code comparison panel.","static":false,"name":"updateActionEnablement","comment":"Updates the enablement for any actions created by this code comparison panel.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the coordinator for the two views within this code comparison panel. It coordinates\n their scrolling and location synchronization.\n@param fieldPanelCoordinator the coordinator for the two views","static":false,"name":"setFieldPanelCoordinator","comment":"Sets the coordinator for the two views within this code comparison panel. It coordinates\n their scrolling and location synchronization.","params":[{"type_long":"T","name":"fieldPanelCoordinator","comment":"the coordinator for the two views","type_short":"T"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the current field panel coordinator used to synchronize scrolling between the \n left and right view for this CodeComparisonPanel.\n@return the current FieldPanelCoordinator. Otherwise, null if scrolling is not \n currently synchronized.","static":false,"name":"getFieldPanelCoordinator","comment":"Gets the current field panel coordinator used to synchronize scrolling between the \n left and right view for this CodeComparisonPanel.","params":[],"throws":[],"return":{"type_long":"T","comment":"the current FieldPanelCoordinator. Otherwise, null if scrolling is not \n currently synchronized.","type_short":"T"}},{"javadoc":"Creates a new FieldPanelCoordinator used to synchronize scrolling between the \n left and right view for this CodeComparisonPanel.\n@return a new FieldPanelCoordinator","static":false,"name":"createFieldPanelCoordinator","comment":"Creates a new FieldPanelCoordinator used to synchronize scrolling between the \n left and right view for this CodeComparisonPanel.","params":[],"throws":[],"return":{"type_long":"T","comment":"a new FieldPanelCoordinator","type_short":"T"}},{"javadoc":"Gets the left field panel for this CodeComparisonPanel.\n@return the left FieldPanel.","static":false,"name":"getLeftFieldPanel","comment":"Gets the left field panel for this CodeComparisonPanel.","params":[],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.FieldPanel","comment":"the left FieldPanel.","type_short":"FieldPanel"}},{"javadoc":"Gets the right field panel for this CodeComparisonPanel.\n@return the right FieldPanel.","static":false,"name":"getRightFieldPanel","comment":"Gets the right field panel for this CodeComparisonPanel.","params":[],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.FieldPanel","comment":"the right FieldPanel.","type_short":"FieldPanel"}},{"javadoc":"Determines if the layouts of the views are synchronized with respect to scrolling and\n location.\n@return true if scrolling is synchronized between the two views.","static":false,"name":"isScrollingSynced","comment":"Determines if the layouts of the views are synchronized with respect to scrolling and\n location.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if scrolling is synchronized between the two views.","type_short":"boolean"}},{"javadoc":"Sets whether or not scrolling is synchronized.\n@param syncScrolling true means synchronize scrolling and location between the two views.","static":false,"name":"setScrollingSyncState","comment":"Sets whether or not scrolling is synchronized.","params":[{"type_long":"boolean","name":"syncScrolling","comment":"true means synchronize scrolling and location between the two views.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"CodeComparisonPanel","comment":"The CodeComparisonPanel class should be extended by any class that is to be discovered by\n the FunctionComparisonPanel class and included as a form of comparing two sections \n of code within the same or different programs.\n \n NOTE:  ALL CodeComparisonPanel CLASSES MUST END IN \"CodeComparisonPanel\".  \n If not, the ClassSearcher will not find them.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"MINIMUM_PANEL_WIDTH","comment":"","type_short":"int","constant_value":"50"},{"type_long":"int","javadoc":"","static":true,"name":"LEFT","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"RIGHT","comment":"","type_short":"int","constant_value":"1"},{"type_long":"java.awt.Color","javadoc":"","static":true,"name":"BUBBLE_GUM_PINK_COLOR","comment":"","type_short":"Color","constant_value":null},{"type_long":"javax.swing.border.Border","javadoc":"","static":true,"name":"FOCUS_BORDER","comment":"","type_short":"Border","constant_value":null},{"type_long":"javax.swing.border.Border","javadoc":"","static":true,"name":"NON_FOCUS_BORDER","comment":"","type_short":"Border","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSetView","javadoc":"","static":true,"name":"EMPTY_ADDRESS_SET","comment":"","type_short":"AddressSetView","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"owner","comment":"","type_short":"String","constant_value":null},{"type_long":"ghidra.framework.plugintool.PluginTool","javadoc":"","static":false,"name":"tool","comment":"","type_short":"PluginTool","constant_value":null},{"type_long":"javax.swing.JComponent","javadoc":"","static":false,"name":"topComp","comment":"","type_short":"JComponent","constant_value":null},{"type_long":"javax.swing.JComponent","javadoc":"","static":false,"name":"bottomComp","comment":"","type_short":"JComponent","constant_value":null},{"type_long":"ghidra.app.util.viewer.util.TitledPanel[]","javadoc":"","static":false,"name":"titlePanels","comment":"","type_short":"ghidra.app.util.viewer.util.TitledPanel[]","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"leftTitlePrefix","comment":"","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"rightTitlePrefix","comment":"","type_short":"String","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"currProgramIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.program.model.listing.Program[]","javadoc":"","static":false,"name":"programs","comment":"","type_short":"ghidra.program.model.listing.Program[]","constant_value":null},{"type_long":"ghidra.program.model.listing.Function[]","javadoc":"","static":false,"name":"functions","comment":"","type_short":"ghidra.program.model.listing.Function[]","constant_value":null},{"type_long":"ghidra.program.model.listing.Data[]","javadoc":"","static":false,"name":"data","comment":"","type_short":"ghidra.program.model.listing.Data[]","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"syncScrolling","comment":"","type_short":"boolean","constant_value":null},{"type_long":"T","javadoc":"","static":false,"name":"fieldPanelCoordinator","comment":"","type_short":"T","constant_value":null}]}
