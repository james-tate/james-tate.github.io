{"implements":["ghidra.framework.options.OptionsChangeListener"],"javadoc":"","static":false,"extends":"ghidra.program.model.listing.CodeUnitFormatOptions","methods":[{"javadoc":"Construct code unit format options for specified field options.\n This constructor must be used by the field factory since an OptionsService may\n not obtainable at the time they are constructed.\n@param fieldOptions field options\n@param autoUpdate if true format will auto update if associated options are changed, in \n addition any listeners will be notified when this format is updated.","static":false,"name":"<init>","comment":"Construct code unit format options for specified field options.\n This constructor must be used by the field factory since an OptionsService may\n not obtainable at the time they are constructed.","params":[{"type_long":"ghidra.framework.options.ToolOptions","name":"fieldOptions","comment":"field options","type_short":"ToolOptions"},{"type_long":"boolean","name":"autoUpdate","comment":"if true format will auto update if associated options are changed, in \n addition any listeners will be notified when this format is updated.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"optionsChanged","comment":"","params":[{"type_long":"ghidra.framework.options.ToolOptions","name":"options","comment":"","type_short":"ToolOptions"},{"type_long":"java.lang.String","name":"optionName","comment":"","type_short":"String"},{"type_long":"java.lang.Object","name":"oldValue","comment":"","type_short":"Object"},{"type_long":"java.lang.Object","name":"newValue","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateFormat","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add format change listener.\n Listeners will only be notified if autoUpdate was true when instantiated.\n@param listener","static":false,"name":"addChangeListener","comment":"Add format change listener.\n Listeners will only be notified if autoUpdate was true when instantiated.","params":[{"type_long":"javax.swing.event.ChangeListener","name":"listener","comment":"","type_short":"ChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove format change listener\n@param listener","static":false,"name":"removeChangeListener","comment":"Remove format change listener","params":[{"type_long":"javax.swing.event.ChangeListener","name":"listener","comment":"","type_short":"ChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyListeners","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get current state of the Follow Referenced Pointers option.\n@return true if operand pointer read of indirect references will be followed and \n non-dynamic pointer referenced symbol will be rendered in place of pointer label.","static":false,"name":"followReferencedPointers","comment":"Get current state of the Follow Referenced Pointers option.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if operand pointer read of indirect references will be followed and \n non-dynamic pointer referenced symbol will be rendered in place of pointer label.","type_short":"boolean"}}],"name":"BrowserCodeUnitFormatOptions","comment":"","fields":[{"type_long":"java.lang.String","javadoc":"Option for whether to show explicit register variable mark-ups in the operand","static":true,"name":"REGISTER_VARIABLE_MARKUP_OPTION","comment":"Option for whether to show explicit register variable mark-ups in the operand","type_short":"String","constant_value":"\"Operands Field.Markup Register Variable References\""},{"type_long":"java.lang.String","javadoc":"Option for whether to show stack variable mark-ups in the operand","static":true,"name":"STACK_VARIABLE_MARKUP_OPTION","comment":"Option for whether to show stack variable mark-ups in the operand","type_short":"String","constant_value":"\"Operands Field.Markup Stack Variable References\""},{"type_long":"java.lang.String","javadoc":"Option for whether to include implied stack variable mark-ups in the operand","static":true,"name":"INFERRED_VARIABLE_MARKUP_OPTION","comment":"Option for whether to include implied stack variable mark-ups in the operand","type_short":"String","constant_value":"\"Operands Field.Markup Inferred Variable References\""},{"type_long":"java.lang.String","javadoc":"Option for whether to show extended reference mark-ups in the operand.","static":true,"name":"ALWAYS_SHOW_PRIMARY_REFERENCE_MARKUP_OPTION","comment":"Option for whether to show extended reference mark-ups in the operand.","type_short":"String","constant_value":"\"Operands Field.Always Show Primary Reference\""},{"type_long":"java.lang.String","javadoc":"Option for whether to follow referenced pointers, for read or indirect reference types, \n to show pointer's referenced symbol instead of symbol at pointer.  When applied the \n resulting label will be preceded by -&gt;.","static":true,"name":"FOLLOW_POINTER_REFERENCE_MARKUP_OPTION","comment":"Option for whether to follow referenced pointers, for read or indirect reference types, \n to show pointer's referenced symbol instead of symbol at pointer.  When applied the \n resulting label will be preceded by -.","type_short":"String","constant_value":"\"Operands Field.Follow Read or Indirect Pointer References\""},{"type_long":"java.lang.String","javadoc":"Option for whether to show scalar reference adjustments in the operand.","static":true,"name":"SCALAR_ADJUSTMENT_OPTION","comment":"Option for whether to show scalar reference adjustments in the operand.","type_short":"String","constant_value":"\"Operands Field.Include Scalar Reference Adjustment\""},{"type_long":"java.lang.String","javadoc":"Option which controls the display of name-space prefixes","static":true,"name":"NAMESPACE_OPTIONS","comment":"Option which controls the display of name-space prefixes","type_short":"String","constant_value":"\"Operands Field.Display Namespace\""},{"type_long":"java.lang.String","javadoc":"Option which controls the display of data mutability in the mnemonic representation","static":true,"name":"SHOW_MUTABILITY_OPTION","comment":"Option which controls the display of data mutability in the mnemonic representation","type_short":"String","constant_value":"\"Mnemonic Field.Show Data Mutability\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"SHOW_OFFCUT_INFO_OPTION","comment":"","type_short":"String","constant_value":"\"Operands Field.Show Offcut Information\""},{"type_long":"ghidra.util.datastruct.WeakSet<javax.swing.event.ChangeListener>","javadoc":"","static":false,"name":"listeners","comment":"","type_short":"WeakSet","constant_value":null},{"type_long":"ghidra.framework.options.Options","javadoc":"","static":false,"name":"fieldOptions","comment":"","type_short":"Options","constant_value":null}]}
