{"implements":["docking.DropTargetHandler","docking.dnd.Droppable","java.awt.event.ContainerListener"],"javadoc":"Handles drag\/drop events on a given component such that a file\n  dropped on the component from the front end tool will cause\n  that file to be opened.  Properly handles drop events with\n  child components and listens for components being added\/removed\n  in order to properly support drag\/drop with all components.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a new FileOpenDropHandler.\n@param tool plugin tool\n@param component component that is the drop target","static":false,"name":"<init>","comment":"Construct a new FileOpenDropHandler.","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"plugin tool","type_short":"PluginTool"},{"type_long":"java.awt.Component","name":"component","comment":"component that is the drop target","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Dispose this drop handler.","static":false,"name":"dispose","comment":"Dispose this drop handler.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isDropOk","comment":"","params":[{"type_long":"java.awt.dnd.DropTargetDragEvent","name":"e","comment":"","type_short":"DropTargetDragEvent"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"add","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"},{"type_long":"java.awt.dnd.DropTargetDropEvent","name":"e","comment":"","type_short":"DropTargetDropEvent"},{"type_long":"java.awt.datatransfer.DataFlavor","name":"f","comment":"","type_short":"DataFlavor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dragUnderFeedback","comment":"","params":[{"type_long":"boolean","name":"ok","comment":"","type_short":"boolean"},{"type_long":"java.awt.dnd.DropTargetDragEvent","name":"e","comment":"","type_short":"DropTargetDragEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"undoDragUnderFeedback","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initializeComponents","comment":"","params":[{"type_long":"java.awt.Component","name":"comp","comment":"","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"deinitializeComponents","comment":"","params":[{"type_long":"java.awt.Component","name":"comp","comment":"","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"componentAdded","comment":"","params":[{"type_long":"java.awt.event.ContainerEvent","name":"e","comment":"","type_short":"ContainerEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"componentRemoved","comment":"","params":[{"type_long":"java.awt.event.ContainerEvent","name":"e","comment":"","type_short":"ContainerEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"addDataFlavorHandler","comment":"","params":[{"type_long":"java.awt.datatransfer.DataFlavor","name":"dataFlavor","comment":"","type_short":"DataFlavor"},{"type_long":"ghidra.app.util.FileOpenDataFlavorHandler","name":"handler","comment":"","type_short":"FileOpenDataFlavorHandler"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"removeDataFlavorHandler","comment":"","params":[{"type_long":"java.awt.datatransfer.DataFlavor","name":"dataFlavor","comment":"","type_short":"DataFlavor"}],"throws":[],"return":{"type_long":"ghidra.app.util.FileOpenDataFlavorHandler","comment":"","type_short":"FileOpenDataFlavorHandler"}}],"name":"FileOpenDropHandler","comment":"Handles drag\/drop events on a given component such that a file\n  dropped on the component from the front end tool will cause\n  that file to be opened.  Properly handles drop events with\n  child components and listens for components being added\/removed\n  in order to properly support drag\/drop with all components.","fields":[{"type_long":"java.util.HashMap<java.awt.datatransfer.DataFlavor,ghidra.app.util.FileOpenDataFlavorHandler>","javadoc":"","static":true,"name":"handlers","comment":"","type_short":"HashMap","constant_value":null},{"type_long":"docking.dnd.DropTgtAdapter","javadoc":"","static":false,"name":"dropTargetAdapter","comment":"","type_short":"DropTgtAdapter","constant_value":null},{"type_long":"java.awt.dnd.DropTarget","javadoc":"","static":false,"name":"globalDropTarget","comment":"","type_short":"DropTarget","constant_value":null},{"type_long":"ghidra.framework.plugintool.PluginTool","javadoc":"","static":false,"name":"tool","comment":"","type_short":"PluginTool","constant_value":null},{"type_long":"java.awt.Component","javadoc":"","static":false,"name":"component","comment":"","type_short":"Component","constant_value":null}]}
