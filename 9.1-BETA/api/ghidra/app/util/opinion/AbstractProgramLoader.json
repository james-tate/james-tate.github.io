{"implements":["ghidra.app.util.opinion.Loader"],"javadoc":"An abstract {@link Loader} that provides a framework to conveniently load {@link Program}s.\n Subclasses are responsible for the actual load.\n <p>\n This {@link Loader} provides a couple processor-related options, as all {@link Program}s will\n have a processor associated with them.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Loads program bytes in a particular format as a new {@link Program}. Multiple \n {@link Program}s may end up getting created, depending on the nature of the format.\n@param provider The bytes to load.\n@param programName The name of the {@link Program} that's being loaded.\n@param programFolder The {@link DomainFolder} where the loaded thing should be saved.  Could \n   be null if the thing should not be pre-saved.\n@param loadSpec The {@link LoadSpec} to use during load.\n@param options The load options.\n@param log The message log.\n@param consumer A consumer object for {@link Program}s generated.\n@param monitor A cancelable task monitor.\n@return A list of loaded {@link Program}s (element 0 corresponds to primary loaded \n   {@link Program}).\n@throws IOException if there was an IO-related problem loading.\n@throws CancelledException if the user cancelled the load.","static":false,"name":"loadProgram","comment":"Loads program bytes in a particular format as a new Program. Multiple \n Programs may end up getting created, depending on the nature of the format.","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"The bytes to load.","type_short":"ByteProvider"},{"type_long":"java.lang.String","name":"programName","comment":"The name of the Program that's being loaded.","type_short":"String"},{"type_long":"ghidra.framework.model.DomainFolder","name":"programFolder","comment":"The DomainFolder where the loaded thing should be saved.  Could \n   be null if the thing should not be pre-saved.","type_short":"DomainFolder"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"The LoadSpec to use during load.","type_short":"LoadSpec"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"The load options.","type_short":"List"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"The message log.","type_short":"MessageLog"},{"type_long":"java.lang.Object","name":"consumer","comment":"A consumer object for Programs generated.","type_short":"Object"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"A cancelable task monitor.","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was an IO-related problem loading.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancelled the load.","type_short":"CancelledException"}],"return":{"type_long":"java.util.List<ghidra.program.model.listing.Program>","comment":"A list of loaded Programs (element 0 corresponds to primary loaded \n   Program).","type_short":"List"}},{"javadoc":"Loads program bytes into the specified {@link Program}.  This method will not create any new \n {@link Program}s.  It is only for adding to an existing {@link Program}.\n <p>\n NOTE: The loading that occurs in this method will automatically be done in a transaction.\n@param provider The bytes to load into the {@link Program}.\n@param loadSpec The {@link LoadSpec} to use during load.\n@param options The load options.\n@param messageLog The message log.\n@param program The {@link Program} to load into.\n@param monitor A cancelable task monitor.\n@return True if the file was successfully loaded; otherwise, false.\n@throws IOException if there was an IO-related problem loading.\n@throws CancelledException if the user cancelled the load.","static":false,"name":"loadProgramInto","comment":"Loads program bytes into the specified Program.  This method will not create any new \n Programs.  It is only for adding to an existing Program.\n \n NOTE: The loading that occurs in this method will automatically be done in a transaction.","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"The bytes to load into the Program.","type_short":"ByteProvider"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"The LoadSpec to use during load.","type_short":"LoadSpec"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"The load options.","type_short":"List"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"messageLog","comment":"The message log.","type_short":"MessageLog"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The Program to load into.","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"A cancelable task monitor.","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was an IO-related problem loading.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancelled the load.","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"True if the file was successfully loaded; otherwise, false.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"load","comment":"","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"","type_short":"ByteProvider"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.framework.model.DomainFolder","name":"folder","comment":"","type_short":"DomainFolder"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"","type_short":"LoadSpec"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"","type_short":"List"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"messageLog","comment":"","type_short":"MessageLog"},{"type_long":"java.lang.Object","name":"consumer","comment":"","type_short":"Object"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"}],"return":{"type_long":"java.util.List<ghidra.framework.model.DomainObject>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"loadInto","comment":"","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"","type_short":"ByteProvider"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"","type_short":"LoadSpec"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"","type_short":"List"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"messageLog","comment":"","type_short":"MessageLog"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getDefaultOptions","comment":"","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"","type_short":"ByteProvider"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"","type_short":"LoadSpec"},{"type_long":"ghidra.framework.model.DomainObject","name":"domainObject","comment":"","type_short":"DomainObject"},{"type_long":"boolean","name":"isLoadIntoProgram","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.Option>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"validateOptions","comment":"","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"","type_short":"ByteProvider"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"","type_short":"LoadSpec"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"","type_short":"List"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"This gets called after the given list of {@Program }s is finished loading.  It provides\n subclasses an opportunity to do follow-on actions to the load.\n@param loadedPrograms The {@link Program}s that got loaded.\n@param folder The folder the programs were loaded to.\n@param options The load options.\n@param messageLog The message log.\n@param monitor A cancelable task monitor.\n@throws IOException if there was an IO-related problem loading.\n@throws CancelledException if the user cancelled the load.","static":false,"name":"postLoadProgramFixups","comment":"This gets called after the given list of s is finished loading.  It provides\n subclasses an opportunity to do follow-on actions to the load.","params":[{"type_long":"java.util.List<ghidra.program.model.listing.Program>","name":"loadedPrograms","comment":"The Programs that got loaded.","type_short":"List"},{"type_long":"ghidra.framework.model.DomainFolder","name":"folder","comment":"The folder the programs were loaded to.","type_short":"DomainFolder"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"The load options.","type_short":"List"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"messageLog","comment":"The message log.","type_short":"MessageLog"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"A cancelable task monitor.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancelled the load.","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"if there was an IO-related problem loading.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns whether or not processor labels should be applied by default.  Most loaders will\n not need to override this method because they will not want the labels applied by default.\n@return Whether or not processor labels should be applied by default.","static":false,"name":"shouldApplyProcessorLabelsByDefault","comment":"Returns whether or not processor labels should be applied by default.  Most loaders will\n not need to override this method because they will not want the labels applied by default.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"Whether or not processor labels should be applied by default.","type_short":"boolean"}},{"javadoc":"Generates a block name.\n@param program The {@link Program} for the block.\n@param isOverlay true if the block is an overlay; use \"ov\" in the name.\n@param space The {@link AddressSpace} for the block.\n@return The generated block name.","static":false,"name":"generateBlockName","comment":"Generates a block name.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The Program for the block.","type_short":"Program"},{"type_long":"boolean","name":"isOverlay","comment":"true if the block is an overlay; use \"ov\" in the name.","type_short":"boolean"},{"type_long":"ghidra.program.model.address.AddressSpace","name":"space","comment":"The AddressSpace for the block.","type_short":"AddressSpace"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"The generated block name.","type_short":"String"}},{"javadoc":"Creates a {@link Program} with the specified attributes.\n@param provider The bytes that will make up the {@link Program}.\n@param programName The name of the {@link Program}.\n@param imageBase The image base address of the {@link Program}.\n@param executableFormatName The file format name of the {@link Program}.  Typically this will\n   be the {@link Loader} name.\n@param language The {@link Language} of the {@link Program}.\n@param compilerSpec The {@link CompilerSpec} of the {@link Program}.\n@param consumer A consumer object for the {@link Program} generated.\n@return The newly created {@link Program}.\n@throws IOException if there was an IO-related problem with creating the {@link Program}.","static":false,"name":"createProgram","comment":"Creates a Program with the specified attributes.","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"The bytes that will make up the Program.","type_short":"ByteProvider"},{"type_long":"java.lang.String","name":"programName","comment":"The name of the Program.","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"imageBase","comment":"The image base address of the Program.","type_short":"Address"},{"type_long":"java.lang.String","name":"executableFormatName","comment":"The file format name of the Program.  Typically this will\n   be the Loader name.","type_short":"String"},{"type_long":"ghidra.program.model.lang.Language","name":"language","comment":"The Language of the Program.","type_short":"Language"},{"type_long":"ghidra.program.model.lang.CompilerSpec","name":"compilerSpec","comment":"The CompilerSpec of the Program.","type_short":"CompilerSpec"},{"type_long":"java.lang.Object","name":"consumer","comment":"A consumer object for the Program generated.","type_short":"Object"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was an IO-related problem with creating the Program.","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"The newly created Program.","type_short":"Program"}},{"javadoc":"Creates default memory blocks for the given {@link Program}.\n@param program The {@link Program} to create default memory blocks for.\n@param language The {@link Program}s {@link Language}.\n@param log The log to use during memory block creation.","static":false,"name":"createDefaultMemoryBlocks","comment":"Creates default memory blocks for the given Program.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The Program to create default memory blocks for.","type_short":"Program"},{"type_long":"ghidra.program.model.lang.Language","name":"language","comment":"The Programs Language.","type_short":"Language"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"The log to use during memory block creation.","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the {@link Loader}'s language service.\n <p>\n The default behavior of this method is to return the {@link DefaultLanguageService}.\n@return The {@link Loader}'s language service.","static":false,"name":"getLanguageService","comment":"Gets the Loader's language service.\n \n The default behavior of this method is to return the DefaultLanguageService.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.LanguageService","comment":"The Loader's language service.","type_short":"LanguageService"}},{"javadoc":"Releases the given consumer from each of the provided {@link DomainObject}s.\n@param domainObjects A list of {@link DomainObject}s which are no longer being used.\n@param consumer The consumer that was marking the {@link DomainObject}s as being used.","static":false,"name":"release","comment":"Releases the given consumer from each of the provided DomainObjects.","params":[{"type_long":"java.util.List<? extends ghidra.framework.model.DomainObject>","name":"domainObjects","comment":"A list of DomainObjects which are no longer being used.","type_short":"List"},{"type_long":"java.lang.Object","name":"consumer","comment":"The consumer that was marking the DomainObjects as being used.","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createProgramFile","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.framework.model.DomainFolder","name":"programFolder","comment":"","type_short":"DomainFolder"},{"type_long":"java.lang.String","name":"programName","comment":"","type_short":"String"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"messageLog","comment":"","type_short":"MessageLog"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"applyProcessorLabels","comment":"","params":[{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"","type_short":"List"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"computeBinaryMD5","comment":"","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"","type_short":"ByteProvider"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"computeBinarySHA256","comment":"","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"","type_short":"ByteProvider"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"shouldSetImageBase","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"prog","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"imageBase","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"shouldApplyProcessorLabels","comment":"","params":[{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"shouldAnchorSymbols","comment":"","params":[{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"AbstractProgramLoader","comment":"An abstract Loader that provides a framework to conveniently load Programs.\n Subclasses are responsible for the actual load.\n \n This Loader provides a couple processor-related options, as all Programs will\n have a processor associated with them.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"APPLY_LABELS_OPTION_NAME","comment":"","type_short":"String","constant_value":"\"Apply Processor Defined Labels\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ANCHOR_LABELS_OPTION_NAME","comment":"","type_short":"String","constant_value":"\"Anchor Processor Defined Labels\""}]}
