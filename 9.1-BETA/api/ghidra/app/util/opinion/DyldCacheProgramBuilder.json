{"implements":[],"javadoc":"Builds up a DYLD Cache {@link Program} by parsing the DYLD Cache headers.","static":false,"extends":"ghidra.app.util.opinion.MachoProgramBuilder","methods":[{"javadoc":"Creates a new {@link DyldCacheProgramBuilder} based on the given information.\n@param program The {@link Program} to build up\n@param provider The {@link ByteProvider} that contains the DYLD Cache bytes\n@param fileBytes Where the Mach-O's bytes came from\n@param shouldProcessSymbols True if symbols should be processed; otherwise, false\n@param shouldCreateDylibSections True if memory blocks should be created for DYLIB sections; \n   otherwise, false\n@param log The log\n@param monitor A cancelable task monitor","static":false,"name":"<init>","comment":"Creates a new DyldCacheProgramBuilder based on the given information.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The Program to build up","type_short":"Program"},{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"The ByteProvider that contains the DYLD Cache bytes","type_short":"ByteProvider"},{"type_long":"ghidra.program.database.mem.FileBytes","name":"fileBytes","comment":"Where the Mach-O's bytes came from","type_short":"FileBytes"},{"type_long":"boolean","name":"shouldProcessSymbols","comment":"True if symbols should be processed; otherwise, false","type_short":"boolean"},{"type_long":"boolean","name":"shouldCreateDylibSections","comment":"True if memory blocks should be created for DYLIB sections; \n   otherwise, false","type_short":"boolean"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"The log","type_short":"MessageLog"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"A cancelable task monitor","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Builds up a DYLD Cache {@link Program}.\n@param program The {@link Program} to build up\n@param provider The {@link ByteProvider} that contains the DYLD Cache's bytes\n@param fileBytes Where the Mach-O's bytes came from\n@param shouldProcessSymbols True if symbols should be processed; otherwise, false\n@param shouldCreateDylibSections True if memory blocks should be created for DYLIB sections; \n   otherwise, false\n@param log The log\n@param monitor A cancelable task monitor\n@throws Exception if a problem occurs","static":true,"name":"buildProgram","comment":"Builds up a DYLD Cache Program.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The Program to build up","type_short":"Program"},{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"The ByteProvider that contains the DYLD Cache's bytes","type_short":"ByteProvider"},{"type_long":"ghidra.program.database.mem.FileBytes","name":"fileBytes","comment":"Where the Mach-O's bytes came from","type_short":"FileBytes"},{"type_long":"boolean","name":"shouldProcessSymbols","comment":"True if symbols should be processed; otherwise, false","type_short":"boolean"},{"type_long":"boolean","name":"shouldCreateDylibSections","comment":"True if memory blocks should be created for DYLIB sections; \n   otherwise, false","type_short":"boolean"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"The log","type_short":"MessageLog"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"A cancelable task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.lang.Exception","comment":"if a problem occurs","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"build","comment":"","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the program's image base.\n@throws Exception if there was problem setting the program's image base","static":false,"name":"setDyldCacheImageBase","comment":"Sets the program's image base.","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"if there was problem setting the program's image base","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Processes the DYLD Cache's memory mappings and creates memory blocks for them.\n@throws Exception if there was a problem creating the memory blocks","static":false,"name":"processDyldCacheMemoryBlocks","comment":"Processes the DYLD Cache's memory mappings and creates memory blocks for them.","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"if there was a problem creating the memory blocks","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Marks up the DYLD Cache headers.\n@throws Exception if there was a problem marking up the headers","static":false,"name":"markupHeaders","comment":"Marks up the DYLD Cache headers.","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"if there was a problem marking up the headers","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Marks up the DYLD Cache branch islands.\n@throws Exception if there was a problem marking up the branch islands.","static":false,"name":"markupBranchIslands","comment":"Marks up the DYLD Cache branch islands.","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"if there was a problem marking up the branch islands.","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates the DYLD Cache symbols.\n@throws Exception if there was a problem creating the symbols","static":false,"name":"createSymbols","comment":"Creates the DYLD Cache symbols.","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"if there was a problem creating the symbols","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Processes the DYLD Cache's DYLIB files.  This will mark up the DYLIB files, added them to the\n program tree, and make memory blocks for them.\n@throws Exception if there was a problem processing the DYLIB files","static":false,"name":"processDylibs","comment":"Processes the DYLD Cache's DYLIB files.  This will mark up the DYLIB files, added them to the\n program tree, and make memory blocks for them.","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"if there was a problem processing the DYLIB files","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DyldCacheProgramBuilder","comment":"Builds up a DYLD Cache Program by parsing the DYLD Cache headers.","fields":[{"type_long":"ghidra.app.util.bin.format.macho.dyld.DyldCacheHeader","javadoc":"","static":false,"name":"dyldCacheHeader","comment":"","type_short":"DyldCacheHeader","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"shouldProcessSymbols","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"shouldCreateDylibSections","comment":"","type_short":"boolean","constant_value":null}]}
