{"implements":["ghidra.app.util.bin.format.elf.ElfLoadHelper"],"javadoc":"","static":false,"extends":"ghidra.app.util.opinion.MemorySectionResolver","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfHeader","name":"elf","comment":"","type_short":"ElfHeader"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"","type_short":"List"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getElfHeader","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.elf.ElfHeader","comment":"","type_short":"ElfHeader"}},{"javadoc":"","static":true,"name":"loadElf","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfHeader","name":"elf","comment":"","type_short":"ElfHeader"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"","type_short":"List"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"","type_short":"MessageLog"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"load","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"pruneDiscardableBlocks","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isZeroedArray","comment":"","params":[{"type_long":"byte[]","name":"bytes","comment":"","type_short":"byte[]"},{"type_long":"int","name":"len","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getLog","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.importer.MessageLog","comment":"","type_short":"MessageLog"}},{"javadoc":"","static":false,"name":"log","comment":"","params":[{"type_long":"java.lang.String","name":"msg","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"log","comment":"","params":[{"type_long":"java.lang.Throwable","name":"t","comment":"","type_short":"Throwable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setImageBase","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addProgramProperties","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getMarkupMemoryRangeConstraint","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRange","comment":"","type_short":"AddressRange"}},{"javadoc":"Processes the GNU version section.","static":false,"name":"processGNU","comment":"Processes the GNU version section.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adjust GNU read-only segments following relocations (PT_GNU_RELRO).","static":false,"name":"processGNU_readOnly","comment":"Adjust GNU read-only segments following relocations (PT_GNU_RELRO).","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processEntryPoints","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createDynamicEntryPoints","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfDynamicType","name":"dynamicEntryType","comment":"","type_short":"ElfDynamicType"},{"type_long":"ghidra.app.util.bin.format.elf.ElfDynamicType","name":"entryArraySizeType","comment":"","type_short":"ElfDynamicType"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create an entry point function.\n Note: entries in the dynamic table appear to have any pre-link adjustment already applied.\n@param name\n@param entryAddr function address (adjusted for pre-linking).\n@param monitor\n@return function address","static":false,"name":"createEntryFunction","comment":"Create an entry point function.\n Note: entries in the dynamic table appear to have any pre-link adjustment already applied.","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"long","name":"entryAddr","comment":"function address (adjusted for pre-linking).","type_short":"long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"function address","type_short":"Address"}},{"javadoc":"","static":false,"name":"getMessage","comment":"","params":[{"type_long":"java.lang.Exception","name":"e","comment":"","type_short":"Exception"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"markupInterpreter","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processImports","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processRelocations","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processRelocationTable","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfRelocationTable","name":"relocationTable","comment":"","type_short":"ElfRelocationTable"},{"type_long":"ghidra.app.util.bin.format.elf.relocation.ElfRelocationContext","name":"context","comment":"","type_short":"ElfRelocationContext"},{"type_long":"ghidra.program.model.address.AddressSpace","name":"relocationSpace","comment":"","type_short":"AddressSpace"},{"type_long":"long","name":"baseOffset","comment":"","type_short":"long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add reference to previously applied header structure (assumes markupElfHeader previously called)\n@param componentName\n@param refAddr","static":false,"name":"addElfHeaderReferenceMarkup","comment":"Add reference to previously applied header structure (assumes markupElfHeader previously called)","params":[{"type_long":"int","name":"componentOrdinal","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.address.Address","name":"refAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"markupElfHeader","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"markupProgramHeaders","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"markupSectionHeaders","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"markupRelocationTable","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"relocTableAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.app.util.bin.format.elf.ElfRelocationTable","name":"relocTable","comment":"","type_short":"ElfRelocationTable"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDefaultAddressSpace","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSpace","comment":"","type_short":"AddressSpace"}},{"javadoc":"","static":false,"name":"getDefaultDataSpace","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSpace","comment":"","type_short":"AddressSpace"}},{"javadoc":"","static":false,"name":"allocateUndefinedSymbolData","comment":"","params":[{"type_long":"java.util.HashMap<ghidra.program.model.address.Address,java.lang.Integer>","name":"dataAllocationMap","comment":"","type_short":"HashMap"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"allocateLinkageBlock","comment":"","params":[{"type_long":"int","name":"alignment","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"java.lang.String","name":"purpose","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRange","comment":"","type_short":"AddressRange"}},{"javadoc":"Allocate the next EXTERNAL block entry location based upon the specified size.\n@param entrySize entry size\n@return Address of EXTERNAL block entry or null if unable to allocate.","static":false,"name":"getNextExternalBlockEntryAddress","comment":"Allocate the next EXTERNAL block entry location based upon the specified size.","params":[{"type_long":"int","name":"entrySize","comment":"entry size","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"Address of EXTERNAL block entry or null if unable to allocate.","type_short":"Address"}},{"javadoc":"Create EXTERNAL memory block based upon start of {@link #freeAddressRange} and the\n current {@link #nextFreeAddress}.","static":false,"name":"createExternalBlock","comment":"Create EXTERNAL memory block based upon start of #freeAddressRange and the\n current #nextFreeAddress.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processSymbolTables","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processSymbols","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol[]","name":"symbols","comment":"","type_short":"ghidra.app.util.bin.format.elf.ElfSymbol[]"},{"type_long":"java.util.HashMap<ghidra.program.model.address.Address,java.lang.Integer>","name":"dataAllocationMap","comment":"","type_short":"HashMap"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Calculate the load address associated with a specified elfSymbol.\n@param elfSymbol ELF symbol\n@param errorConsumer error consumer\n@return symbol address or null if symbol not supported and address not determined,\n or NO_ADDRESS if symbol is external and should be allocated to the EXTERNAL block.","static":false,"name":"calculateSymbolAddress","comment":"Calculate the load address associated with a specified elfSymbol.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol","name":"elfSymbol","comment":"ELF symbol","type_short":"ElfSymbol"},{"type_long":"java.util.function.Consumer<java.lang.String>","name":"errorConsumer","comment":"error consumer","type_short":"Consumer"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"symbol address or null if symbol not supported and address not determined,\n or NO_ADDRESS if symbol is external and should be allocated to the EXTERNAL block.","type_short":"Address"}},{"javadoc":"Allocate external symbol storage within what will become the EXTERNAL memory block.\n@param elfSymbol external ELF symbol\n@return assigned EXTERNAL block address\n@throws AddressOutOfBoundsException if unable to allocate EXTERNAL block entry","static":false,"name":"allocateExternalSymbol","comment":"Allocate external symbol storage within what will become the EXTERNAL memory block.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol","name":"elfSymbol","comment":"external ELF symbol","type_short":"ElfSymbol"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOutOfBoundsException","comment":"if unable to allocate EXTERNAL block entry","type_short":"AddressOutOfBoundsException"}],"return":{"type_long":"ghidra.program.model.address.Address","comment":"assigned EXTERNAL block address","type_short":"Address"}},{"javadoc":"Determine if an external ELF symbol has already been established with the\n same name and re-use it.\n@param elfSymbol external ELF symbol\n@return true if processed as a duplicate external symbol and no additional \n processing is required, else false","static":false,"name":"processDuplicateExternal","comment":"Determine if an external ELF symbol has already been established with the\n same name and re-use it.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol","name":"elfSymbol","comment":"external ELF symbol","type_short":"ElfSymbol"}],"throws":[],"return":{"type_long":"boolean","comment":"true if processed as a duplicate external symbol and no additional \n processing is required, else false","type_short":"boolean"}},{"javadoc":"Process ELF symbol if it has a versioned name.  Attempt to establish as \n comment on associated external symbol.\n@param elfSymbol external ELF symbol\n@return true if processed and no additional processing is required, else false","static":false,"name":"processVersionedExternal","comment":"Process ELF symbol if it has a versioned name.  Attempt to establish as \n comment on associated external symbol.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol","name":"elfSymbol","comment":"external ELF symbol","type_short":"ElfSymbol"}],"throws":[],"return":{"type_long":"boolean","comment":"true if processed and no additional processing is required, else false","type_short":"boolean"}},{"javadoc":"Find a specific named symbol within the fake EXTERNAL block.\n NOTE: It is assumed that ELF will never produced duplicate names.\n@param programSymbolTable program's symbol table\n@param name symbol name\n@param extMin EXTERNAL block minimum address\n@param extMax EXTERNAL block maximum address\n@return matching symbol or null if not found","static":false,"name":"findExternalBlockSymbol","comment":"Find a specific named symbol within the fake EXTERNAL block.\n NOTE: It is assumed that ELF will never produced duplicate names.","params":[{"type_long":"java.lang.String","name":"name","comment":"symbol name","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"extMin","comment":"EXTERNAL block minimum address","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"extMax","comment":"EXTERNAL block maximum address","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"matching symbol or null if not found","type_short":"Symbol"}},{"javadoc":"","static":false,"name":"isSymbolInRange","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"","type_short":"Symbol"},{"type_long":"ghidra.program.model.address.Address","name":"min","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"max","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"evaluateElfSymbol","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol","name":"elfSymbol","comment":"","type_short":"ElfSymbol"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"boolean","name":"isFakeExternal","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setElfSymbolAddress","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol","name":"elfSymbol","comment":"","type_short":"ElfSymbol"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getElfSymbolAddress","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol","name":"elfSymbol","comment":"","type_short":"ElfSymbol"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"markAsCode","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createOneByteFunction","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"boolean","name":"isEntry","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"","static":false,"name":"createExternalFunctionLinkage","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"functionAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"indirectPointerAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"When transitioning to an external thunk, remove the old symbol on the linkage pointer\/thunk\n if it is the only symbol at that address.\n@param address\n@param name\n@return ","static":false,"name":"removeOldSymbol","comment":"When transitioning to an external thunk, remove the old symbol on the linkage pointer\/thunk\n if it is the only symbol at that address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"createUndefinedData","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"","type_short":"Data"}},{"javadoc":"","static":false,"name":"createData","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"","type_short":"Data"}},{"javadoc":"","static":false,"name":"markupHashTable","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"markupGnuHashTable","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"markupSymbolTable","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"symbolTableAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbolTable","name":"symbolTable","comment":"","type_short":"ElfSymbolTable"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"markupDynamicTable","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add memory reference to dynamic table value and return the referenced address\n specified by the value\n@param elfDynamic\n@param valueData\n@param definedMemoryOnly\n@param label\n@return referenced address specified by the value\n@throws InvalidInputException","static":false,"name":"addDynamicMemoryReference","comment":"Add memory reference to dynamic table value and return the referenced address\n specified by the value","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfDynamic","name":"elfDynamic","comment":"","type_short":"ElfDynamic"},{"type_long":"ghidra.program.model.listing.Data","name":"valueData","comment":"","type_short":"Data"},{"type_long":"boolean","name":"definedMemoryOnly","comment":"","type_short":"boolean"},{"type_long":"java.lang.String","name":"label","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.address.Address","comment":"referenced address specified by the value","type_short":"Address"}},{"javadoc":"","static":false,"name":"processStringTables","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"markupStringTable","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"long","name":"tableBytesLength","comment":"","type_short":"long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createString","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"}],"throws":[{"type_long":"ghidra.program.model.util.CodeUnitInsertionException","comment":"","type_short":"CodeUnitInsertionException"},{"type_long":"ghidra.program.model.data.DataTypeConflictException","comment":"","type_short":"DataTypeConflictException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getDefaultAddress","comment":"","params":[{"type_long":"long","name":"addressableWordOffset","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Get the load address space for a program segment.\n Non-allocated segments may return the OTHER space.\n@param elfProgramHeader elf program segment header\n@return preferred load address space","static":false,"name":"getSegmentAddressSpace","comment":"Get the load address space for a program segment.\n Non-allocated segments may return the OTHER space.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfProgramHeader","name":"elfProgramHeader","comment":"elf program segment header","type_short":"ElfProgramHeader"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSpace","comment":"preferred load address space","type_short":"AddressSpace"}},{"javadoc":"Determine segment preferred load address.\n While this method can produce the intended load address, there is no guarantee that\n the segment data did not get bumped into an overlay area due to a conflict with\n another segment or section.\n@param elfProgramHeader\n@return segment load address","static":false,"name":"getSegmentLoadAddress","comment":"Determine segment preferred load address.\n While this method can produce the intended load address, there is no guarantee that\n the segment data did not get bumped into an overlay area due to a conflict with\n another segment or section.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfProgramHeader","name":"elfProgramHeader","comment":"","type_short":"ElfProgramHeader"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"segment load address","type_short":"Address"}},{"javadoc":"Determine preferred section load address address space prior to load.\n Non-allocated sections may return the OTHER space or an existing OTHER \n overlay established by a program header.\n@param elfSectionHeader\n@return section load address space","static":false,"name":"getSectionAddressSpace","comment":"Determine preferred section load address address space prior to load.\n Non-allocated sections may return the OTHER space or an existing OTHER \n overlay established by a program header.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSectionHeader","name":"elfSectionHeader","comment":"","type_short":"ElfSectionHeader"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSpace","comment":"section load address space","type_short":"AddressSpace"}},{"javadoc":"Determine section's load address.\n@param elfSectionHeader\n@return section load address","static":false,"name":"getSectionLoadAddress","comment":"Determine section's load address.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSectionHeader","name":"elfSectionHeader","comment":"","type_short":"ElfSectionHeader"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"section load address","type_short":"Address"}},{"javadoc":"","static":false,"name":"findLoadAddress","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.MemoryLoadable","name":"section","comment":"","type_short":"MemoryLoadable"},{"type_long":"long","name":"byteOffsetWithinSection","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Locate an Elf file header\/structure within loaded memory based upon its file offset.\n Preference is given to an allocated section over segments.\n This method assumes filter loads will not be employed for the referenced file\n location (e.g., ELF data structures).\n TODO: This could be a problem for dynamic\n@param fileOffset data offset within file\n@param headerSize number of bytes required (minimum value of 1)\n@return load address or null if not loaded or load was possibly fragmented.","static":false,"name":"findLoadAddress","comment":"Locate an Elf file header\/structure within loaded memory based upon its file offset.\n Preference is given to an allocated section over segments.\n This method assumes filter loads will not be employed for the referenced file\n location (e.g., ELF data structures).\n TODO: This could be a problem for dynamic","params":[{"type_long":"long","name":"fileOffset","comment":"data offset within file","type_short":"long"},{"type_long":"long","name":"headerSize","comment":"number of bytes required (minimum value of 1)","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"load address or null if not loaded or load was possibly fragmented.","type_short":"Address"}},{"javadoc":"Expand\/create PT_LOAD program header block regions which are zeroed\n - to the extent possible.  This should only be done when section headers are\n not present.\n@param monitor\n@throws CancelledException","static":false,"name":"expandProgramHeaderBlocks","comment":"Expand\/create PT_LOAD program header block regions which are zeroed\n - to the extent possible.  This should only be done when section headers are\n not present.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"joinProgramTreeFragments","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"block1End","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"block2Start","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Process the program headers and their loaded segments many of which are normally\n loaded through the section headers.\n This is probably not the correct thing to do unless you have a munged ELF\n@param maintainExecuteBit\n@throws CancelledException","static":false,"name":"processProgramHeaders","comment":"Process the program headers and their loaded segments many of which are normally\n loaded through the section headers.\n This is probably not the correct thing to do unless you have a munged ELF","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processProgramHeader","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfProgramHeader","name":"elfProgramHeader","comment":"","type_short":"ElfProgramHeader"},{"type_long":"long","name":"relocStart","comment":"","type_short":"long"},{"type_long":"int","name":"segmentNumber","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOutOfBoundsException","comment":"","type_short":"AddressOutOfBoundsException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getSectionComment","comment":"","params":[{"type_long":"long","name":"addr","comment":"","type_short":"long"},{"type_long":"long","name":"byteSize","comment":"","type_short":"long"},{"type_long":"int","name":"addressableUnitSize","comment":"","type_short":"int"},{"type_long":"java.lang.String","name":"description","comment":"","type_short":"String"},{"type_long":"boolean","name":"loaded","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getImageBaseWordAdjustmentOffset","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getGOTValue","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Long","comment":"","type_short":"Long"}},{"javadoc":"Identify start address of relocation area.  Skip any sections with a non-zero address.\n When an image is relocatable generally all sections will have a zero address.  It is only\n when special sections are present (e.g., __ksymtab) that we may encounter sections with\n a non-zero address.\n@param monitor\n@return start of relocation area","static":false,"name":"computeRelocationStartAddress","comment":"Identify start address of relocation area.  Skip any sections with a non-zero address.\n When an image is relocatable generally all sections will have a zero address.  It is only\n when special sections are present (e.g., __ksymtab) that we may encounter sections with\n a non-zero address.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"long","comment":"start of relocation area","type_short":"long"}},{"javadoc":"","static":false,"name":"processSectionHeaders","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processSectionHeader","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSectionHeader","name":"elfSectionToLoad","comment":"","type_short":"ElfSectionHeader"},{"type_long":"int","name":"index","comment":"","type_short":"int"},{"type_long":"long","name":"relocStart","comment":"","type_short":"long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOutOfBoundsException","comment":"","type_short":"AddressOutOfBoundsException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"pad","comment":"","params":[{"type_long":"int","name":"value","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"createUndefined","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.util.CodeUnitInsertionException","comment":"","type_short":"CodeUnitInsertionException"}],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"","type_short":"Data"}},{"javadoc":"","static":false,"name":"createSymbol","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"boolean","name":"isPrimary","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"pinAbsolute","comment":"","type_short":"boolean"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"namespace","comment":"","type_short":"Namespace"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"","type_short":"Symbol"}},{"javadoc":"check if new symbol needs to grab the primary label.\n Elf sometimes has multiple symbols at a location marking the type of instruction of data at the location.\n@param sym - new symbol to be made primary (some exclusions apply)\n@return revised symbol","static":false,"name":"checkPrimary","comment":"check if new symbol needs to grab the primary label.\n Elf sometimes has multiple symbols at a location marking the type of instruction of data at the location.","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"sym","comment":"- new symbol to be made primary (some exclusions apply)","type_short":"Symbol"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"revised symbol","type_short":"Symbol"}},{"javadoc":"Get a suitable input stream for loading a memory block defined by a specified loadable.\n@param loadable Corresponding ElfSectionHeader or ElfProgramHeader for the memory block to be created.\n@param start memory load address\n@param fileOffset byte provider offset\n@param dataLength the in-memory data length in bytes (actual bytes read from dataInput may be more)\n@return input stream for loading memory block\n@throws IOException","static":false,"name":"getInitializedBlockInputStream","comment":"Get a suitable input stream for loading a memory block defined by a specified loadable.","params":[{"type_long":"ghidra.app.util.bin.format.MemoryLoadable","name":"loadable","comment":"Corresponding ElfSectionHeader or ElfProgramHeader for the memory block to be created.","type_short":"MemoryLoadable"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"memory load address","type_short":"Address"},{"type_long":"long","name":"fileOffset","comment":"byte provider offset","type_short":"long"},{"type_long":"long","name":"dataLength","comment":"the in-memory data length in bytes (actual bytes read from dataInput may be more)","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.io.InputStream","comment":"input stream for loading memory block","type_short":"InputStream"}},{"javadoc":"","static":false,"name":"formatFloat","comment":"","params":[{"type_long":"float","name":"value","comment":"","type_short":"float"},{"type_long":"int","name":"maxDecimalPlaces","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"checkBlockLimit","comment":"","params":[{"type_long":"java.lang.String","name":"sectionName","comment":"","type_short":"String"},{"type_long":"long","name":"dataLength","comment":"","type_short":"long"},{"type_long":"boolean","name":"initialized","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"createInitializedBlock","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.MemoryLoadable","name":"loadable","comment":"","type_short":"MemoryLoadable"},{"type_long":"boolean","name":"isOverlay","comment":"","type_short":"boolean"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"long","name":"fileOffset","comment":"","type_short":"long"},{"type_long":"long","name":"dataLength","comment":"","type_short":"long"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"},{"type_long":"boolean","name":"r","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"w","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"x","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"","type_short":"AddressOverflowException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.model.mem.MemoryBlock","comment":"","type_short":"MemoryBlock"}},{"javadoc":"","static":false,"name":"createUninitializedBlock","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.MemoryLoadable","name":"loadable","comment":"","type_short":"MemoryLoadable"},{"type_long":"boolean","name":"isOverlay","comment":"","type_short":"boolean"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"long","name":"dataLength","comment":"","type_short":"long"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"},{"type_long":"boolean","name":"r","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"w","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"x","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"","type_short":"AddressOverflowException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.model.mem.MemoryBlock","comment":"","type_short":"MemoryBlock"}}],"name":"ElfProgramBuilder","comment":"","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"BLOCK_SOURCE_NAME","comment":"","type_short":"String","constant_value":"\"Elf Loader\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"SEGMENT_NAME_PREFIX","comment":"","type_short":"String","constant_value":"\"segment_\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ELF_HEADER_BLOCK_NAME","comment":"","type_short":"String","constant_value":"\"_elfHeader\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ELF_PROGRAM_HEADERS_BLOCK_NAME","comment":"","type_short":"String","constant_value":"\"_elfProgramHeaders\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ELF_SECTION_HEADERS_BLOCK_NAME","comment":"","type_short":"String","constant_value":"\"_elfSectionHeaders\""},{"type_long":"int","javadoc":"","static":true,"name":"DISCARDABLE_SEGMENT_SIZE","comment":"","type_short":"int","constant_value":"255"},{"type_long":"java.util.List<ghidra.app.util.Option>","javadoc":"","static":false,"name":"options","comment":"","type_short":"List","constant_value":null},{"type_long":"ghidra.app.util.importer.MessageLog","javadoc":"","static":false,"name":"log","comment":"","type_short":"MessageLog","constant_value":null},{"type_long":"ghidra.app.util.bin.format.elf.ElfHeader","javadoc":"","static":false,"name":"elf","comment":"","type_short":"ElfHeader","constant_value":null},{"type_long":"ghidra.program.database.mem.FileBytes","javadoc":"","static":false,"name":"fileBytes","comment":"","type_short":"FileBytes","constant_value":null},{"type_long":"ghidra.program.model.listing.Listing","javadoc":"","static":false,"name":"listing","comment":"","type_short":"Listing","constant_value":null},{"type_long":"ghidra.program.model.mem.Memory","javadoc":"","static":false,"name":"memory","comment":"","type_short":"Memory","constant_value":null},{"type_long":"java.util.HashMap<ghidra.app.util.bin.format.elf.ElfSymbol,ghidra.program.model.address.Address>","javadoc":"","static":false,"name":"symbolMap","comment":"","type_short":"HashMap","constant_value":null},{"type_long":"java.lang.Integer","javadoc":"","static":true,"name":"AVAILABLE_MEMORY","comment":"","type_short":"Integer","constant_value":null},{"type_long":"java.lang.Integer","javadoc":"","static":true,"name":"ALLOCATED_MEMORY","comment":"","type_short":"Integer","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"","static":false,"name":"allocatedRegions","comment":"","type_short":"AddressSet","constant_value":null},{"type_long":"ghidra.program.model.address.AddressRange","javadoc":"","static":false,"name":"externalBlockLimits","comment":"","type_short":"AddressRange","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"lastExternalBlockEntryAddress","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"nextExternalBlockEntryAddress","comment":"","type_short":"Address","constant_value":null}]}
