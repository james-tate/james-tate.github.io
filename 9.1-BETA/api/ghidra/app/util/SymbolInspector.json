{"implements":["ghidra.framework.options.OptionsChangeListener"],"javadoc":"Class for coloring symbols.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new symbol inspector\n It uses the tool to get the CATEGORY_BROWSER_DISPLAY options\n@param serviceProvider a service provider for getting services\n@param repaintComp the component to repaint when the options change","static":false,"name":"<init>","comment":"Constructs a new symbol inspector\n It uses the tool to get the CATEGORY_BROWSER_DISPLAY options","params":[{"type_long":"ghidra.framework.plugintool.ServiceProvider","name":"serviceProvider","comment":"a service provider for getting services","type_short":"ServiceProvider"},{"type_long":"java.awt.Component","name":"repaintComp","comment":"the component to repaint when the options change","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new symbol inspector\n@param options the options from which to get colors\n@param repaintComp the component to repaint when the options change","static":false,"name":"<init>","comment":"Constructs a new symbol inspector","params":[{"type_long":"ghidra.framework.options.ToolOptions","name":"options","comment":"the options from which to get colors","type_short":"ToolOptions"},{"type_long":"java.awt.Component","name":"repaintComp","comment":"the component to repaint when the options change","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"optionsChanged","comment":"","params":[{"type_long":"ghidra.framework.options.ToolOptions","name":"options","comment":"","type_short":"ToolOptions"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.Object","name":"oldValue","comment":"","type_short":"Object"},{"type_long":"java.lang.Object","name":"newValue","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates a program with this symbol inspector\n@param p the program for inspecting symbols","static":false,"name":"setProgram","comment":"Associates a program with this symbol inspector","params":[{"type_long":"ghidra.program.model.listing.Program","name":"p","comment":"the program for inspecting symbols","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the program in use by this inspector; may be null;\n@return the program in use by this inspector; may be null;","static":false,"name":"getProgram","comment":"Returns the program in use by this inspector; may be null;","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"the program in use by this inspector; may be null;","type_short":"Program"}},{"javadoc":"Call this when you are done with this inspector and will not use it again. \n Cleans up listeners, etc.","static":false,"name":"dispose","comment":"Call this when you are done with this inspector and will not use it again. \n Cleans up listeners, etc.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if symbol is at a non-existent address\n@param s the symbol to check\n@return boolean true if symbol is bad","static":false,"name":"isBadReferenceSymbol","comment":"Returns true if symbol is at a non-existent address","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if symbol is bad","type_short":"boolean"}},{"javadoc":"Returns true if the symbol is on a data item.\n@param s the symbol to check\n@return boolean true if s is a data symbol","static":false,"name":"isDataSymbol","comment":"Returns true if the symbol is on a data item.","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if s is a data symbol","type_short":"boolean"}},{"javadoc":"Returns true if the symbol is on \"dead\" code\n@param s the symbol to check\n@return boolean true if the symbol is on dead code","static":false,"name":"isDeadCodeSymbol","comment":"Returns true if the symbol is on \"dead\" code","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the symbol is on dead code","type_short":"boolean"}},{"javadoc":"Checks if the given symbol is at an external entry point\n@param s the symbol to check\n@return boolean true if the symbol is at an external entry point address.","static":false,"name":"isEntryPointSymbol","comment":"Checks if the given symbol is at an external entry point","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the symbol is at an external entry point address.","type_short":"boolean"}},{"javadoc":"Checks if the symbol is at a function\n@param s the symbol to check.\n@return boolean true if there is a function at the symbol's address.","static":false,"name":"isFunctionSymbol","comment":"Checks if the symbol is at a function","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check.","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if there is a function at the symbol's address.","type_short":"boolean"}},{"javadoc":"Checks if the symbol is a function variable\n@param s the symbol to check\n@return true if s is a function variable symbol","static":false,"name":"isVariableSymbol","comment":"Checks if the symbol is a function variable","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"true if s is a function variable symbol","type_short":"boolean"}},{"javadoc":"Checks if the symbol is global or local\n@param s the symbol to check\n@return boolean true if the symbol is global, false if the symbol is\n local.","static":false,"name":"isGlobalSymbol","comment":"Checks if the symbol is global or local","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the symbol is global, false if the symbol is\n local.","type_short":"boolean"}},{"javadoc":"Checks if the symbol is at or inside an instruction\n@param s the symbol to check\n@return boolean true if the symbol is on an instruction","static":false,"name":"isInstructionSymbol","comment":"Checks if the symbol is at or inside an instruction","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the symbol is on an instruction","type_short":"boolean"}},{"javadoc":"Checks if the symbol is local\n@param s the symbol to check\n@return boolean true if the symbol is local, false if it is global","static":false,"name":"isLocalSymbol","comment":"Checks if the symbol is local","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the symbol is local, false if it is global","type_short":"boolean"}},{"javadoc":"Checks if the symbol is not a primary symbol\n@param s the symbol to check.\n@return boolean true if the symbol is non-primary","static":false,"name":"isNonPrimarySymbol","comment":"Checks if the symbol is not a primary symbol","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check.","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the symbol is non-primary","type_short":"boolean"}},{"javadoc":"Checks if the symbol is offcut\n@param s the symbol to check\n@return boolean true if the symbol is offcut","static":false,"name":"isOffcutSymbol","comment":"Checks if the symbol is offcut","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the symbol is offcut","type_short":"boolean"}},{"javadoc":"returns true if the symbol is primary\n@param s the symbol to check\n@return boolean true if the symbol is primary","static":false,"name":"isPrimarySymbol","comment":"returns true if the symbol is primary","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the symbol is primary","type_short":"boolean"}},{"javadoc":"Checks if the symbol is at the beginning of a subroutine.\n@param s the symbol to check\n@return boolean true if the symbol is at the beginning of a subroutine.","static":false,"name":"isSubroutineSymbol","comment":"Checks if the symbol is at the beginning of a subroutine.","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol to check","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the symbol is at the beginning of a subroutine.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isExternalSymbol","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"","type_short":"Symbol"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Gets the color and style used to render the given symbol.  Calling this method is \n faster than calling {@link #getColor(Symbol)} and {@link #getStyle(Symbol)} \n separately.\n@param s the symbol\n@return the color and style","static":false,"name":"getColorAndStyle","comment":"Gets the color and style used to render the given symbol.  Calling this method is \n faster than calling #getColor(Symbol) and #getStyle(Symbol) \n separately.","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"the symbol","type_short":"Symbol"}],"throws":[],"return":{"type_long":"ghidra.app.util.ColorAndStyle","comment":"the color and style","type_short":"ColorAndStyle"}},{"javadoc":"Get the color used to render the given symbol.\n@param s symbol to inspect\n@return Color for the symbol","static":false,"name":"getColor","comment":"Get the color used to render the given symbol.","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"symbol to inspect","type_short":"Symbol"}],"throws":[],"return":{"type_long":"java.awt.Color","comment":"Color for the symbol","type_short":"Color"}},{"javadoc":"Get the style used to render the given symbol\n@param s symbol to inspect\n@return the style for the symbol","static":false,"name":"getStyle","comment":"Get the style used to render the given symbol","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"symbol to inspect","type_short":"Symbol"}],"throws":[],"return":{"type_long":"int","comment":"the style for the symbol","type_short":"int"}},{"javadoc":"Get the ScreenElement corresponding to the type of the symbol\n@param s symbol to inspect\n@return the screen element","static":false,"name":"getScreenElement","comment":"Get the ScreenElement corresponding to the type of the symbol","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"symbol to inspect","type_short":"Symbol"}],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.options.ScreenElement","comment":"the screen element","type_short":"ScreenElement"}},{"javadoc":"","static":false,"name":"getOffcutSymbolColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getOffcutSymbolStyle","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getExternalScreenElement","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"","type_short":"Symbol"}],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.options.ScreenElement","comment":"","type_short":"ScreenElement"}},{"javadoc":"","static":false,"name":"getExternalName","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"","type_short":"Symbol"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"getOptions","comment":"","params":[{"type_long":"ghidra.framework.plugintool.ServiceProvider","name":"serviceProvider","comment":"","type_short":"ServiceProvider"}],"throws":[],"return":{"type_long":"ghidra.framework.options.ToolOptions","comment":"","type_short":"ToolOptions"}},{"javadoc":"","static":false,"name":"getColor","comment":"","params":[{"type_long":"ghidra.app.util.viewer.options.ScreenElement","name":"se","comment":"","type_short":"ScreenElement"}],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getStyle","comment":"","params":[{"type_long":"ghidra.app.util.viewer.options.ScreenElement","name":"se","comment":"","type_short":"ScreenElement"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"SymbolInspector","comment":"Class for coloring symbols.","fields":[{"type_long":"java.awt.Component","javadoc":"","static":false,"name":"repaintComp","comment":"","type_short":"Component","constant_value":null},{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program","comment":"","type_short":"Program","constant_value":null},{"type_long":"ghidra.framework.options.ToolOptions","javadoc":"","static":false,"name":"optionsObject","comment":"","type_short":"ToolOptions","constant_value":null},{"type_long":"ghidra.program.model.listing.Listing","javadoc":"","static":false,"name":"listing","comment":"","type_short":"Listing","constant_value":null},{"type_long":"ghidra.program.model.mem.Memory","javadoc":"","static":false,"name":"memory","comment":"","type_short":"Memory","constant_value":null},{"type_long":"java.util.Map<java.lang.String,java.lang.Object>","javadoc":"","static":false,"name":"cache","comment":"","type_short":"Map","constant_value":null}]}
