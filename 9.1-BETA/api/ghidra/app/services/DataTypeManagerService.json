{"implements":["ghidra.app.services.DataTypeQueryService"],"javadoc":"Service to provide list of cycle groups and data types identified as\n \"favorites.\" Favorites will show up on the popup menu for creating\n data and defining function return types and parameters.","static":false,"methods":[{"javadoc":"Get the data type manager that has all of the built in types.\n@return data type manager for built in data types","static":false,"name":"getBuiltInDataTypesManager","comment":"Get the data type manager that has all of the built in types.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeManager","comment":"data type manager for built in data types","type_short":"DataTypeManager"}},{"javadoc":"Get the data types marked as favorites that will show up on\n a popup menu.\n@return list of favorite datatypess","static":false,"name":"getFavorites","comment":"Get the data types marked as favorites that will show up on\n a popup menu.","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.data.DataType>","comment":"list of favorite datatypess","type_short":"List"}},{"javadoc":"Adds a listener to be notified when changes occur to any open datatype manager.\n@param listener the listener to be added.","static":false,"name":"addDataTypeManagerChangeListener","comment":"Adds a listener to be notified when changes occur to any open datatype manager.","params":[{"type_long":"ghidra.program.model.data.DataTypeManagerChangeListener","name":"listener","comment":"the listener to be added.","type_short":"DataTypeManagerChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the given listener from receiving dataTypeManger change notifications.\n@param listener the listener to be removed.","static":false,"name":"removeDataTypeManagerChangeListener","comment":"Removes the given listener from receiving dataTypeManger change notifications.","params":[{"type_long":"ghidra.program.model.data.DataTypeManagerChangeListener","name":"listener","comment":"the listener to be removed.","type_short":"DataTypeManagerChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the given data type as the most recently used to apply a\n data type to a Program.\n@param dt data type that was most recently used","static":false,"name":"setRecentlyUsed","comment":"Set the given data type as the most recently used to apply a\n data type to a Program.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"data type that was most recently used","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the data type that was most recently used to apply data to a\n Program.\n@return data type that was most recently used","static":false,"name":"getRecentlyUsed","comment":"Get the data type that was most recently used to apply data to a\n Program.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"data type that was most recently used","type_short":"DataType"}},{"javadoc":"Gets the location of the help for editing the specified data type.\n@param dataType the data type to be edited.\n@return the help location for editing the data type.","static":false,"name":"getEditorHelpLocation","comment":"Gets the location of the help for editing the specified data type.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"the data type to be edited.","type_short":"DataType"}],"throws":[],"return":{"type_long":"ghidra.util.HelpLocation","comment":"the help location for editing the data type.","type_short":"HelpLocation"}},{"javadoc":"Determine if the indicated data type can be edited \n (i.e. it has an editor that this service knows how to invoke).\n@param dt data type to be edited\n@return true if this service can invoke an editor for changing the data type.","static":false,"name":"isEditable","comment":"Determine if the indicated data type can be edited \n (i.e. it has an editor that this service knows how to invoke).","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"data type to be edited","type_short":"DataType"}],"throws":[],"return":{"type_long":"boolean","comment":"true if this service can invoke an editor for changing the data type.","type_short":"boolean"}},{"javadoc":"Pop up an editor dialog for the given data type.\n@param dt data type that either a Structure or a Union; built in types cannot be edited\n@throws IllegalArgumentException if the given has not been resolved by a DataTypeManager;\n         in other words, if {@link DataType#getDataTypeManager()} returns null.","static":false,"name":"edit","comment":"Pop up an editor dialog for the given data type.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"data type that either a Structure or a Union; built in types cannot be edited","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Closes the archive for the given {@link DataTypeManager}.  This will ignore request to \n close the open Program's manager and the built-in manager.\n@param dtm the data type manager of the archive to close","static":false,"name":"closeArchive","comment":"Closes the archive for the given DataTypeManager.  This will ignore request to \n close the open Program's manager and the built-in manager.","params":[{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"the data type manager of the archive to close","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Opens the specified data type archive contained within the Ghidra installation.\n NOTE: This is predicated upon all archive files having a unique name within the installation.\n Any path prefix specified may prevent the file from opening (or reopening) correctly.\n@param archiveName archive file name (i.e., \"generic_C_lib\")\n@return the data type archive or null if an archive with the specified name\n can not be found.\n@throws IOException if an i\/o error occurs opening the data type archive\n@throws DuplicateIdException if another archive with the same ID is already open","static":false,"name":"openDataTypeArchive","comment":"Opens the specified data type archive contained within the Ghidra installation.\n NOTE: This is predicated upon all archive files having a unique name within the installation.\n Any path prefix specified may prevent the file from opening (or reopening) correctly.","params":[{"type_long":"java.lang.String","name":"archiveName","comment":"archive file name (i.e., \"generic_C_lib\")","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if an i\/o error occurs opening the data type archive","type_short":"IOException"},{"type_long":"ghidra.app.plugin.core.datamgr.archive.DuplicateIdException","comment":"if another archive with the same ID is already open","type_short":"DuplicateIdException"}],"return":{"type_long":"ghidra.program.model.data.DataTypeManager","comment":"the data type archive or null if an archive with the specified name\n can not be found.","type_short":"DataTypeManager"}},{"javadoc":"A method to open an Archive for the given, pre-existing DataTypeArchive (like one that\n was opened during the import process.\n@param dataTypeArchive the archive from which to create an Archive\n@return an Archive based upon the given DataTypeArchive","static":false,"name":"openArchive","comment":"A method to open an Archive for the given, pre-existing DataTypeArchive (like one that\n was opened during the import process.","params":[{"type_long":"ghidra.program.model.listing.DataTypeArchive","name":"dataTypeArchive","comment":"the archive from which to create an Archive","type_short":"DataTypeArchive"}],"throws":[],"return":{"type_long":"ghidra.app.plugin.core.datamgr.archive.Archive","comment":"an Archive based upon the given DataTypeArchive","type_short":"Archive"}},{"javadoc":"A method to open an Archive for the given, pre-existing archive file (*.gdt)\n@param file data type archive file\n@param acquireWriteLock true if write lock should be acquired (i.e., open for update)\n@return an Archive based upon the given archive files\n@throws IOException if an i\/o error occurs opening the data type archive\n@throws DuplicateIdException if another archive with the same ID is already open","static":false,"name":"openArchive","comment":"A method to open an Archive for the given, pre-existing archive file (*.gdt)","params":[{"type_long":"java.io.File","name":"file","comment":"data type archive file","type_short":"File"},{"type_long":"boolean","name":"acquireWriteLock","comment":"true if write lock should be acquired (i.e., open for update)","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if an i\/o error occurs opening the data type archive","type_short":"IOException"},{"type_long":"ghidra.app.plugin.core.datamgr.archive.DuplicateIdException","comment":"if another archive with the same ID is already open","type_short":"DuplicateIdException"}],"return":{"type_long":"ghidra.app.plugin.core.datamgr.archive.Archive","comment":"an Archive based upon the given archive files","type_short":"Archive"}},{"javadoc":"Selects the given data type in the display of data types.  A null <tt>dataType<\/tt>\n value will clear the current selection.\n@param dataType The data type to select.","static":false,"name":"setDataTypeSelected","comment":"Selects the given data type in the display of data types.  A null dataType\n value will clear the current selection.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"The data type to select.","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Shows the user a dialog that allows them to choose a data type from a tree of all available\n data types.\n@param selectedPath An optional tree path to select in the tree\n@return A data type chosen by the user","static":false,"name":"getDataType","comment":"Shows the user a dialog that allows them to choose a data type from a tree of all available\n data types.","params":[{"type_long":"javax.swing.tree.TreePath","name":"selectedPath","comment":"An optional tree path to select in the tree","type_short":"TreePath"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"A data type chosen by the user","type_short":"DataType"}},{"javadoc":"Examines all enum dataTypes for items that match the given value. Returns a list of Strings\n that might make sense for the given value.\n@param value the value to search for.\n@return the list of enum item names that match the given value","static":false,"name":"getPossibleEquateNames","comment":"Examines all enum dataTypes for items that match the given value. Returns a list of Strings\n that might make sense for the given value.","params":[{"type_long":"long","name":"value","comment":"the value to search for.","type_short":"long"}],"throws":[],"return":{"type_long":"java.util.Set<java.lang.String>","comment":"the list of enum item names that match the given value","type_short":"Set"}}],"name":"DataTypeManagerService","comment":"Service to provide list of cycle groups and data types identified as\n \"favorites.\" Favorites will show up on the popup menu for creating\n data and defining function return types and parameters.","fields":[]}
