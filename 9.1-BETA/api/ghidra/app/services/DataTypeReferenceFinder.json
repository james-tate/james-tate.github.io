{"implements":["ghidra.util.classfinder.ExtensionPoint"],"javadoc":"An interface for extension points to implement.  Implementations know how to find data type\n references.\n <p>\n Implementation class names must end with DataTypeReferenceFinder","static":false,"methods":[{"javadoc":"Finds references in the current program in a manner appropriate with the given \n implementation.\n <p>\n Note that this operation is multi-threaded and that results will be delivered as they \n are found via the <tt>callback<\/tt>.\n@param program the program to search\n@param dataType the type for which to search\n@param callback the callback to be called when a reference is found\n@param monitor the monitor that allows for progress and cancellation\n@throws CancelledException if the operation was cancelled","static":false,"name":"findReferences","comment":"Finds references in the current program in a manner appropriate with the given \n implementation.\n \n Note that this operation is multi-threaded and that results will be delivered as they \n are found via the callback.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to search","type_short":"Program"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"the type for which to search","type_short":"DataType"},{"type_long":"java.util.function.Consumer<ghidra.app.services.DataTypeReference>","name":"callback","comment":"the callback to be called when a reference is found","type_short":"Consumer"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the monitor that allows for progress and cancellation","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the operation was cancelled","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Finds references in the current program to specific field of the given {@link Composite} type\n in a manner appropriate with the given implementation.\n <p>\n Note that this operation is multi-threaded and that results will be delivered as they \n are found via the <tt>callback<\/tt>.\n@param program the program to search\n@param composite the type containing the field for which to search\n@param fieldName the name of the composite's field for which to search\n@param callback the callback to be called when a reference is found\n@param monitor the monitor that allows for progress and cancellation\n@throws CancelledException if the operation was cancelled","static":false,"name":"findReferences","comment":"Finds references in the current program to specific field of the given Composite type\n in a manner appropriate with the given implementation.\n \n Note that this operation is multi-threaded and that results will be delivered as they \n are found via the callback.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to search","type_short":"Program"},{"type_long":"ghidra.program.model.data.Composite","name":"composite","comment":"the type containing the field for which to search","type_short":"Composite"},{"type_long":"java.lang.String","name":"fieldName","comment":"the name of the composite's field for which to search","type_short":"String"},{"type_long":"java.util.function.Consumer<ghidra.app.services.DataTypeReference>","name":"callback","comment":"the callback to be called when a reference is found","type_short":"Consumer"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the monitor that allows for progress and cancellation","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the operation was cancelled","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DataTypeReferenceFinder","comment":"An interface for extension points to implement.  Implementations know how to find data type\n references.\n \n Implementation class names must end with DataTypeReferenceFinder","fields":[]}
