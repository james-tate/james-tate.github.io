{"implements":["ghidra.util.classfinder.ExtensionPoint"],"javadoc":"NOTE:  ALL ANALYZER CLASSES MUST END IN \"Analyzer\".  If not,\n the ClassSearcher will not find them.\n \n Interface to perform automatic analysis.","static":false,"methods":[{"javadoc":"Get the name of this analyzer\n@return analyzer name","static":false,"name":"getName","comment":"Get the name of this analyzer","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"analyzer name","type_short":"String"}},{"javadoc":"Get the type of analysis this analyzer performs\n@return analyze type","static":false,"name":"getAnalysisType","comment":"Get the type of analysis this analyzer performs","params":[],"throws":[],"return":{"type_long":"ghidra.app.services.AnalyzerType","comment":"analyze type","type_short":"AnalyzerType"}},{"javadoc":"Returns true if this analyzer should be enabled by default.  Generally useful\n analyzers should return true. Specialized analyzers should return false;","static":false,"name":"getDefaultEnablement","comment":"Returns true if this analyzer should be enabled by default.  Generally useful\n analyzers should return true. Specialized analyzers should return false;","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns true if it makes sense for this analyzer to directly invoked on an address or\n addressSet.  The AutoAnalyzer plug-in will automatically create an action for each\n analyzer that returns true.","static":false,"name":"supportsOneTimeAnalysis","comment":"Returns true if it makes sense for this analyzer to directly invoked on an address or\n addressSet.  The AutoAnalyzer plug-in will automatically create an action for each\n analyzer that returns true.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get a longer description of what this analyzer does.\n@return analyzer description","static":false,"name":"getDescription","comment":"Get a longer description of what this analyzer does.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"analyzer description","type_short":"String"}},{"javadoc":"Get the priority that this analyzer should run at.\n@return analyzer priority","static":false,"name":"getPriority","comment":"Get the priority that this analyzer should run at.","params":[],"throws":[],"return":{"type_long":"ghidra.app.services.AnalysisPriority","comment":"analyzer priority","type_short":"AnalysisPriority"}},{"javadoc":"Can this analyzer work on this program.\n@param program program to be analyzed\n@return true if this analyzer can analyze this program","static":false,"name":"canAnalyze","comment":"Can this analyzer work on this program.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program to be analyzed","type_short":"Program"}],"throws":[],"return":{"type_long":"boolean","comment":"true if this analyzer can analyze this program","type_short":"boolean"}},{"javadoc":"Called when the requested information type has been added.\n (ie: function added.)\n@param program program to analyze\n@param set AddressSet of locations that have been added\n@param monitor monitor that indicates progress and indicates whether\n the user canceled the analysis\n@param log a message log to record analysis information\n@return true if the analysis succeeded","static":false,"name":"added","comment":"Called when the requested information type has been added.\n (ie: function added.)","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program to analyze","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"AddressSet of locations that have been added","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"monitor that indicates progress and indicates whether\n the user canceled the analysis","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"a message log to record analysis information","type_short":"MessageLog"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"true if the analysis succeeded","type_short":"boolean"}},{"javadoc":"Called when the requested information type has been removed.\n (ie: function removed.)\n@param program program to analyze\n@param set AddressSet of locations that have been added\n@param monitor monitor that indicates progress and indicates whether\n the user canceled the analysis\n@param log a message log to record analysis information\n@return true if the analysis succeeded","static":false,"name":"removed","comment":"Called when the requested information type has been removed.\n (ie: function removed.)","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program to analyze","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"AddressSet of locations that have been added","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"monitor that indicates progress and indicates whether\n the user canceled the analysis","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"a message log to record analysis information","type_short":"MessageLog"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"true if the analysis succeeded","type_short":"boolean"}},{"javadoc":"Analyzers should initialize their options from the values in the given Options, \n providing appropriate default values.\n@param options the property list that contains the options\n@param program program to be analyzed","static":false,"name":"optionsChanged","comment":"Analyzers should initialize their options from the values in the given Options, \n providing appropriate default values.","params":[{"type_long":"ghidra.framework.options.Options","name":"options","comment":"the property list that contains the options","type_short":"Options"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program to be analyzed","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Called when an auto-analysis session ends. This notifies the analyzer so it can clean up any \n resources that only needed to be maintained during a single auto-analysis session.\n@param program the program that was just completed being analyzed","static":false,"name":"analysisEnded","comment":"Called when an auto-analysis session ends. This notifies the analyzer so it can clean up any \n resources that only needed to be maintained during a single auto-analysis session.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program that was just completed being analyzed","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if this analyzer is a prototype.\n@return true if this analyzer is a prototype","static":false,"name":"isPrototype","comment":"Returns true if this analyzer is a prototype.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this analyzer is a prototype","type_short":"boolean"}},{"javadoc":"","static":false,"name":"registerOptions","comment":"","params":[{"type_long":"ghidra.framework.options.Options","name":"options","comment":"","type_short":"Options"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"Analyzer","comment":"NOTE:  ALL ANALYZER CLASSES MUST END IN \"Analyzer\".  If not,\n the ClassSearcher will not find them.\n \n Interface to perform automatic analysis.","fields":[]}
