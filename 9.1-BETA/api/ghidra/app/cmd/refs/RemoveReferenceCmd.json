{"implements":["ghidra.framework.cmd.Command"],"javadoc":"Command for removing memory references.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new command for removing a memory reference.\n@param ref the reference to remove","static":false,"name":"<init>","comment":"Constructs a new command for removing a memory reference.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"the reference to remove","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for removing a memory reference.\n@param fromAddr the address of the codeunit making the reference.\n@param toAddr the address being referred to.\n@param opIndex the operand index.","static":false,"name":"<init>","comment":"Constructs a new command for removing a memory reference.","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"the address of the codeunit making the reference.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"the address being referred to.","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"the operand index.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.framework.cmd.Command#applyTo(ghidra.framework.model.DomainObject)","static":false,"name":"applyTo","comment":"","params":[{"type_long":"ghidra.framework.model.DomainObject","name":"obj","comment":"","type_short":"DomainObject"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Fixup referenced local function variable after removing a reference to it.\n Method returns immediately if toAddr is not a stack or register address.\n <ol>\n <li>If a referenced DEFAULT variable has no remaining references it will be removed.<\/li>\n <li>The firstUseOffset associated with a referenced local variable will be updated\n to reflect the minimum reference offset within the function.<\/li>\n <\/ol>\n@param p program\n@param ref reference","static":true,"name":"fixupReferencedVariable","comment":"Fixup referenced local function variable after removing a reference to it.\n Method returns immediately if toAddr is not a stack or register address.\n \n If a referenced DEFAULT variable has no remaining references it will be removed.\n The firstUseOffset associated with a referenced local variable will be updated\n to reflect the minimum reference offset within the function.\n ","params":[{"type_long":"ghidra.program.model.listing.Program","name":"p","comment":"program","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.Reference","name":"deletedRef","comment":"","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.framework.cmd.Command#getStatusMsg()","static":false,"name":"getStatusMsg","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see ghidra.framework.cmd.Command#getName()","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"RemoveReferenceCmd","comment":"Command for removing memory references.","fields":[{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"fromAddr","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"toAddr","comment":"","type_short":"Address","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"opIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"status","comment":"","type_short":"String","constant_value":null}]}
