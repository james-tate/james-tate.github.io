{"implements":[],"javadoc":"Command that applies the \"module\" algorithm to a specified Module or\n Fragment. \n Gets an iterator over the code blocks containing the selected folder or fragment.\n Creates a folder for each code block in the iterator.\n For each code block, gets an iterator over code blocks containing the code block.\n For each of these code blocks, create a fragment and move the code units to the fragment.","static":false,"extends":"ghidra.framework.cmd.BackgroundCommand","methods":[{"javadoc":"Constructor\n@param path path the source module or fragment where the algorithm\n will be applied\n@param treeName name of the tree\n@param blockModelService service that has the known block models\n@param partitioningModelName name of the model to use","static":false,"name":"<init>","comment":"Constructor","params":[{"type_long":"ghidra.program.util.GroupPath","name":"path","comment":"path the source module or fragment where the algorithm\n will be applied","type_short":"GroupPath"},{"type_long":"java.lang.String","name":"treeName","comment":"name of the tree","type_short":"String"},{"type_long":"ghidra.app.services.BlockModelService","name":"blockModelService","comment":"service that has the known block models","type_short":"BlockModelService"},{"type_long":"java.lang.String","name":"partitioningModelName","comment":"name of the model to use","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.framework.cmd.BackgroundCommand#applyTo(ghidra.framework.model.DomainObject, ghidra.util.task.TaskMonitor)","static":false,"name":"applyTo","comment":"","params":[{"type_long":"ghidra.framework.model.DomainObject","name":"obj","comment":"","type_short":"DomainObject"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setPluginTool","comment":"","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@param monitor\n@throws NotFoundException\n@throws NotEmptyException\n@throws DuplicateNameException","static":false,"name":"applyModel","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.listing.ProgramModule","name":"root","comment":"","type_short":"ProgramModule"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"},{"type_long":"ghidra.util.exception.NotEmptyException","comment":"","type_short":"NotEmptyException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Create a fragment with the name as the name of the given block; \n append a one-up number if we get a DuplicateNameException.\n@param root parent module\n@param block code block\n@return Fragment new fragment","static":false,"name":"createFragment","comment":"Create a fragment with the name as the name of the given block; \n append a one-up number if we get a DuplicateNameException.","params":[{"type_long":"ghidra.program.model.listing.ProgramModule","name":"root","comment":"parent module","type_short":"ProgramModule"},{"type_long":"ghidra.program.model.block.CodeBlock","name":"block","comment":"code block","type_short":"CodeBlock"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.ProgramFragment","comment":"Fragment new fragment","type_short":"ProgramFragment"}},{"javadoc":"Create a fragment with the name as the name of the given block; \n append a one-up number if we get a DuplicateNameException.\n@param root parent module\n@param block code block\n@return Fragment new fragment","static":false,"name":"createModule","comment":"Create a fragment with the name as the name of the given block; \n append a one-up number if we get a DuplicateNameException.","params":[{"type_long":"ghidra.program.model.listing.ProgramModule","name":"root","comment":"parent module","type_short":"ProgramModule"},{"type_long":"ghidra.program.model.block.CodeBlock","name":"block","comment":"code block","type_short":"CodeBlock"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.ProgramModule","comment":"Fragment new fragment","type_short":"ProgramModule"}},{"javadoc":"Method moveCodeUnits.\n@param fragment\n@param block\n@param monitor\n@throws NotFoundException","static":false,"name":"moveCodeUnits","comment":"Method moveCodeUnits.","params":[{"type_long":"ghidra.program.model.listing.ProgramFragment","name":"fragment","comment":"","type_short":"ProgramFragment"},{"type_long":"ghidra.program.model.block.CodeBlock","name":"block","comment":"","type_short":"CodeBlock"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Method cleanTree.\n Removes all empty fragments and empty modules\n@param module the root branch to be cleaned.  Can be branch or entire tree.\n@throws NotEmptyException if attempting to remove a module or fragment that is not empty","static":false,"name":"cleanTree","comment":"Method cleanTree.\n Removes all empty fragments and empty modules","params":[{"type_long":"ghidra.program.model.listing.ProgramModule","name":"module","comment":"the root branch to be cleaned.  Can be branch or entire tree.","type_short":"ProgramModule"}],"throws":[{"type_long":"ghidra.util.exception.NotEmptyException","comment":"if attempting to remove a module or fragment that is not empty","type_short":"NotEmptyException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a Module with the name as the name specified; \n append a one-up number if we get a DuplicateNameException.\n@param module parent module\n@param newName new name\n@return Module new Module","static":false,"name":"createModule","comment":"Create a Module with the name as the name specified; \n append a one-up number if we get a DuplicateNameException.","params":[{"type_long":"ghidra.program.model.listing.ProgramModule","name":"module","comment":"parent module","type_short":"ProgramModule"},{"type_long":"java.lang.String","name":"newName","comment":"new name","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.ProgramModule","comment":"Module new Module","type_short":"ProgramModule"}}],"name":"ModuleAlgorithmCmd","comment":"Command that applies the \"module\" algorithm to a specified Module or\n Fragment. \n Gets an iterator over the code blocks containing the selected folder or fragment.\n Creates a folder for each code block in the iterator.\n For each code block, gets an iterator over code blocks containing the code block.\n For each of these code blocks, create a fragment and move the code units to the fragment.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"NEW_MODULE_SUFFIX","comment":"","type_short":"String","constant_value":"\" [Subroutine Tree]\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"PROGRAM_CHANGED_MESSAGE","comment":"","type_short":"String","constant_value":"\"Modularization did not run: Program Tree has changed since the algorithm was scheduled.\""},{"type_long":"ghidra.program.util.GroupPath","javadoc":"","static":false,"name":"groupPath","comment":"","type_short":"GroupPath","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"treeName","comment":"","type_short":"String","constant_value":null},{"type_long":"ghidra.app.services.BlockModelService","javadoc":"","static":false,"name":"blockModelService","comment":"","type_short":"BlockModelService","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"partitioningModelName","comment":"","type_short":"String","constant_value":null},{"type_long":"java.util.Set<ghidra.program.model.listing.ProgramModule>","javadoc":"","static":false,"name":"moduleSet","comment":"","type_short":"Set","constant_value":null},{"type_long":"ghidra.framework.plugintool.PluginTool","javadoc":"","static":false,"name":"tool","comment":"","type_short":"PluginTool","constant_value":null}]}
