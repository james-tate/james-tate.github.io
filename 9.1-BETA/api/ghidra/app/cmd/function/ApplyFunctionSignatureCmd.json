{"implements":[],"javadoc":"Command to create apply a function signature at an address.","static":false,"extends":"ghidra.framework.cmd.BackgroundCommand","methods":[{"javadoc":"Constructs a new command for creating a function.\n@param entry entry point address for the function to be created.\n@param signature function signature to apply\n@param source the source of this function signature","static":false,"name":"<init>","comment":"Constructs a new command for creating a function.","params":[{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"entry point address for the function to be created.","type_short":"Address"},{"type_long":"ghidra.program.model.listing.FunctionSignature","name":"signature","comment":"function signature to apply","type_short":"FunctionSignature"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"the source of this function signature","type_short":"SourceType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for creating a function.\n@param entry entry point address for the function to be created.\n@param signature function signature to apply\n@param source the source of this function signature\n@param preserveCallingConvention if true the function calling convention will not be changed\n@param setName true if name of the function should be set to the name\n of the signature","static":false,"name":"<init>","comment":"Constructs a new command for creating a function.","params":[{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"entry point address for the function to be created.","type_short":"Address"},{"type_long":"ghidra.program.model.listing.FunctionSignature","name":"signature","comment":"function signature to apply","type_short":"FunctionSignature"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"the source of this function signature","type_short":"SourceType"},{"type_long":"boolean","name":"preserveCallingConvention","comment":"if true the function calling convention will not be changed","type_short":"boolean"},{"type_long":"boolean","name":"setName","comment":"true if name of the function should be set to the name\n of the signature","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.framework.cmd.BackgroundCommand#applyTo(ghidra.framework.model.DomainObject, ghidra.util.task.TaskMonitor)","static":false,"name":"applyTo","comment":"","params":[{"type_long":"ghidra.framework.model.DomainObject","name":"obj","comment":"","type_short":"DomainObject"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Sets a function's signature in the program.\n@param program The program containing the function.\n@param func the function\n@param signature the signature to apply\n@param preserveCallingConvention if true, the functions calling convention will not be modified\n@param forceName force the name of the signature onto the function\n                  normally the name is only set on default function names (not user-defined).\n@param source the source of this function signature","static":false,"name":"setSignature","comment":"Sets a function's signature in the program.","params":[{"type_long":"ghidra.program.model.listing.Function","name":"func","comment":"the function","type_short":"Function"},{"type_long":"ghidra.program.model.listing.FunctionSignature","name":"signature","comment":"the signature to apply","type_short":"FunctionSignature"},{"type_long":"boolean","name":"preserveCallingConvention","comment":"if true, the functions calling convention will not be modified","type_short":"boolean"},{"type_long":"boolean","name":"forceName","comment":"force the name of the signature onto the function\n                  normally the name is only set on default function names (not user-defined).","type_short":"boolean"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"the source of this function signature","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"createParameters","comment":"","params":[{"type_long":"ghidra.program.model.lang.CompilerSpec","name":"compilerSpec","comment":"","type_short":"CompilerSpec"},{"type_long":"java.lang.String","name":"conventionName","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.data.ParameterDefinition[]","name":"args","comment":"","type_short":"ghidra.program.model.data.ParameterDefinition[]"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"java.util.List<ghidra.program.model.listing.Parameter>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"adjustParameterNamesToAvoidConflicts","comment":"","params":[{"type_long":"ghidra.program.model.symbol.SymbolTable","name":"symbolTable","comment":"","type_short":"SymbolTable"},{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"","type_short":"Function"},{"type_long":"java.util.List<ghidra.program.model.listing.Parameter>","name":"params","comment":"","type_short":"List"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getIndexOfFirstParameter","comment":"","params":[{"type_long":"java.lang.String","name":"conventionName","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.data.ParameterDefinition[]","name":"args","comment":"","type_short":"ghidra.program.model.data.ParameterDefinition[]"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getCallingConvention","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"","type_short":"Function"},{"type_long":"ghidra.program.model.lang.CompilerSpec","name":"compilerSpec","comment":"","type_short":"CompilerSpec"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"updateStackPurgeSize","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"","type_short":"Function"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"setName","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"","type_short":"Function"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"},{"type_long":"boolean","name":"forceName","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"The C language assumes array datatypes are passed simply as pointers (by reference) even though\n other datatypes are passed by value.  This routine converts the datatype to the appropriate pointer\n in situations where we need to get at the exact type being passed by \"value\"\n@param dt\n@return ","static":true,"name":"settleCDataType","comment":"The C language assumes array datatypes are passed simply as pointers (by reference) even though\n other datatypes are passed by value.  This routine converts the datatype to the appropriate pointer\n in situations where we need to get at the exact type being passed by \"value\"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":true,"name":"getUniqueParameterName","comment":"","params":[{"type_long":"ghidra.program.model.symbol.SymbolTable","name":"symbolTable","comment":"","type_short":"SymbolTable"},{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"","type_short":"Function"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"removeCodeSymbol","comment":"","params":[{"type_long":"ghidra.program.model.symbol.SymbolTable","name":"symbolTable","comment":"","type_short":"SymbolTable"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"namespace","comment":"","type_short":"Namespace"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getUniqueName","comment":"","params":[{"type_long":"ghidra.program.model.symbol.SymbolTable","name":"symbolTable","comment":"","type_short":"SymbolTable"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"namespace","comment":"","type_short":"Namespace"},{"type_long":"java.lang.String","name":"baseName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"ApplyFunctionSignatureCmd","comment":"Command to create apply a function signature at an address.","fields":[{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"entryPt","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.symbol.SourceType","javadoc":"","static":false,"name":"source","comment":"","type_short":"SourceType","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"setName","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"preserveCallingConvention","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.program.model.listing.FunctionSignature","javadoc":"","static":false,"name":"signature","comment":"","type_short":"FunctionSignature","constant_value":null},{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program","comment":"","type_short":"Program","constant_value":null}]}
