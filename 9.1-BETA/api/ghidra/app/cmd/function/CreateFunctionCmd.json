{"implements":[],"javadoc":"Command for Creating a function at an address.  It will copy off the\n parameters used to create the function (Selection or just an address) and\n create the function on redo and clear on undo.","static":false,"extends":"ghidra.framework.cmd.BackgroundCommand","methods":[{"javadoc":"Constructs a new command for creating a function.  The default name\n for a function is the name associated with the current primary symbol which\n will be removed.\n@param name function name or null for default name.\n@param entries the entry points at which to create functions.\n@param body set of addresses to associated with the function to be created.\n The addresses must not already be included in the body of any existing function.\n@param source the source of this function\n@param findEntryPoint true if the entry point should be computed (entry could be in the middle of a function)\n@param recreateFunction true if the function body should be recreated even if the function exists.","static":false,"name":"<init>","comment":"Constructs a new command for creating a function.  The default name\n for a function is the name associated with the current primary symbol which\n will be removed.","params":[{"type_long":"java.lang.String","name":"name","comment":"function name or null for default name.","type_short":"String"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"entries","comment":"the entry points at which to create functions.","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"set of addresses to associated with the function to be created.\n The addresses must not already be included in the body of any existing function.","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"the source of this function","type_short":"SourceType"},{"type_long":"boolean","name":"findEntryPoint","comment":"true if the entry point should be computed (entry could be in the middle of a function)","type_short":"boolean"},{"type_long":"boolean","name":"recreateFunction","comment":"true if the function body should be recreated even if the function exists.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for creating a function.  The default name\n for a function is the name associated with the current primary symbol which\n will be removed.\n@param name function name or null for default name.\n@param entry entry point address for the function to be created.\n@param body set of addresses to associated with the function to be created.\n The addresses must not already be included in the body of any existing function.\n@param source the source of this function\n@param findEntryPoint true if the entry point should be computed (entry could be in the middle of a function)\n@param recreateFunction true if the function body should be recreated even if the function exists.","static":false,"name":"<init>","comment":"Constructs a new command for creating a function.  The default name\n for a function is the name associated with the current primary symbol which\n will be removed.","params":[{"type_long":"java.lang.String","name":"name","comment":"function name or null for default name.","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"entry point address for the function to be created.","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"set of addresses to associated with the function to be created.\n The addresses must not already be included in the body of any existing function.","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"the source of this function","type_short":"SourceType"},{"type_long":"boolean","name":"findEntryPoint","comment":"true if the entry point should be computed (entry could be in the middle of a function)","type_short":"boolean"},{"type_long":"boolean","name":"recreateFunction","comment":"true if the function body should be recreated even if the function exists.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for creating functions that automatically computes\n the body of each function.\n@param entries the entry points at which to create functions.","static":false,"name":"<init>","comment":"Constructs a new command for creating functions that automatically computes\n the body of each function.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"entries","comment":"the entry points at which to create functions.","type_short":"AddressSetView"},{"type_long":"boolean","name":"findEntryPoint","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for creating functions that automatically computes\n the body of each function.\n@param entries the entry points at which to create functions.","static":false,"name":"<init>","comment":"Constructs a new command for creating functions that automatically computes\n the body of each function.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"entries","comment":"the entry points at which to create functions.","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for creating functions that automatically computes\n the body of each function.\n@param entries the entry points at which to create functions.","static":false,"name":"<init>","comment":"Constructs a new command for creating functions that automatically computes\n the body of each function.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"entries","comment":"the entry points at which to create functions.","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for creating a function that automatically computes\n the body of the function.\n@param entry the entry point at which to create a function.\n@param referringThunkAddresses provides a list of referring Thunk functions which lead to\n the creation of the function at entry.","static":false,"name":"<init>","comment":"Constructs a new command for creating a function that automatically computes\n the body of the function.","params":[{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"the entry point at which to create a function.","type_short":"Address"},{"type_long":"java.util.List<ghidra.program.model.address.Address>","name":"referringThunkAddresses","comment":"provides a list of referring Thunk functions which lead to\n the creation of the function at entry.","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for creating a function that automatically computes\n the body of the function.\n@param entry the entry point at which to create a function.","static":false,"name":"<init>","comment":"Constructs a new command for creating a function that automatically computes\n the body of the function.","params":[{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"the entry point at which to create a function.","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"boolean","name":"findEntryPoint","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.framework.cmd.BackgroundCommand#applyTo(ghidra.framework.model.DomainObject, ghidra.util.task.TaskMonitor)","static":false,"name":"applyTo","comment":"","params":[{"type_long":"ghidra.framework.model.DomainObject","name":"obj","comment":"","type_short":"DomainObject"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns function if create command was successful","static":false,"name":"getFunction","comment":"Returns function if create command was successful","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"Creates a function in the program.\n@param entry The address of the entry point for the new function\n@param body The address set containing all the addresses to be included in\n            the body of the new function.\n@param nameSource the source of this function's name\n@throws OverlappingFunctionException\n@throws InvalidInputException\n@throws DuplicateNameException","static":false,"name":"createFunction","comment":"Creates a function in the program.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"java.lang.String","name":"funcName","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.block.CodeBlockModel","name":"functionModel","comment":"","type_short":"CodeBlockModel"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"nameSpace","comment":"","type_short":"Namespace"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"The address of the entry point for the new function","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"The address set containing all the addresses to be included in\n            the body of the new function.","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"nameSource","comment":"the source of this function's name","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"},{"type_long":"ghidra.program.database.function.OverlappingFunctionException","comment":"","type_short":"OverlappingFunctionException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"create the function, undoing any changes to other functions bodies if the function creation fails\n@param nameSpace - functions namespace\n@param funcName - functions name\n@param entry - entry point of function\n@param body - body of function\n@param nameSource - source of the name\n@param bodyChangeMap - change map to restore other affected functions bodies if this fails\n@param monitor\n@return \n@throws OverlappingFunctionException\n@throws DuplicateNameException\n@throws InvalidInputException","static":false,"name":"createFunction","comment":"create the function, undoing any changes to other functions bodies if the function creation fails","params":[{"type_long":"ghidra.program.model.symbol.Namespace","name":"nameSpace","comment":"- functions namespace","type_short":"Namespace"},{"type_long":"java.lang.String","name":"funcName","comment":"- functions name","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"- entry point of function","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"- body of function","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"nameSource","comment":"- source of the name","type_short":"SourceType"},{"type_long":"java.util.Map<ghidra.program.model.listing.Function,ghidra.program.model.address.AddressSetView>","name":"bodyChangeMap","comment":"- change map to restore other affected functions bodies if this fails","type_short":"Map"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.program.database.function.OverlappingFunctionException","comment":"","type_short":"OverlappingFunctionException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"subtract this functions entire body from existing functions\n@param entry - entry point of new function\n@param body - new functions body\n@param bodyChangeMap - map of functions that have their bodies changed by creating this function\n@param monitor\n@return \n@throws CancelledException\n@throws OverlappingFunctionException","static":false,"name":"subtractBodyFromExisting","comment":"subtract this functions entire body from existing functions","params":[{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"- entry point of new function","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"- new functions body","type_short":"AddressSetView"},{"type_long":"java.util.Map<ghidra.program.model.listing.Function,ghidra.program.model.address.AddressSetView>","name":"bodyChangeMap","comment":"- map of functions that have their bodies changed by creating this function","type_short":"Map"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.program.database.function.OverlappingFunctionException","comment":"","type_short":"OverlappingFunctionException"}],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"","type_short":"AddressSetView"}},{"javadoc":"Remove any existing functions bodies from the new functions body at entry.\n@param entry\n@param body\n@param monitor\n@return the new body, or null if body could not be created and need to abort function creation.\n@throws CancelledException","static":false,"name":"removeExistingFunctionsFromBody","comment":"Remove any existing functions bodies from the new functions body at entry.","params":[{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"the new body, or null if body could not be created and need to abort function creation.","type_short":"AddressSetView"}},{"javadoc":"","static":false,"name":"handleExistingFunction","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Function","name":"existingFunction","comment":"","type_short":"Function"}],"throws":[{"type_long":"ghidra.program.database.function.OverlappingFunctionException","comment":"","type_short":"OverlappingFunctionException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"resolve thunks by checking for a thunk and creating the thunk if it is one\n@param entry function entry point to check for thunk\n@param body new function body\n@param monitor\n@return true if the entry resolved to a thunk\n@throws OverlappingFunctionException","static":false,"name":"resolveThunk","comment":"resolve thunks by checking for a thunk and creating the thunk if it is one","params":[{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"function entry point to check for thunk","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"new function body","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.program.database.function.OverlappingFunctionException","comment":"","type_short":"OverlappingFunctionException"}],"return":{"type_long":"boolean","comment":"true if the entry resolved to a thunk","type_short":"boolean"}},{"javadoc":"using the body map revert any changes made to function bodies\n@param bodyChangeMap","static":false,"name":"restoreOriginalBodies","comment":"using the body map revert any changes made to function bodies","params":[{"type_long":"java.util.Map<ghidra.program.model.listing.Function,ghidra.program.model.address.AddressSetView>","name":"bodyChangeMap","comment":"","type_short":"Map"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Follow flow back from the address trying to find an existing function this fragment belongs to\n@param bodyAddr address that should be in the body of a function\n@return ","static":false,"name":"findFunctionEntry","comment":"Follow flow back from the address trying to find an existing function this fragment belongs to","params":[{"type_long":"ghidra.program.model.address.Address","name":"bodyAddr","comment":"address that should be in the body of a function","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Find the function body by following all flows other than a call from the\n entry point.\n@param program the program where the function is being created.\n@param entry entry point to start tracing flow\n@return AddressSetView address set representing the body of the function","static":true,"name":"getFunctionBody","comment":"Find the function body by following all flows other than a call from the\n entry point.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program where the function is being created.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"entry point to start tracing flow","type_short":"Address"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"AddressSetView address set representing the body of the function","type_short":"AddressSetView"}},{"javadoc":"Find the function body by following all flows other than a call from the\n entry point.\n@param program the program where the function is being created.\n@param entry entry point to start tracing flow\n@return AddressSetView address set representing the body of the function","static":true,"name":"getFunctionBody","comment":"Find the function body by following all flows other than a call from the\n entry point.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program where the function is being created.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"entry point to start tracing flow","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"AddressSetView address set representing the body of the function","type_short":"AddressSetView"}},{"javadoc":"","static":true,"name":"getFunctionBody","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"","type_short":"AddressSetView"}},{"javadoc":"","static":true,"name":"getFunctionBody","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"boolean","name":"includeOtherFunctions","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"","type_short":"AddressSetView"}},{"javadoc":"Recompute function body.  An open transaction must already exist.\n@param program the program the function is in.\n@param start_inst instruction that is within the function to be fixed up.\n@param monitor task monitor\n@return true if successful, false if cancelled or unable to fixup function or\n no function found containing the start address of the indicated instruction","static":true,"name":"fixupFunctionBody","comment":"Recompute function body.  An open transaction must already exist.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program the function is in.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Instruction","name":"start_inst","comment":"instruction that is within the function to be fixed up.","type_short":"Instruction"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"true if successful, false if cancelled or unable to fixup function or\n no function found containing the start address of the indicated instruction","type_short":"boolean"}},{"javadoc":"Recompute function body.  An open transaction must already exist.\n@param program the program the function is in.\n@param function the function to be fixed up.  A null function will return false.\n@param monitor task monitor\n@return true if successful, false if cancelled or unable to fixup function or\n no function found containing the start address of the indicated instruction","static":true,"name":"fixupFunctionBody","comment":"Recompute function body.  An open transaction must already exist.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program the function is in.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Function","name":"func","comment":"","type_short":"Function"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"true if successful, false if cancelled or unable to fixup function or\n no function found containing the start address of the indicated instruction","type_short":"boolean"}},{"javadoc":"Check and create a thunk function at entry.\n Called due to a function body change, or a reference having been created\n so there is no body\n@param program function is in\n@param entry entry point of the function\n@param monitor to allow canceling\n@return true if a thunk was created.","static":true,"name":"resolveThunk","comment":"Check and create a thunk function at entry.\n Called due to a function body change, or a reference having been created\n so there is no body","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"function is in","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"entry point of the function","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"to allow canceling","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"true if a thunk was created.","type_short":"boolean"}}],"name":"CreateFunctionCmd","comment":"Command for Creating a function at an address.  It will copy off the\n parameters used to create the function (Selection or just an address) and\n create the function on redo and clear on undo.","fields":[{"type_long":"ghidra.program.model.address.AddressSetView","javadoc":"","static":false,"name":"origEntries","comment":"","type_short":"AddressSetView","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSetView","javadoc":"","static":false,"name":"origBody","comment":"","type_short":"AddressSetView","constant_value":null},{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program","comment":"","type_short":"Program","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"name","comment":"","type_short":"String","constant_value":null},{"type_long":"ghidra.program.model.listing.Function","javadoc":"","static":false,"name":"newFunc","comment":"","type_short":"Function","constant_value":null},{"type_long":"ghidra.program.model.symbol.SourceType","javadoc":"","static":false,"name":"source","comment":"","type_short":"SourceType","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"findEntryPoint","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"recreateFunction","comment":"","type_short":"boolean","constant_value":null},{"type_long":"java.util.List<ghidra.program.model.address.Address>","javadoc":"","static":false,"name":"referringThunkAddresses","comment":"","type_short":"List","constant_value":null}]}
