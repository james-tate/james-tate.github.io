{"implements":[],"javadoc":"Coordinates the interactions between the DecompilerProvider, DecompilerPanel, and the DecompilerManager","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.decompiler.component.DecompilerCallbackHandler","name":"handler","comment":"","type_short":"DecompilerCallbackHandler"},{"type_long":"ghidra.app.decompiler.DecompileOptions","name":"options","comment":"","type_short":"DecompileOptions"},{"type_long":"ghidra.app.plugin.core.decompile.DecompilerClipboardProvider","name":"clipboard","comment":"","type_short":"DecompilerClipboardProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDecompilerPanel","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.decompiler.component.DecompilerPanel","comment":"","type_short":"DecompilerPanel"}},{"javadoc":"Called by the provider when the provider is disposed.  Once dispose is called, it should\n never be used again.","static":false,"name":"dispose","comment":"Called by the provider when the provider is disposed.  Once dispose is called, it should\n never be used again.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"clears all internal state and releases all resources.  Called when the provider is no\n longer visible or the currently displayed program is closed.","static":false,"name":"clear","comment":"clears all internal state and releases all resources.  Called when the provider is no\n longer visible or the currently displayed program is closed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Shows the function containing the given location in the decompilerPanel.  Also, positions the\n decompilerPanel's cursor to the closest equivalent position. If the decompilerPanel is\n already displaying the function, then only the cursor is repositioned.  To force a\n re-decompile use {@link #refreshDisplay(Program, ProgramLocation)}.\n@param program the program for the given location\n@param location the location containing the function to be displayed and the location in\n that function to position the cursor.","static":false,"name":"display","comment":"Shows the function containing the given location in the decompilerPanel.  Also, positions the\n decompilerPanel's cursor to the closest equivalent position. If the decompilerPanel is\n already displaying the function, then only the cursor is repositioned.  To force a\n re-decompile use #refreshDisplay(Program, ProgramLocation).","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program for the given location","type_short":"Program"},{"type_long":"ghidra.program.util.ProgramLocation","name":"location","comment":"the location containing the function to be displayed and the location in\n that function to position the cursor.","type_short":"ProgramLocation"},{"type_long":"docking.widgets.fieldpanel.support.ViewerPosition","name":"viewerPosition","comment":"","type_short":"ViewerPosition"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"loadFromCache","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.util.ProgramLocation","name":"location","comment":"","type_short":"ProgramLocation"},{"type_long":"docking.widgets.fieldpanel.support.ViewerPosition","name":"viewerPosition","comment":"","type_short":"ViewerPosition"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setSelection","comment":"","params":[{"type_long":"ghidra.program.util.ProgramSelection","name":"selection","comment":"","type_short":"ProgramSelection"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets new decompiler options and triggers a new decompile.\n@param decompilerOptions","static":false,"name":"setOptions","comment":"Sets new decompiler options and triggers a new decompile.","params":[{"type_long":"ghidra.app.decompiler.DecompileOptions","name":"decompilerOptions","comment":"","type_short":"DecompileOptions"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isDecompiling","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setMouseNavigationEnabled","comment":"","params":[{"type_long":"boolean","name":"enabled","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Resets the native decompiler process.  Call this method when the decompiler's view\n of a program has been invalidated, such as when a new overlay space has been added.","static":false,"name":"resetDecompiler","comment":"Resets the native decompiler process.  Call this method when the decompiler's view\n of a program has been invalidated, such as when a new overlay space has been added.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Called by the DecompilerManager to update the currently displayed DecompileData.","static":false,"name":"setDecompileData","comment":"Called by the DecompilerManager to update the currently displayed DecompileData.","params":[{"type_long":"ghidra.app.decompiler.component.DecompileData","name":"decompileData","comment":"","type_short":"DecompileData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateCache","comment":"","params":[{"type_long":"ghidra.app.decompiler.component.DecompileData","name":"decompileData","comment":"","type_short":"DecompileData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"decompilerStatusChanged","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Always decompiles the function containing the given location before positioning the\n decompilerPanel's cursor to the closest equivalent position.\n@param program the program for the given location\n@param location the location containing the function to be displayed and the location in\n that function to position the cursor.","static":false,"name":"refreshDisplay","comment":"Always decompiles the function containing the given location before positioning the\n decompilerPanel's cursor to the closest equivalent position.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program for the given location","type_short":"Program"},{"type_long":"ghidra.program.util.ProgramLocation","name":"location","comment":"the location containing the function to be displayed and the location in\n that function to position the cursor.","type_short":"ProgramLocation"},{"type_long":"java.io.File","name":"debugFile","comment":"","type_short":"File"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getCCodeModel","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.decompiler.ClangTokenGroup","comment":"","type_short":"ClangTokenGroup"}},{"javadoc":"","static":false,"name":"setStatusMessage","comment":"","params":[{"type_long":"java.lang.String","name":"message","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getProgram","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"","static":false,"name":"getFunction","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"","static":false,"name":"getHighFunction","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.HighFunction","comment":"","type_short":"HighFunction"}},{"javadoc":"","static":false,"name":"getLocation","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.util.ProgramLocation","comment":"","type_short":"ProgramLocation"}},{"javadoc":"","static":false,"name":"locationChanged","comment":"","params":[{"type_long":"ghidra.program.util.ProgramLocation","name":"programLocation","comment":"","type_short":"ProgramLocation"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"selectionChanged","comment":"","params":[{"type_long":"ghidra.program.util.ProgramSelection","name":"programSelection","comment":"","type_short":"ProgramSelection"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"annotationClicked","comment":"","params":[{"type_long":"ghidra.util.bean.field.AnnotatedTextFieldElement","name":"annotation","comment":"","type_short":"AnnotatedTextFieldElement"},{"type_long":"java.awt.event.MouseEvent","name":"event","comment":"","type_short":"MouseEvent"},{"type_long":"boolean","name":"newWindow","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"goToFunction","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"","type_short":"Function"},{"type_long":"boolean","name":"newWindow","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"goToLabel","comment":"","params":[{"type_long":"java.lang.String","name":"labelName","comment":"","type_short":"String"},{"type_long":"boolean","name":"newWindow","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"goToAddress","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"boolean","name":"newWindow","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"goToScalar","comment":"","params":[{"type_long":"long","name":"value","comment":"","type_short":"long"},{"type_long":"boolean","name":"newWindow","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDecompileData","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.decompiler.component.DecompileData","comment":"","type_short":"DecompileData"}},{"javadoc":"","static":false,"name":"exportLocation","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"buildCache","comment":"","params":[],"throws":[],"return":{"type_long":"com.google.common.cache.Cache<ghidra.program.model.listing.Function,ghidra.app.decompiler.DecompileResults>","comment":"","type_short":"Cache"}},{"javadoc":"","static":false,"name":"clearCache","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"programClosed","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"closedProgram","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DecompilerController","comment":"Coordinates the interactions between the DecompilerProvider, DecompilerPanel, and the DecompilerManager","fields":[{"type_long":"ghidra.app.decompiler.component.DecompilerPanel","javadoc":"","static":false,"name":"decompilerPanel","comment":"","type_short":"DecompilerPanel","constant_value":null},{"type_long":"ghidra.app.decompiler.component.DecompilerManager","javadoc":"","static":false,"name":"decompilerMgr","comment":"","type_short":"DecompilerManager","constant_value":null},{"type_long":"ghidra.app.decompiler.component.DecompilerCallbackHandler","javadoc":"","static":false,"name":"callbackHandler","comment":"","type_short":"DecompilerCallbackHandler","constant_value":null},{"type_long":"ghidra.app.decompiler.component.DecompileData","javadoc":"","static":false,"name":"currentDecompileData","comment":"","type_short":"DecompileData","constant_value":null},{"type_long":"ghidra.program.util.ProgramSelection","javadoc":"","static":false,"name":"currentSelection","comment":"","type_short":"ProgramSelection","constant_value":null},{"type_long":"com.google.common.cache.Cache<ghidra.program.model.listing.Function,ghidra.app.decompiler.DecompileResults>","javadoc":"","static":false,"name":"decompilerCache","comment":"","type_short":"Cache","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"cacheSize","comment":"","type_short":"int","constant_value":null}]}
