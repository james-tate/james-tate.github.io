{"implements":[],"javadoc":"A group of C code tokens forming a variable declaration.\n This can be for a one line declaration (as for local variables) or\n as part of a function prototype declaring a parameter","static":false,"extends":"ghidra.app.decompiler.ClangTokenGroup","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.decompiler.ClangNode","name":"par","comment":"","type_short":"ClangNode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDataType","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"getHighVariable","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.HighVariable","comment":"","type_short":"HighVariable"}},{"javadoc":"","static":false,"name":"restoreFromXML","comment":"","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"ghidra.program.model.pcode.PcodeFactory","name":"pfactory","comment":"","type_short":"PcodeFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ClangVariableDecl","comment":"A group of C code tokens forming a variable declaration.\n This can be for a one line declaration (as for local variables) or\n as part of a function prototype declaring a parameter","fields":[{"type_long":"ghidra.program.model.data.DataType","javadoc":"","static":false,"name":"datatype","comment":"","type_short":"DataType","constant_value":null},{"type_long":"ghidra.program.model.pcode.HighVariable","javadoc":"","static":false,"name":"typevar","comment":"","type_short":"HighVariable","constant_value":null}]}
