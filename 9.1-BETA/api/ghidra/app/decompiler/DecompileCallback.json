{"implements":[],"javadoc":"Routines that the decompiler invokes to gather info during decompilation of a\n function.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"prog","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.lang.Language","name":"language","comment":"","type_short":"Language"},{"type_long":"ghidra.program.model.lang.CompilerSpec","name":"compilerSpec","comment":"","type_short":"CompilerSpec"},{"type_long":"ghidra.program.model.pcode.PcodeDataTypeManager","name":"dt","comment":"","type_short":"PcodeDataTypeManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getSAXParser","comment":"","params":[],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"","type_short":"PcodeXMLException"}],"return":{"type_long":"javax.xml.parsers.SAXParser","comment":"","type_short":"SAXParser"}},{"javadoc":"Establish function and debug context for next decompilation\n@param func is the function to be decompiled\n@param entry is the function's entry address\n@param dbg is the debugging context (or null)","static":false,"name":"setFunction","comment":"Establish function and debug context for next decompilation","params":[{"type_long":"ghidra.program.model.listing.Function","name":"func","comment":"is the function to be decompiled","type_short":"Function"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"is the function's entry address","type_short":"Address"},{"type_long":"ghidra.app.decompiler.DecompileDebug","name":"dbg","comment":"is the debugging context (or null)","type_short":"DecompileDebug"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return the last message from the decompiler","static":false,"name":"getNativeMessage","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the last message from the decompiler","type_short":"String"}},{"javadoc":"Cache a message returned by the decompiler process\n@param msg is the message","static":false,"name":"setNativeMessage","comment":"Cache a message returned by the decompiler process","params":[{"type_long":"java.lang.String","name":"msg","comment":"is the message","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setShowNamespace","comment":"","params":[{"type_long":"boolean","name":"showNamespace","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"readXMLSize","comment":"","params":[{"type_long":"java.lang.String","name":"addrxml","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"readXMLNameList","comment":"","params":[{"type_long":"java.lang.String","name":"xml","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"","type_short":"PcodeXMLException"}],"return":{"type_long":"java.util.ArrayList<java.lang.String>","comment":"","type_short":"ArrayList"}},{"javadoc":"","static":false,"name":"getBytes","comment":"","params":[{"type_long":"java.lang.String","name":"addrxml","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}},{"javadoc":"Collect any\/all comments for the function starting at the indicated\n address\n@param addrstring is the XML rep of function address\n@param types is the string encoding of the comment type flags\n@return XML document describing comments","static":false,"name":"getComments","comment":"Collect any\/all comments for the function starting at the indicated\n address","params":[{"type_long":"java.lang.String","name":"addrstring","comment":"is the XML rep of function address","type_short":"String"},{"type_long":"java.lang.String","name":"types","comment":"is the string encoding of the comment type flags","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"XML document describing comments","type_short":"String"}},{"javadoc":"","static":false,"name":"getPcodePacked","comment":"","params":[{"type_long":"java.lang.String","name":"addrstring","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.PackedBytes","comment":"","type_short":"PackedBytes"}},{"javadoc":"Build an XML representation of all the pcode op's a given Instruction is\n defined to perform.\n@param ops pcode ops\n@param fallthruoffset number of bytes after instruction start that pcode\n            flow falls into\n@param paramshift special instructions for injection use\n@param addrFactory is the address factory for recovering address space names\n@return XML document as string representing all the p-code","static":true,"name":"buildInstruction","comment":"Build an XML representation of all the pcode op's a given Instruction is\n defined to perform.","params":[{"type_long":"ghidra.program.model.pcode.PcodeOp[]","name":"ops","comment":"pcode ops","type_short":"ghidra.program.model.pcode.PcodeOp[]"},{"type_long":"int","name":"fallthruoffset","comment":"number of bytes after instruction start that pcode\n            flow falls into","type_short":"int"},{"type_long":"int","name":"paramshift","comment":"special instructions for injection use","type_short":"int"},{"type_long":"ghidra.program.model.address.AddressFactory","name":"addrFactory","comment":"is the address factory for recovering address space names","type_short":"AddressFactory"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"XML document as string representing all the p-code","type_short":"String"}},{"javadoc":"","static":false,"name":"getPcodeInject","comment":"","params":[{"type_long":"java.lang.String","name":"nm","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"context","comment":"","type_short":"String"},{"type_long":"int","name":"type","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getCPoolRef","comment":"","params":[{"type_long":"long[]","name":"refs","comment":"","type_short":"long[]"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getInstruction","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[{"type_long":"ghidra.program.model.lang.UnknownInstructionException","comment":"","type_short":"UnknownInstructionException"}],"return":{"type_long":"ghidra.program.model.listing.Instruction","comment":"","type_short":"Instruction"}},{"javadoc":"","static":false,"name":"pseudoDisassemble","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[{"type_long":"ghidra.program.model.lang.UnknownInstructionException","comment":"","type_short":"UnknownInstructionException"}],"return":{"type_long":"ghidra.program.model.listing.Instruction","comment":"","type_short":"Instruction"}},{"javadoc":"","static":false,"name":"getSymbol","comment":"","params":[{"type_long":"java.lang.String","name":"addrstring","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getSymbolName","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"sym","comment":"","type_short":"Symbol"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getNamespacePrefix","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Namespace","name":"ns","comment":"","type_short":"Namespace"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"generateHeaderCommentXML","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"func","comment":"","type_short":"Function"},{"type_long":"java.lang.StringBuilder","name":"buf","comment":"","type_short":"StringBuilder"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Generate XML for comments of a certain type\n@param addrset = addresses over which to search for comments\n@param buf = StringBuilder where XML should be written\n@param commenttype = type of comment","static":false,"name":"generateCommentXML","comment":"Generate XML for comments of a certain type","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrset","comment":"= addresses over which to search for comments","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"java.lang.StringBuilder","name":"buf","comment":"= StringBuilder where XML should be written","type_short":"StringBuilder"},{"type_long":"int","name":"commenttype","comment":"= type of comment","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Called by the native decompiler to query the GHIDRA database about any\n symbols at the given address.\n@param addrstring XML encoded address to query\n@return XML encoded result. Either function, reference, datatype, or hole","static":false,"name":"getMappedSymbolsXML","comment":"Called by the native decompiler to query the GHIDRA database about any\n symbols at the given address.","params":[{"type_long":"java.lang.String","name":"addrstring","comment":"XML encoded address to query","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"XML encoded result. Either function, reference, datatype, or hole","type_short":"String"}},{"javadoc":"","static":false,"name":"getExternalRefXML","comment":"","params":[{"type_long":"java.lang.String","name":"addrstring","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getType","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"idstr","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getRegister","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getRegisterName","comment":"","params":[{"type_long":"java.lang.String","name":"addrstring","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getTrackedRegisters","comment":"","params":[{"type_long":"java.lang.String","name":"addrstring","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getUserOpName","comment":"","params":[{"type_long":"java.lang.String","name":"indexStr","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"buildResult","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"pc","comment":"","type_short":"Address"},{"type_long":"java.lang.String","name":"sym","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"namespc","comment":"","type_short":"Namespace"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"buildData","comment":"","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"","type_short":"Data"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"buildRegister","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"reg","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"java.lang.StringBuilder","comment":"","type_short":"StringBuilder"}},{"javadoc":"Generate description of a non-data symbol, probably a code label\n@param sym is the symbol\n@return the XML description","static":false,"name":"buildLabel","comment":"Generate description of a non-data symbol, probably a code label","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"sym","comment":"is the symbol","type_short":"Symbol"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the XML description","type_short":"String"}},{"javadoc":"Check address is read only. This only checks whether the block containing\n the address is read-only. It does not, and should not, check if there is\n a data object that has been set to constant\n@param addr - address to check\n@return true if the block is read_only, and there are no write\n         references.","static":false,"name":"isReadOnlyNoData","comment":"Check address is read only. This only checks whether the block containing\n the address is read-only. It does not, and should not, check if there is\n a data object that has been set to constant","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"- address to check","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the block is read_only, and there are no write\n         references.","type_short":"boolean"}},{"javadoc":"This function deals with the vagaries of the getMappedSymbolsXML\n interface when the queried address is in the body of a function.\n Basically, if the address is the entry point of the function, all the\n function data is sent. Otherwise a hole is sent back of the biggest\n contiguous block in the body of the function containing the queried\n address\n@param func Function whose body contains the address\n@param addr The queried address\n@param includeDefaultNames true if default parameter names should be\n            included\n@return XML string describing the function or the hole","static":false,"name":"buildFunctionXML","comment":"This function deals with the vagaries of the getMappedSymbolsXML\n interface when the queried address is in the body of a function.\n Basically, if the address is the entry point of the function, all the\n function data is sent. Otherwise a hole is sent back of the biggest\n contiguous block in the body of the function containing the queried\n address","params":[{"type_long":"ghidra.program.model.listing.Function","name":"func","comment":"Function whose body contains the address","type_short":"Function"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"The queried address","type_short":"Address"},{"type_long":"boolean","name":"includeDefaultNames","comment":"true if default parameter names should be\n            included","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"XML string describing the function or the hole","type_short":"String"}},{"javadoc":"","static":false,"name":"getExtraPopOverride","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"func","comment":"","type_short":"Function"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"buildHoleXML","comment":"","params":[{"type_long":"java.lang.String","name":"nm","comment":"","type_short":"String"},{"type_long":"long","name":"first","comment":"","type_short":"long"},{"type_long":"long","name":"last","comment":"","type_short":"long"},{"type_long":"boolean","name":"readonly","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"isVolatile","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Calculate the beginning and ending address of the biggest region around\n addr that does not contain any symbol.\n \n This was not working correctly and it is too difficult to find the\n biggest region for which there is no codeunit, and where the volatile and\n readonly properties don't vary\n \n So now we assume that biggest hole we can find is just 1 byte\n@param addr = Address around which to find region\n@return String <hole> tag","static":false,"name":"buildHole","comment":"Calculate the beginning and ending address of the biggest region around\n addr that does not contain any symbol.\n \n This was not working correctly and it is too difficult to find the\n biggest region for which there is no codeunit, and where the volatile and\n readonly properties don't vary\n \n So now we assume that biggest hole we can find is just 1 byte","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"= Address around which to find region","type_short":"Address"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"String  tag","type_short":"String"}},{"javadoc":"","static":false,"name":"buildExternalRef","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.symbol.ExternalReference","name":"ref","comment":"","type_short":"ExternalReference"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"buildTrackSet","comment":"","params":[{"type_long":"java.lang.StringBuilder","name":"buf","comment":"","type_short":"StringBuilder"},{"type_long":"ghidra.program.model.lang.Register","name":"reg","comment":"","type_short":"Register"},{"type_long":"long","name":"val","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getExternalReference","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.ExternalReference","comment":"","type_short":"ExternalReference"}},{"javadoc":"Return the global object being referred to by addr\n@param addr = Address being queried\n@return the global object","static":false,"name":"lookupSymbol","comment":"Return the global object being referred to by addr","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"= Address being queried","type_short":"Address"}],"throws":[],"return":{"type_long":"java.lang.Object","comment":"the global object","type_short":"Object"}},{"javadoc":"Check whether the address is volatile. Do not check the data object.\n@param addr is address to check for volatility\n@return true if the address is volatile","static":false,"name":"isVolatileNoData","comment":"Check whether the address is volatile. Do not check the data object.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"is address to check for volatility","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the address is volatile","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getFunctionContaining","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"","static":false,"name":"getFunctionAt","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}}],"name":"DecompileCallback","comment":"Routines that the decompiler invokes to gather info during decompilation of a\n function.","fields":[{"type_long":"ghidra.app.decompiler.DecompileDebug","javadoc":"","static":false,"name":"debug","comment":"","type_short":"DecompileDebug","constant_value":null},{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program","comment":"","type_short":"Program","constant_value":null},{"type_long":"ghidra.program.model.listing.Listing","javadoc":"","static":false,"name":"listing","comment":"","type_short":"Listing","constant_value":null},{"type_long":"ghidra.program.model.address.UniqueAddressFactory","javadoc":"","static":false,"name":"uniqueFactory","comment":"","type_short":"UniqueAddressFactory","constant_value":null},{"type_long":"ghidra.program.model.listing.Function","javadoc":"","static":false,"name":"cachedFunction","comment":"","type_short":"Function","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"","static":false,"name":"undefinedBody","comment":"","type_short":"AddressSet","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"funcEntry","comment":"","type_short":"Address","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"default_extrapop","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.program.model.lang.Language","javadoc":"","static":false,"name":"pcodelanguage","comment":"","type_short":"Language","constant_value":null},{"type_long":"ghidra.program.model.lang.CompilerSpec","javadoc":"","static":false,"name":"pcodecompilerspec","comment":"","type_short":"CompilerSpec","constant_value":null},{"type_long":"ghidra.program.model.address.AddressFactory","javadoc":"","static":false,"name":"addrfactory","comment":"","type_short":"AddressFactory","constant_value":null},{"type_long":"ghidra.program.model.lang.ConstantPool","javadoc":"","static":false,"name":"cpool","comment":"","type_short":"ConstantPool","constant_value":null},{"type_long":"ghidra.program.model.pcode.PcodeDataTypeManager","javadoc":"","static":false,"name":"dtmanage","comment":"","type_short":"PcodeDataTypeManager","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"nativeMessage","comment":"","type_short":"String","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"showNamespace","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.program.model.lang.InstructionBlock","javadoc":"","static":false,"name":"lastPseudoInstructionBlock","comment":"","type_short":"InstructionBlock","constant_value":null},{"type_long":"ghidra.program.disassemble.Disassembler","javadoc":"","static":false,"name":"pseudoDisassembler","comment":"","type_short":"Disassembler","constant_value":null}]}
