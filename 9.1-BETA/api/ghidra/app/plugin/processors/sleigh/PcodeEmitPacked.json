{"implements":[],"javadoc":"","static":false,"extends":"ghidra.app.plugin.processors.sleigh.PcodeEmit","methods":[{"javadoc":"Pcode emitter constructor for producing a packed binary representation \n for unimplemented or empty responses.","static":false,"name":"<init>","comment":"Pcode emitter constructor for producing a packed binary representation \n for unimplemented or empty responses.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Pcode emitter constructor for producing a packed binary representation.\n@param delayContexts delay slotted instruction contexts\n@param fallOffset default instruction fall offset (i.e., instruction length including delay slotted instructions)\n@param override required if pcode overrides are to be utilized\n@param uniqueFactory required when override specified or if overlay normalization is required","static":false,"name":"<init>","comment":"Pcode emitter constructor for producing a packed binary representation.","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.ParserWalker","name":"walk","comment":"","type_short":"ParserWalker"},{"type_long":"ghidra.program.model.lang.InstructionContext","name":"ictx","comment":"","type_short":"InstructionContext"},{"type_long":"int","name":"fallOffset","comment":"default instruction fall offset (i.e., instruction length including delay slotted instructions)","type_short":"int"},{"type_long":"ghidra.program.model.pcode.PcodeOverride","name":"override","comment":"required if pcode overrides are to be utilized","type_short":"PcodeOverride"},{"type_long":"ghidra.program.model.address.UniqueAddressFactory","name":"uniqueFactory","comment":"required when override specified or if overlay normalization is required","type_short":"UniqueAddressFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPackedBytes","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.PackedBytes","comment":"","type_short":"PackedBytes"}},{"javadoc":"","static":false,"name":"resolveRelatives","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addLabelRef","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dump","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"instrAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"opcode","comment":"","type_short":"int"},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData[]","name":"in","comment":"","type_short":"ghidra.app.plugin.processors.sleigh.VarnodeData[]"},{"type_long":"int","name":"isize","comment":"","type_short":"int"},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData","name":"out","comment":"","type_short":"VarnodeData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dumpSpaceId","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData","name":"v","comment":"","type_short":"VarnodeData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dumpVarnodeData","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData","name":"v","comment":"","type_short":"VarnodeData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"write","comment":"","params":[{"type_long":"int","name":"val","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Encode and dump an integer value to the packed byte stream\n@param val is the integer to write","static":false,"name":"dumpOffset","comment":"Encode and dump an integer value to the packed byte stream","params":[{"type_long":"long","name":"val","comment":"is the integer to write","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"insertOffset","comment":"","params":[{"type_long":"int","name":"streampos","comment":"","type_short":"int"},{"type_long":"long","name":"val","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"PcodeEmitPacked","comment":"","fields":[{"type_long":"int","javadoc":"","static":true,"name":"unimpl_tag","comment":"","type_short":"int","constant_value":"32"},{"type_long":"int","javadoc":"","static":true,"name":"inst_tag","comment":"","type_short":"int","constant_value":"33"},{"type_long":"int","javadoc":"","static":true,"name":"op_tag","comment":"","type_short":"int","constant_value":"34"},{"type_long":"int","javadoc":"","static":true,"name":"void_tag","comment":"","type_short":"int","constant_value":"35"},{"type_long":"int","javadoc":"","static":true,"name":"spaceid_tag","comment":"","type_short":"int","constant_value":"36"},{"type_long":"int","javadoc":"","static":true,"name":"addrsz_tag","comment":"","type_short":"int","constant_value":"37"},{"type_long":"int","javadoc":"","static":true,"name":"end_tag","comment":"","type_short":"int","constant_value":"96"},{"type_long":"ghidra.program.model.lang.PackedBytes","javadoc":"","static":false,"name":"buf","comment":"","type_short":"PackedBytes","constant_value":null},{"type_long":"java.util.ArrayList<ghidra.app.plugin.processors.sleigh.PcodeEmitPacked.LabelRef>","javadoc":"","static":false,"name":"labelref","comment":"","type_short":"ArrayList","constant_value":null}]}
