{"implements":[],"javadoc":"Class for walking pcode templates OpTpl in the correct order\n Supports walking the tree of an entire SleighInstructionPrototype or just a single ConstructTpl","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"setupPoint","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor for walking an entire parse tree\n@param root is the root ConstructState of the tree\n@param sectionnum is the named section to traverse (or -1 for main section)","static":false,"name":"<init>","comment":"Constructor for walking an entire parse tree","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.ConstructState","name":"root","comment":"is the root ConstructState of the tree","type_short":"ConstructState"},{"type_long":"int","name":"sectionnum","comment":"is the named section to traverse (or -1 for main section)","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor for walking a single template\n@param tpl","static":false,"name":"<init>","comment":"Constructor for walking a single template","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.ConstructTpl","name":"tpl","comment":"","type_short":"ConstructTpl"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getState","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.processors.sleigh.ConstructState","comment":"","type_short":"ConstructState"}},{"javadoc":"","static":false,"name":"isState","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"While walking the OpTpl's in order, follow a particular BUILD directive into its respective Constructor and ContructTpl\n Use popBuild to backtrack\n@param buildnum is the operand number of the BUILD directive to follow","static":false,"name":"pushBuild","comment":"While walking the OpTpl's in order, follow a particular BUILD directive into its respective Constructor and ContructTpl\n Use popBuild to backtrack","params":[{"type_long":"int","name":"buildnum","comment":"is the operand number of the BUILD directive to follow","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Move to the parent of the current node","static":false,"name":"popBuild","comment":"Move to the parent of the current node","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"nextOpTpl","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Object","comment":"","type_short":"Object"}}],"name":"OpTplWalker","comment":"Class for walking pcode templates OpTpl in the correct order\n Supports walking the tree of an entire SleighInstructionPrototype or just a single ConstructTpl","fields":[{"type_long":"ghidra.app.plugin.processors.sleigh.ConstructState","javadoc":"","static":false,"name":"point","comment":"","type_short":"ConstructState","constant_value":null},{"type_long":"ghidra.app.plugin.processors.sleigh.template.OpTpl[]","javadoc":"","static":false,"name":"oparray","comment":"","type_short":"ghidra.app.plugin.processors.sleigh.template.OpTpl[]","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"depth","comment":"","type_short":"int","constant_value":null},{"type_long":"int[]","javadoc":"","static":false,"name":"breadcrumb","comment":"","type_short":"int[]","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"maxsize","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"sectionnum","comment":"","type_short":"int","constant_value":null}]}
