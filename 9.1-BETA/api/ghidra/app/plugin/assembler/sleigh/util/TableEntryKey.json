{"implements":["java.lang.Comparable"],"javadoc":"A key in a (sparse) LR(0) transition table or LALR(1) action\/goto table\n@see AssemblyParseTransitionTable\n@see AssemblyParseActionGotoTable","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Create a new key for the given state and symbol\n@param state the row\n@param sym the column","static":false,"name":"<init>","comment":"Create a new key for the given state and symbol","params":[{"type_long":"int","name":"state","comment":"the row","type_short":"int"},{"type_long":"ghidra.app.plugin.assembler.sleigh.symbol.AssemblySymbol","name":"sym","comment":"the column","type_short":"AssemblySymbol"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"that","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"compareTo","comment":"","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.util.TableEntryKey","name":"that","comment":"","type_short":"TableEntryKey"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Get the state (row) of the key in the table\n@return the state","static":false,"name":"getState","comment":"Get the state (row) of the key in the table","params":[],"throws":[],"return":{"type_long":"int","comment":"the state","type_short":"int"}},{"javadoc":"Get the symbol (column) of the entry in the table\n@return the symbol","static":false,"name":"getSym","comment":"Get the symbol (column) of the entry in the table","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.symbol.AssemblySymbol","comment":"the symbol","type_short":"AssemblySymbol"}}],"name":"TableEntryKey","comment":"A key in a (sparse) LR(0) transition table or LALR(1) action\/goto table","fields":[{"type_long":"int","javadoc":"","static":false,"name":"state","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.app.plugin.assembler.sleigh.symbol.AssemblySymbol","javadoc":"","static":false,"name":"sym","comment":"","type_short":"AssemblySymbol","constant_value":null}]}
