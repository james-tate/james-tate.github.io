{"implements":[],"javadoc":"Solves expressions of the form A >> B","static":false,"extends":"ghidra.app.plugin.assembler.sleigh.expr.AbstractBinaryExpressionSolver","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"compute","comment":"","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","name":"lval","comment":"","type_short":"MaskedLong"},{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","name":"rval","comment":"","type_short":"MaskedLong"}],"throws":[],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","comment":"","type_short":"MaskedLong"}},{"javadoc":"","static":false,"name":"computeLeft","comment":"","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","name":"rval","comment":"","type_short":"MaskedLong"},{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","name":"goal","comment":"","type_short":"MaskedLong"}],"throws":[{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.SolverException","comment":"","type_short":"SolverException"}],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","comment":"","type_short":"MaskedLong"}},{"javadoc":"","static":false,"name":"computeRight","comment":"","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","name":"lval","comment":"","type_short":"MaskedLong"},{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","name":"goal","comment":"","type_short":"MaskedLong"}],"throws":[{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.SolverException","comment":"","type_short":"SolverException"}],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","comment":"","type_short":"MaskedLong"}},{"javadoc":"","static":false,"name":"solveTwoSided","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.expression.RightShiftExpression","name":"exp","comment":"","type_short":"RightShiftExpression"},{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","name":"goal","comment":"","type_short":"MaskedLong"},{"type_long":"java.util.Map<java.lang.String,java.lang.Long>","name":"vals","comment":"","type_short":"Map"},{"type_long":"java.util.Map<java.lang.Integer,java.lang.Object>","name":"res","comment":"","type_short":"Map"},{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor","name":"cur","comment":"","type_short":"AssemblyResolvedConstructor"},{"type_long":"java.util.Set<ghidra.app.plugin.assembler.sleigh.expr.SolverHint>","name":"hints","comment":"","type_short":"Set"},{"type_long":"java.lang.String","name":"description","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.NeedsBackfillException","comment":"","type_short":"NeedsBackfillException"},{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.SolverException","comment":"","type_short":"SolverException"}],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution","comment":"","type_short":"AssemblyResolution"}}],"name":"RightShiftExpressionSolver","comment":"Solves expressions of the form A  B","fields":[]}
