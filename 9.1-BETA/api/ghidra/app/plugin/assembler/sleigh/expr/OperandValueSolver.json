{"implements":[],"javadoc":"Solves expressions of an operand value\n \n These are a sort of named sub-expression, but they may also specify a shift in encoding.","static":false,"extends":"ghidra.app.plugin.assembler.sleigh.expr.AbstractExpressionSolver","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Obtains the \"defining expression\"\n \n This is either the symbols assigned defining expression, or the expression associated with\n its defining symbol.\n@return the defining expression, or null if neither is available","static":false,"name":"getDefiningExpression","comment":"Obtains the \"defining expression\"\n \n This is either the symbols assigned defining expression, or the expression associated with\n its defining symbol.","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.symbol.OperandSymbol","name":"sym","comment":"","type_short":"OperandSymbol"}],"throws":[],"return":{"type_long":"ghidra.app.plugin.processors.sleigh.expression.PatternExpression","comment":"the defining expression, or null if neither is available","type_short":"PatternExpression"}},{"javadoc":"","static":false,"name":"solve","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.expression.OperandValue","name":"ov","comment":"","type_short":"OperandValue"},{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","name":"goal","comment":"","type_short":"MaskedLong"},{"type_long":"java.util.Map<java.lang.String,java.lang.Long>","name":"vals","comment":"","type_short":"Map"},{"type_long":"java.util.Map<java.lang.Integer,java.lang.Object>","name":"res","comment":"","type_short":"Map"},{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor","name":"cur","comment":"","type_short":"AssemblyResolvedConstructor"},{"type_long":"java.util.Set<ghidra.app.plugin.assembler.sleigh.expr.SolverHint>","name":"hints","comment":"","type_short":"Set"},{"type_long":"java.lang.String","name":"description","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.NeedsBackfillException","comment":"","type_short":"NeedsBackfillException"}],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution","comment":"","type_short":"AssemblyResolution"}},{"javadoc":"","static":false,"name":"getValue","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.expression.OperandValue","name":"ov","comment":"","type_short":"OperandValue"},{"type_long":"java.util.Map<java.lang.String,java.lang.Long>","name":"vals","comment":"","type_short":"Map"},{"type_long":"java.util.Map<java.lang.Integer,java.lang.Object>","name":"res","comment":"","type_short":"Map"},{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor","name":"cur","comment":"","type_short":"AssemblyResolvedConstructor"}],"throws":[{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.NeedsBackfillException","comment":"","type_short":"NeedsBackfillException"}],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","comment":"","type_short":"MaskedLong"}},{"javadoc":"","static":false,"name":"getInstructionLength","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.expression.OperandValue","name":"ov","comment":"","type_short":"OperandValue"},{"type_long":"java.util.Map<java.lang.Integer,java.lang.Object>","name":"res","comment":"","type_short":"Map"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"valueForResolution","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.expression.OperandValue","name":"ov","comment":"","type_short":"OperandValue"},{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor","name":"rc","comment":"","type_short":"AssemblyResolvedConstructor"}],"throws":[],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","comment":"","type_short":"MaskedLong"}}],"name":"OperandValueSolver","comment":"Solves expressions of an operand value\n \n These are a sort of named sub-expression, but they may also specify a shift in encoding.","fields":[]}
