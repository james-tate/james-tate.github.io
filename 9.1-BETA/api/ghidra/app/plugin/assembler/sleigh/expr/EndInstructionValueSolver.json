{"implements":[],"javadoc":"\"Solves\" expressions of {@code inst_next}\n \n Works like the constant solver, but takes the value of {@code inst_next}, which is given by the\n assembly address and the resulting instruction length.\n@note This solver requires backfill.","static":false,"extends":"ghidra.app.plugin.assembler.sleigh.expr.AbstractExpressionSolver","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"solve","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.expression.EndInstructionValue","name":"iv","comment":"","type_short":"EndInstructionValue"},{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","name":"goal","comment":"","type_short":"MaskedLong"},{"type_long":"java.util.Map<java.lang.String,java.lang.Long>","name":"vals","comment":"","type_short":"Map"},{"type_long":"java.util.Map<java.lang.Integer,java.lang.Object>","name":"res","comment":"","type_short":"Map"},{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor","name":"cur","comment":"","type_short":"AssemblyResolvedConstructor"},{"type_long":"java.util.Set<ghidra.app.plugin.assembler.sleigh.expr.SolverHint>","name":"hints","comment":"","type_short":"Set"},{"type_long":"java.lang.String","name":"description","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolution","comment":"","type_short":"AssemblyResolution"}},{"javadoc":"","static":false,"name":"getValue","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.expression.EndInstructionValue","name":"iv","comment":"","type_short":"EndInstructionValue"},{"type_long":"java.util.Map<java.lang.String,java.lang.Long>","name":"vals","comment":"","type_short":"Map"},{"type_long":"java.util.Map<java.lang.Integer,java.lang.Object>","name":"res","comment":"","type_short":"Map"},{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor","name":"cur","comment":"","type_short":"AssemblyResolvedConstructor"}],"throws":[{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.NeedsBackfillException","comment":"","type_short":"NeedsBackfillException"}],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","comment":"","type_short":"MaskedLong"}},{"javadoc":"","static":false,"name":"getInstructionLength","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.expression.EndInstructionValue","name":"iv","comment":"","type_short":"EndInstructionValue"},{"type_long":"java.util.Map<java.lang.Integer,java.lang.Object>","name":"res","comment":"","type_short":"Map"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"valueForResolution","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.expression.EndInstructionValue","name":"exp","comment":"","type_short":"EndInstructionValue"},{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolvedConstructor","name":"rc","comment":"","type_short":"AssemblyResolvedConstructor"}],"throws":[],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.expr.MaskedLong","comment":"","type_short":"MaskedLong"}}],"name":"EndInstructionValueSolver","comment":"\"Solves\" expressions of \n \n Works like the constant solver, but takes the value of , which is given by the\n assembly address and the resulting instruction length.","fields":[]}
