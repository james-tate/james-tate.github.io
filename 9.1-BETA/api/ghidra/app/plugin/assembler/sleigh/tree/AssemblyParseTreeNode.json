{"implements":[],"javadoc":"A node in a parse tree","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a node for a tree parsed by the given grammar\n@param grammar the grammar","static":false,"name":"<init>","comment":"Construct a node for a tree parsed by the given grammar","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.grammars.AssemblyGrammar","name":"grammar","comment":"the grammar","type_short":"AssemblyGrammar"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the symbol for which this node is substituted\n \n For a branch, this is the LHS of the corresponding production. For a token, this is the\n terminal whose tokenizer matched it.\n@return the symbol","static":false,"name":"getSym","comment":"Get the symbol for which this node is substituted\n \n For a branch, this is the LHS of the corresponding production. For a token, this is the\n terminal whose tokenizer matched it.","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.symbol.AssemblySymbol","comment":"the symbol","type_short":"AssemblySymbol"}},{"javadoc":"Get the branch which contains this node\n@return ","static":false,"name":"getParent","comment":"Get the branch which contains this node","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.tree.AssemblyParseBranch","comment":"","type_short":"AssemblyParseBranch"}},{"javadoc":"Set the branch which contains this node\n@param parent","static":false,"name":"setParent","comment":"Set the branch which contains this node","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.tree.AssemblyParseBranch","name":"parent","comment":"","type_short":"AssemblyParseBranch"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"For debugging: Display this parse tree via the given stream\n@param out the stream","static":false,"name":"print","comment":"For debugging: Display this parse tree via the given stream","params":[{"type_long":"java.io.PrintStream","name":"out","comment":"the stream","type_short":"PrintStream"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"For debugging: Display the tree with the given indent\n@param out the stream\n@param indent the indent","static":false,"name":"print","comment":"For debugging: Display the tree with the given indent","params":[{"type_long":"java.io.PrintStream","name":"out","comment":"the stream","type_short":"PrintStream"},{"type_long":"java.lang.String","name":"indent","comment":"the indent","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Check if this node yields a subconstructor resolution\n@return true if this node yields a subconstructor resolution","static":false,"name":"isConstructor","comment":"Check if this node yields a subconstructor resolution","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this node yields a subconstructor resolution","type_short":"boolean"}},{"javadoc":"Check if this node yields a numeric value\n@return true if this node yields a numeric value","static":false,"name":"isNumeric","comment":"Check if this node yields a numeric value","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this node yields a numeric value","type_short":"boolean"}},{"javadoc":"Get the grammar used to parse the tree\n@return the grammar","static":false,"name":"getGrammar","comment":"Get the grammar used to parse the tree","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.grammars.AssemblyGrammar","comment":"the grammar","type_short":"AssemblyGrammar"}},{"javadoc":"Generate the string that this node parsed\n@return the string","static":false,"name":"generateString","comment":"Generate the string that this node parsed","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the string","type_short":"String"}}],"name":"AssemblyParseTreeNode","comment":"A node in a parse tree","fields":[{"type_long":"ghidra.app.plugin.assembler.sleigh.tree.AssemblyParseBranch","javadoc":"","static":false,"name":"parent","comment":"","type_short":"AssemblyParseBranch","constant_value":null},{"type_long":"ghidra.app.plugin.assembler.sleigh.grammars.AssemblyGrammar","javadoc":"","static":false,"name":"grammar","comment":"","type_short":"AssemblyGrammar","constant_value":null}]}
