{"implements":["java.lang.Comparable"],"javadoc":"A state in an LR(0) parsing machine\n \n Each item consists of a kernel and an implied closure. Only the kernel is necessary to define\n the item, but the whole closure must be considered when deriving new states.","static":false,"extends":"org.apache.commons.collections4.set.AbstractSetDecorator","methods":[{"javadoc":"Construct a new state associated with the given grammar\n@param grammar the grammar","static":false,"name":"<init>","comment":"Construct a new state associated with the given grammar","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.grammars.AssemblyGrammar","name":"grammar","comment":"the grammar","type_short":"AssemblyGrammar"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new state associated with the given grammar, seeded with the given item\n@param grammar the grammar\n@param item an item in the state","static":false,"name":"<init>","comment":"Construct a new state associated with the given grammar, seeded with the given item","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.grammars.AssemblyGrammar","name":"grammar","comment":"the grammar","type_short":"AssemblyGrammar"},{"type_long":"ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem","name":"item","comment":"an item in the state","type_short":"AssemblyParseStateItem"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"decorated","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Set<ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem>","comment":"","type_short":"Set"}},{"javadoc":"Get the closure of this item, caching the result\n@return the closure","static":false,"name":"getClosure","comment":"Get the closure of this item, caching the result","params":[],"throws":[],"return":{"type_long":"java.util.Set<ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem>","comment":"the closure","type_short":"Set"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"that","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"compareTo","comment":"","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseState","name":"that","comment":"","type_short":"AssemblyParseState"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"AssemblyParseState","comment":"A state in an LR(0) parsing machine\n \n Each item consists of a kernel and an implied closure. Only the kernel is necessary to define\n the item, but the whole closure must be considered when deriving new states.","fields":[{"type_long":"ghidra.app.plugin.assembler.sleigh.grammars.AssemblyGrammar","javadoc":"","static":false,"name":"grammar","comment":"","type_short":"AssemblyGrammar","constant_value":null},{"type_long":"java.util.Set<ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem>","javadoc":"","static":false,"name":"kernel","comment":"","type_short":"Set","constant_value":null},{"type_long":"java.util.Set<ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem>","javadoc":"","static":false,"name":"closure","comment":"","type_short":"Set","constant_value":null}]}
