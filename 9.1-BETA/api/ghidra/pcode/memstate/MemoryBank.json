{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"A MemoryBank must be associated with a specific address space, have a preferred or natural\n pagesize.  The pagesize must be a power of 2.\n@param spc is the associated address space\n@param isBigEndian memory endianess\n@param ps ps is the number of bytes in a page (must be a power of 2)\n@param faultHandler memory fault handler","static":false,"name":"<init>","comment":"A MemoryBank must be associated with a specific address space, have a preferred or natural\n pagesize.  The pagesize must be a power of 2.","params":[{"type_long":"ghidra.program.model.address.AddressSpace","name":"spc","comment":"is the associated address space","type_short":"AddressSpace"},{"type_long":"boolean","name":"isBigEndian","comment":"memory endianess","type_short":"boolean"},{"type_long":"int","name":"ps","comment":"ps is the number of bytes in a page (must be a power of 2)","type_short":"int"},{"type_long":"ghidra.pcode.memstate.MemoryFaultHandler","name":"faultHandler","comment":"memory fault handler","type_short":"MemoryFaultHandler"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return memory fault handler (may be null)","static":false,"name":"getMemoryFaultHandler","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.pcode.memstate.MemoryFaultHandler","comment":"memory fault handler (may be null)","type_short":"MemoryFaultHandler"}},{"javadoc":"@return true if memory bank is big endian","static":false,"name":"isBigEndian","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if memory bank is big endian","type_short":"boolean"}},{"javadoc":"A MemoryBank is instantiated with a \\e natural page size. Requests for large chunks of data\n may be broken down into units of this size.\n@return the number of bytes in a page.","static":false,"name":"getPageSize","comment":"A MemoryBank is instantiated with a \\e natural page size. Requests for large chunks of data\n may be broken down into units of this size.","params":[],"throws":[],"return":{"type_long":"int","comment":"the number of bytes in a page.","type_short":"int"}},{"javadoc":"@return the size of a page initialized mask in bytes.  Each bit within the\n mask corresponds to a data byte within a page.","static":false,"name":"getInitializedMaskSize","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"the size of a page initialized mask in bytes.  Each bit within the\n mask corresponds to a data byte within a page.","type_short":"int"}},{"javadoc":"@return the AddressSpace associated with this bank.","static":false,"name":"getSpace","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSpace","comment":"the AddressSpace associated with this bank.","type_short":"AddressSpace"}},{"javadoc":"","static":false,"name":"getPage","comment":"","params":[{"type_long":"long","name":"addr","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.pcode.memstate.MemoryPage","comment":"","type_short":"MemoryPage"}},{"javadoc":"","static":false,"name":"setPage","comment":"","params":[{"type_long":"long","name":"addr","comment":"","type_short":"long"},{"type_long":"byte[]","name":"val","comment":"","type_short":"byte[]"},{"type_long":"int","name":"skip","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"int","name":"bufOffset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setPageInitialized","comment":"","params":[{"type_long":"long","name":"addr","comment":"","type_short":"long"},{"type_long":"boolean","name":"initialized","comment":"","type_short":"boolean"},{"type_long":"int","name":"skip","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"int","name":"bufOffset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setChunk","comment":"","params":[{"type_long":"long","name":"offset","comment":"","type_short":"long"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"byte[]","name":"val","comment":"","type_short":"byte[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setInitialized","comment":"","params":[{"type_long":"long","name":"offset","comment":"","type_short":"long"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"boolean","name":"initialized","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getChunk","comment":"","params":[{"type_long":"long","name":"addrOffset","comment":"","type_short":"long"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"byte[]","name":"res","comment":"","type_short":"byte[]"},{"type_long":"boolean","name":"stopOnUnintialized","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"constructValue","comment":"","params":[{"type_long":"byte[]","name":"ptr","comment":"","type_short":"byte[]"},{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"boolean","name":"bigendian","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":true,"name":"deconstructValue","comment":"","params":[{"type_long":"byte[]","name":"ptr","comment":"","type_short":"byte[]"},{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"long","name":"val","comment":"","type_short":"long"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"boolean","name":"bigendian","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"MemoryBank","comment":"","fields":[{"type_long":"int","javadoc":"","static":false,"name":"pagesize","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSpace","javadoc":"","static":false,"name":"space","comment":"","type_short":"AddressSpace","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isBigEndian","comment":"","type_short":"boolean","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"initializedMaskSize","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.pcode.memstate.MemoryFaultHandler","javadoc":"","static":false,"name":"faultHandler","comment":"","type_short":"MemoryFaultHandler","constant_value":null}]}
