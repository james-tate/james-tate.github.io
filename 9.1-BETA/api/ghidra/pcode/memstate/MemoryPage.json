{"implements":[],"javadoc":"<code>MemoryPage<\/code> is allows the contents\/data of a memory page\n to be maintained along with an initializedMask.  Each bit within the\n initializedMask corresponds to a data byte within the page.  A null\n mask indicates that all data within the page is initialized.  A one-bit\n within the mask indicates that the corresponding data byte is initialized.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a new fully initialized page containing\n all zero (0) byte data.","static":false,"name":"<init>","comment":"Construct a new fully initialized page containing\n all zero (0) byte data.","params":[{"type_long":"int","name":"pageSize","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a memory page with an existing data bytes buffer\n@param bytes buffer","static":false,"name":"<init>","comment":"Construct a memory page with an existing data bytes buffer","params":[{"type_long":"byte[]","name":"bytes","comment":"buffer","type_short":"byte[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getInitializedMask","comment":"","params":[],"throws":[],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}},{"javadoc":"Mark entire page as uninitialized","static":false,"name":"setUninitialized","comment":"Mark entire page as uninitialized","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Mark entire page as uninitialized","static":false,"name":"setInitialized","comment":"Mark entire page as uninitialized","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Update initialization mask\n@param pageOffset\n@param size\n@param maskUpdate","static":false,"name":"setInitialized","comment":"Update initialization mask","params":[{"type_long":"int","name":"pageOffset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"byte[]","name":"maskUpdate","comment":"","type_short":"byte[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Mark specified page region as initialized.\n@param pageOffset\n@param size","static":false,"name":"setInitialized","comment":"Mark specified page region as initialized.","params":[{"type_long":"int","name":"pageOffset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Mark specified page region as uninitialized.\n@param pageOffset\n@param size","static":false,"name":"setUninitialized","comment":"Mark specified page region as uninitialized.","params":[{"type_long":"int","name":"pageOffset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get number of leading bytes within page range which have been \n initialized.\n@param pageOffset\n@param size\n@return number of leading bytes within page range which have been \n initialized.","static":false,"name":"getInitializedByteCount","comment":"Get number of leading bytes within page range which have been \n initialized.","params":[{"type_long":"int","name":"pageOffset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"number of leading bytes within page range which have been \n initialized.","type_short":"int"}},{"javadoc":"Generate an initialized mask for the specified page size\n@param pageSize\n@param initialized\n@return ","static":true,"name":"getInitializedMask","comment":"Generate an initialized mask for the specified page size","params":[{"type_long":"int","name":"pageSize","comment":"","type_short":"int"},{"type_long":"boolean","name":"initialized","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}},{"javadoc":"Generate an initialized mask for the specified page size.\n The region is identified by offset and size.  The remaining portions\n of the mask will be set based upon !initialized.\n@param pageSize\n@param offset\n@param size\n@param initialized\n@return ","static":true,"name":"getInitializedMask","comment":"Generate an initialized mask for the specified page size.\n The region is identified by offset and size.  The remaining portions\n of the mask will be set based upon !initialized.","params":[{"type_long":"int","name":"pageSize","comment":"","type_short":"int"},{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"boolean","name":"initialized","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}},{"javadoc":"Mark specified page region as initialized.\n@param initializedMask\n@param pageOffset\n@param size","static":true,"name":"setInitialized","comment":"Mark specified page region as initialized.","params":[{"type_long":"byte[]","name":"initializedMask","comment":"","type_short":"byte[]"},{"type_long":"int","name":"pageOffset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Mark specified page region as uninitialized.\n@param initializedMask\n@param pageOffset\n@param size","static":true,"name":"setUninitialized","comment":"Mark specified page region as uninitialized.","params":[{"type_long":"byte[]","name":"initializedMask","comment":"","type_short":"byte[]"},{"type_long":"int","name":"pageOffset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determine how many leading bytes of a specified page region is marked as\n initialized.  Valid page region defined by pageOffset and size is assumed.\n@param initializedMask\n@param pageOffset\n@param size\n@return number of leading bytes at pageOffset (upto size) are initialized.","static":true,"name":"getInitializedByteCount","comment":"Determine how many leading bytes of a specified page region is marked as\n initialized.  Valid page region defined by pageOffset and size is assumed.","params":[{"type_long":"byte[]","name":"initializedMask","comment":"","type_short":"byte[]"},{"type_long":"int","name":"pageOffset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"number of leading bytes at pageOffset (upto size) are initialized.","type_short":"int"}}],"name":"MemoryPage","comment":"MemoryPage is allows the contents\/data of a memory page\n to be maintained along with an initializedMask.  Each bit within the\n initializedMask corresponds to a data byte within the page.  A null\n mask indicates that all data within the page is initialized.  A one-bit\n within the mask indicates that the corresponding data byte is initialized.","fields":[{"type_long":"byte[]","javadoc":"","static":false,"name":"data","comment":"","type_short":"byte[]","constant_value":null},{"type_long":"byte[]","javadoc":"","static":false,"name":"initializedMask","comment":"","type_short":"byte[]","constant_value":null}]}
