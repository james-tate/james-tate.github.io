{"implements":[],"javadoc":"Class to build the Ghidra classpath, add it to the {@link GhidraClassLoader}, and start the \n desired {@link GhidraLaunchable} that's passed in as a command line argument.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Launches the given {@link GhidraLaunchable}, passing through the args to it.\n@param args The first argument is the name of the class to launch.  The remaining args\n     get passed through to the class's {@link GhidraLaunchable#launch} method.\n@throws Exception If there was a problem launching.  See the exception's message for more\n     details on what went wrong.","static":true,"name":"main","comment":"Launches the given GhidraLaunchable, passing through the args to it.","params":[{"type_long":"java.lang.String[]","name":"args","comment":"The first argument is the name of the class to launch.  The remaining args\n     get passed through to the class's GhidraLaunchable#launch method.","type_short":"java.lang.String[]"}],"throws":[{"type_long":"java.lang.Exception","comment":"If there was a problem launching.  See the exception's message for more\n     details on what went wrong.","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add patch jars to the given path list.  This should be done first so they take precedence in \n the classpath.\n@param pathList The list of paths to add to.\n@param installDir The application installation directory.","static":true,"name":"addPatchPaths","comment":"Add patch jars to the given path list.  This should be done first so they take precedence in \n the classpath.","params":[{"type_long":"java.util.List<java.lang.String>","name":"pathList","comment":"The list of paths to add to.","type_short":"List"},{"type_long":"generic.jar.ResourceFile","name":"installDir","comment":"The application installation directory.","type_short":"ResourceFile"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add module bin directories to the given path list.\n@param pathList The list of paths to add to.\n@param modules The modules to get the bin directories of.","static":true,"name":"addModuleBinPaths","comment":"Add module bin directories to the given path list.","params":[{"type_long":"java.util.List<java.lang.String>","name":"pathList","comment":"The list of paths to add to.","type_short":"List"},{"type_long":"java.util.Map<java.lang.String,ghidra.framework.GModule>","name":"modules","comment":"The modules to get the bin directories of.","type_short":"Map"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add module lib jars to the given path list.\n@param pathList The list of paths to add to.\n@param modules The modules to get the jars of.","static":true,"name":"addModuleJarPaths","comment":"Add module lib jars to the given path list.","params":[{"type_long":"java.util.List<java.lang.String>","name":"pathList","comment":"The list of paths to add to.","type_short":"List"},{"type_long":"java.util.Map<java.lang.String,ghidra.framework.GModule>","name":"modules","comment":"The modules to get the jars of.","type_short":"Map"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add external runtime lib jars to the given path list.  The external jars are discovered by\n parsing the build\/libraryDependencies.txt file that results from a prepDev.\n@param pathList The list of paths to add to.\n@param appRootDirs The application root directories to search.\n@throws IOException if a required file or directory was not found.","static":true,"name":"addExternalJarPaths","comment":"Add external runtime lib jars to the given path list.  The external jars are discovered by\n parsing the build\/libraryDependencies.txt file that results from a prepDev.","params":[{"type_long":"java.util.List<java.lang.String>","name":"pathList","comment":"The list of paths to add to.","type_short":"List"},{"type_long":"java.util.Collection<generic.jar.ResourceFile>","name":"appRootDirs","comment":"The application root directories to search.","type_short":"Collection"}],"throws":[{"type_long":"java.io.IOException","comment":"if a required file or directory was not found.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Searches the given directory (non-recursively) for jars and returns their paths in a list.\n@param dir The directory to search for jars in.\n@return A list of discovered jar paths.","static":true,"name":"findJarsInDir","comment":"Searches the given directory (non-recursively) for jars and returns their paths in a list.","params":[{"type_long":"generic.jar.ResourceFile","name":"dir","comment":"The directory to search for jars in.","type_short":"ResourceFile"}],"throws":[],"return":{"type_long":"java.util.List<java.lang.String>","comment":"A list of discovered jar paths.","type_short":"List"}},{"javadoc":"Updates the list of paths to make sure the order is correct for any class-loading dependencies.\n@param pathList The list of paths to order.\n@param modules The modules on the classpath.\n@return A new list with the elements of the original list re-ordered as needed.","static":true,"name":"orderClasspath","comment":"Updates the list of paths to make sure the order is correct for any class-loading dependencies.","params":[{"type_long":"java.util.List<java.lang.String>","name":"pathList","comment":"The list of paths to order.","type_short":"List"},{"type_long":"java.util.Map<java.lang.String,ghidra.framework.GModule>","name":"modules","comment":"The modules on the classpath.","type_short":"Map"}],"throws":[],"return":{"type_long":"java.util.List<java.lang.String>","comment":"A new list with the elements of the original list re-ordered as needed.","type_short":"List"}}],"name":"GhidraLauncher","comment":"Class to build the Ghidra classpath, add it to the GhidraClassLoader, and start the \n desired GhidraLaunchable that's passed in as a command line argument.","fields":[]}
