{"implements":["ghidra.util.graph.KeyIndexableSet"],"javadoc":"Container class for a set of edges (ghidra.util.graph.Edge).","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor\n@param parent The DirectedGraph that this EdgeSet belongs to.\n@param capacity The initial number of edges this edge set can have\n without growing.","static":false,"name":"<init>","comment":"Constructor","params":[{"type_long":"ghidra.util.graph.DirectedGraph","name":"parent","comment":"The DirectedGraph that this EdgeSet belongs to.","type_short":"DirectedGraph"},{"type_long":"int","name":"capacity","comment":"The initial number of edges this edge set can have\n without growing.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the edge at the specified index in the internal arrays.","static":false,"name":"getByIndex","comment":"Returns the edge at the specified index in the internal arrays.","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.util.graph.Edge","comment":"","type_short":"Edge"}},{"javadoc":"Removes an edge from this EdgeSet. Returns true if and only if the\n   edge was in the EdgeSet and was sucessfully removed.","static":false,"name":"remove","comment":"Removes an edge from this EdgeSet. Returns true if and only if the\n   edge was in the EdgeSet and was sucessfully removed.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Adds an edge to the graph. If either endpoint is not in the graph add it.\n   If the edge is already in the graph return false and do nothing.\n@return true if and only if the edge was sucessfully added.","static":false,"name":"add","comment":"Adds an edge to the graph. If either endpoint is not in the graph add it.\n   If the edge is already in the graph return false and do nothing.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"boolean","comment":"true if and only if the edge was sucessfully added.","type_short":"boolean"}},{"javadoc":"Return true if and only if the edge is contained in this EdgeSet.","static":false,"name":"contains","comment":"Return true if and only if the edge is contained in this EdgeSet.","params":[{"type_long":"ghidra.util.graph.Edge","name":"edge","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns the internal index of the given edge within this edge set.\n  Throws a class cast exception if the object is not an edge.","static":false,"name":"index","comment":"Returns the internal index of the given edge within this edge set.\n  Throws a class cast exception if the object is not an edge.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the next edge having the same 'from' if it exists. Otherwise\n      returns null.","static":false,"name":"getNextEdgeWithSameFrom","comment":"Returns the next edge having the same 'from' if it exists. Otherwise\n      returns null.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"ghidra.util.graph.Edge","comment":"","type_short":"Edge"}},{"javadoc":"Returns next edge having the same 'to' if it exists. Otherwise returns\n      null.","static":false,"name":"getNextEdgeWithSameTo","comment":"Returns next edge having the same 'to' if it exists. Otherwise returns\n      null.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"ghidra.util.graph.Edge","comment":"","type_short":"Edge"}},{"javadoc":"Returns the previous edge having the same 'from' if it exists. Otherwise\n      returns null.","static":false,"name":"getPreviousEdgeWithSameFrom","comment":"Returns the previous edge having the same 'from' if it exists. Otherwise\n      returns null.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"ghidra.util.graph.Edge","comment":"","type_short":"Edge"}},{"javadoc":"Returns previous edge having the same 'to' if it exists. Otherwise returns\n      null.","static":false,"name":"getPreviousEdgeWithSameTo","comment":"Returns previous edge having the same 'to' if it exists. Otherwise returns\n      null.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"ghidra.util.graph.Edge","comment":"","type_short":"Edge"}},{"javadoc":"Helper method for maintaining internal data structures.","static":false,"name":"setNextEdgeWithSameFrom","comment":"Helper method for maintaining internal data structures.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"},{"type_long":"ghidra.util.graph.Edge","name":"nextEdge","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Helper method for maintaining internal data structures.","static":false,"name":"setNextEdgeWithSameTo","comment":"Helper method for maintaining internal data structures.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"},{"type_long":"ghidra.util.graph.Edge","name":"nextEdge","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Helper method for maintaining internal data structures.","static":false,"name":"setPreviousEdgeWithSameFrom","comment":"Helper method for maintaining internal data structures.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"},{"type_long":"ghidra.util.graph.Edge","name":"previousEdge","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Helper method for maintaining internal data structures.","static":false,"name":"setPreviousEdgeWithSameTo","comment":"Helper method for maintaining internal data structures.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"},{"type_long":"ghidra.util.graph.Edge","name":"previousEdge","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the current number of edges within this edge set.","static":false,"name":"size","comment":"Returns the current number of edges within this edge set.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Empties out the edge set while leaving the capacity alone. Much faster\n      than removing the edges one by one.","static":false,"name":"clear","comment":"Empties out the edge set while leaving the capacity alone. Much faster\n      than removing the edges one by one.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the number of edges this edge set can hold without growing.","static":false,"name":"capacity","comment":"Returns the number of edges this edge set can hold without growing.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Either compacts the edge set by removing vacant positions if there are\n      many or grows the edge set so that there is additional space.","static":false,"name":"grow","comment":"Either compacts the edge set by removing vacant positions if there are\n      many or grows the edge set so that there is additional space.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"tighten","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns an iterator for this EdgeSet.","static":false,"name":"iterator","comment":"Returns an iterator for this EdgeSet.","params":[],"throws":[],"return":{"type_long":"ghidra.util.graph.GraphIterator<ghidra.util.graph.Edge>","comment":"","type_short":"GraphIterator"}},{"javadoc":"Used to test if edges have been added or removed from this edge set.","static":false,"name":"getModificationNumber","comment":"Used to test if edges have been added or removed from this edge set.","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getKeyedObject","comment":"","params":[{"type_long":"long","name":"key","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.util.graph.Edge","comment":"","type_short":"Edge"}},{"javadoc":"Get the edges in this EdgeSet as a java.util.Set.","static":false,"name":"toSet","comment":"Get the edges in this EdgeSet as a java.util.Set.","params":[],"throws":[],"return":{"type_long":"java.util.Set<ghidra.util.graph.Edge>","comment":"","type_short":"Set"}},{"javadoc":"@return array of Edges contained in this EdgeSet","static":false,"name":"toArray","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.util.graph.Edge[]","comment":"array of Edges contained in this EdgeSet","type_short":"ghidra.util.graph.Edge[]"}}],"name":"EdgeSet","comment":"Container class for a set of edges (ghidra.util.graph.Edge).","fields":[{"type_long":"ghidra.util.graph.DirectedGraph","javadoc":"","static":false,"name":"parentGraph","comment":"","type_short":"DirectedGraph","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"modificationNumber","comment":"","type_short":"long","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"capacity","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"nextIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.util.graph.AddableLongIntHashtable","javadoc":"","static":false,"name":"edgeIndices","comment":"","type_short":"AddableLongIntHashtable","constant_value":null},{"type_long":"ghidra.util.graph.Edge[]","javadoc":"","static":false,"name":"edges","comment":"","type_short":"ghidra.util.graph.Edge[]","constant_value":null},{"type_long":"ghidra.util.graph.Edge[]","javadoc":"","static":false,"name":"previousEdgeWithSameFrom","comment":"","type_short":"ghidra.util.graph.Edge[]","constant_value":null},{"type_long":"ghidra.util.graph.Edge[]","javadoc":"","static":false,"name":"previousEdgeWithSameTo","comment":"","type_short":"ghidra.util.graph.Edge[]","constant_value":null},{"type_long":"ghidra.util.graph.Edge[]","javadoc":"","static":false,"name":"nextEdgeWithSameFrom","comment":"","type_short":"ghidra.util.graph.Edge[]","constant_value":null},{"type_long":"ghidra.util.graph.Edge[]","javadoc":"","static":false,"name":"nextEdgeWithSameTo","comment":"","type_short":"ghidra.util.graph.Edge[]","constant_value":null}]}
