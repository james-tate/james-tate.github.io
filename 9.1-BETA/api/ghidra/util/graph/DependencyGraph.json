{"implements":[],"javadoc":"Original Dependency Graph implementation that uses {@link HashMap}s and {@link HashSet}s.\n Side affect of these is that data pulled from the graph ({@link #pop()}) is not performed\n in a deterministic order.  However, load time for the graph is O(1).\n@param <T> the type of value.  This class uses the values as keys in HashSets, so the value\n type must be meet the equals() and hashCode() requirements for hashing.\n@see AbstractDependencyGraph\n@see DeterministicDependencyGraph","static":false,"extends":"ghidra.util.graph.AbstractDependencyGraph","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Copy constructor\n@param other the other DependencyGraph to copy","static":false,"name":"<init>","comment":"Copy constructor","params":[{"type_long":"ghidra.util.graph.DependencyGraph<T>","name":"other","comment":"the other DependencyGraph to copy","type_short":"DependencyGraph"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"copy","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.util.graph.DependencyGraph<T>","comment":"","type_short":"DependencyGraph"}},{"javadoc":"","static":false,"name":"createNodeMap","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Map<T,ghidra.util.graph.AbstractDependencyGraph<T>.DependencyNode>","comment":"","type_short":"Map"}},{"javadoc":"","static":false,"name":"createNodeSet","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Set<T>","comment":"","type_short":"Set"}},{"javadoc":"","static":false,"name":"createDependencyNodeSet","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Set<ghidra.util.graph.AbstractDependencyGraph<T>.DependencyNode>","comment":"","type_short":"Set"}},{"javadoc":"","static":false,"name":"getNodeMapValues","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Set<T>","comment":"","type_short":"Set"}}],"name":"DependencyGraph","comment":"Original Dependency Graph implementation that uses HashMaps and HashSets.\n Side affect of these is that data pulled from the graph (#pop()) is not performed\n in a deterministic order.  However, load time for the graph is O(1).","fields":[]}
