{"implements":[],"javadoc":"Utility class with static methods for validating names and converting\n strings to numbers, etc.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"tests whether the given string is a valid name.\n@param name name to validate","static":true,"name":"isValidName","comment":"tests whether the given string is a valid name.","params":[{"type_long":"java.lang.String","name":"name","comment":"name to validate","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Find the invalid character in the given name.\n <p>\n This method should only be used with {@link #isValidName(String)}} and <b>not<\/b>\n {@link #isValidFileName(String);\n@param name the name with an invalid character\n@return the invalid character or 0 if no invalid character can be found\n@see #isValidName(String)","static":true,"name":"findInvalidChar","comment":"Find the invalid character in the given name.\n \n This method should only be used with #isValidName(String)} and not\n ","params":[{"type_long":"java.lang.String","name":"name","comment":"the name with an invalid character","type_short":"String"}],"throws":[],"return":{"type_long":"char","comment":"the invalid character or 0 if no invalid character can be found","type_short":"char"}},{"javadoc":"Returns a string such that all uppercase characters in the given string are\n replaced by the MANGLE_CHAR followed by the lowercase version of the character.\n MANGLE_CHARs are replaced by 2 MANGLE_CHARs.\n\n This method is to get around the STUPID windows problem where filenames are\n not case sensitive.  Under Windows, Foo.exe and foo.exe represent\n the same filename.  To fix this we mangle names first such that Foo.exe becomes\n _foo.exe.","static":true,"name":"mangle","comment":"Returns a string such that all uppercase characters in the given string are\n replaced by the MANGLE_CHAR followed by the lowercase version of the character.\n MANGLE_CHARs are replaced by 2 MANGLE_CHARs.\n\n This method is to get around the STUPID windows problem where filenames are\n not case sensitive.  Under Windows, Foo.exe and foo.exe represent\n the same filename.  To fix this we mangle names first such that Foo.exe becomes\n _foo.exe.","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Performs the inverse of the mangle method.  A string is returned such that\n all characters following a MANGLE_CHAR are converted to uppercase.  Two MANGLE\n chars in a row are replace by a single MANGLE_CHAR.","static":true,"name":"demangle","comment":"Performs the inverse of the mangle method.  A string is returned such that\n all characters following a MANGLE_CHAR are converted to uppercase.  Two MANGLE\n chars in a row are replace by a single MANGLE_CHAR.","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Performs a validity check on a mangled name\n@param name mangled name\n@return true if name can be demangled else false","static":true,"name":"isValidMangledName","comment":"Performs a validity check on a mangled name","params":[{"type_long":"java.lang.String","name":"name","comment":"mangled name","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if name can be demangled else false","type_short":"boolean"}}],"name":"NamingUtilities","comment":"Utility class with static methods for validating names and converting\n strings to numbers, etc.","fields":[{"type_long":"int","javadoc":"Max length for a name.","static":true,"name":"MAX_NAME_LENGTH","comment":"Max length for a name.","type_short":"int","constant_value":"60"},{"type_long":"char","javadoc":"","static":true,"name":"MANGLE_CHAR","comment":"","type_short":"char","constant_value":"_"},{"type_long":"java.util.Set<java.lang.Character>","javadoc":"","static":true,"name":"VALID_NAME_SET","comment":"","type_short":"Set","constant_value":null}]}
