{"implements":["java.io.Serializable"],"javadoc":"Stores ranges of int values throughout \"long\" space. Every \"long\" index has\n an associated int value (initially 0). Users can paint (set) ranges of\n indexes to a given integer value, overwriting any value that currently exists\n in that range.\n \n This class is implemented using an IntPropertyMap.  The first index\n (0) will always contain a value.  The value at any other given\n index will either be the value stored at that index, or if no\n value stored there, then the value stored at the nearest previous index\n that contains a value.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor for RangeMap with a default value of 0.","static":false,"name":"<init>","comment":"Constructor for RangeMap with a default value of 0.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new range map with spcified default value.\n@param defaultValue the default value","static":false,"name":"<init>","comment":"Creates a new range map with spcified default value.","params":[{"type_long":"int","name":"defaultValue","comment":"the default value","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clears all current values from the range map and resets the default value.","static":false,"name":"clear","comment":"Clears all current values from the range map and resets the default value.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Associates the given value with every index from start to end (inclusive)\n Any previous associates are overwritten.\n@param start the start index of the range to fill.\n@param end the end index of the range to fill\n@param value the value to put at every index in the range.","static":false,"name":"paintRange","comment":"Associates the given value with every index from start to end (inclusive)\n Any previous associates are overwritten.","params":[{"type_long":"long","name":"start","comment":"the start index of the range to fill.","type_short":"long"},{"type_long":"long","name":"end","comment":"the end index of the range to fill","type_short":"long"},{"type_long":"int","name":"value","comment":"the value to put at every index in the range.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the int value associated with the given index.\n@param index the index at which to get the value.","static":false,"name":"getValue","comment":"Returns the int value associated with the given index.","params":[{"type_long":"long","name":"index","comment":"the index at which to get the value.","type_short":"long"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the value range containing the given index. The value range indicates\n the int value and the start and end index for the range.\n@param index the index at which to get the associated value range\n@return the value range","static":false,"name":"getValueRange","comment":"Returns the value range containing the given index. The value range indicates\n the int value and the start and end index for the range.","params":[{"type_long":"long","name":"index","comment":"the index at which to get the associated value range","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.util.datastruct.ValueRange","comment":"the value range","type_short":"ValueRange"}},{"javadoc":"Returns an iterator over all occupied ranges in the map.\n@param index the index to start the iterator\n@return an iterator over all occupied ranges in the map.","static":false,"name":"getIndexRangeIterator","comment":"Returns an iterator over all occupied ranges in the map.","params":[{"type_long":"long","name":"index","comment":"the index to start the iterator","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.util.datastruct.IndexRangeIterator","comment":"an iterator over all occupied ranges in the map.","type_short":"IndexRangeIterator"}},{"javadoc":"Returns an iterator over all indexes where the value changes.\n@param start the starting index to search.\n@param end the ending index to search.\n@return an iterator over all indexes where the value changes.","static":false,"name":"getChangePointIterator","comment":"Returns an iterator over all indexes where the value changes.","params":[{"type_long":"long","name":"start","comment":"the starting index to search.","type_short":"long"},{"type_long":"long","name":"end","comment":"the ending index to search.","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.util.LongIterator","comment":"an iterator over all indexes where the value changes.","type_short":"LongIterator"}}],"name":"RangeMap","comment":"Stores ranges of int values throughout \"long\" space. Every \"long\" index has\n an associated int value (initially 0). Users can paint (set) ranges of\n indexes to a given integer value, overwriting any value that currently exists\n in that range.\n \n This class is implemented using an IntPropertyMap.  The first index\n (0) will always contain a value.  The value at any other given\n index will either be the value stored at that index, or if no\n value stored there, then the value stored at the nearest previous index\n that contains a value.","fields":[{"type_long":"long","javadoc":"","static":true,"name":"serialVersionUID","comment":"","type_short":"long","constant_value":"1"},{"type_long":"ghidra.util.prop.IntPropertySet","javadoc":"","static":false,"name":"map","comment":"","type_short":"IntPropertySet","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"defaultValue","comment":"","type_short":"int","constant_value":null}]}
