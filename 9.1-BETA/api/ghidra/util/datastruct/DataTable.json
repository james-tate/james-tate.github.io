{"implements":["java.io.Serializable"],"javadoc":"Table for managing rows and columns of data.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a new DataTable.","static":false,"name":"<init>","comment":"Creates a new DataTable.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the given row from the table.\n@param row The row to be removed","static":false,"name":"removeRow","comment":"Removes the given row from the table.","params":[{"type_long":"int","name":"row","comment":"The row to be removed","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Copy one row to another row.\n@param row source row\n@param table table containing the data\n@param toRow destination row","static":false,"name":"copyRowTo","comment":"Copy one row to another row.","params":[{"type_long":"int","name":"row","comment":"source row","type_short":"int"},{"type_long":"ghidra.util.datastruct.DataTable","name":"table","comment":"table containing the data","type_short":"DataTable"},{"type_long":"int","name":"toRow","comment":"destination row","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Stores a boolean value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putBoolean","comment":"Stores a boolean value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"boolean","name":"value","comment":"The value to store.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the boolean at the given row, column.\n@param row the row in the table\n@param col the column in the table (field num)\n@return the boolean value in the table","static":false,"name":"getBoolean","comment":"Returns the boolean at the given row, column.","params":[{"type_long":"int","name":"row","comment":"the row in the table","type_short":"int"},{"type_long":"int","name":"col","comment":"the column in the table (field num)","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"the boolean value in the table","type_short":"boolean"}},{"javadoc":"Stores a byte value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putByte","comment":"Stores a byte value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"byte","name":"value","comment":"The value to store.","type_short":"byte"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the byte at the given row, column.\n@param row the row in the table\n@param col the column in the table (field num)\n@return the byte value in the table","static":false,"name":"getByte","comment":"Returns the byte at the given row, column.","params":[{"type_long":"int","name":"row","comment":"the row in the table","type_short":"int"},{"type_long":"int","name":"col","comment":"the column in the table (field num)","type_short":"int"}],"throws":[],"return":{"type_long":"byte","comment":"the byte value in the table","type_short":"byte"}},{"javadoc":"Stores a short value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putShort","comment":"Stores a short value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"short","name":"value","comment":"The value to store.","type_short":"short"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the short at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the short value.","static":false,"name":"getShort","comment":"Returns the short at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"short","comment":"the short value.","type_short":"short"}},{"javadoc":"Stores an int value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putInt","comment":"Stores an int value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"int","name":"value","comment":"The value to store.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the int at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the int value.","static":false,"name":"getInt","comment":"Returns the int at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"the int value.","type_short":"int"}},{"javadoc":"Stores a long value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putLong","comment":"Stores a long value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"long","name":"value","comment":"The value to store.","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Stores a double value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putDouble","comment":"Stores a double value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"double","name":"value","comment":"The value to store.","type_short":"double"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Stores a float value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putFloat","comment":"Stores a float value in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"float","name":"value","comment":"The value to store.","type_short":"float"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the long at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the long value.","static":false,"name":"getLong","comment":"Returns the long at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"long","comment":"the long value.","type_short":"long"}},{"javadoc":"Returns the float at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the float value.","static":false,"name":"getFloat","comment":"Returns the float at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"float","comment":"the float value.","type_short":"float"}},{"javadoc":"Returns the double at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the double value.","static":false,"name":"getDouble","comment":"Returns the double at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"double","comment":"the double value.","type_short":"double"}},{"javadoc":"Stores a String in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putString","comment":"Stores a String in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"java.lang.String","name":"value","comment":"The value to store.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Stores an Object in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putObject","comment":"Stores an Object in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"java.lang.Object","name":"value","comment":"The value to store.","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the string at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the int value.","static":false,"name":"getString","comment":"Returns the string at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the int value.","type_short":"String"}},{"javadoc":"Returns the Object at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the Object value.","static":false,"name":"getObject","comment":"Returns the Object at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.Object","comment":"the Object value.","type_short":"Object"}},{"javadoc":"Stores an byte array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putByteArray","comment":"Stores an byte array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"byte[]","name":"value","comment":"The value to store.","type_short":"byte[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the byte array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the int value.","static":false,"name":"getByteArray","comment":"Returns the byte array at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"byte[]","comment":"the int value.","type_short":"byte[]"}},{"javadoc":"Stores an short array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putShortArray","comment":"Stores an short array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"short[]","name":"value","comment":"The value to store.","type_short":"short[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the short array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the int value.","static":false,"name":"getShortArray","comment":"Returns the short array at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"short[]","comment":"the int value.","type_short":"short[]"}},{"javadoc":"Stores an int array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putIntArray","comment":"Stores an int array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"int[]","name":"value","comment":"The value to store.","type_short":"int[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Stores a float array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putFloatArray","comment":"Stores a float array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"float[]","name":"value","comment":"The value to store.","type_short":"float[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Stores a double array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putDoubleArray","comment":"Stores a double array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"double[]","name":"value","comment":"The value to store.","type_short":"double[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the int array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the int value.","static":false,"name":"getIntArray","comment":"Returns the int array at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"int[]","comment":"the int value.","type_short":"int[]"}},{"javadoc":"Stores an long array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putLongArray","comment":"Stores an long array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"long[]","name":"value","comment":"The value to store.","type_short":"long[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the long array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the long[] value.","static":false,"name":"getLongArray","comment":"Returns the long array at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"long[]","comment":"the long[] value.","type_short":"long[]"}},{"javadoc":"Returns the float array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the float[] value.","static":false,"name":"getFloatArray","comment":"Returns the float array at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"float[]","comment":"the float[] value.","type_short":"float[]"}},{"javadoc":"Returns the double array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the int value.","static":false,"name":"getDoubleArray","comment":"Returns the double array at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"double[]","comment":"the int value.","type_short":"double[]"}},{"javadoc":"Stores a String array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@param value The value to store.","static":false,"name":"putStringArray","comment":"Stores a String array in the table at the given row\n and column.  Note - all values in a given column must be\n of the same type.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"},{"type_long":"java.lang.String[]","name":"value","comment":"The value to store.","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the String array at the given row, column.\n@param row The row into the table (specifies which object)\n@param col The column of the table.  (specifies which field)\n@return the String[] value.","static":false,"name":"getStringArray","comment":"Returns the String array at the given row, column.","params":[{"type_long":"int","name":"row","comment":"The row into the table (specifies which object)","type_short":"int"},{"type_long":"int","name":"col","comment":"The column of the table.  (specifies which field)","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"the String[] value.","type_short":"java.lang.String[]"}},{"javadoc":"increases the number of columns in the table\n@param numCols The number of columns needed in the table","static":false,"name":"growTable","comment":"increases the number of columns in the table","params":[{"type_long":"int","name":"numCols","comment":"The number of columns needed in the table","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DataTable","comment":"Table for managing rows and columns of data.","fields":[{"type_long":"long","javadoc":"","static":true,"name":"serialVersionUID","comment":"","type_short":"long","constant_value":"1"},{"type_long":"ghidra.util.datastruct.Array[]","javadoc":"","static":false,"name":"dataColumns","comment":"","type_short":"ghidra.util.datastruct.Array[]","constant_value":null}]}
