{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns address corresponding to the specified caseIndexValue.\n@param caseIndexValue index value for specific case\n@return case address\n@throws MemoryAccessException\n@throws AddressOutOfBoundsException","static":false,"name":"getCaseAddress","comment":"Returns address corresponding to the specified caseIndexValue.","params":[{"type_long":"int","name":"caseIndexValue","comment":"index value for specific case","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"},{"type_long":"ghidra.program.model.address.AddressOutOfBoundsException","comment":"","type_short":"AddressOutOfBoundsException"}],"return":{"type_long":"ghidra.program.model.address.Address","comment":"case address","type_short":"Address"}},{"javadoc":"Returns the Varnode or VarnodeOperation which corresponds to the case index value for a switch.","static":false,"name":"getIndexValue","comment":"Returns the Varnode or VarnodeOperation which corresponds to the case index value for a switch.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"Qualify IndirectJumpSwitch\n and return IndirectJumpSwitch object if qualified or null if not.\n@param program\n@param v potential input value which corresponds to a indirect destination\n@return IndirectJumpSwitch object or null if v failed qualification","static":true,"name":"getIndirectJumpSwitch","comment":"Qualify IndirectJumpSwitch\n and return IndirectJumpSwitch object if qualified or null if not.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.pcode.Varnode","name":"v","comment":"potential input value which corresponds to a indirect destination","type_short":"Varnode"}],"throws":[],"return":{"type_long":"ghidra.util.state.analysis.Switch","comment":"IndirectJumpSwitch object or null if v failed qualification","type_short":"Switch"}}],"name":"Switch","comment":"","fields":[]}
