{"implements":[],"javadoc":"","static":false,"extends":"ghidra.util.state.analysis.Switch","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.util.state.analysis.TableEntryAddress","name":"tableEntryAddress","comment":"","type_short":"TableEntryAddress"},{"type_long":"int","name":"entrySize","comment":"","type_short":"int"},{"type_long":"boolean","name":"signExtend","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns table entry size in bytes","static":false,"name":"getTableEntrySize","comment":"Returns table entry size in bytes","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getIndexValue","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"Returns table entry value for specified caseIndexValue.\n@param caseIndexValue index value for specific case\n@param scaleFactor scale factor, generally this should be 1\n@param createTableData if true an attempt will be made to create associated Data in table\n@return value loaded from the table entry in memory which corresponds to the specified caseIndexValue.\n@throws MemoryAccessException","static":false,"name":"getTableEntryValue","comment":"Returns table entry value for specified caseIndexValue.","params":[{"type_long":"int","name":"caseIndexValue","comment":"index value for specific case","type_short":"int"},{"type_long":"int","name":"scaleFactor","comment":"scale factor, generally this should be 1","type_short":"int"},{"type_long":"boolean","name":"createTableData","comment":"if true an attempt will be made to create associated Data in table","type_short":"boolean"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"long","comment":"value loaded from the table entry in memory which corresponds to the specified caseIndexValue.","type_short":"long"}},{"javadoc":"Returns table entry value as pointer for specified caseIndexValue.\n@param caseIndexValue index value for specific case\n@param scaleFactor scale factor, generally this should be 1\n@param createTableData if true an attempt will be made to create associated Data in table\n@return pointer loaded from the table entry in memory which corresponds to the specified caseIndexValue.\n@throws MemoryAccessException\n@throws AddressOutOfBoundsException","static":false,"name":"getTableEntryAsAddress","comment":"Returns table entry value as pointer for specified caseIndexValue.","params":[{"type_long":"int","name":"caseIndexValue","comment":"index value for specific case","type_short":"int"},{"type_long":"int","name":"scaleFactor","comment":"scale factor, generally this should be 1","type_short":"int"},{"type_long":"boolean","name":"createTableData","comment":"if true an attempt will be made to create associated Data in table","type_short":"boolean"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"},{"type_long":"ghidra.program.model.address.AddressOutOfBoundsException","comment":"","type_short":"AddressOutOfBoundsException"}],"return":{"type_long":"ghidra.program.model.address.Address","comment":"pointer loaded from the table entry in memory which corresponds to the specified caseIndexValue.","type_short":"Address"}},{"javadoc":"Returns table entry value as pointer for specified caseIndexValue.\n@param caseIndexValue index value for specific case\n@return pointer loaded from the table entry in memory which corresponds to the specified caseIndexValue.\n@throws MemoryAccessException\n@throws AddressOutOfBoundsException","static":false,"name":"getCaseAddress","comment":"Returns table entry value as pointer for specified caseIndexValue.","params":[{"type_long":"int","name":"caseIndexValue","comment":"index value for specific case","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"},{"type_long":"ghidra.program.model.address.AddressOutOfBoundsException","comment":"","type_short":"AddressOutOfBoundsException"}],"return":{"type_long":"ghidra.program.model.address.Address","comment":"pointer loaded from the table entry in memory which corresponds to the specified caseIndexValue.","type_short":"Address"}},{"javadoc":"","static":false,"name":"createPointer","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entryAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"scaleFactor","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createData","comment":"","params":[{"type_long":"ghidra.program.model.listing.Listing","name":"listing","comment":"","type_short":"Listing"},{"type_long":"ghidra.program.model.address.Address","name":"entryAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getLongValue","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"entryAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"scaleFactor","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"boolean","name":"signExtend","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Qualify TableEntry as LOAD(table-entry-address)\n and return TableEntry if qualified or null if not.\n@param program\n@param v potential input value which corresponds to a switch table entry\n@return TableEntry object or null if v failed qualification","static":true,"name":"getTableEntry","comment":"Qualify TableEntry as LOAD(table-entry-address)\n and return TableEntry if qualified or null if not.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.pcode.Varnode","name":"v","comment":"potential input value which corresponds to a switch table entry","type_short":"Varnode"}],"throws":[],"return":{"type_long":"ghidra.util.state.analysis.TableEntry","comment":"TableEntry object or null if v failed qualification","type_short":"TableEntry"}}],"name":"TableEntry","comment":"","fields":[{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program","comment":"","type_short":"Program","constant_value":null},{"type_long":"ghidra.util.state.analysis.TableEntryAddress","javadoc":"","static":false,"name":"tableEntryAddress","comment":"","type_short":"TableEntryAddress","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"size","comment":"","type_short":"int","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"signExtend","comment":"","type_short":"boolean","constant_value":null}]}
