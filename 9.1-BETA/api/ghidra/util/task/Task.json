{"implements":["ghidra.util.task.MonitoredRunnable"],"javadoc":"Base class for Tasks to be run in separate threads","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates new Task.\n@param title the title associated with the task","static":false,"name":"<init>","comment":"Creates new Task.","params":[{"type_long":"java.lang.String","name":"title","comment":"the title associated with the task","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new Task.\n@param title title the title associated with the task\n@param canCancel true means that the user can cancel the task\n@param hasProgress true means that the dialog should show a\n progress indicator\n@param isModal true means that the dialog is modal and the task has to\n complete or be canceled before any other action can occur","static":false,"name":"<init>","comment":"Construct a new Task.","params":[{"type_long":"java.lang.String","name":"title","comment":"title the title associated with the task","type_short":"String"},{"type_long":"boolean","name":"canCancel","comment":"true means that the user can cancel the task","type_short":"boolean"},{"type_long":"boolean","name":"hasProgress","comment":"true means that the dialog should show a\n progress indicator","type_short":"boolean"},{"type_long":"boolean","name":"isModal","comment":"true means that the dialog is modal and the task has to\n complete or be canceled before any other action can occur","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new Task.\n@param title title the title associated with the task\n@param canCancel true means that the user can cancel the task\n@param hasProgress true means that the dialog should show a\n progress indicator\n@param isModal true means that the dialog is modal and the task has to\n complete or be canceled before any other action can occur\n@param waitForTaskCompleted true causes the running thread to block until the finish or \n  \t  cancelled callback has completed on the swing thread.  Note: passing true \n  \t  only makes sense if the task is modal.","static":false,"name":"<init>","comment":"Construct a new Task.","params":[{"type_long":"java.lang.String","name":"title","comment":"title the title associated with the task","type_short":"String"},{"type_long":"boolean","name":"canCancel","comment":"true means that the user can cancel the task","type_short":"boolean"},{"type_long":"boolean","name":"hasProgress","comment":"true means that the dialog should show a\n progress indicator","type_short":"boolean"},{"type_long":"boolean","name":"isModal","comment":"true means that the dialog is modal and the task has to\n complete or be canceled before any other action can occur","type_short":"boolean"},{"type_long":"boolean","name":"waitForTaskCompleted","comment":"true causes the running thread to block until the finish or \n  \t  cancelled callback has completed on the swing thread.  Note: passing true \n  \t  only makes sense if the task is modal.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the title associated with the task\n@return String title shown in the dialog","static":false,"name":"getTaskTitle","comment":"Get the title associated with the task","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"String title shown in the dialog","type_short":"String"}},{"javadoc":"Returns the alignment of the text displayed in the modal dialog.  The default is\n {@link SwingConstants#CENTER}.   For status updates where the initial portion of the\n text does not change, {@link SwingConstants#LEADING} is recommended.  To change the\n default value, simply override this method and return one of {@link SwingConstants}\n CENTER, LEADING or TRAILING.\n@return the alignment of the text displayed","static":false,"name":"getStatusTextAlignment","comment":"Returns the alignment of the text displayed in the modal dialog.  The default is\n SwingConstants#CENTER.   For status updates where the initial portion of the\n text does not change, SwingConstants#LEADING is recommended.  To change the\n default value, simply override this method and return one of SwingConstants\n CENTER, LEADING or TRAILING.","params":[],"throws":[],"return":{"type_long":"int","comment":"the alignment of the text displayed","type_short":"int"}},{"javadoc":"When an object implementing interface <code>Runnable<\/code> is used to create a thread, \n starting the thread causes the object's <code>run<\/code> method to be called in that \n separately executing thread.\n@param monitor the task monitor","static":false,"name":"monitoredRun","comment":"When an object implementing interface Runnable is used to create a thread, \n starting the thread causes the object's run method to be called in that \n separately executing thread.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"cancel","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyTaskListeners","comment":"","params":[{"type_long":"boolean","name":"wasCancelled","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This is the method that will be called to do the work\n \n <P>Note: The run(TaskMonitor) method should not make any calls directly\n on Swing components, as these calls are not thread safe. Place Swing\n calls in a Runnable, then call {@link SystemUtilities#runSwingLater(Runnable)} or\n {@link SystemUtilities#runSwingNow(Runnable)}to schedule the Runnable inside of\n the AWT Event Thread.\n@param monitor The TaskMonitor that will monitor the executing Task\n@throws CancelledException if the task is cancelled.  Subclasses can trigger this exception\n                            by calling {@link TaskMonitor#checkCanceled()}.  This allows \n                            them to break out of the current work stack.","static":false,"name":"run","comment":"This is the method that will be called to do the work\n \n Note: The run(TaskMonitor) method should not make any calls directly\n on Swing components, as these calls are not thread safe. Place Swing\n calls in a Runnable, then call SystemUtilities#runSwingLater(Runnable) or\n SystemUtilities#runSwingNow(Runnable)to schedule the Runnable inside of\n the AWT Event Thread.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"The TaskMonitor that will monitor the executing Task","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the task is cancelled.  Subclasses can trigger this exception\n                            by calling TaskMonitor#checkCanceled().  This allows \n                            them to break out of the current work stack.","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return true if the task has a progress indicator.\n@return boolean true if the task shows progress","static":false,"name":"hasProgress","comment":"Return true if the task has a progress indicator.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the task shows progress","type_short":"boolean"}},{"javadoc":"Sets this task to have progress or not.  Note: changing this value after launching the\n task will have no effect.\n@param b true to show progress, false otherwise.","static":false,"name":"setHasProgress","comment":"Sets this task to have progress or not.  Note: changing this value after launching the\n task will have no effect.","params":[{"type_long":"boolean","name":"b","comment":"true to show progress, false otherwise.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if the task can be canceled.\n@return boolean true if the user can cancel the task","static":false,"name":"canCancel","comment":"Returns true if the task can be canceled.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the user can cancel the task","type_short":"boolean"}},{"javadoc":"Returns true if the dialog associated with the task is modal.\n@return boolean true if the associated dialog is modal","static":false,"name":"isModal","comment":"Returns true if the dialog associated with the task is modal.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the associated dialog is modal","type_short":"boolean"}},{"javadoc":"Sets the task listener on this task.  It is a programming error to call this method more\n than once or to call this method if a listener was passed into the constructor of this class.\n@param listener the listener","static":false,"name":"addTaskListener","comment":"Sets the task listener on this task.  It is a programming error to call this method more\n than once or to call this method if a listener was passed into the constructor of this class.","params":[{"type_long":"ghidra.util.task.TaskListener","name":"listener","comment":"the listener","type_short":"TaskListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"Task","comment":"Base class for Tasks to be run in separate threads","fields":[{"type_long":"java.lang.String","javadoc":"","static":false,"name":"title","comment":"","type_short":"String","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"canCancel","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"hasProgress","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isModal","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isInterruptible","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isForgettable","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"waitForTaskCompleted","comment":"","type_short":"boolean","constant_value":null},{"type_long":"java.util.Set<ghidra.util.task.TaskListener>","javadoc":"","static":false,"name":"listeners","comment":"","type_short":"Set","constant_value":null},{"type_long":"ghidra.util.task.TaskMonitor","javadoc":"","static":false,"name":"taskMonitor","comment":"","type_short":"TaskMonitor","constant_value":null}]}
