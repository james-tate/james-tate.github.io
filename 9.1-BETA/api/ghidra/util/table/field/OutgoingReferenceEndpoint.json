{"implements":[],"javadoc":"Marker row object that signals to the table API that the references contained therein all\n share the <code>from<\/code> address, with each row showing the <code>to<\/code> address.","static":false,"extends":"ghidra.util.table.field.ReferenceEndpoint","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"r","comment":"","type_short":"Reference"},{"type_long":"boolean","name":"isOffcut","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"A special constructor that allows clients to override the 'toAddress' of the reference.\n@param r the reference\n@param toAddress the desired 'toAddress'\n@param isOffcut false if the given reference points to the min address of a code unit","static":false,"name":"<init>","comment":"A special constructor that allows clients to override the 'toAddress' of the reference.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"r","comment":"the reference","type_short":"Reference"},{"type_long":"ghidra.program.model.address.Address","name":"toAddress","comment":"the desired 'toAddress'","type_short":"Address"},{"type_long":"boolean","name":"isOffcut","comment":"false if the given reference points to the min address of a code unit","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"OutgoingReferenceEndpoint","comment":"Marker row object that signals to the table API that the references contained therein all\n share the from address, with each row showing the to address.","fields":[]}
