{"implements":[],"javadoc":"Save and restore elements that are compatible with ObjectStorage objects.\n <br>\n <p><b>Important<\/b>: Any class implementing this interface that\n may have its class path saved to the data base (i.e. user defined properties)\n should create a map in the <code>ClassTranslator<\/code> when it is moved \n or renamed between versions of Ghidra. It should also implement <code>ExtensionPoint<\/code>.\n <br><p>For example, any class that implements the <code>Saveable<\/code> interface \n can potentially be saved as a property in the program. If used as a program \n property the class name gets saved to a database field in the property manager. \n If the class gets moved or renamed, the property manager won't be able to \n instantiate it. The <code>ClassTranslator<\/code> allows the saveable class \n to indicate its old path name (that was stored in the database) and its\n current path name (the actual location of the class it needs to instantiate \n for the property). \n <br>The saveable class should call \n <br><code>    ClassTranslator.put(oldClassPath, newClassPath);<\/code>\n <br>in its static initializer.\n <br>The property manager would then call \n <br><code>    String newPathName = ClassTranslator.get(oldPathName);<\/code> \n <br>when it can't find the class for the old path name. \n If the new path name isn't null the property manager can use it to get the class.","static":false,"methods":[{"javadoc":"Returns the field classes, in Java types, in the same order as used {@link #save} and\n {@link #restore}. \n <p>\n For example, if the save method calls <tt>objStorage.putInt()<\/tt> and then\n <tt>objStorage.putFloat()<\/tt>, then this method must return \n <tt>Class[]{ Integer.class, Float.class }<\/tt>.\n@return ","static":false,"name":"getObjectStorageFields","comment":"Returns the field classes, in Java types, in the same order as used #save and\n #restore. \n \n For example, if the save method calls objStorage.putInt() and then\n objStorage.putFloat(), then this method must return \n Class[]{ Integer.class, Float.class }.","params":[],"throws":[],"return":{"type_long":"java.lang.Class<?>[]","comment":"","type_short":"java.lang.Class<?>[]"}},{"javadoc":"Save to the given ObjectStorage.\n@param objStorage Object that can handle Java primitives, Strings, and\n arrays of primitives and Strings","static":false,"name":"save","comment":"Save to the given ObjectStorage.","params":[{"type_long":"ghidra.util.ObjectStorage","name":"objStorage","comment":"Object that can handle Java primitives, Strings, and\n arrays of primitives and Strings","type_short":"ObjectStorage"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Restore from the given ObjectStorage.\n@param objStorage Object that can handle Java primitives, Strings, and\n arrays of primitives and Strings\n@throws db.IllegalFieldAccessException if objStorage is improperly accessed.","static":false,"name":"restore","comment":"Restore from the given ObjectStorage.","params":[{"type_long":"ghidra.util.ObjectStorage","name":"objStorage","comment":"Object that can handle Java primitives, Strings, and\n arrays of primitives and Strings","type_short":"ObjectStorage"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the storage schema version.  Any time there is a software release\n in which the implementing class has changed the data structure used \n for the save and restore methods, the schema version must be incremented.\n NOTE: While this could be a static method, the Saveable interface is unable to \n define such methods.\n@return storage schema version.","static":false,"name":"getSchemaVersion","comment":"Get the storage schema version.  Any time there is a software release\n in which the implementing class has changed the data structure used \n for the save and restore methods, the schema version must be incremented.\n NOTE: While this could be a static method, the Saveable interface is unable to \n define such methods.","params":[],"throws":[],"return":{"type_long":"int","comment":"storage schema version.","type_short":"int"}},{"javadoc":"Determine if the implementation supports an storage upgrade of the specified\n oldSchemaVersion to the current schema version.\n@param oldSchemaVersion\n@return true if upgrading is supported for the older schema version.","static":false,"name":"isUpgradeable","comment":"Determine if the implementation supports an storage upgrade of the specified\n oldSchemaVersion to the current schema version.","params":[{"type_long":"int","name":"oldSchemaVersion","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"true if upgrading is supported for the older schema version.","type_short":"boolean"}},{"javadoc":"Upgrade an older stored object to the current storage schema.\n@param oldObjStorage the old stored object\n@param oldSchemaVersion storage schema version number for the old object\n@param currentObjStorage new object for storage in the current schema\n@return true if data was upgraded to the currentObjStorage successfully.","static":false,"name":"upgrade","comment":"Upgrade an older stored object to the current storage schema.","params":[{"type_long":"ghidra.util.ObjectStorage","name":"oldObjStorage","comment":"the old stored object","type_short":"ObjectStorage"},{"type_long":"int","name":"oldSchemaVersion","comment":"storage schema version number for the old object","type_short":"int"},{"type_long":"ghidra.util.ObjectStorage","name":"currentObjStorage","comment":"new object for storage in the current schema","type_short":"ObjectStorage"}],"throws":[],"return":{"type_long":"boolean","comment":"true if data was upgraded to the currentObjStorage successfully.","type_short":"boolean"}},{"javadoc":"Returns true if this saveable should not have it's changes broadcast.\n@return true if this saveable should not have it's changes broadcast.","static":false,"name":"isPrivate","comment":"Returns true if this saveable should not have it's changes broadcast.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this saveable should not have it's changes broadcast.","type_short":"boolean"}}],"name":"Saveable","comment":"Save and restore elements that are compatible with ObjectStorage objects.\n \n Important: Any class implementing this interface that\n may have its class path saved to the data base (i.e. user defined properties)\n should create a map in the ClassTranslator when it is moved \n or renamed between versions of Ghidra. It should also implement ExtensionPoint.\n For example, any class that implements the Saveable interface \n can potentially be saved as a property in the program. If used as a program \n property the class name gets saved to a database field in the property manager. \n If the class gets moved or renamed, the property manager won't be able to \n instantiate it. The ClassTranslator allows the saveable class \n to indicate its old path name (that was stored in the database) and its\n current path name (the actual location of the class it needs to instantiate \n for the property). \n The saveable class should call \n     ClassTranslator.put(oldClassPath, newClassPath);\n in its static initializer.\n The property manager would then call \n     String newPathName = ClassTranslator.get(oldPathName); \n when it can't find the class for the old path name. \n If the new path name isn't null the property manager can use it to get the class.","fields":[]}
