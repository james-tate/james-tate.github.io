{"implements":[],"javadoc":"Use an instance of this class as the cause when you need to record several causes of an\n exception.\n \n This paradigm would be necessary when multiple attempts can be made to complete a task, e.g.,\n traversing a list of plugins until one can handle a given condition. If all attempts fail, it is\n desirable to report on each attempt.\n \n This class acts as a wrapper allowing multiple causes to be recorded in place of one. The causes\n recorded in this wrapper actually apply to the throwable (\"parent\") which has this\n MultipleCauses exception as its cause.","static":false,"extends":"java.lang.Throwable","methods":[{"javadoc":"Constructs a new MultipleCauses wrapper with no causes\n@note it is rude to leave this empty","static":false,"name":"<init>","comment":"Constructs a new MultipleCauses wrapper with no causes","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new MultipleCauses wrapper with the given causes\n@param causes","static":false,"name":"<init>","comment":"Constructs a new MultipleCauses wrapper with the given causes","params":[{"type_long":"java.util.Collection<java.lang.Throwable>","name":"causes","comment":"","type_short":"Collection"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Use getCauses instead\n@return null","static":false,"name":"getCause","comment":"Use getCauses instead","params":[],"throws":[],"return":{"type_long":"java.lang.Throwable","comment":"null","type_short":"Throwable"}},{"javadoc":"Returns the causes of the parent throwable (possibly an empty collection)\n@return the collection of causes of the parent throwable\n@note it is rude to leave this empty. If the parent throwable has no cause, or the cause is\n unknown, leave its cause null.","static":false,"name":"getCauses","comment":"Returns the causes of the parent throwable (possibly an empty collection)","params":[],"throws":[],"return":{"type_long":"java.util.Collection<java.lang.Throwable>","comment":"the collection of causes of the parent throwable","type_short":"Collection"}},{"javadoc":"Add the cause to the collection of causes (for the \"parent\" throwable)\n@param cause the throwable to add as a cause","static":false,"name":"addCause","comment":"Add the cause to the collection of causes (for the \"parent\" throwable)","params":[{"type_long":"java.lang.Throwable","name":"cause","comment":"the throwable to add as a cause","type_short":"Throwable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"If the throwable has multiple causes, collect its causes into this MultipleCauses.\n Otherwise, just add it as a cause.\n@param e","static":false,"name":"addFlattenedIfMultiple","comment":"If the throwable has multiple causes, collect its causes into this MultipleCauses.\n Otherwise, just add it as a cause.","params":[{"type_long":"java.lang.Throwable","name":"e","comment":"","type_short":"Throwable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Assuming a throwable has multiple causes, add them all to this MultipleCauses\n@param e the throwable having multiple causes\n \n This is useful for flattening causes into a common exception. For instance, if a method is\n collecting multiple causes for a potential WidgetException, and it catches a\n WidgetException, instead of collecting the caught WidgetException, it might instead copy\n its causes into its own collection.","static":false,"name":"addAllCauses","comment":"Assuming a throwable has multiple causes, add them all to this MultipleCauses","params":[{"type_long":"java.lang.Throwable","name":"e","comment":"the throwable having multiple causes\n \n This is useful for flattening causes into a common exception. For instance, if a method is\n collecting multiple causes for a potential WidgetException, and it catches a\n WidgetException, instead of collecting the caught WidgetException, it might instead copy\n its causes into its own collection.","type_short":"Throwable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add the causes from another MultipleCauses into this one\n@param that the source to copy from","static":false,"name":"addAllCauses","comment":"Add the causes from another MultipleCauses into this one","params":[{"type_long":"ghidra.util.exception.MultipleCauses","name":"that","comment":"the source to copy from","type_short":"MultipleCauses"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Use addCause instead","static":false,"name":"initCause","comment":"Use addCause instead","params":[{"type_long":"java.lang.Throwable","name":"cause","comment":"","type_short":"Throwable"}],"throws":[],"return":{"type_long":"java.lang.Throwable","comment":"","type_short":"Throwable"}},{"javadoc":"","static":false,"name":"isEmpty","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":true,"name":"hasMultiple","comment":"","params":[{"type_long":"java.lang.Throwable","name":"e","comment":"","type_short":"Throwable"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":true,"name":"printTree","comment":"","params":[{"type_long":"java.io.PrintStream","name":"out","comment":"","type_short":"PrintStream"},{"type_long":"java.lang.Throwable","name":"e","comment":"","type_short":"Throwable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"printTree","comment":"","params":[{"type_long":"java.io.PrintStream","name":"out","comment":"","type_short":"PrintStream"},{"type_long":"java.lang.String","name":"prefix","comment":"","type_short":"String"},{"type_long":"java.lang.Throwable","name":"e","comment":"","type_short":"Throwable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"MultipleCauses","comment":"Use an instance of this class as the cause when you need to record several causes of an\n exception.\n \n This paradigm would be necessary when multiple attempts can be made to complete a task, e.g.,\n traversing a list of plugins until one can handle a given condition. If all attempts fail, it is\n desirable to report on each attempt.\n \n This class acts as a wrapper allowing multiple causes to be recorded in place of one. The causes\n recorded in this wrapper actually apply to the throwable (\"parent\") which has this\n MultipleCauses exception as its cause.","fields":[{"type_long":"java.util.Collection<java.lang.Throwable>","javadoc":"","static":false,"name":"causes","comment":"","type_short":"Collection","constant_value":null}]}
