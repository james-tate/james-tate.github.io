{"implements":[],"javadoc":"ByteStreamCharMatcher are state machines used to look for char sequences within a stream of bytes.  \n Bytes from the stream are added one a time and converted to character stream which are in\n turn fed into a char stream recognizer.  As each byte is added, an indication is returned if that byte caused\n a terminated sequence to be found.  A sequence is simply a pair of indexes indicated the start and\n end indexes into the byte stream where the char sequence started and ended respectively along with\n an indication that the sequence was null terminated.","static":false,"methods":[{"javadoc":"Adds the next contiguous byte to this matcher\n@param b the next contiguous byte in the search stream.\n@return true if the given byte triggered a sequence match.  Note that this byte may not be\n a part of the recognized sequence.","static":false,"name":"add","comment":"Adds the next contiguous byte to this matcher","params":[{"type_long":"byte","name":"b","comment":"the next contiguous byte in the search stream.","type_short":"byte"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the given byte triggered a sequence match.  Note that this byte may not be\n a part of the recognized sequence.","type_short":"boolean"}},{"javadoc":"Tells the matcher that there are no more contiguous bytes.  If the current state of the \n matcher is such that there is a valid sequence that can be at the end of the stream, then\n a sequence will be created and true will be returned.\n@return true if there is a valid sequence at the end of the stream.","static":false,"name":"endSequence","comment":"Tells the matcher that there are no more contiguous bytes.  If the current state of the \n matcher is such that there is a valid sequence that can be at the end of the stream, then\n a sequence will be created and true will be returned.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if there is a valid sequence at the end of the stream.","type_short":"boolean"}},{"javadoc":"Returns the currently recognized sequence which only exists immediately after an add or\n end sequence is called with a return value of true.\n@return ","static":false,"name":"getSequence","comment":"Returns the currently recognized sequence which only exists immediately after an add or\n end sequence is called with a return value of true.","params":[],"throws":[],"return":{"type_long":"ghidra.util.ascii.Sequence","comment":"","type_short":"Sequence"}},{"javadoc":"Resets the internal state of this ByteMatcher so that it can be reused against another byte stream.","static":false,"name":"reset","comment":"Resets the internal state of this ByteMatcher so that it can be reused against another byte stream.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ByteStreamCharMatcher","comment":"ByteStreamCharMatcher are state machines used to look for char sequences within a stream of bytes.  \n Bytes from the stream are added one a time and converted to character stream which are in\n turn fed into a char stream recognizer.  As each byte is added, an indication is returned if that byte caused\n a terminated sequence to be found.  A sequence is simply a pair of indexes indicated the start and\n end indexes into the byte stream where the char sequence started and ended respectively along with\n an indication that the sequence was null terminated.","fields":[]}
