{"implements":[],"javadoc":"NOTE: ExtensionPoint logistics have changed! It is no longer sufficient to\n implement ExtensionPoint in order for the ClassSearcher to dynamically pick\n up your class. Your class also needs to conform to a class name suffix rule.\n The modules included in your application can have a file named\n \"{ModuleRoot}\/data\/ExtensionPoint.manifest\". This file contains (one per\n line) the suffixes that should be checked for inclusion into the class\n searching. IF YOUR EXTENSION POINT DOES NOT HAVE A SUFFIX INDICATED IN ONE OF\n THESE FILES, IT WILL NOT BE AUTOMATICALLY DISCOVERED.\n \n This is a marker interface used to mark classes and interfaces that Ghidra\n will automatically search for and load.","static":false,"methods":[],"name":"ExtensionPoint","comment":"NOTE: ExtensionPoint logistics have changed! It is no longer sufficient to\n implement ExtensionPoint in order for the ClassSearcher to dynamically pick\n up your class. Your class also needs to conform to a class name suffix rule.\n The modules included in your application can have a file named\n \"{ModuleRoot}\/data\/ExtensionPoint.manifest\". This file contains (one per\n line) the suffixes that should be checked for inclusion into the class\n searching. IF YOUR EXTENSION POINT DOES NOT HAVE A SUFFIX INDICATED IN ONE OF\n THESE FILES, IT WILL NOT BE AUTOMATICALLY DISCOVERED.\n \n This is a marker interface used to mark classes and interfaces that Ghidra\n will automatically search for and load.","fields":[]}
