{"implements":["java.io.Serializable"],"javadoc":"Base class for managing properties that are accessed by an index. Property\n values are determined by the derived class.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.Class<?>","name":"objectClass","comment":"","type_short":"Class"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a PropertyMap\n@param name property name\n@param numPageBits number of bits to use for the\n \t\tpage size. Will be set to be at least 8 and no\n\t\tmore than 15.","static":false,"name":"<init>","comment":"Construct a PropertyMap","params":[{"type_long":"java.lang.String","name":"name","comment":"property name","type_short":"String"},{"type_long":"int","name":"numPageBits","comment":"number of bits to use for the\n \t\tpage size. Will be set to be at least 8 and no\n\t\tmore than 15.","type_short":"int"},{"type_long":"java.lang.Class<?>","name":"objectClass","comment":"","type_short":"Class"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the size (in bytes) of the data that is stored in this property\n set.\n@return the size (in bytes) of the data that is stored in this property\n set.","static":false,"name":"getDataSize","comment":"Returns the size (in bytes) of the data that is stored in this property\n set.","params":[],"throws":[],"return":{"type_long":"int","comment":"the size (in bytes) of the data that is stored in this property\n set.","type_short":"int"}},{"javadoc":"Get the name for this property manager.","static":false,"name":"getName","comment":"Get the name for this property manager.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns property object class associated with this set.","static":false,"name":"getObjectClass","comment":"Returns property object class associated with this set.","params":[],"throws":[],"return":{"type_long":"java.lang.Class<?>","comment":"","type_short":"Class"}},{"javadoc":"","static":false,"name":"getPage","comment":"","params":[{"type_long":"long","name":"pageId","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.util.prop.PropertyPage","comment":"","type_short":"PropertyPage"}},{"javadoc":"","static":false,"name":"getOrCreatePage","comment":"","params":[{"type_long":"long","name":"pageID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.util.prop.PropertyPage","comment":"","type_short":"PropertyPage"}},{"javadoc":"Given two indices it indicates whether there is an index in\n that range (inclusive) having the property.<p>\n@param start the start of the index range.\n@param end the end of the index range.\n@return boolean true if at least one index in the range\n has the property, false otherwise.","static":false,"name":"intersects","comment":"Given two indices it indicates whether there is an index in\n that range (inclusive) having the property.","params":[{"type_long":"long","name":"start","comment":"the start of the index range.","type_short":"long"},{"type_long":"long","name":"end","comment":"the end of the index range.","type_short":"long"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if at least one index in the range\n has the property, false otherwise.","type_short":"boolean"}},{"javadoc":"Removes all property values within a given range.\n@param start begin range\n@param end end range, inclusive\n@return true if any property value was removed; return\n \t\tfalse otherwise.","static":false,"name":"removeRange","comment":"Removes all property values within a given range.","params":[{"type_long":"long","name":"start","comment":"begin range","type_short":"long"},{"type_long":"long","name":"end","comment":"end range, inclusive","type_short":"long"}],"throws":[],"return":{"type_long":"boolean","comment":"true if any property value was removed; return\n \t\tfalse otherwise.","type_short":"boolean"}},{"javadoc":"Remove the property value at the given index.\n@return true if the property value was removed, false\n   otherwise.\n@param index the long representation of an address.","static":false,"name":"remove","comment":"Remove the property value at the given index.","params":[{"type_long":"long","name":"index","comment":"the long representation of an address.","type_short":"long"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the property value was removed, false\n   otherwise.","type_short":"boolean"}},{"javadoc":"Remove the property on page at offset.  If Page is now empty, remove it.","static":false,"name":"removeFromPage","comment":"Remove the property on page at offset.  If Page is now empty, remove it.","params":[{"type_long":"ghidra.util.prop.PropertyPage","name":"page","comment":"","type_short":"PropertyPage"},{"type_long":"long","name":"pageID","comment":"","type_short":"long"},{"type_long":"short","name":"offset","comment":"","type_short":"short"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"returns whether there is a property value at index.\n@param index the long representation of an address.","static":false,"name":"hasProperty","comment":"returns whether there is a property value at index.","params":[{"type_long":"long","name":"index","comment":"the long representation of an address.","type_short":"long"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get the next index where the property value exists.\n@param index the address from which to begin the search (exclusive).\n@throws NoSuchIndexException thrown if there is no address with\n   a property value after the given address.","static":false,"name":"getNextPropertyIndex","comment":"Get the next index where the property value exists.","params":[{"type_long":"long","name":"index","comment":"the address from which to begin the search (exclusive).","type_short":"long"}],"throws":[{"type_long":"ghidra.util.datastruct.NoSuchIndexException","comment":"thrown if there is no address with\n   a property value after the given address.","type_short":"NoSuchIndexException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Get the previous index where a property value exists.\n@param index the long representation of an address from which\n \t\tto begin the search (exclusive).\n@throws NoSuchIndexException when there is no index\n \t\twith a property value before the given address.","static":false,"name":"getPreviousPropertyIndex","comment":"Get the previous index where a property value exists.","params":[{"type_long":"long","name":"index","comment":"the long representation of an address from which\n \t\tto begin the search (exclusive).","type_short":"long"}],"throws":[{"type_long":"ghidra.util.datastruct.NoSuchIndexException","comment":"when there is no index\n \t\twith a property value before the given address.","type_short":"NoSuchIndexException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Get the first index where a property value exists.\n@throws NoSuchIndexException when there is no property value for any index.","static":false,"name":"getFirstPropertyIndex","comment":"Get the first index where a property value exists.","params":[],"throws":[{"type_long":"ghidra.util.datastruct.NoSuchIndexException","comment":"when there is no property value for any index.","type_short":"NoSuchIndexException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Get the last index where a property value exists.\n@exception NoSuchIndexException thrown if there is no address having the property value.","static":false,"name":"getLastPropertyIndex","comment":"Get the last index where a property value exists.","params":[],"throws":[{"type_long":"ghidra.util.datastruct.NoSuchIndexException","comment":"","type_short":"NoSuchIndexException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Get the number of properties in the set.\n@return the number of properties","static":false,"name":"getSize","comment":"Get the number of properties in the set.","params":[],"throws":[],"return":{"type_long":"int","comment":"the number of properties","type_short":"int"}},{"javadoc":"Extract the page ID from the given index.\n@param index the long representation of an address.","static":false,"name":"getPageID","comment":"Extract the page ID from the given index.","params":[{"type_long":"long","name":"index","comment":"the long representation of an address.","type_short":"long"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Extract the page offset from the given index.\n@param index the long representation of an address.","static":false,"name":"getPageOffset","comment":"Extract the page offset from the given index.","params":[{"type_long":"long","name":"index","comment":"the long representation of an address.","type_short":"long"}],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"Create an index from the pageID and the offset in the page.\n@return the long representation of an address.","static":false,"name":"getIndex","comment":"Create an index from the pageID and the offset in the page.","params":[{"type_long":"long","name":"pageID","comment":"","type_short":"long"},{"type_long":"short","name":"offset","comment":"","type_short":"short"}],"throws":[],"return":{"type_long":"long","comment":"the long representation of an address.","type_short":"long"}},{"javadoc":"Move the range of properties to the newStart index.\n@param start the beginning of the property range to move\n@param end the end of the property range to move\n@param newStart the new beginning of the property range after the move","static":false,"name":"moveRange","comment":"Move the range of properties to the newStart index.","params":[{"type_long":"long","name":"start","comment":"the beginning of the property range to move","type_short":"long"},{"type_long":"long","name":"end","comment":"the end of the property range to move","type_short":"long"},{"type_long":"long","name":"newStart","comment":"the new beginning of the property range after the move","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"moveIndex","comment":"","params":[{"type_long":"long","name":"from","comment":"","type_short":"long"},{"type_long":"long","name":"to","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"saveProperty","comment":"","params":[{"type_long":"java.io.ObjectOutputStream","name":"oos","comment":"","type_short":"ObjectOutputStream"},{"type_long":"long","name":"addr","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"restoreProperty","comment":"","params":[{"type_long":"java.io.ObjectInputStream","name":"ois","comment":"","type_short":"ObjectInputStream"},{"type_long":"long","name":"addr","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"java.lang.ClassNotFoundException","comment":"","type_short":"ClassNotFoundException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates an iterator over all the indexes that have this property within\n the given range.\n@param start The start address to search\n@param end The end address to search\n@return LongIterator Iterator over indexes that have properties.","static":false,"name":"getPropertyIterator","comment":"Creates an iterator over all the indexes that have this property within\n the given range.","params":[{"type_long":"long","name":"start","comment":"The start address to search","type_short":"long"},{"type_long":"long","name":"end","comment":"The end address to search","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.util.LongIterator","comment":"LongIterator Iterator over indexes that have properties.","type_short":"LongIterator"}},{"javadoc":"Creates an iterator over all the indexes that have this property within\n the given range.\n@param start The start address to search\n@param end The end address to search\n@param atStart indicates if the iterator should begin at the start\n address, otherwise it will start at the last address.  Set this flag to\n false if you want to iterate backwards through the properties.\n@return LongIterator Iterator over indexes that have properties.","static":false,"name":"getPropertyIterator","comment":"Creates an iterator over all the indexes that have this property within\n the given range.","params":[{"type_long":"long","name":"start","comment":"The start address to search","type_short":"long"},{"type_long":"long","name":"end","comment":"The end address to search","type_short":"long"},{"type_long":"boolean","name":"atStart","comment":"indicates if the iterator should begin at the start\n address, otherwise it will start at the last address.  Set this flag to\n false if you want to iterate backwards through the properties.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.util.LongIterator","comment":"LongIterator Iterator over indexes that have properties.","type_short":"LongIterator"}},{"javadoc":"Returns an iterator over the indices having the given property\n value.","static":false,"name":"getPropertyIterator","comment":"Returns an iterator over the indices having the given property\n value.","params":[],"throws":[],"return":{"type_long":"ghidra.util.LongIterator","comment":"","type_short":"LongIterator"}},{"javadoc":"Returns an iterator over the indices having the given property\n value.\n@param start the starting index for the iterator.","static":false,"name":"getPropertyIterator","comment":"Returns an iterator over the indices having the given property\n value.","params":[{"type_long":"long","name":"start","comment":"the starting index for the iterator.","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.util.LongIterator","comment":"","type_short":"LongIterator"}},{"javadoc":"Returns an iterator over the indices having the given property\n value.\n@param start the starting index for the iterator.\n@param before if true the iterator will be positioned before the start value.","static":false,"name":"getPropertyIterator","comment":"Returns an iterator over the indices having the given property\n value.","params":[{"type_long":"long","name":"start","comment":"the starting index for the iterator.","type_short":"long"},{"type_long":"boolean","name":"before","comment":"if true the iterator will be positioned before the start value.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.util.LongIterator","comment":"","type_short":"LongIterator"}},{"javadoc":"Saves all property values between start and end to the output stream\n@param oos the output stream\n@param start the first index in the range to save.\n@param end the last index in the range to save.\n@throws IOException if an I\/O error occurs on the write.","static":false,"name":"saveProperties","comment":"Saves all property values between start and end to the output stream","params":[{"type_long":"java.io.ObjectOutputStream","name":"oos","comment":"the output stream","type_short":"ObjectOutputStream"},{"type_long":"long","name":"start","comment":"the first index in the range to save.","type_short":"long"},{"type_long":"long","name":"end","comment":"the last index in the range to save.","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if an I\/O error occurs on the write.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Restores all the properties from the input stream.  Any existing\n properties will first be removed.\n@param ois the input stream.\n@throws IOException if I\/O error occurs.\n@throws ClassNotFoundException if the a class cannot be determined for\n the property value.","static":false,"name":"restoreProperties","comment":"Restores all the properties from the input stream.  Any existing\n properties will first be removed.","params":[{"type_long":"java.io.ObjectInputStream","name":"ois","comment":"the input stream.","type_short":"ObjectInputStream"}],"throws":[{"type_long":"java.io.IOException","comment":"if I\/O error occurs.","type_short":"IOException"},{"type_long":"java.lang.ClassNotFoundException","comment":"if the a class cannot be determined for\n the property value.","type_short":"ClassNotFoundException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Saves all properties to the given output stream.\n@param out the output stream.\n@throws IOException I\/O error occurs while writing output.","static":false,"name":"saveAll","comment":"Saves all properties to the given output stream.","params":[{"type_long":"java.io.ObjectOutputStream","name":"out","comment":"the output stream.","type_short":"ObjectOutputStream"}],"throws":[{"type_long":"java.io.IOException","comment":"I\/O error occurs while writing output.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Restores all properties values from the input stream.\n@param in the input stream.\n@throws IOException if I\/O error occurs while reading from stream.\n@throws ClassNotFoundException if the a class cannot be determined for\n the property value.","static":false,"name":"restoreAll","comment":"Restores all properties values from the input stream.","params":[{"type_long":"java.io.ObjectInputStream","name":"in","comment":"the input stream.","type_short":"ObjectInputStream"}],"throws":[{"type_long":"java.io.IOException","comment":"if I\/O error occurs while reading from stream.","type_short":"IOException"},{"type_long":"java.lang.ClassNotFoundException","comment":"if the a class cannot be determined for\n the property value.","type_short":"ClassNotFoundException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Based upon the type of property manager that this is, the appropriate\n visit() method will be called within the PropertyVisitor.\n@param visitor object implementing the PropertyVisitor interface.\n@param addr the address of where to visit (get) the property.","static":false,"name":"applyValue","comment":"Based upon the type of property manager that this is, the appropriate\n visit() method will be called within the PropertyVisitor.","params":[{"type_long":"ghidra.util.prop.PropertyVisitor","name":"visitor","comment":"object implementing the PropertyVisitor interface.","type_short":"PropertyVisitor"},{"type_long":"long","name":"addr","comment":"the address of where to visit (get) the property.","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"PropertySet","comment":"Base class for managing properties that are accessed by an index. Property\n values are determined by the derived class.","fields":[{"type_long":"long","javadoc":"","static":true,"name":"serialVersionUID","comment":"","type_short":"long","constant_value":"1"},{"type_long":"ghidra.util.exception.NoValueException","javadoc":"","static":true,"name":"noValueException","comment":"","type_short":"NoValueException","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"DEFAULT_NUMBER_PAGE_BITS","comment":"","type_short":"int","constant_value":"12"},{"type_long":"int","javadoc":"","static":true,"name":"MIN_NUMBER_PAGE_BITS","comment":"","type_short":"int","constant_value":"8"},{"type_long":"int","javadoc":"","static":true,"name":"MAX_NUMBER_PAGE_BITS","comment":"","type_short":"int","constant_value":"15"},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"name","comment":"","type_short":"String","constant_value":null},{"type_long":"ghidra.util.prop.PropertyPageIndex","javadoc":"","static":false,"name":"propertyPageIndex","comment":"","type_short":"PropertyPageIndex","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"numPageBits","comment":"","type_short":"int","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"pageMask","comment":"","type_short":"long","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"pageSize","comment":"","type_short":"short","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"numProperties","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.util.prop.PropertyPage>","javadoc":"","static":false,"name":"ht","comment":"","type_short":"LongObjectHashtable","constant_value":null},{"type_long":"java.lang.Class<?>","javadoc":"","static":false,"name":"objectClass","comment":"","type_short":"Class","constant_value":null}]}
