{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"setCreateTracingParsers","comment":"","params":[{"type_long":"ghidra.xml.XmlTracer","name":"xmlTracer","comment":"","type_short":"XmlTracer"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new parser using the specified stream and name.\n@param input the input XML stream\n@param name the name of the stream\n@param errHandler the XML error handler\n@param validate true if the parse should validate against the DTD\n@throws SAXException if an XML parse error occurs\n@throws IOException","static":true,"name":"create","comment":"Constructs a new parser using the specified stream and name.","params":[{"type_long":"java.io.InputStream","name":"input","comment":"the input XML stream","type_short":"InputStream"},{"type_long":"java.lang.String","name":"inputName","comment":"","type_short":"String"},{"type_long":"org.xml.sax.ErrorHandler","name":"errHandler","comment":"the XML error handler","type_short":"ErrorHandler"},{"type_long":"boolean","name":"validate","comment":"true if the parse should validate against the DTD","type_short":"boolean"}],"throws":[{"type_long":"org.xml.sax.SAXException","comment":"if an XML parse error occurs","type_short":"SAXException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.xml.XmlPullParser","comment":"","type_short":"XmlPullParser"}},{"javadoc":"Constructs a new parser using the specified XML file.\n@param file the input XML file\n@param errHandler the XML error handler\n@param validate true if the parse should validate against the DTD\n@throws SAXException if an XML parse error occurs\n@throws IOException if an i\/o error occurs","static":true,"name":"create","comment":"Constructs a new parser using the specified XML file.","params":[{"type_long":"java.io.File","name":"file","comment":"the input XML file","type_short":"File"},{"type_long":"org.xml.sax.ErrorHandler","name":"errHandler","comment":"the XML error handler","type_short":"ErrorHandler"},{"type_long":"boolean","name":"validate","comment":"true if the parse should validate against the DTD","type_short":"boolean"}],"throws":[{"type_long":"org.xml.sax.SAXException","comment":"if an XML parse error occurs","type_short":"SAXException"},{"type_long":"java.io.IOException","comment":"if an i\/o error occurs","type_short":"IOException"}],"return":{"type_long":"ghidra.xml.XmlPullParser","comment":"","type_short":"XmlPullParser"}},{"javadoc":"Constructs a new parser using the specified XML file.\n@param file the input XML file\n@param errHandler the XML error handler\n@param validate true if the parse should validate against the DTD\n@throws SAXException if an XML parse error occurs\n@throws IOException if an i\/o error occurs","static":true,"name":"create","comment":"Constructs a new parser using the specified XML file.","params":[{"type_long":"generic.jar.ResourceFile","name":"file","comment":"the input XML file","type_short":"ResourceFile"},{"type_long":"org.xml.sax.ErrorHandler","name":"errHandler","comment":"the XML error handler","type_short":"ErrorHandler"},{"type_long":"boolean","name":"validate","comment":"true if the parse should validate against the DTD","type_short":"boolean"}],"throws":[{"type_long":"org.xml.sax.SAXException","comment":"if an XML parse error occurs","type_short":"SAXException"},{"type_long":"java.io.IOException","comment":"if an i\/o error occurs","type_short":"IOException"}],"return":{"type_long":"ghidra.xml.XmlPullParser","comment":"","type_short":"XmlPullParser"}},{"javadoc":"Constructs a new parser using the specified XML file.\n@param input A string that contains the XML input data\n@param inputName A descriptive name for the XML process (this will appear as the thread name)\n@param errHandler the XML error handler\n@param validate true if the parse should validate against the DTD\n@throws SAXException if an XML parse error occurs\n@throws IOException if an i\/o error occurs","static":true,"name":"create","comment":"Constructs a new parser using the specified XML file.","params":[{"type_long":"java.lang.String","name":"input","comment":"A string that contains the XML input data","type_short":"String"},{"type_long":"java.lang.String","name":"inputName","comment":"A descriptive name for the XML process (this will appear as the thread name)","type_short":"String"},{"type_long":"org.xml.sax.ErrorHandler","name":"errHandler","comment":"the XML error handler","type_short":"ErrorHandler"},{"type_long":"boolean","name":"validate","comment":"true if the parse should validate against the DTD","type_short":"boolean"}],"throws":[{"type_long":"org.xml.sax.SAXException","comment":"if an XML parse error occurs","type_short":"SAXException"}],"return":{"type_long":"ghidra.xml.XmlPullParser","comment":"","type_short":"XmlPullParser"}}],"name":"XmlPullParserFactory","comment":"","fields":[]}
