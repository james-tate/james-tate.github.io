{"implements":[],"javadoc":"A class to override the default edge label placement.   This class is called a renderer because\n the parent class is.  However, it is not a renderer in the sense that it's job is to paint\n the contents, like in Java when you provide a cell rendering component, but rather, it uses\n such a component.  Further, the job of this class is to position said component and then to \n have it paint its contents.\n <p>\n Normally we would just set our custom renderer on the {@link RenderContext} at construction \n time, like we do with the other rendering classes, but not such method is provided.","static":false,"extends":"edu.uci.ics.jung.visualization.renderers.BasicEdgeLabelRenderer","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"labelEdge","comment":"","params":[{"type_long":"edu.uci.ics.jung.visualization.RenderContext<V,E>","name":"rc","comment":"","type_short":"RenderContext"},{"type_long":"edu.uci.ics.jung.algorithms.layout.Layout<V,E>","name":"layout","comment":"","type_short":"Layout"},{"type_long":"E","name":"e","comment":"","type_short":"E"},{"type_long":"java.lang.String","name":"label","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFunctionGraphLayout","comment":"","params":[{"type_long":"edu.uci.ics.jung.algorithms.layout.Layout<V,E>","name":"layout","comment":"","type_short":"Layout"}],"throws":[],"return":{"type_long":"ghidra.graph.viewer.layout.VisualGraphLayout<V,E>","comment":"","type_short":"VisualGraphLayout"}}],"name":"BasicEdgeLabelRenderer","comment":"A class to override the default edge label placement.   This class is called a renderer because\n the parent class is.  However, it is not a renderer in the sense that it's job is to paint\n the contents, like in Java when you provide a cell rendering component, but rather, it uses\n such a component.  Further, the job of this class is to position said component and then to \n have it paint its contents.\n \n Normally we would just set our custom renderer on the RenderContext at construction \n time, like we do with the other rendering classes, but not such method is provided.","fields":[]}
