{"implements":[],"javadoc":"A row in a grid.   This class stores its row index, its y offset and its height.   The\n y value is the layout space y value of a {@link Point2D} object.   That is, unlike the\n {@link GridLocationMap}, the y value of this object is in layout space and not indexes \n of a grid.\n \n <p>This class maintains a collection of vertices on this row, organized by column index.  You\n can get the column of a vertex from {@link #getColumn(V)}.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the column index in this row for the given vertex\n@param v the vertex\n@param col the column index","static":false,"name":"setColumn","comment":"Sets the column index in this row for the given vertex","params":[{"type_long":"V","name":"v","comment":"the vertex","type_short":"V"},{"type_long":"int","name":"col","comment":"the column index","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the column index for the given vertex\n@param v the vertex\n@return the column index for the given vertex","static":false,"name":"getColumn","comment":"Returns the column index for the given vertex","params":[{"type_long":"V","name":"v","comment":"the vertex","type_short":"V"}],"throws":[],"return":{"type_long":"int","comment":"the column index for the given vertex","type_short":"int"}},{"javadoc":"Returns the vertex at the given column index or null if there is no vertex at that column\n@param column the column index\n@return the vertex","static":false,"name":"getVertex","comment":"Returns the vertex at the given column index or null if there is no vertex at that column","params":[{"type_long":"int","name":"column","comment":"the column index","type_short":"int"}],"throws":[],"return":{"type_long":"V","comment":"the vertex","type_short":"V"}},{"javadoc":"Represents the range of columns in this row.  For this given row in a grid:\n <pre>\n \t0 1 2 3 4 5 6\n \t- - v - v - - \n <\/pre>\n the column count is 3--where the column range is 2-4, inclusive.   \n \n <p>Note: this differs from then number of vertices in this row, as the column count\n includes columns that have no vertex.\n@return the number of columns in this row, including empty columns between start and end","static":false,"name":"getColumnCount","comment":"Represents the range of columns in this row.  For this given row in a grid:\n \n \t0 1 2 3 4 5 6\n \t- - v - v - - \n \n the column count is 3--where the column range is 2-4, inclusive.   \n \n Note: this differs from then number of vertices in this row, as the column count\n includes columns that have no vertex.","params":[],"throws":[],"return":{"type_long":"int","comment":"the number of columns in this row, including empty columns between start and end","type_short":"int"}},{"javadoc":"Returns the smallest column index in this row\n@return the smallest column index in this row","static":false,"name":"getStartColumn","comment":"Returns the smallest column index in this row","params":[],"throws":[],"return":{"type_long":"java.lang.Integer","comment":"the smallest column index in this row","type_short":"Integer"}},{"javadoc":"Returns the largest column index in this row\n@return the largest column index in this row","static":false,"name":"getEndColumn","comment":"Returns the largest column index in this row","params":[],"throws":[],"return":{"type_long":"int","comment":"the largest column index in this row","type_short":"int"}},{"javadoc":"Returns all vertices in this row, sorted by column index (min to max).   \n \n <p>Note: the index of a vertex in the list does not match the column index.  To get the\n column index for a vertex, call {@link #getColumn(V)}.\n@return all vertices in this row","static":false,"name":"getVertices","comment":"Returns all vertices in this row, sorted by column index (min to max).   \n \n Note: the index of a vertex in the list does not match the column index.  To get the\n column index for a vertex, call #getColumn(V).","params":[],"throws":[],"return":{"type_long":"java.util.List<V>","comment":"all vertices in this row","type_short":"List"}},{"javadoc":"","static":false,"name":"getPaddedHeight","comment":"","params":[{"type_long":"boolean","name":"isCondensed","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isInitialized","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"Row","comment":"A row in a grid.   This class stores its row index, its y offset and its height.   The\n y value is the layout space y value of a Point2D object.   That is, unlike the\n GridLocationMap, the y value of this object is in layout space and not indexes \n of a grid.\n \n This class maintains a collection of vertices on this row, organized by column index.  You\n can get the column of a vertex from #getColumn(V).","fields":[{"type_long":"int","javadoc":"The <b>layout<\/b> y coordinate of the column","static":false,"name":"y","comment":"The layout y coordinate of the column","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"height","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"The grid index of this row (0, 1...n) for the number of rows","static":false,"name":"index","comment":"The grid index of this row (0, 1...n) for the number of rows","type_short":"int","constant_value":null},{"type_long":"java.util.TreeMap<java.lang.Integer,V>","javadoc":"","static":false,"name":"verticesByColumn","comment":"","type_short":"TreeMap","constant_value":null},{"type_long":"java.util.Map<V,java.lang.Integer>","javadoc":"","static":false,"name":"columnsByVertex","comment":"","type_short":"Map","constant_value":null}]}
