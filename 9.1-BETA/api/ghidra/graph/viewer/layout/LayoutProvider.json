{"implements":["ghidra.util.classfinder.ExtensionPoint"],"javadoc":"A layout provider creates {@link VisualGraphLayout} instances.  This class provides a name\n and icon for use in a UI.  These features can be used to create a menu of layouts that may \n be applied. \n \n <P>The pattern of usage for this class is for it to create the layout that it represents and\n then to apply the locations of that layout to the vertices (and edges, in the case of\n articulating edges) of the graph before returning the new layout.\n@param <V> the vertex type\n@param <E> the edge type\n@param <G> the graph type","static":false,"methods":[{"javadoc":"Returns a new instance of the layout that this class provides\n@param graph the graph\n@param monitor a task monitor\n@return the new layout\n@throws CancelledException if the monitor was cancelled","static":false,"name":"getLayout","comment":"Returns a new instance of the layout that this class provides","params":[{"type_long":"G","name":"graph","comment":"the graph","type_short":"G"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"a task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the monitor was cancelled","type_short":"CancelledException"}],"return":{"type_long":"ghidra.graph.viewer.layout.VisualGraphLayout<V,E>","comment":"the new layout","type_short":"VisualGraphLayout"}},{"javadoc":"Returns the name of this layout\n@return the name of this layout","static":false,"name":"getLayoutName","comment":"Returns the name of this layout","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the name of this layout","type_short":"String"}},{"javadoc":"Returns an icon that can be used to show the provider a menu or toolbar.  This may \n return null, as an icon is not a requirement.\n@return an icon that can be used to show the provider a menu or toolbar","static":false,"name":"getActionIcon","comment":"Returns an icon that can be used to show the provider a menu or toolbar.  This may \n return null, as an icon is not a requirement.","params":[],"throws":[],"return":{"type_long":"javax.swing.Icon","comment":"an icon that can be used to show the provider a menu or toolbar","type_short":"Icon"}},{"javadoc":"Returns an arbitrary value that is relative to other LayoutProviders.  The higher the \n value the more preferred the provider will be over other providers.\n@return the priority","static":false,"name":"getPriorityLevel","comment":"Returns an arbitrary value that is relative to other LayoutProviders.  The higher the \n value the more preferred the provider will be over other providers.","params":[],"throws":[],"return":{"type_long":"int","comment":"the priority","type_short":"int"}}],"name":"LayoutProvider","comment":"A layout provider creates VisualGraphLayout instances.  This class provides a name\n and icon for use in a UI.  These features can be used to create a menu of layouts that may \n be applied. \n \n The pattern of usage for this class is for it to create the layout that it represents and\n then to apply the locations of that layout to the vertices (and edges, in the case of\n articulating edges) of the graph before returning the new layout.","fields":[]}
