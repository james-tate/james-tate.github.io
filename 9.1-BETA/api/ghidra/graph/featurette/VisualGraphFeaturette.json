{"implements":[],"javadoc":"An interface that represents a sub-feature of a {@link VisualGraphComponentProvider}.  This\n allows the base provider to have a set of features ready to be installed by subclasses.","static":false,"methods":[{"javadoc":"Called to initialize this feature when the provider and view are ready\n@param provider the provider associated with this feature","static":false,"name":"init","comment":"Called to initialize this feature when the provider and view are ready","params":[{"type_long":"ghidra.graph.VisualGraphComponentProvider<V,E,G>","name":"provider","comment":"the provider associated with this feature","type_short":"VisualGraphComponentProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Called when the client wishes to save configuration state.  Features can add any state\n they wish to be persisted over tool launches.\n@param state the container for state information","static":false,"name":"writeConfigState","comment":"Called when the client wishes to save configuration state.  Features can add any state\n they wish to be persisted over tool launches.","params":[{"type_long":"ghidra.framework.options.SaveState","name":"state","comment":"the container for state information","type_short":"SaveState"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Called when the client wishes to restore configuration state.  Features can read state\n previously saved from a call to {@link #writeConfigState(SaveState)}.\n@param state the container for state information","static":false,"name":"readConfigState","comment":"Called when the client wishes to restore configuration state.  Features can read state\n previously saved from a call to #writeConfigState(SaveState).","params":[{"type_long":"ghidra.framework.options.SaveState","name":"saveState","comment":"","type_short":"SaveState"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Called when the client provider is opened\n@param provider the provider","static":false,"name":"providerOpened","comment":"Called when the client provider is opened","params":[{"type_long":"ghidra.graph.VisualGraphComponentProvider<V,E,G>","name":"provider","comment":"the provider","type_short":"VisualGraphComponentProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Called when the client provider is closed\n@param provider the provider","static":false,"name":"providerClosed","comment":"Called when the client provider is closed","params":[{"type_long":"ghidra.graph.VisualGraphComponentProvider<V,E,G>","name":"provider","comment":"the provider","type_short":"VisualGraphComponentProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Called when the provider is being disposed","static":false,"name":"remove","comment":"Called when the provider is being disposed","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"VisualGraphFeaturette","comment":"An interface that represents a sub-feature of a VisualGraphComponentProvider.  This\n allows the base provider to have a set of features ready to be installed by subclasses.","fields":[]}
