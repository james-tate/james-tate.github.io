{"implements":["db.DBFieldIterator"],"javadoc":"Iterates over index field values within a specified range.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct an index field iterator starting with the minimum index value.","static":false,"name":"<init>","comment":"Construct an index field iterator starting with the minimum index value.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct an index field iterator.  The iterator is positioned at index \n value identified by startValue.\n@param startValue minimum index value or null if no minimum\n@param endValue maximum index value or null if no maximum\n@param atStart if true initial position is before startValue, else position\n is after endValue\n@throws IOException","static":false,"name":"<init>","comment":"Construct an index field iterator.  The iterator is positioned at index \n value identified by startValue.","params":[{"type_long":"long","name":"minValue","comment":"","type_short":"long"},{"type_long":"long","name":"maxValue","comment":"","type_short":"long"},{"type_long":"boolean","name":"atMin","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@param min\n@param max\n@param longValue\n@param before","static":false,"name":"<init>","comment":"","params":[{"type_long":"long","name":"minValue","comment":"","type_short":"long"},{"type_long":"long","name":"maxValue","comment":"","type_short":"long"},{"type_long":"long","name":"start","comment":"","type_short":"long"},{"type_long":"boolean","name":"before","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hasNext","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hasPrevious","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"next","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.Field","comment":"","type_short":"Field"}},{"javadoc":"","static":false,"name":"previous","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.Field","comment":"","type_short":"Field"}},{"javadoc":"Delete all primary records which have the current\n index value (lastKey).\n@see db.DBFieldIterator#delete()","static":false,"name":"delete","comment":"Delete all primary records which have the current\n index value (lastKey).","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"IndexLongIterator","comment":"Iterates over index field values within a specified range.","fields":[{"type_long":"db.Field","javadoc":"","static":false,"name":"lastKey","comment":"","type_short":"Field","constant_value":null},{"type_long":"db.Field","javadoc":"","static":false,"name":"keyField","comment":"","type_short":"Field","constant_value":null},{"type_long":"db.DBLongIterator","javadoc":"","static":false,"name":"indexIterator","comment":"","type_short":"DBLongIterator","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"hasNext","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"hasPrev","comment":"","type_short":"boolean","constant_value":null}]}
