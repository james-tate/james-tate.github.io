{"implements":["java.lang.Comparable"],"javadoc":"<code>Field<\/code> is an abstract data wrapper for use with Records.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get field as a long value.\n All fixed-length field objects must implement this method\n@return long value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"getLongValue","comment":"Get field as a long value.\n All fixed-length field objects must implement this method","params":[],"throws":[],"return":{"type_long":"long","comment":"long value","type_short":"long"}},{"javadoc":"Set field's long value.\n All fixed-length field objects must implement this method\n@param value long value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"setLongValue","comment":"Set field's long value.\n All fixed-length field objects must implement this method","params":[{"type_long":"long","name":"value","comment":"long value","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get field as an integer value.\n@return integer value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"getIntValue","comment":"Get field as an integer value.","params":[],"throws":[],"return":{"type_long":"int","comment":"integer value","type_short":"int"}},{"javadoc":"Set field's integer value.\n@param value integer value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"setIntValue","comment":"Set field's integer value.","params":[{"type_long":"int","name":"value","comment":"integer value","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get field as a short value.\n@return short value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"getShortValue","comment":"Get field as a short value.","params":[],"throws":[],"return":{"type_long":"short","comment":"short value","type_short":"short"}},{"javadoc":"Set field's short value.\n@param value short value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"setShortValue","comment":"Set field's short value.","params":[{"type_long":"short","name":"value","comment":"short value","type_short":"short"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get field as a byte value.\n@return byte value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"getByteValue","comment":"Get field as a byte value.","params":[],"throws":[],"return":{"type_long":"byte","comment":"byte value","type_short":"byte"}},{"javadoc":"Set field's byte value.\n@param value byte value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"setByteValue","comment":"Set field's byte value.","params":[{"type_long":"byte","name":"value","comment":"byte value","type_short":"byte"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get field as a boolean value.\n@return boolean value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"getBooleanValue","comment":"Get field as a boolean value.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"boolean value","type_short":"boolean"}},{"javadoc":"Set field's boolean value.\n@param value boolean value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"setBooleanValue","comment":"Set field's boolean value.","params":[{"type_long":"boolean","name":"value","comment":"boolean value","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get data as a byte array.\n@return byte[]","static":false,"name":"getBinaryData","comment":"Get data as a byte array.","params":[],"throws":[],"return":{"type_long":"byte[]","comment":"byte[]","type_short":"byte[]"}},{"javadoc":"Set data from binary byte array.\n All variable-length fields must implement this method.\n@param bytes field data","static":false,"name":"setBinaryData","comment":"Set data from binary byte array.\n All variable-length fields must implement this method.","params":[{"type_long":"byte[]","name":"bytes","comment":"field data","type_short":"byte[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get field as a String value.\n@return String value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"getString","comment":"Get field as a String value.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"String value","type_short":"String"}},{"javadoc":"Set field's String value.\n@param str String value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"setString","comment":"Set field's String value.","params":[{"type_long":"java.lang.String","name":"str","comment":"String value","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Truncate a variable length field to the specified length.\n If current length is shorterm, this method has no affect.\n@param length","static":false,"name":"truncate","comment":"Truncate a variable length field to the specified length.\n If current length is shorterm, this method has no affect.","params":[{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return true if a Field instance is variable length, else false.","static":false,"name":"isVariableLength","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if a Field instance is variable length, else false.","type_short":"boolean"}},{"javadoc":"Create new instance of this field type.\n@param fieldValue initial field value.\n@return long","static":false,"name":"newField","comment":"Create new instance of this field type.","params":[{"type_long":"db.Field","name":"fieldValue","comment":"initial field value.","type_short":"Field"}],"throws":[],"return":{"type_long":"db.Field","comment":"long","type_short":"Field"}},{"javadoc":"Create new instance of this field type.\n@return long","static":false,"name":"newField","comment":"Create new instance of this field type.","params":[],"throws":[],"return":{"type_long":"db.Field","comment":"long","type_short":"Field"}},{"javadoc":"Return Field instance type as an integer value","static":false,"name":"getFieldType","comment":"Return Field instance type as an integer value","params":[],"throws":[],"return":{"type_long":"byte","comment":"","type_short":"byte"}},{"javadoc":"Write the field to buf at the specified offset.  When writing variable length \n fields, the length preceeds the actual data.\n@param buf data buffer\n@param offset data offset\n@return next available Field offset within buffer, or -1 if end of buffer reached.\n@throws IOException thrown if IO error occurs","static":false,"name":"write","comment":"Write the field to buf at the specified offset.  When writing variable length \n fields, the length preceeds the actual data.","params":[{"type_long":"db.Buffer","name":"buf","comment":"data buffer","type_short":"Buffer"},{"type_long":"int","name":"offset","comment":"data offset","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"thrown if IO error occurs","type_short":"IOException"}],"return":{"type_long":"int","comment":"next available Field offset within buffer, or -1 if end of buffer reached.","type_short":"int"}},{"javadoc":"Read the field value from buf at the specified offset. When reading variable length \n fields, the length preceeds the actual data.\n@param buf data buffer\n@param offset data offset\n@return next Field offset within buffer, or -1 if end of buffer reached.\n@throws IOException thrown if IO error occurs","static":false,"name":"read","comment":"Read the field value from buf at the specified offset. When reading variable length \n fields, the length preceeds the actual data.","params":[{"type_long":"db.Buffer","name":"buf","comment":"data buffer","type_short":"Buffer"},{"type_long":"int","name":"offset","comment":"data offset","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"thrown if IO error occurs","type_short":"IOException"}],"return":{"type_long":"int","comment":"next Field offset within buffer, or -1 if end of buffer reached.","type_short":"int"}},{"javadoc":"Get the total number of bytes which will be read from the buffer\n for this field.  For variable-length fields, only the length \n portion of the data is examined within the buffer.  This method is intended\n to be used instead of the read method when only interested in the data \n length.\n@param buf data buffer\n@param offset data offset\n@return total number of bytes for this field stored within buf\n@throws IOException thrown if IO error occurs","static":false,"name":"readLength","comment":"Get the total number of bytes which will be read from the buffer\n for this field.  For variable-length fields, only the length \n portion of the data is examined within the buffer.  This method is intended\n to be used instead of the read method when only interested in the data \n length.","params":[{"type_long":"db.Buffer","name":"buf","comment":"data buffer","type_short":"Buffer"},{"type_long":"int","name":"offset","comment":"data offset","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"thrown if IO error occurs","type_short":"IOException"}],"return":{"type_long":"int","comment":"total number of bytes for this field stored within buf","type_short":"int"}},{"javadoc":"Get the number of bytes required to store this field value.\n For a variable length fields, this value also accounts for a 4-byte\n length prefix.  Additionally, this method should not be invoked when \n working with stored data until after the read method has been invoked.\n@return total storage length","static":false,"name":"length","comment":"Get the number of bytes required to store this field value.\n For a variable length fields, this value also accounts for a 4-byte\n length prefix.  Additionally, this method should not be invoked when \n working with stored data until after the read method has been invoked.","params":[],"throws":[],"return":{"type_long":"int","comment":"total storage length","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getValueAsString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Get the field associated with the specified type value.\n@param fieldType\n@return Field","static":true,"name":"getField","comment":"Get the field associated with the specified type value.","params":[{"type_long":"byte","name":"fieldType","comment":"","type_short":"byte"}],"throws":[],"return":{"type_long":"db.Field","comment":"Field","type_short":"Field"}}],"name":"Field","comment":"Field is an abstract data wrapper for use with Records.","fields":[{"type_long":"byte","javadoc":"Field type for ByteField\n@see db.ByteField","static":true,"name":"BYTE_TYPE","comment":"Field type for ByteField","type_short":"byte","constant_value":"0"},{"type_long":"byte","javadoc":"Field type for ShortField\n@see db.ShortField","static":true,"name":"SHORT_TYPE","comment":"Field type for ShortField","type_short":"byte","constant_value":"1"},{"type_long":"byte","javadoc":"Field type for IntField\n@see db.IntField","static":true,"name":"INT_TYPE","comment":"Field type for IntField","type_short":"byte","constant_value":"2"},{"type_long":"byte","javadoc":"Field type for LongField\n@see db.LongField","static":true,"name":"LONG_TYPE","comment":"Field type for LongField","type_short":"byte","constant_value":"3"},{"type_long":"byte","javadoc":"Field type for StringField\n@see db.StringField","static":true,"name":"STRING_TYPE","comment":"Field type for StringField","type_short":"byte","constant_value":"4"},{"type_long":"byte","javadoc":"Field type for BinaryField\n@see db.BinaryField","static":true,"name":"BINARY_OBJ_TYPE","comment":"Field type for BinaryField","type_short":"byte","constant_value":"5"},{"type_long":"byte","javadoc":"Field type for BooleanField\n@see db.BooleanField","static":true,"name":"BOOLEAN_TYPE","comment":"Field type for BooleanField","type_short":"byte","constant_value":"6"},{"type_long":"byte","javadoc":"Field type flag mask used to isolate flag bits","static":true,"name":"TYPE_FLAG_MASK","comment":"Field type flag mask used to isolate flag bits","type_short":"byte","constant_value":"-64"},{"type_long":"byte","javadoc":"Field base type mask used to isolate base type","static":true,"name":"BASE_TYPE_MASK","comment":"Field base type mask used to isolate base type","type_short":"byte","constant_value":"63"},{"type_long":"byte","javadoc":"Field type flag bit shared by all Index type fields","static":true,"name":"INDEX_TYPE_FLAG","comment":"Field type flag bit shared by all Index type fields","type_short":"byte","constant_value":"-128"}]}
