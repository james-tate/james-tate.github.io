{"implements":[],"javadoc":"<code>VersionFile<\/code> records buffer changes and parameters necessary to reconstruct an\n older version of a LocalBufferFile.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a new version file for output.\n@param originalBf the original buffer file which is to be reconstructed\n from this version file.\n@param targetBf the buffer file to which this version file will be applied.\n@param vfile version buffer file to be created\n@throws IOException if vfile already exists or an IO error occurs","static":false,"name":"<init>","comment":"Construct a new version file for output.","params":[{"type_long":"db.buffers.LocalBufferFile","name":"originalBf","comment":"the original buffer file which is to be reconstructed\n from this version file.","type_short":"LocalBufferFile"},{"type_long":"db.buffers.LocalBufferFile","name":"targetBf","comment":"the buffer file to which this version file will be applied.","type_short":"LocalBufferFile"},{"type_long":"java.io.File","name":"vfile","comment":"version buffer file to be created","type_short":"File"}],"throws":[{"type_long":"java.io.IOException","comment":"if vfile already exists or an IO error occurs","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a read-only version file.\n@param vfile an existing version file\n@throws IOException","static":false,"name":"<init>","comment":"Construct a read-only version file.","params":[{"type_long":"java.io.File","name":"vfile","comment":"an existing version file","type_short":"File"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a read-only version file.\n@param versionFile an existing version file open read-only\n@throws IOException","static":false,"name":"<init>","comment":"Construct a read-only version file.","params":[{"type_long":"db.buffers.BufferFile","name":"versionFile","comment":"an existing version file open read-only","type_short":"BufferFile"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Abort the creation\/update of this version file.\n This method should be invoked in place of close on a failure condition.\n An attempt is made to restore the version file to its initial state\n or remove it if it was new.\n@throws IOException","static":false,"name":"abort","comment":"Abort the creation\/update of this version file.\n This method should be invoked in place of close on a failure condition.\n An attempt is made to restore the version file to its initial state\n or remove it if it was new.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Close the version file.","static":false,"name":"close","comment":"Close the version file.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Reopen version file as read-only\n@throws IOException","static":false,"name":"open","comment":"Reopen version file as read-only","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"parseFile","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateBufferMap","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"readBufferMap","comment":"","params":[{"type_long":"int","name":"mapIndex","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"saveFreeIndexList","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"readFreeIndexList","comment":"","params":[{"type_long":"int","name":"listIndex","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Change the file ID associated with the buffer file to which this version \n file can be applied.\n@param fileId file ID","static":false,"name":"setTargetFileId","comment":"Change the file ID associated with the buffer file to which this version \n file can be applied.","params":[{"type_long":"long","name":"fileId","comment":"file ID","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if this version file will accept old buffer data for the specified buffer index.\n@param index buffer index","static":false,"name":"isPutOK","comment":"Returns true if this version file will accept old buffer data for the specified buffer index.","params":[{"type_long":"int","name":"index","comment":"buffer index","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns true if the specified index was free in the original file.\n@param index","static":false,"name":"isFreeIndex","comment":"Returns true if the specified index was free in the original file.","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns the list of free indexes associated with the original\n buffer file.","static":false,"name":"getFreeIndexList","comment":"Returns the list of free indexes associated with the original\n buffer file.","params":[],"throws":[],"return":{"type_long":"int[]","comment":"","type_short":"int[]"}},{"javadoc":"Store original buffer which has been modified in the target.  When reverting to \n the original file version, these buffers should replace the newer version.\n@param buf old buffer\n@throws IOException if an IO error occurs","static":false,"name":"putOldBuffer","comment":"Store original buffer which has been modified in the target.  When reverting to \n the original file version, these buffers should replace the newer version.","params":[{"type_long":"db.buffers.DataBuffer","name":"buf","comment":"old buffer","type_short":"DataBuffer"},{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"if an IO error occurs","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get original buffer associated with the specified storage index in the \n original file.\n@param buf data buffer\n@param index storage index\n@return data buffer or null if buffer has not been modified\n@throws IOException if an IO error occurs","static":false,"name":"getOldBuffer","comment":"Get original buffer associated with the specified storage index in the \n original file.","params":[{"type_long":"db.buffers.DataBuffer","name":"buf","comment":"data buffer","type_short":"DataBuffer"},{"type_long":"int","name":"index","comment":"storage index","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"if an IO error occurs","type_short":"IOException"}],"return":{"type_long":"db.buffers.DataBuffer","comment":"data buffer or null if buffer has not been modified","type_short":"DataBuffer"}},{"javadoc":"Returns list of original buffer indexes stored within this file.\n These indexes reflect those buffers which have been modified since\n the original version.","static":false,"name":"getOldBufferIndexes","comment":"Returns list of original buffer indexes stored within this file.\n These indexes reflect those buffers which have been modified since\n the original version.","params":[],"throws":[],"return":{"type_long":"int[]","comment":"","type_short":"int[]"}},{"javadoc":"Returns file ID for buffer file to which this version file may be applied.","static":false,"name":"getTargetFileID","comment":"Returns file ID for buffer file to which this version file may be applied.","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Returns file ID for original buffer file which may be produced with this version file.","static":false,"name":"getOriginalFileID","comment":"Returns file ID for original buffer file which may be produced with this version file.","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Returns buffer count for original buffer file.","static":false,"name":"getOriginalBufferCount","comment":"Returns buffer count for original buffer file.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns a list of parameters defined within the original beffer file.\n@throws IOException","static":false,"name":"getOldParameterNames","comment":"Returns a list of parameters defined within the original beffer file.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Get a parameter value associated with the original buffer file.\n@param name parameter name\n@return parameter value\n@throws IOException","static":false,"name":"getOldParameter","comment":"Get a parameter value associated with the original buffer file.","params":[{"type_long":"java.lang.String","name":"name","comment":"parameter name","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"parameter value","type_short":"int"}}],"name":"VersionFile","comment":"VersionFile records buffer changes and parameters necessary to reconstruct an\n older version of a LocalBufferFile.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"MAGIC_NUMBER","comment":"","type_short":"int","constant_value":"942486581"},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"VERSION_PARM_PREFIX","comment":"","type_short":"String","constant_value":"\"~VF.\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"MAGIC_NUMBER_PARM","comment":"","type_short":"String","constant_value":"\"~VF.VersionFile\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ORIGINAL_FILE_ID_HI_PARM","comment":"","type_short":"String","constant_value":"\"~VF.OriginalIdHi\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ORIGINAL_FILE_ID_LOW_PARM","comment":"","type_short":"String","constant_value":"\"~VF.OriginalIdLow\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TARGET_FILE_ID_HI_PARM","comment":"","type_short":"String","constant_value":"\"~VF.TargetIdHi\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TARGET_FILE_ID_LOW_PARM","comment":"","type_short":"String","constant_value":"\"~VF.TargetIdLow\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ORIGINAL_BUFFER_COUNT_PARM","comment":"","type_short":"String","constant_value":"\"~VF.OrigBufCnt\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"MAP_BUFFER_INDEX_PARM","comment":"","type_short":"String","constant_value":"\"~VF.MapIndex\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"FREE_LIST_BUFFER_INDEX_PARM","comment":"","type_short":"String","constant_value":"\"~VF.FreeListIndex\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"FREE_LIST_SIZE_PARM","comment":"","type_short":"String","constant_value":"\"~VF.FreeListSize\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"BAD_FREE_LIST","comment":"","type_short":"String","constant_value":"\"Version file is corrupt - bad free list\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"BAD_BUFFER_MAP","comment":"","type_short":"String","constant_value":"\"Version file is corrupt - bad buffer map\""},{"type_long":"int","javadoc":"","static":true,"name":"NEXT_BUFFER_INDEX_OFFSET","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"FIRST_ENTRY_OFFSET","comment":"","type_short":"int","constant_value":"4"},{"type_long":"int","javadoc":"","static":true,"name":"BUFFER_MAP_ENTRY_SIZE","comment":"","type_short":"int","constant_value":"8"},{"type_long":"int","javadoc":"","static":true,"name":"FREE_LIST_ENTRY_SIZE","comment":"","type_short":"int","constant_value":"4"},{"type_long":"java.io.File","javadoc":"","static":false,"name":"file","comment":"","type_short":"File","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"lastModified","comment":"","type_short":"long","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"readOnly","comment":"","type_short":"boolean","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"bufferSize","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"originalBufCount","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"initialBufCount","comment":"","type_short":"int","constant_value":null},{"type_long":"db.buffers.BufferFile","javadoc":"","static":false,"name":"versionFile","comment":"","type_short":"BufferFile","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"targetFileId","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"originalFileId","comment":"","type_short":"long","constant_value":null},{"type_long":"db.buffers.IndexProvider","javadoc":"","static":false,"name":"vfIndexProvider","comment":"","type_short":"IndexProvider","constant_value":null},{"type_long":"int[]","javadoc":"","static":false,"name":"freeIndexes","comment":"","type_short":"int[]","constant_value":null},{"type_long":"ghidra.util.datastruct.IntIntHashtable","javadoc":"","static":false,"name":"bufferIndexMap","comment":"","type_short":"IntIntHashtable","constant_value":null},{"type_long":"ghidra.util.datastruct.IntArrayList","javadoc":"","static":false,"name":"newMapIds","comment":"","type_short":"IntArrayList","constant_value":null},{"type_long":"db.buffers.DataBuffer","javadoc":"","static":false,"name":"lastMapBuffer","comment":"","type_short":"DataBuffer","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"lastMapIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"nextMapEntryOffset","comment":"","type_short":"int","constant_value":null}]}
