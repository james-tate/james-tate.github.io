{"implements":[],"javadoc":"","static":false,"extends":"ghidra.program.database.ProgramBuilder","methods":[{"javadoc":"Construct toy program builder using specified toy language\n@param name program name\n@param languageName toy language ID (note: only builder variant supports all instructions)\n@param consumer program consumer (if null this builder will be used as consumer and must be disposed to release program)\n@throws Exception","static":false,"name":"<init>","comment":"Construct toy program builder using specified toy language","params":[{"type_long":"java.lang.String","name":"name","comment":"program name","type_short":"String"},{"type_long":"java.lang.String","name":"languageName","comment":"toy language ID (note: only builder variant supports all instructions)","type_short":"String"},{"type_long":"java.lang.Object","name":"consumer","comment":"program consumer (if null this builder will be used as consumer and must be disposed to release program)","type_short":"Object"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct toy program builder using toy language \"builder\" variant.\n This builder will be the program consumer and must be disposed\n@param name program name\n@param bigEndian language endianess\n@throws Exception","static":false,"name":"<init>","comment":"Construct toy program builder using toy language \"builder\" variant.\n This builder will be the program consumer and must be disposed","params":[{"type_long":"java.lang.String","name":"name","comment":"program name","type_short":"String"},{"type_long":"boolean","name":"bigEndian","comment":"language endianess","type_short":"boolean"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct toy program builder using toy language \"builder\" variant.\n This builder will be the program consumer and must be disposed\n@param name program name\n@param bigEndian language endianess\n@param consumer program consumer (if null this builder will be used as consumer and must be disposed to release program)\n@throws Exception","static":false,"name":"<init>","comment":"Construct toy program builder using toy language \"builder\" variant.\n This builder will be the program consumer and must be disposed","params":[{"type_long":"java.lang.String","name":"name","comment":"program name","type_short":"String"},{"type_long":"boolean","name":"bigEndian","comment":"language endianess","type_short":"boolean"},{"type_long":"java.lang.Object","name":"consumer","comment":"program consumer (if null this builder will be used as consumer and must be disposed to release program)","type_short":"Object"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct toy program builder using toy language \"builder\" variant.\n This builder will be the program consumer and must be disposed\n@param name program name\n@param bigEndian language endianess\n@param consumer program consumer (if null this builder will be used as consumer and must be disposed to release program)\n@throws Exception","static":false,"name":"<init>","comment":"Construct toy program builder using toy language \"builder\" variant.\n This builder will be the program consumer and must be disposed","params":[{"type_long":"java.lang.String","name":"name","comment":"program name","type_short":"String"},{"type_long":"boolean","name":"bigEndian","comment":"language endianess","type_short":"boolean"},{"type_long":"boolean","name":"wordAligned","comment":"","type_short":"boolean"},{"type_long":"java.lang.Object","name":"consumer","comment":"program consumer (if null this builder will be used as consumer and must be disposed to release program)","type_short":"Object"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getToyLanguageId","comment":"","params":[{"type_long":"boolean","name":"bigEndian","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"wordAligned","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"checkLanguageName","comment":"","params":[{"type_long":"java.lang.String","name":"languageName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Get address in default ram space\n@param offset address offset\n@return address","static":false,"name":"getAddress","comment":"Get address in default ram space","params":[{"type_long":"long","name":"offset","comment":"address offset","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"address","type_short":"Address"}},{"javadoc":"","static":false,"name":"addInstructionBytes","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"byte[]","name":"instrBytes","comment":"","type_short":"byte[]"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addInstructionWords","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"short[]","name":"instrWords","comment":"","type_short":"short[]"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getByteRelativeOffset","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"dest","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"","static":false,"name":"getShortRelativeOffset","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"dest","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"","static":false,"name":"toHex","comment":"","params":[{"type_long":"long","name":"value","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Get locations where instruction bytes have been added\n@return instruction start locations","static":false,"name":"getDefinedInstructionAddress","comment":"Get locations where instruction bytes have been added","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.address.Address>","comment":"instruction start locations","type_short":"List"}},{"javadoc":"Reset\/clear the list of defined instruction addresses","static":false,"name":"resetDefinedInstructionAddresses","comment":"Reset\/clear the list of defined instruction addresses","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add NOP instruction bytes of specified byte length\n@param offset instruction address offset\n@param length length of NOP instruction in bytes\n@throws MemoryAccessException","static":false,"name":"addBytesNOP","comment":"Add NOP instruction bytes of specified byte length","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"},{"type_long":"int","name":"length","comment":"length of NOP instruction in bytes","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add NOP instruction bytes of specified byte length\n@param addr instruction address\n@param length length of NOP instruction in bytes\n@throws MemoryAccessException","static":false,"name":"addBytesNOP","comment":"Add NOP instruction bytes of specified byte length","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"},{"type_long":"int","name":"length","comment":"length of NOP instruction in bytes","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add simple fall-through (consumes 2-bytes)\n@param offset instruction address offset\n@throws MemoryAccessException","static":false,"name":"addBytesFallthrough","comment":"Add simple fall-through (consumes 2-bytes)","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add simple fall-through (consumes 2-bytes)\n@param addr instruction address\n@throws MemoryAccessException","static":false,"name":"addBytesFallthrough","comment":"Add simple fall-through (consumes 2-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add store indirect (consumes 2-bytes)\n@param offset instruction address offset\n@param srcRegIndex source register index (0..15)\n@param destRegIndex destination register index (contained indirect memory address)  (0..15)\n@throws MemoryAccessException","static":false,"name":"addBytesStore","comment":"Add store indirect (consumes 2-bytes)","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"},{"type_long":"int","name":"srcRegIndex","comment":"source register index (0..15)","type_short":"int"},{"type_long":"int","name":"destRegIndex","comment":"destination register index (contained indirect memory address)  (0..15)","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add store indirect (consumes 2-bytes)\n@param addr instruction address\n@param srcRegIndex source register index (0..15)\n@param destRegIndex destination register index (contained indirect memory address)  (0..15)\n@throws MemoryAccessException","static":false,"name":"addBytesStore","comment":"Add store indirect (consumes 2-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"},{"type_long":"int","name":"srcRegIndex","comment":"source register index (0..15)","type_short":"int"},{"type_long":"int","name":"destRegIndex","comment":"destination register index (contained indirect memory address)  (0..15)","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add load indirect (consumes 2-bytes)\n@param offset instruction address offset\n@param srcRegIndex source register index (contained indirect memory address) (0..15)\n@param destRegIndex destination register index (0..15)\n@throws MemoryAccessException","static":false,"name":"addBytesLoad","comment":"Add load indirect (consumes 2-bytes)","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"},{"type_long":"int","name":"srcRegIndex","comment":"source register index (contained indirect memory address) (0..15)","type_short":"int"},{"type_long":"int","name":"destRegIndex","comment":"destination register index (0..15)","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add load indirect (consumes 2-bytes)\n@param addr instruction address\n@param srcRegIndex source register index (contained indirect memory address) (0..15)\n@param destRegIndex destination register index (0..15)\n@throws MemoryAccessException","static":false,"name":"addBytesLoad","comment":"Add load indirect (consumes 2-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"},{"type_long":"int","name":"srcRegIndex","comment":"source register index (contained indirect memory address) (0..15)","type_short":"int"},{"type_long":"int","name":"destRegIndex","comment":"destination register index (0..15)","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add move immediate instruction (consumes 2-bytes)\n@param addr instruction address\n@param imm immediate byte value\n@throws MemoryAccessException","static":false,"name":"addBytesMoveImmediate","comment":"Add move immediate instruction (consumes 2-bytes)","params":[{"type_long":"long","name":"offset","comment":"","type_short":"long"},{"type_long":"short","name":"imm","comment":"immediate byte value","type_short":"short"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add move immediate instruction (consumes 2-bytes)\n@param addr instruction address\n@param imm immediate byte value\n@throws MemoryAccessException","static":false,"name":"addBytesMoveImmediate","comment":"Add move immediate instruction (consumes 2-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"},{"type_long":"short","name":"imm","comment":"immediate byte value","type_short":"short"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add simple fall-through which sets noflow context value on next instruction (consumes 2-bytes)\n@param offset instruction address offset\n@param ctxVal context value (0-15)\n@throws MemoryAccessException","static":false,"name":"addBytesFallthroughSetNoFlowContext","comment":"Add simple fall-through which sets noflow context value on next instruction (consumes 2-bytes)","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"},{"type_long":"int","name":"ctxVal","comment":"context value (0-15)","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add simple fall-through which sets noflow context value on next instruction (consumes 2-bytes)\n@param addr instruction address\n@param ctxVal context value (0-15)\n@throws MemoryAccessException","static":false,"name":"addBytesFallthroughSetNoFlowContext","comment":"Add simple fall-through which sets noflow context value on next instruction (consumes 2-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"},{"type_long":"int","name":"ctxVal","comment":"context value (0-15)","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add simple fall-through which sets noflow context value on target address (consumes 2-bytes)\n@param offset instruction address offset\n@param ctxVal context value (0-15)\n@param target context target address offset\n@throws MemoryAccessException","static":false,"name":"addBytesFallthroughSetNoFlowContext","comment":"Add simple fall-through which sets noflow context value on target address (consumes 2-bytes)","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"},{"type_long":"int","name":"ctxVal","comment":"context value (0-15)","type_short":"int"},{"type_long":"long","name":"target","comment":"context target address offset","type_short":"long"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add simple fall-through which sets noflow context value on target address (consumes 2-bytes)\n@param addr instruction address\n@param ctxVal context value (0-15)\n@param targetAddr context target address\n@throws MemoryAccessException","static":false,"name":"addBytesFallthroughSetNoFlowContext","comment":"Add simple fall-through which sets noflow context value on target address (consumes 2-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"},{"type_long":"int","name":"ctxVal","comment":"context value (0-15)","type_short":"int"},{"type_long":"java.lang.String","name":"targetAddr","comment":"context target address","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add simple fall-through which sets flowing context value on next instruction (consumes 2-bytes)\n@param offset instruction address offset\n@param ctxVal context value (0-15)\n@throws MemoryAccessException","static":false,"name":"addBytesFallthroughSetFlowContext","comment":"Add simple fall-through which sets flowing context value on next instruction (consumes 2-bytes)","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"},{"type_long":"int","name":"ctxVal","comment":"context value (0-15)","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add simple fall-through which sets flowing context value on next instruction (consumes 2-bytes)\n@param addr instruction address\n@param ctxVal context value (0-15)\n@throws MemoryAccessException","static":false,"name":"addBytesFallthroughSetFlowContext","comment":"Add simple fall-through which sets flowing context value on next instruction (consumes 2-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"},{"type_long":"int","name":"ctxVal","comment":"context value (0-15)","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add call (consumes 2-bytes)\n@param offset instruction address offset\n@param dest call destination offset\n@throws MemoryAccessException","static":false,"name":"addBytesCall","comment":"Add call (consumes 2-bytes)","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"},{"type_long":"long","name":"dest","comment":"call destination offset","type_short":"long"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add call (consumes 2-bytes)\n@param addr instruction address\n@param dest call destination address\n@throws MemoryAccessException","static":false,"name":"addBytesCall","comment":"Add call (consumes 2-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"},{"type_long":"java.lang.String","name":"destAddr","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add call w\/ delayslot (consumes 4-bytes)\n@param offset instruction address offset\n@param dest call destination offset\n@throws MemoryAccessException","static":false,"name":"addBytesCallWithDelaySlot","comment":"Add call w\/ delayslot (consumes 4-bytes)","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"},{"type_long":"long","name":"dest","comment":"call destination offset","type_short":"long"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add call w\/ delayslot (consumes 4-bytes)\n@param addr instruction address\n@param dest call destination address\n@throws MemoryAccessException","static":false,"name":"addBytesCallWithDelaySlot","comment":"Add call w\/ delayslot (consumes 4-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"},{"type_long":"java.lang.String","name":"destAddr","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add terminal\/return (consumes 2-bytes)\n@param offset instruction address offset\n@throws MemoryAccessException","static":false,"name":"addBytesReturn","comment":"Add terminal\/return (consumes 2-bytes)","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add terminal\/return (consumes 2-bytes)\n@param addr instruction address\n@throws MemoryAccessException","static":false,"name":"addBytesReturn","comment":"Add terminal\/return (consumes 2-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add branch (consumes 2-bytes)\n@param offset address offset\n@param dest call destination offset\n@throws MemoryAccessException","static":false,"name":"addBytesBranch","comment":"Add branch (consumes 2-bytes)","params":[{"type_long":"long","name":"offset","comment":"address offset","type_short":"long"},{"type_long":"long","name":"dest","comment":"call destination offset","type_short":"long"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add branch (consumes 2-bytes)\n@param addr instruction address offset\n@param destAddr call destination address\n@throws MemoryAccessException","static":false,"name":"addBytesBranch","comment":"Add branch (consumes 2-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address offset","type_short":"String"},{"type_long":"java.lang.String","name":"destAddr","comment":"call destination address","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add branch (consumes 2-bytes)\n@param offset instruction address offset\n@param dest call destination offset\n@throws MemoryAccessException","static":false,"name":"addBytesBranchConditional","comment":"Add branch (consumes 2-bytes)","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"},{"type_long":"long","name":"dest","comment":"call destination offset","type_short":"long"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add branch (consumes 2-bytes)\n@param addr instruction address\n@param destAddr call destination address\n@throws MemoryAccessException","static":false,"name":"addBytesBranchConditional","comment":"Add branch (consumes 2-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"},{"type_long":"java.lang.String","name":"destAddr","comment":"call destination address","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add branch w\/ delay slot (consumes 4-bytes)\n@param offset instruction address offset\n@param dest call destination offset\n@throws MemoryAccessException","static":false,"name":"addBytesBranchWithDelaySlot","comment":"Add branch w\/ delay slot (consumes 4-bytes)","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"},{"type_long":"long","name":"dest","comment":"call destination offset","type_short":"long"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add branch w\/ delay slot (consumes 4-bytes)\n@param addr instruction address\n@param destAddr call destination address\n@throws MemoryAccessException","static":false,"name":"addBytesBranchWithDelaySlot","comment":"Add branch w\/ delay slot (consumes 4-bytes)","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"},{"type_long":"java.lang.String","name":"destAddr","comment":"call destination address","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add COP instruction for exercising nfctx context (consumes 2-bytes).  Location will not be added to\n defined instruction address list.\n@param offset instruction address offset\n@throws MemoryAccessException","static":false,"name":"addBytesCopInstruction","comment":"Add COP instruction for exercising nfctx context (consumes 2-bytes).  Location will not be added to\n defined instruction address list.","params":[{"type_long":"long","name":"offset","comment":"instruction address offset","type_short":"long"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add COP instruction for exercising nfctx context (consumes 2-bytes).  Location will not be added to\n defined instruction address list.\n@param addr instruction address\n@throws MemoryAccessException","static":false,"name":"addBytesCopInstruction","comment":"Add COP instruction for exercising nfctx context (consumes 2-bytes).  Location will not be added to\n defined instruction address list.","params":[{"type_long":"java.lang.String","name":"addr","comment":"instruction address","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add BAD instruction (consumes 2-bytes).  Location will not be added to\n defined instruction address list.\n@param offset bad instruction address offset\n@throws MemoryAccessException","static":false,"name":"addBytesBadInstruction","comment":"Add BAD instruction (consumes 2-bytes).  Location will not be added to\n defined instruction address list.","params":[{"type_long":"long","name":"offset","comment":"bad instruction address offset","type_short":"long"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add BAD instruction (consumes 2-bytes).  Location will not be added to\n defined instruction address list.\n@param addr bad instruction address\n@throws MemoryAccessException","static":false,"name":"addBytesBadInstruction","comment":"Add BAD instruction (consumes 2-bytes).  Location will not be added to\n defined instruction address list.","params":[{"type_long":"java.lang.String","name":"addr","comment":"bad instruction address","type_short":"String"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createNOPInstruction","comment":"","params":[{"type_long":"java.lang.String","name":"address","comment":"","type_short":"String"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createCallInstruction","comment":"","params":[{"type_long":"java.lang.String","name":"address","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"callAddress","comment":"","type_short":"String"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createReturnInstruction","comment":"","params":[{"type_long":"java.lang.String","name":"address","comment":"","type_short":"String"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createJmpInstruction","comment":"","params":[{"type_long":"java.lang.String","name":"address","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"destAddress","comment":"","type_short":"String"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createConditionalJmpInstruction","comment":"","params":[{"type_long":"java.lang.String","name":"address","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"destAddress","comment":"","type_short":"String"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createJmpWithDelaySlot","comment":"","params":[{"type_long":"java.lang.String","name":"address","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"destAddress","comment":"","type_short":"String"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ToyProgramBuilder","comment":"","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TOY_LANGUAGE_ID_BE","comment":"","type_short":"String","constant_value":"\"Toy:BE:32:builder\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TOY_LANGUAGE_ID_LE","comment":"","type_short":"String","constant_value":"\"Toy:LE:32:builder\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TOY_LANGUAGE_ID_BE_ALIGN2","comment":"","type_short":"String","constant_value":"\"Toy:BE:32:builder.align2\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TOY_LANGUAGE_ID_LE_ALIGN2","comment":"","type_short":"String","constant_value":"\"Toy:LE:32:builder.align2\""},{"type_long":"ghidra.program.model.address.AddressFactory","javadoc":"","static":false,"name":"addrFactory","comment":"","type_short":"AddressFactory","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSpace","javadoc":"","static":false,"name":"defaultSpace","comment":"","type_short":"AddressSpace","constant_value":null},{"type_long":"java.util.List<ghidra.program.model.address.Address>","javadoc":"","static":false,"name":"definedInstrAddresses","comment":"","type_short":"List","constant_value":null}]}
