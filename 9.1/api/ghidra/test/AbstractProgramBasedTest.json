{"implements":[],"javadoc":"A convenience base class for creating tests that use the default tool and open a program.\n This class will create for you a tool, a {@link TestEnv} and will open the program \n specified by {@link #getProgramName()}.\n \n <P>To use this class, you must call {@link #initialize()} from your test or <tt>setUp<\/tt> \n method.\n \n <P>Note: if you are loading a pre-existing program, then simply override \n {@link #getProgramName()}.  Alternatively, if you are building a program, then override\n {@link #getProgram()} and return it there.","static":false,"extends":"ghidra.test.AbstractGhidraHeadedIntegrationTest","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getProgramName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"initialize","comment":"","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Override this method if you need to build your own program.\n@return the program to use for this test.\n@throws Exception if an exception is thrown opening the program","static":false,"name":"getProgram","comment":"Override this method if you need to build your own program.","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"if an exception is thrown opening the program","type_short":"Exception"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"the program to use for this test.","type_short":"Program"}},{"javadoc":"","static":false,"name":"tearDown","comment":"","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"assertCurrentAddress","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"expected","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addr","comment":"","params":[{"type_long":"long","name":"offset","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"addr","comment":"","params":[{"type_long":"java.lang.String","name":"offset","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"addr","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"p","comment":"","type_short":"Program"},{"type_long":"long","name":"offset","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"addr","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"p","comment":"","type_short":"Program"},{"type_long":"java.lang.String","name":"offset","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"goTo","comment":"","params":[{"type_long":"long","name":"offset","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"goTo","comment":"","params":[{"type_long":"java.lang.String","name":"offset","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"range","comment":"","params":[{"type_long":"long","name":"from","comment":"","type_short":"long"},{"type_long":"long","name":"to","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRange","comment":"","type_short":"AddressRange"}},{"javadoc":"","static":false,"name":"showProvider","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"function","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"","static":false,"name":"addrs","comment":"","params":[{"type_long":"long[]","name":"offsets","comment":"","type_short":"long[]"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.address.Address>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"toAddressSet","comment":"","params":[{"type_long":"long[]","name":"offsets","comment":"","type_short":"long[]"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"addrs","comment":"","params":[{"type_long":"ghidra.program.model.address.Address[]","name":"addrs","comment":"","type_short":"ghidra.program.model.address.Address[]"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.address.Address>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"goTo","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"a","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Provides a convenient method for modifying the current program, handling the transaction\n logic.\n@param callback the code to execute","static":false,"name":"modifyProgram","comment":"Provides a convenient method for modifying the current program, handling the transaction\n logic.","params":[{"type_long":"utility.function.ExceptionalConsumer<ghidra.program.model.listing.Program,E>","name":"callback","comment":"the code to execute","type_short":"ExceptionalConsumer"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Provides a convenient method for modifying the current program, handling the transaction\n logic and returning a new item as a result.\n@param f the function for modifying the program and creating the desired result\n@return the result","static":false,"name":"createInProgram","comment":"Provides a convenient method for modifying the current program, handling the transaction\n logic and returning a new item as a result.","params":[{"type_long":"utility.function.ExceptionalFunction<ghidra.program.model.listing.Program,R,E>","name":"f","comment":"the function for modifying the program and creating the desired result","type_short":"ExceptionalFunction"}],"throws":[],"return":{"type_long":"R","comment":"the result","type_short":"R"}}],"name":"AbstractProgramBasedTest","comment":"A convenience base class for creating tests that use the default tool and open a program.\n This class will create for you a tool, a TestEnv and will open the program \n specified by #getProgramName().\n \n To use this class, you must call #initialize() from your test or setUp \n method.\n \n Note: if you are loading a pre-existing program, then simply override \n #getProgramName().  Alternatively, if you are building a program, then override\n #getProgram() and return it there.","fields":[{"type_long":"ghidra.test.TestEnv","javadoc":"","static":false,"name":"env","comment":"","type_short":"TestEnv","constant_value":null},{"type_long":"ghidra.framework.plugintool.PluginTool","javadoc":"","static":false,"name":"tool","comment":"","type_short":"PluginTool","constant_value":null},{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program","comment":"","type_short":"Program","constant_value":null},{"type_long":"ghidra.app.plugin.core.codebrowser.CodeBrowserPlugin","javadoc":"","static":false,"name":"codeBrowser","comment":"","type_short":"CodeBrowserPlugin","constant_value":null}]}
