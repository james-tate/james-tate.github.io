{"implements":[],"javadoc":"","static":false,"extends":"ghidra.test.AbstractGhidraHeadlessIntegrationTest","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createApplicationLayout","comment":"","params":[],"throws":[],"return":{"type_long":"utility.application.ApplicationLayout","comment":"","type_short":"ApplicationLayout"}},{"javadoc":"","static":false,"name":"createApplicationConfiguration","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.ApplicationConfiguration","comment":"","type_short":"ApplicationConfiguration"}},{"javadoc":"Flushes the given program's events before waiting for the swing update manager\n@param program The program whose events will be flushed; may be null","static":true,"name":"waitForProgram","comment":"Flushes the given program's events before waiting for the swing update manager","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The program whose events will be flushed; may be null","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds the given plugin to the tool and then returns the instance of the plugin that was\n added\n@param tool the tool\n@param c the class of the plugin to add\n@return the newly added plugin\n@throws PluginException if the plugin could not be constructed, or there was problem \n \t\t   executing its init() method, or if a plugin of this class already exists in the tool","static":true,"name":"addPlugin","comment":"Adds the given plugin to the tool and then returns the instance of the plugin that was\n added","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"the tool","type_short":"PluginTool"},{"type_long":"java.lang.Class<T>","name":"c","comment":"the class of the plugin to add","type_short":"Class"}],"throws":[{"type_long":"ghidra.framework.plugintool.util.PluginException","comment":"if the plugin could not be constructed, or there was problem \n \t\t   executing its init() method, or if a plugin of this class already exists in the tool","type_short":"PluginException"}],"return":{"type_long":"T","comment":"the newly added plugin","type_short":"T"}},{"javadoc":"","static":true,"name":"getPluginByName","comment":"","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"},{"type_long":"java.lang.String","name":"pluginName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.Plugin","comment":"","type_short":"Plugin"}},{"javadoc":"","static":true,"name":"showTool","comment":"","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"}],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"","type_short":"PluginTool"}},{"javadoc":"Shows the given DialogComponentProvider using the given tool's \n {@link PluginTool#showDialog(DialogComponentProvider)} method.\n@param tool The tool used to show the given provider.\n@param provider The DialogComponentProvider to show.\n@return The provider once it has been shown, or null if the provider is not shown within\n         the given maximum wait time.","static":true,"name":"showDialogWithoutBlocking","comment":"Shows the given DialogComponentProvider using the given tool's \n PluginTool#showDialog(DialogComponentProvider) method.","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"The tool used to show the given provider.","type_short":"PluginTool"},{"type_long":"docking.DialogComponentProvider","name":"provider","comment":"The DialogComponentProvider to show.","type_short":"DialogComponentProvider"}],"throws":[],"return":{"type_long":"docking.DialogComponentProvider","comment":"The provider once it has been shown, or null if the provider is not shown within\n         the given maximum wait time.","type_short":"DialogComponentProvider"}},{"javadoc":"Waits for the tool to finish executing commands and tasks\n@param tool the tool\n@throws AssertionFailedError if the tool does not finish work within a reasonable limit","static":true,"name":"waitForBusyTool","comment":"Waits for the tool to finish executing commands and tasks","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"the tool","type_short":"PluginTool"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getAction","comment":"","params":[{"type_long":"ghidra.framework.plugintool.Plugin","name":"plugin","comment":"","type_short":"Plugin"},{"type_long":"java.lang.String","name":"actionName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"docking.action.DockingActionIf","comment":"","type_short":"DockingActionIf"}},{"javadoc":"Save the given tool to the project tool chest.  If the tool already exists, then it will\n be overwritten with the given tool.\n@param project The project which with the tool is associated.\n@param tool The tool to be saved\n@return the new tool","static":true,"name":"saveTool","comment":"Save the given tool to the project tool chest.  If the tool already exists, then it will\n be overwritten with the given tool.","params":[{"type_long":"ghidra.framework.model.Project","name":"project","comment":"The project which with the tool is associated.","type_short":"Project"},{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"The tool to be saved","type_short":"PluginTool"}],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"the new tool","type_short":"PluginTool"}},{"javadoc":"Triggers a browser click at the current cursor location.  Thus, this method should be \n called only after the browser location is set the the desired field.\n@param codeBrowser the CodeBrowserPlugin\n@param clickCount the click count","static":false,"name":"click","comment":"Triggers a browser click at the current cursor location.  Thus, this method should be \n called only after the browser location is set the the desired field.","params":[{"type_long":"ghidra.app.plugin.core.codebrowser.CodeBrowserPlugin","name":"codeBrowser","comment":"the CodeBrowserPlugin","type_short":"CodeBrowserPlugin"},{"type_long":"int","name":"clickCount","comment":"the click count","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"click","comment":"","params":[{"type_long":"ghidra.app.plugin.core.codebrowser.CodeBrowserPlugin","name":"codeBrowser","comment":"","type_short":"CodeBrowserPlugin"},{"type_long":"int","name":"clickCount","comment":"","type_short":"int"},{"type_long":"boolean","name":"wait","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"click","comment":"","params":[{"type_long":"docking.widgets.fieldpanel.FieldPanel","name":"fp","comment":"","type_short":"FieldPanel"},{"type_long":"int","name":"clickCount","comment":"","type_short":"int"},{"type_long":"boolean","name":"wait","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"AbstractGhidraHeadedIntegrationTest","comment":"","fields":[]}
