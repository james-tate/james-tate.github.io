{"implements":[],"javadoc":"<code>PCodeTestControlBlock<\/code> data is read from each binary test file and\n identified by the MAIN_CONTROL_BLOCK_MAGIC 64-bit character field value at the start of the \n data structure.  Only one instance of this should exist within the binary.","static":false,"extends":"ghidra.test.processors.support.PCodeTestAbstractControlBlock","methods":[{"javadoc":"Construct test control block instance for the specified\n program.  Create TestInfo structure data within program if requested.\n@param program program containing control block structure\n@param restrictedSet the restricted memory area which should be searched \n for control structures\n@param testInfoStructAddr address of Main TestInfo structure\n@param testFile original binary test file\n@param cachedProgramPath program path within program file cache\n@param applyStruct create structure Data within program if true\n@throws InvalidControlBlockException\n@throws CodeUnitInsertionException if applyStruct failed","static":false,"name":"<init>","comment":"Construct test control block instance for the specified\n program.  Create TestInfo structure data within program if requested.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program containing control block structure","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"restrictedSet","comment":"the restricted memory area which should be searched \n for control structures","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.address.Address","name":"testInfoStructAddr","comment":"address of Main TestInfo structure","type_short":"Address"},{"type_long":"ghidra.test.processors.support.PCodeTestFile","name":"testFile","comment":"original binary test file","type_short":"PCodeTestFile"},{"type_long":"java.lang.String","name":"cachedProgramPath","comment":"program path within program file cache","type_short":"String"},{"type_long":"boolean","name":"applyStruct","comment":"create structure Data within program if true","type_short":"boolean"},{"type_long":"ghidra.test.processors.support.PCodeTestResults","name":"testResults","comment":"","type_short":"PCodeTestResults"}],"throws":[{"type_long":"ghidra.test.processors.support.PCodeTestAbstractControlBlock.InvalidControlBlockException","comment":"","type_short":"InvalidControlBlockException"},{"type_long":"ghidra.program.model.util.CodeUnitInsertionException","comment":"if applyStruct failed","type_short":"CodeUnitInsertionException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Find Main TestInfo structure within memory and return instance of PCodeTestControlBlock\n@param program\n@param testFile original binary test file\n@param restrictedSet a restricted set to be searched for control structures\n@param cachedProgramPath program path within program file cache\n@param testInfoStruct TestInfo structure definition\n@param groupInfoStruct GroupInfo structure definition\n@param applyStruct create structure Data within program if true\n@param testResults test results storage object\n@return instance of PCodeTestControlBlock\n@throws InvalidControlBlockException\n@throws CodeUnitInsertionException","static":true,"name":"getMainControlBlock","comment":"Find Main TestInfo structure within memory and return instance of PCodeTestControlBlock","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.test.processors.support.PCodeTestFile","name":"testFile","comment":"original binary test file","type_short":"PCodeTestFile"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"restrictedSet","comment":"a restricted set to be searched for control structures","type_short":"AddressSetView"},{"type_long":"java.lang.String","name":"cachedProgramPath","comment":"program path within program file cache","type_short":"String"},{"type_long":"ghidra.program.model.data.Structure","name":"testInfoStruct","comment":"TestInfo structure definition","type_short":"Structure"},{"type_long":"ghidra.program.model.data.Structure","name":"groupInfoStruct","comment":"GroupInfo structure definition","type_short":"Structure"},{"type_long":"boolean","name":"applyStruct","comment":"create structure Data within program if true","type_short":"boolean"},{"type_long":"ghidra.test.processors.support.PCodeTestResults","name":"testResults","comment":"test results storage object","type_short":"PCodeTestResults"}],"throws":[{"type_long":"ghidra.test.processors.support.PCodeTestAbstractControlBlock.InvalidControlBlockException","comment":"","type_short":"InvalidControlBlockException"},{"type_long":"ghidra.program.model.util.CodeUnitInsertionException","comment":"","type_short":"CodeUnitInsertionException"}],"return":{"type_long":"ghidra.test.processors.support.PCodeTestControlBlock","comment":"instance of PCodeTestControlBlock","type_short":"PCodeTestControlBlock"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getTestGroups","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.test.processors.support.PCodeTestGroup>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getBreakOnDoneAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getBreakOnPassAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getBreakOnErrorAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getSprintf5Address","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getPrintfBufferAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getTestResults","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.test.processors.support.PCodeTestResults","comment":"","type_short":"PCodeTestResults"}},{"javadoc":"","static":false,"name":"readControlBlock","comment":"","params":[{"type_long":"boolean","name":"applyStruct","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.test.processors.support.PCodeTestAbstractControlBlock.InvalidControlBlockException","comment":"","type_short":"InvalidControlBlockException"},{"type_long":"ghidra.program.model.util.CodeUnitInsertionException","comment":"","type_short":"CodeUnitInsertionException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"findTestGroups","comment":"","params":[{"type_long":"boolean","name":"applyStruct","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.test.processors.support.PCodeTestAbstractControlBlock.InvalidControlBlockException","comment":"","type_short":"InvalidControlBlockException"},{"type_long":"ghidra.program.model.util.CodeUnitInsertionException","comment":"","type_short":"CodeUnitInsertionException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Enable\/Diable sprintf use within P-Code test emulation.\n@param emuTestRunner emulator test runner\n@param enable sprintf enablement","static":false,"name":"setSprintfEnabled","comment":"Enable\/Diable sprintf use within P-Code test emulation.","params":[{"type_long":"ghidra.test.processors.support.EmulatorTestRunner","name":"emuTestRunner","comment":"emulator test runner","type_short":"EmulatorTestRunner"},{"type_long":"boolean","name":"enable","comment":"sprintf enablement","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get 'numpass' field value from emulation memory state\n@param emuTestRunner emulator test runner\n@return 'numpass' field value","static":false,"name":"getNumberPassed","comment":"Get 'numpass' field value from emulation memory state","params":[{"type_long":"ghidra.test.processors.support.EmulatorTestRunner","name":"emuTestRunner","comment":"emulator test runner","type_short":"EmulatorTestRunner"}],"throws":[],"return":{"type_long":"int","comment":"'numpass' field value","type_short":"int"}},{"javadoc":"Set 'numpass' field value within emulation memory state\n@param emuTestRunner emulator test runner\n@param value field value","static":false,"name":"setNumberPassed","comment":"Set 'numpass' field value within emulation memory state","params":[{"type_long":"ghidra.test.processors.support.EmulatorTestRunner","name":"emuTestRunner","comment":"emulator test runner","type_short":"EmulatorTestRunner"},{"type_long":"int","name":"value","comment":"field value","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get 'numfail' field value from emulation memory state\n@param emuTestRunner emulator test runner\n@return 'numfail' field value","static":false,"name":"getNumberFailed","comment":"Get 'numfail' field value from emulation memory state","params":[{"type_long":"ghidra.test.processors.support.EmulatorTestRunner","name":"emuTestRunner","comment":"emulator test runner","type_short":"EmulatorTestRunner"}],"throws":[],"return":{"type_long":"int","comment":"'numfail' field value","type_short":"int"}},{"javadoc":"Set 'numfail' field value within emulation memory state\n@param emuTestRunner emulator test runner\n@param value field value","static":false,"name":"setNumberFailed","comment":"Set 'numfail' field value within emulation memory state","params":[{"type_long":"ghidra.test.processors.support.EmulatorTestRunner","name":"emuTestRunner","comment":"emulator test runner","type_short":"EmulatorTestRunner"},{"type_long":"int","name":"value","comment":"field value","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get 'lastTestPos' field value from emulation memory state\n@param emuTestRunner emulator test runner\n@return 'lastTestPos' field value","static":false,"name":"getLastTestIndex","comment":"Get 'lastTestPos' field value from emulation memory state","params":[{"type_long":"ghidra.test.processors.support.EmulatorTestRunner","name":"emuTestRunner","comment":"emulator test runner","type_short":"EmulatorTestRunner"}],"throws":[],"return":{"type_long":"int","comment":"'lastTestPos' field value","type_short":"int"}},{"javadoc":"Get 'lastErrorLine' field value from emulation memory state\n@param emuTestRunner emulator test runner\n@return 'lastErrorLine' field value","static":false,"name":"getLastErrorLine","comment":"Get 'lastErrorLine' field value from emulation memory state","params":[{"type_long":"ghidra.test.processors.support.EmulatorTestRunner","name":"emuTestRunner","comment":"emulator test runner","type_short":"EmulatorTestRunner"}],"throws":[],"return":{"type_long":"int","comment":"'lastErrorLine' field value","type_short":"int"}},{"javadoc":"Get 'lastErrorFile' string value from emulation memory state.  Must follow string\n pointer contained within lastErrorFile field.\n@param emuTestRunner emulator test runner\n@return 'lastErrorLine' field value","static":false,"name":"getLastErrorFile","comment":"Get 'lastErrorFile' string value from emulation memory state.  Must follow string\n pointer contained within lastErrorFile field.","params":[{"type_long":"ghidra.test.processors.support.EmulatorTestRunner","name":"emuTestRunner","comment":"emulator test runner","type_short":"EmulatorTestRunner"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"'lastErrorLine' field value","type_short":"String"}},{"javadoc":"Get the name of the last test function to be run\n@param emuTestRunner\n@return last test function name","static":false,"name":"getLastFunctionName","comment":"Get the name of the last test function to be run","params":[{"type_long":"ghidra.test.processors.support.EmulatorTestRunner","name":"emuTestRunner","comment":"","type_short":"EmulatorTestRunner"},{"type_long":"ghidra.test.processors.support.TestLogger","name":"logger","comment":"","type_short":"TestLogger"},{"type_long":"ghidra.test.processors.support.PCodeTestGroup","name":"activeGroup","comment":"","type_short":"PCodeTestGroup"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"last test function name","type_short":"String"}}],"name":"PCodeTestControlBlock","comment":"PCodeTestControlBlock data is read from each binary test file and\n identified by the MAIN_CONTROL_BLOCK_MAGIC 64-bit character field value at the start of the \n data structure.  Only one instance of this should exist within the binary.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"INITIAL_FUNCTION_NAME","comment":"","type_short":"String","constant_value":"\"<NONE>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"UNKNOWN_FUNCTION_NAME","comment":"","type_short":"String","constant_value":"\"<UNKNOWN>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"MAIN_CONTROL_BLOCK_MAGIC","comment":"","type_short":"String","constant_value":"\"AbCdEFgH\""},{"type_long":"ghidra.program.model.data.Structure","javadoc":"","static":true,"name":"testInfoStruct","comment":"","type_short":"Structure","constant_value":null},{"type_long":"ghidra.program.model.data.Structure","javadoc":"","static":true,"name":"groupInfoStruct","comment":"","type_short":"Structure","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSetView","javadoc":"","static":false,"name":"restrictedSet","comment":"","type_short":"AddressSetView","constant_value":null},{"type_long":"ghidra.test.processors.support.PCodeTestFile","javadoc":"","static":false,"name":"testFile","comment":"","type_short":"PCodeTestFile","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"cachedProgramPath","comment":"","type_short":"String","constant_value":null},{"type_long":"java.util.List<ghidra.test.processors.support.PCodeTestGroup>","javadoc":"","static":false,"name":"testGroups","comment":"","type_short":"List","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"onPassFunctionAddress","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"onErrorFunctionAddress","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"onDoneFunctionAddress","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"sprintfFunctionAddress","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"sprintfBufferAddress","comment":"","type_short":"Address","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"numPassOffset","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"numFailOffset","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"lastTestPosOffset","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"lastErrorLineOffset","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"lastErrorFileOffset","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"lastFuncOffset","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"sprintfEnableOffset","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.test.processors.support.PCodeTestResults","javadoc":"","static":false,"name":"testResults","comment":"","type_short":"PCodeTestResults","constant_value":null}]}
