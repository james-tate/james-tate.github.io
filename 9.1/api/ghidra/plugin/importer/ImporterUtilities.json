{"implements":[],"javadoc":"Utilities for importing files.\n \n <p>Note: if a method takes a {@link TaskMonitor}, then that method should only be called \n from a background task.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getPairs","comment":"","params":[{"type_long":"java.util.Collection<ghidra.app.util.opinion.LoadSpec>","name":"loadSpecs","comment":"","type_short":"Collection"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.lang.LanguageCompilerSpecPair>","comment":"","type_short":"List"}},{"javadoc":"Ensure that a {@link Program}'s metadata includes its import origin.\n@param program imported {@link Program} to modify\n@param fsrl {@link FSRL} of the import source.\n@param monitor {@link TaskMonitor} to use when accessing filesystem stuff.\n@throws CancelledException if user cancels\n@throws IOException if IO error","static":true,"name":"setProgramProperties","comment":"Ensure that a Program's metadata includes its import origin.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"imported Program to modify","type_short":"Program"},{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL of the import source.","type_short":"FSRL"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"TaskMonitor to use when accessing filesystem stuff.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if user cancels","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"if IO error","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Displays the appropriate import dialog for the specified {@link FSRL file}.\n <p>\n If the file is a container of other files, a batch import dialog will be used,\n otherwise the normal single file import dialog will be shown.\n@param tool {@link PluginTool} will be used as the parent tool for dialogs\n@param programManager optional {@link ProgramManager} instance to use to open imported \n \t\t\tbinaries with, or null\n@param fsrl {@link FSRL} of the file to import\n@param destinationFolder {@link DomainFolder} destination folder where the imported file\n \t\t\twill default to.  (the user will be able to choose a different location)\n@param suggestedPath optional string path that will automatically be pre-pended\n \t\t\tto the destination filename","static":true,"name":"showImportDialog","comment":"Displays the appropriate import dialog for the specified FSRL.\n \n If the file is a container of other files, a batch import dialog will be used,\n otherwise the normal single file import dialog will be shown.","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"PluginTool will be used as the parent tool for dialogs","type_short":"PluginTool"},{"type_long":"ghidra.app.services.ProgramManager","name":"programManager","comment":"optional ProgramManager instance to use to open imported \n \t\t\tbinaries with, or null","type_short":"ProgramManager"},{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL of the file to import","type_short":"FSRL"},{"type_long":"ghidra.framework.model.DomainFolder","name":"destinationFolder","comment":"DomainFolder destination folder where the imported file\n \t\t\twill default to.  (the user will be able to choose a different location)","type_short":"DomainFolder"},{"type_long":"java.lang.String","name":"suggestedPath","comment":"optional string path that will automatically be pre-pended\n \t\t\tto the destination filename","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Displays the appropriate import dialog for the specified {@link FSRL file}.\n <p>\n If the file is a container of other files, a batch import dialog will be used,\n otherwise the normal single file import dialog will be shown.]\n <p>\n If you are not in a monitored task, then call \n {@link #showImportDialog(PluginTool, ProgramManager, FSRL, DomainFolder, String)}.\n@param tool {@link PluginTool} will be used as the parent tool for dialogs\n@param programManager optional {@link ProgramManager} instance to use to open imported \n \t\t\tbinaries with, or null\n@param fsrl {@link FSRL} of the file to import\n@param destinationFolder {@link DomainFolder} destination folder where the imported file\n \t\t\twill default to.  (the user will be able to choose a different location)\n@param suggestedPath optional string path that will automatically be pre-pended\n \t\t\tto the destination filename\n@param monitor the task monitor to use for monitoring; cannot be null","static":true,"name":"showImportDialog","comment":"Displays the appropriate import dialog for the specified FSRL.\n \n If the file is a container of other files, a batch import dialog will be used,\n otherwise the normal single file import dialog will be shown.]\n \n If you are not in a monitored task, then call \n #showImportDialog(PluginTool, ProgramManager, FSRL, DomainFolder, String).","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"PluginTool will be used as the parent tool for dialogs","type_short":"PluginTool"},{"type_long":"ghidra.app.services.ProgramManager","name":"programManager","comment":"optional ProgramManager instance to use to open imported \n \t\t\tbinaries with, or null","type_short":"ProgramManager"},{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL of the file to import","type_short":"FSRL"},{"type_long":"ghidra.framework.model.DomainFolder","name":"destinationFolder","comment":"DomainFolder destination folder where the imported file\n \t\t\twill default to.  (the user will be able to choose a different location)","type_short":"DomainFolder"},{"type_long":"java.lang.String","name":"suggestedPath","comment":"optional string path that will automatically be pre-pended\n \t\t\tto the destination filename","type_short":"String"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor to use for monitoring; cannot be null","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"close","comment":"","params":[{"type_long":"java.io.Closeable","name":"c","comment":"","type_short":"Closeable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"importFromContainer","comment":"","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"},{"type_long":"ghidra.app.services.ProgramManager","name":"programManager","comment":"","type_short":"ProgramManager"},{"type_long":"ghidra.framework.model.DomainFolder","name":"destinationFolder","comment":"","type_short":"DomainFolder"},{"type_long":"java.lang.String","name":"suggestedPath","comment":"","type_short":"String"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.formats.gfilesystem.RefdFile","name":"referencedFile","comment":"","type_short":"RefdFile"},{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fullFsrl","comment":"","type_short":"FSRL"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"showAddToProgramDialog","comment":"","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"","type_short":"FSRL"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a {@link ImporterDialog} and shows it in the swing thread.\n@param fsrl the file system resource locater (can be a simple file or an element of\n \t\t\ta more complex file such as a zip file)\n@param destinationFolder the default destination folder for the imported file. Can be null\n@param suggestedPath optional string path that will automatically be pre-pended\n \t\t\tto the destination filename\n@param tool the parent UI component\n@param programManager optional {@link ProgramManager} instance to open the imported file in","static":true,"name":"importSingleFile","comment":"Constructs a ImporterDialog and shows it in the swing thread.","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"the file system resource locater (can be a simple file or an element of\n \t\t\ta more complex file such as a zip file)","type_short":"FSRL"},{"type_long":"ghidra.framework.model.DomainFolder","name":"destinationFolder","comment":"the default destination folder for the imported file. Can be null","type_short":"DomainFolder"},{"type_long":"java.lang.String","name":"suggestedPath","comment":"optional string path that will automatically be pre-pended\n \t\t\tto the destination filename","type_short":"String"},{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"the parent UI component","type_short":"PluginTool"},{"type_long":"ghidra.app.services.ProgramManager","name":"programManager","comment":"optional ProgramManager instance to open the imported file in","type_short":"ProgramManager"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"doFsImport","comment":"","params":[{"type_long":"ghidra.formats.gfilesystem.RefdFile","name":"refdFile","comment":"","type_short":"RefdFile"},{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"","type_short":"FSRL"},{"type_long":"ghidra.framework.model.DomainFolder","name":"destFolderParam","comment":"","type_short":"DomainFolder"},{"type_long":"ghidra.app.services.ProgramManager","name":"programManager","comment":"","type_short":"ProgramManager"},{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"doFSImportHelper","comment":"","params":[{"type_long":"ghidra.formats.gfilesystem.GFileSystemProgramProvider","name":"pfs","comment":"","type_short":"GFileSystemProgramProvider"},{"type_long":"ghidra.formats.gfilesystem.GFile","name":"gfile","comment":"","type_short":"GFile"},{"type_long":"ghidra.framework.model.DomainFolder","name":"destFolder","comment":"","type_short":"DomainFolder"},{"type_long":"java.lang.Object","name":"consumer","comment":"","type_short":"Object"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"Perform file import and open using optional programManager\n@param tool tool to which popup dialogs should be associated\n@param programManager program manager to open imported file with or null\n@param fsrl import file location\n@param destFolder project destination folder\n@param loadSpec import {@link LoadSpec}\n@param programName program name\n@param options import options\n@param monitor task monitor","static":true,"name":"importSingleFile","comment":"Perform file import and open using optional programManager","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"tool to which popup dialogs should be associated","type_short":"PluginTool"},{"type_long":"ghidra.app.services.ProgramManager","name":"programManager","comment":"program manager to open imported file with or null","type_short":"ProgramManager"},{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"import file location","type_short":"FSRL"},{"type_long":"ghidra.framework.model.DomainFolder","name":"destFolder","comment":"project destination folder","type_short":"DomainFolder"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"import LoadSpec","type_short":"LoadSpec"},{"type_long":"java.lang.String","name":"programName","comment":"program name","type_short":"String"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"import options","type_short":"List"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"doPostImportProcessing","comment":"","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"pluginTool","comment":"","type_short":"PluginTool"},{"type_long":"ghidra.app.services.ProgramManager","name":"programManager","comment":"","type_short":"ProgramManager"},{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"","type_short":"FSRL"},{"type_long":"java.util.List<ghidra.framework.model.DomainObject>","name":"importedObjects","comment":"","type_short":"List"},{"type_long":"java.lang.Object","name":"consumer","comment":"","type_short":"Object"},{"type_long":"java.lang.String","name":"importMessages","comment":"","type_short":"String"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.util.Set<ghidra.framework.model.DomainFile>","comment":"","type_short":"Set"}},{"javadoc":"","static":true,"name":"selectFiles","comment":"","params":[{"type_long":"java.util.Set<ghidra.framework.model.DomainFile>","name":"importedFilesSet","comment":"","type_short":"Set"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"addContentToProgram","comment":"","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"","type_short":"FSRL"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"","type_short":"LoadSpec"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"","type_short":"List"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"displayResults","comment":"","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"},{"type_long":"ghidra.framework.model.DomainObject","name":"obj","comment":"","type_short":"DomainObject"},{"type_long":"ghidra.framework.model.DomainFile","name":"df","comment":"","type_short":"DomainFile"},{"type_long":"java.lang.String","name":"info","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ImporterUtilities","comment":"Utilities for importing files.\n \n Note: if a method takes a TaskMonitor, then that method should only be called \n from a background task.","fields":[{"type_long":"ghidra.util.filechooser.GhidraFileFilter","javadoc":"File extension filter for well known 'loadable' files for GhidraFileChoosers.\n\n TODO: will be refactored to use file_extension_icon.xml file info.","static":true,"name":"LOADABLE_FILES_FILTER","comment":"File extension filter for well known 'loadable' files for GhidraFileChoosers.\n\n TODO: will be refactored to use file_extension_icon.xml file info.","type_short":"GhidraFileFilter","constant_value":null},{"type_long":"ghidra.util.filechooser.GhidraFileFilter","javadoc":"File extension filter for well known 'container' files for GhidraFileChoosers.\n\n TODO: will be refactored to use file_extension_icon.xml file info.","static":true,"name":"CONTAINER_FILES_FILTER","comment":"File extension filter for well known 'container' files for GhidraFileChoosers.\n\n TODO: will be refactored to use file_extension_icon.xml file info.","type_short":"GhidraFileFilter","constant_value":null}]}
