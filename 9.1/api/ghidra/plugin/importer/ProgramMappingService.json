{"implements":[],"javadoc":"Provides a best-effort<sup>[1]<\/sup> mapping \/ association between Ghidra Program\/DomainFile objects and\n GFilesystem files (identified by their {@link FSRL}).\n <p>\n As there is no current feature that allows you to quickly query the metadata of Programs\/DomainFile\n objects in the current project, finding a Program by its MD5 or by a original source location\n string is not easily possible.\n <p>\n Threadsafe.\n <p>\n The current implementation searches current open Ghidra Programs and maintains a\n short-lived, in-memory only mapping of FSRL->DomainFile paths\n (manually updated by users of the ProgramMappingService when\n they do an import or other operation that creates a Ghidra DomainFile by calling\n {@link #createAssociation(FSLR, DomainFile)} and friends.)\n <p>\n [1] - best-effort (adverb): meaning a dirty hack.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clears {@link ProgramMappingService} data.\n <p>\n This should be done whenever the project is opened\/closed.","static":true,"name":"clear","comment":"Clears ProgramMappingService data.\n \n This should be done whenever the project is opened\/closed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if there is a current open Ghidra {@link Program} that has metadata\n that links it to the specified {@link FSRL}.\n <p>\n (ie. an open program has a MD5 or FSRL metadata value that matches the fsrl param.)\n@param fsrl {@link FSRL} to search for in open program info.\n@return boolean true if found.","static":true,"name":"isFileOpen","comment":"Returns true if there is a current open Ghidra Program that has metadata\n that links it to the specified FSRL.\n \n (ie. an open program has a MD5 or FSRL metadata value that matches the fsrl param.)","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL to search for in open program info.","type_short":"FSRL"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if found.","type_short":"boolean"}},{"javadoc":"Returns true if the specified {@link FSRL} has a matched Ghidra {@link DomainFile}\n in the current project.\n <p>\n@param fsrl {@link FSRL} to search for\n@return boolean true if file exists in project.","static":true,"name":"isFileImportedIntoProject","comment":"Returns true if the specified FSRL has a matched Ghidra DomainFile\n in the current project.\n ","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL to search for","type_short":"FSRL"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if file exists in project.","type_short":"boolean"}},{"javadoc":"Returns a reference to a {@link DomainFile} in the current {@link Project} that matches\n the specified {@link FSRL}.\n <p>\n This method only consults an internal fsrl-to-DomainFile mapping that is short-lived\n and not persisted.\n <p>\n@param fsrl {@link FSRL} to search for\n@return {@link DomainFile} that was previously associated via {@link #createAssociation(FSRL, DomainFile)}\n and friends.","static":true,"name":"getCachedDomainFileFor","comment":"Returns a reference to a DomainFile in the current Project that matches\n the specified FSRL.\n \n This method only consults an internal fsrl-to-DomainFile mapping that is short-lived\n and not persisted.\n ","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL to search for","type_short":"FSRL"}],"throws":[],"return":{"type_long":"ghidra.framework.model.DomainFile","comment":"DomainFile that was previously associated via #createAssociation(FSRL, DomainFile)\n and friends.","type_short":"DomainFile"}},{"javadoc":"Creates a short-lived association between a {@link FSRL} and an open {@link Program}.\n <p>\n@param fsrl {@link FSRL} of where the {@link Program} was imported from.\n@param program {@link Program} to associate to.","static":true,"name":"createAssociation","comment":"Creates a short-lived association between a FSRL and an open Program.\n ","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL of where the Program was imported from.","type_short":"FSRL"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"Program to associate to.","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a short-lived association between a {@link FSRL} and a {@link DomainFile}.\n@param fsrl {@link FSRL} of where the DomainFile was imported from.\n@param domainFile {@link DomainFile} to associate with","static":true,"name":"createAssociation","comment":"Creates a short-lived association between a FSRL and a DomainFile.","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL of where the DomainFile was imported from.","type_short":"FSRL"},{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"DomainFile to associate with","type_short":"DomainFile"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"createAssociation","comment":"","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"","type_short":"FSRL"},{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"","type_short":"DomainFile"},{"type_long":"boolean","name":"onlyAddIfEnoughRoomInCache","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Attempts to create an association between the specified open {@code program} and\n any {@link FSRL} metadata found in the {@link Program}s properties.\n <p>\n Used by event handlers that get notified about a {@link Program} being opened to\n opportunistically link that program to its source FSRL if the metadata is present.\n <p>\n@param program {@link Program} to rummage around in its metadata looking for FSRL info.","static":true,"name":"createAutoAssocation","comment":"Attempts to create an association between the specified open  and\n any FSRL metadata found in the Programs properties.\n \n Used by event handlers that get notified about a Program being opened to\n opportunistically link that program to its source FSRL if the metadata is present.\n ","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"Program to rummage around in its metadata looking for FSRL info.","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns an open {@link Program} instance that matches the specified\n {@link FSRL}, either from the set of currently open programs, or by\n requesting the specified {@link ProgramManager} to\n open a {@link DomainFile} that was found to match this GFile.\n <p>\n@param fsrl {@link FSRL} of program original location.\n@param consumer Object that will be used to pin the matching Program open.  Caller\n must release the consumer when done.\n@param programManager {@link ProgramManager} that will be used to open DomainFiles\n if necessary.\n@param openState one of {@link ProgramManager#OPEN_VISIBLE}, {@link ProgramManager#OPEN_HIDDEN}, {@link ProgramManager#OPEN_VISIBLE}\n@return {@link Program} which was imported from the specified FSRL, or null if not found.","static":true,"name":"findMatchingProgramOpenIfNeeded","comment":"Returns an open Program instance that matches the specified\n FSRL, either from the set of currently open programs, or by\n requesting the specified ProgramManager to\n open a DomainFile that was found to match this GFile.\n ","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL of program original location.","type_short":"FSRL"},{"type_long":"java.lang.Object","name":"consumer","comment":"Object that will be used to pin the matching Program open.  Caller\n must release the consumer when done.","type_short":"Object"},{"type_long":"ghidra.app.services.ProgramManager","name":"programManager","comment":"ProgramManager that will be used to open DomainFiles\n if necessary.","type_short":"ProgramManager"},{"type_long":"int","name":"openState","comment":"one of ProgramManager#OPEN_VISIBLE, ProgramManager#OPEN_HIDDEN, ProgramManager#OPEN_VISIBLE","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"Program which was imported from the specified FSRL, or null if not found.","type_short":"Program"}},{"javadoc":"Returns an open {@link Program} instance that matches the specified\n {@link FSRL}, either from the set of currently open programs, or by\n requesting the specified {@link ProgramManager} to\n open a {@link DomainFile} that was found to match this GFile.\n <p>\n@param fsrl {@link FSRL} of program original location.\n@param domainFile optional {@link DomainFile} that corresponds to the FSRL param.\n@param consumer Object that will be used to pin the matching Program open.  Caller\n must release the consumer when done.\n@param programManager {@link ProgramManager} that will be used to open DomainFiles\n if necessary.\n@param openState one of {@link ProgramManager#OPEN_VISIBLE}, {@link ProgramManager#OPEN_HIDDEN}, {@link ProgramManager#OPEN_VISIBLE}\n@return {@link Program} which was imported from the specified FSRL, or null if not found.","static":true,"name":"findMatchingProgramOpenIfNeeded","comment":"Returns an open Program instance that matches the specified\n FSRL, either from the set of currently open programs, or by\n requesting the specified ProgramManager to\n open a DomainFile that was found to match this GFile.\n ","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL of program original location.","type_short":"FSRL"},{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"optional DomainFile that corresponds to the FSRL param.","type_short":"DomainFile"},{"type_long":"java.lang.Object","name":"consumer","comment":"Object that will be used to pin the matching Program open.  Caller\n must release the consumer when done.","type_short":"Object"},{"type_long":"ghidra.app.services.ProgramManager","name":"programManager","comment":"ProgramManager that will be used to open DomainFiles\n if necessary.","type_short":"ProgramManager"},{"type_long":"int","name":"openState","comment":"one of ProgramManager#OPEN_VISIBLE, ProgramManager#OPEN_HIDDEN, ProgramManager#OPEN_VISIBLE","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"Program which was imported from the specified FSRL, or null if not found.","type_short":"Program"}},{"javadoc":"Returns a currently open Ghidra {@link Program} that has metadata that links it\n to the specified {@code file} parameter.\n <p>\n (ie. an open program has a MD5 or FSRL metadata value that matches the file)\n <p>\n See also {@link #isFileOpen(GFile)}.\n <p>\n@param fsrl {@link FSRL} to use when inspecting each open Program's metadata.\n@param consumer Object that will be used to pin the matching Program open.  Caller\n must release the consumer when done.\n@return Already open {@link Program} that has matching metadata, or null if not found.","static":true,"name":"findMatchingOpenProgram","comment":"Returns a currently open Ghidra Program that has metadata that links it\n to the specified  parameter.\n \n (ie. an open program has a MD5 or FSRL metadata value that matches the file)\n \n See also #isFileOpen(GFile).\n ","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL to use when inspecting each open Program's metadata.","type_short":"FSRL"},{"type_long":"java.lang.Object","name":"consumer","comment":"Object that will be used to pin the matching Program open.  Caller\n must release the consumer when done.","type_short":"Object"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"Already open Program that has matching metadata, or null if not found.","type_short":"Program"}},{"javadoc":"","static":true,"name":"buildFullyQualifiedFSRLMap","comment":"","params":[{"type_long":"java.util.List<ghidra.formats.gfilesystem.FSRL>","name":"fsrls","comment":"","type_short":"List"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"java.util.Map<java.lang.String,ghidra.formats.gfilesystem.FSRL>","comment":"","type_short":"Map"}},{"javadoc":"Recursively searches the current active {@link Project} for {@link DomainFile}s that\n have metadata that matches a {@link FSRL} in the specified list.\n <p>\n Warning, this operation is expensive and should only be done in a Task thread.\n <p>\n@param fsrls List of {@link FSRL} to match against the metadata of each DomainFile in Project.\n@param monitor {@link TaskMonitor} to watch for cancel and update with progress.\n@return Map of FSRLs to {@link DomainFile}s of the found files, never null.","static":true,"name":"searchProjectForMatchingFiles","comment":"Recursively searches the current active Project for DomainFiles that\n have metadata that matches a FSRL in the specified list.\n \n Warning, this operation is expensive and should only be done in a Task thread.\n ","params":[{"type_long":"java.util.List<ghidra.formats.gfilesystem.FSRL>","name":"fsrls","comment":"List of FSRL to match against the metadata of each DomainFile in Project.","type_short":"List"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"TaskMonitor to watch for cancel and update with progress.","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"java.util.Map<ghidra.formats.gfilesystem.FSRL,ghidra.framework.model.DomainFile>","comment":"Map of FSRLs to DomainFiles of the found files, never null.","type_short":"Map"}},{"javadoc":"","static":true,"name":"getMD5FromMetadata","comment":"","params":[{"type_long":"java.util.Map<java.lang.String,java.lang.String>","name":"metadata","comment":"","type_short":"Map"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"getFSRLFromMetadata","comment":"","params":[{"type_long":"java.util.Map<java.lang.String,java.lang.String>","name":"metadata","comment":"","type_short":"Map"},{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"","type_short":"DomainFile"}],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.FSRL","comment":"","type_short":"FSRL"}}],"name":"ProgramMappingService","comment":"Provides a best-effort[1] mapping \/ association between Ghidra Program\/DomainFile objects and\n GFilesystem files (identified by their FSRL).\n \n As there is no current feature that allows you to quickly query the metadata of Programs\/DomainFile\n objects in the current project, finding a Program by its MD5 or by a original source location\n string is not easily possible.\n \n Threadsafe.\n \n The current implementation searches current open Ghidra Programs and maintains a\n short-lived, in-memory only mapping of FSRL-DomainFile paths\n (manually updated by users of the ProgramMappingService when\n they do an import or other operation that creates a Ghidra DomainFile by calling\n #createAssociation(FSLR, DomainFile) and friends.)\n \n [1] - best-effort (adverb): meaning a dirty hack.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"PROGRAM_METADATA_MD5","comment":"","type_short":"String","constant_value":"\"Executable MD5\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"PROGRAM_SOURCE_FSRL","comment":"","type_short":"String","constant_value":"\"FSRL\""},{"type_long":"int","javadoc":"","static":true,"name":"FSRL_TO_PATH_MAP_SIZE","comment":"","type_short":"int","constant_value":"1000"},{"type_long":"java.util.Map<ghidra.formats.gfilesystem.FSRL,java.lang.String>","javadoc":"LRU mapping from FSRL to the project path string of a DomainFile object.\n <p>\n Limited in size to {@value #FSRL_TO_PATH_MAP_SIZE}.","static":true,"name":"fsrlToProjectPathMap","comment":"LRU mapping from FSRL to the project path string of a DomainFile object.\n \n Limited in size to .","type_short":"Map","constant_value":null}]}
