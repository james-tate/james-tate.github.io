{"implements":[],"javadoc":"An interface to provide a common set of methods for classes that could not otherwise \n extend an abstract class.  This interface signals that the implementer is a {@link VisualGraph}\n mouse plugin.\n \n <P>Note: The implementors of this interface still use the deprecated \n {@link MouseEvent#getModifiers()} method, since many of those classes extends from \n 3rd-party classes that still use them, such as {@link PickingGraphMousePlugin}.   We will need\n to update the library (if\/when possible), or rewrite our code so that it does not use the \n old 3rd-party algorithms.\n@param <V> the vertex\n@param <E> the edge","static":false,"methods":[{"javadoc":"","static":false,"name":"getViewer","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"edu.uci.ics.jung.visualization.VisualizationViewer<V,E>","comment":"","type_short":"VisualizationViewer"}},{"javadoc":"Returns the <b>primary\/master<\/b> graph viewer.\n@param e the mouse event from which to get the viewer\n@return the viewer","static":false,"name":"getGraphViewer","comment":"Returns the primary\/master graph viewer.","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"the mouse event from which to get the viewer","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"ghidra.graph.viewer.GraphViewer<V,E>","comment":"the viewer","type_short":"GraphViewer"}},{"javadoc":"Returns the satellite graph viewer.  This assumes that the mouse event originated from \n the satellite viewer.\n@param e the mouse event from which to get the viewer\n@return the viewer","static":false,"name":"getSatelliteGraphViewer","comment":"Returns the satellite graph viewer.  This assumes that the mouse event originated from \n the satellite viewer.","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"the mouse event from which to get the viewer","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"ghidra.graph.viewer.SatelliteGraphViewer<V,E>","comment":"the viewer","type_short":"SatelliteGraphViewer"}},{"javadoc":"Returns the updater that is used to modify the primary graph viewer.\n@param e the mouse event from which to get the viewer\n@return the updater","static":false,"name":"getViewUpdater","comment":"Returns the updater that is used to modify the primary graph viewer.","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"the mouse event from which to get the viewer","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"ghidra.graph.viewer.VisualGraphViewUpdater<V,E>","comment":"the updater","type_short":"VisualGraphViewUpdater"}},{"javadoc":"Returns the updater that is used to modify the primary graph viewer.\n@param viewer the viewer\n@return the updater","static":false,"name":"getViewUpdater","comment":"Returns the updater that is used to modify the primary graph viewer.","params":[{"type_long":"ghidra.graph.viewer.GraphViewer<V,E>","name":"viewer","comment":"the viewer","type_short":"GraphViewer"}],"throws":[],"return":{"type_long":"ghidra.graph.viewer.VisualGraphViewUpdater<V,E>","comment":"the updater","type_short":"VisualGraphViewUpdater"}},{"javadoc":"Signals to perform any cleanup when this plugin is going away","static":false,"name":"dispose","comment":"Signals to perform any cleanup when this plugin is going away","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"VisualGraphMousePlugin","comment":"An interface to provide a common set of methods for classes that could not otherwise \n extend an abstract class.  This interface signals that the implementer is a VisualGraph\n mouse plugin.\n \n Note: The implementors of this interface still use the deprecated \n MouseEvent#getModifiers() method, since many of those classes extends from \n 3rd-party classes that still use them, such as PickingGraphMousePlugin.   We will need\n to update the library (if\/when possible), or rewrite our code so that it does not use the \n old 3rd-party algorithms.","fields":[]}
