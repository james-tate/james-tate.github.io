{"implements":[],"javadoc":"A view object, where 'view' is used in the sense of the Model-View-Controller (MVC) pattern.\n This class will contain all UI widgets need to display and interact with a graph.\n\n <p><b><u>Implementation Note:<\/u><\/b> \n <ol>\n \t<li>The graph of this component can be null, changing to non-null values over the \n lifetime of this view.  This allows this view to be installed in a UI component, with the \n contents changing as needed. \n \t<\/li>\n  <li>\n \tWhen the graph is {@link #setGraph(VisualGraph) set}, the view portion of the class is\n \trecreated.\n  <\/li>\n  <li>\n  At any given point in time there may not be a {@link #graphComponent}.  This means that \n  this class must maintain settings state that it will apply when the component is created.\n  This state is atypical and makes this class a bit harder to understand.\n  <\/li>\n <\/ol>\n@param <V> the vertex type\n@param <E> the edge type\n@param <G> the graph type","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"build","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getViewComponent","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.JComponent","comment":"","type_short":"JComponent"}},{"javadoc":"","static":false,"name":"setSouthComponent","comment":"","params":[{"type_long":"javax.swing.JComponent","name":"component","comment":"","type_short":"JComponent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeSatellite","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the given layout provider, <b>but does not actually perform a layout<\/b>.\n@param newLayoutProvider the new provider","static":false,"name":"setLayoutProvider","comment":"Sets the given layout provider, but does not actually perform a layout.","params":[{"type_long":"ghidra.graph.viewer.layout.LayoutProvider<V,E,G>","name":"newLayoutProvider","comment":"the new provider","type_short":"LayoutProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setGraph","comment":"","params":[{"type_long":"G","name":"graph","comment":"","type_short":"G"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setSatelliteListener","comment":"","params":[{"type_long":"ghidra.graph.viewer.GraphSatelliteListener","name":"l","comment":"","type_short":"GraphSatelliteListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setVertexFocusListener","comment":"","params":[{"type_long":"ghidra.graph.viewer.vertex.VertexFocusListener<V>","name":"l","comment":"","type_short":"VertexFocusListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets a listener that allows clients to be notified of vertex double-clicks.  Normal \n mouse processing is handled by the {@link VisualGraphMousePlugin} class.  This is a\n convenience method so that clients do not have to deal with the mouse plugin.\n@param l the listener","static":false,"name":"setVertexClickListener","comment":"Sets a listener that allows clients to be notified of vertex double-clicks.  Normal \n mouse processing is handled by the VisualGraphMousePlugin class.  This is a\n convenience method so that clients do not have to deal with the mouse plugin.","params":[{"type_long":"ghidra.graph.viewer.vertex.VertexClickListener<V,E>","name":"l","comment":"the listener","type_short":"VertexClickListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"stopAllAnimation","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"installGraphViewer","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setGraphComponent","comment":"","params":[{"type_long":"ghidra.graph.viewer.GraphComponent<V,E,G>","name":"newComponent","comment":"","type_short":"GraphComponent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setContent","comment":"","params":[{"type_long":"java.awt.Component","name":"c","comment":"","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getWithBusyCursor","comment":"","params":[{"type_long":"java.util.function.Supplier<T>","name":"s","comment":"","type_short":"Supplier"}],"throws":[],"return":{"type_long":"T","comment":"","type_short":"T"}},{"javadoc":"","static":false,"name":"getVisualGraph","comment":"","params":[],"throws":[],"return":{"type_long":"G","comment":"","type_short":"G"}},{"javadoc":"Returns the primary viewer of the graph (as opposed to the satellite viewer).   The \n viewer returned is responsible for maintaining view information for a given graph.\n@return the primary viewer","static":false,"name":"getPrimaryGraphViewer","comment":"Returns the primary viewer of the graph (as opposed to the satellite viewer).   The \n viewer returned is responsible for maintaining view information for a given graph.","params":[],"throws":[],"return":{"type_long":"ghidra.graph.viewer.GraphViewer<V,E>","comment":"the primary viewer","type_short":"GraphViewer"}},{"javadoc":"","static":false,"name":"getSatelliteViewer","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.graph.viewer.SatelliteGraphViewer<V,E>","comment":"","type_short":"SatelliteGraphViewer"}},{"javadoc":"Sets the perspective for this view\n@param newPerspective the new perspective","static":false,"name":"setGraphPerspective","comment":"Sets the perspective for this view","params":[{"type_long":"ghidra.graph.viewer.GraphPerspectiveInfo<V,E>","name":"newPerspective","comment":"the new perspective","type_short":"GraphPerspectiveInfo"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"generateGraphPerspective","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.graph.viewer.GraphPerspectiveInfo<V,E>","comment":"","type_short":"GraphPerspectiveInfo"}},{"javadoc":"","static":false,"name":"getZoom","comment":"","params":[],"throws":[],"return":{"type_long":"double","comment":"","type_short":"double"}},{"javadoc":"","static":false,"name":"showErrorView","comment":"","params":[{"type_long":"java.lang.String","name":"errorMessage","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets a message to be painted on the viewer.  This is useful to show a text message to the\n user.  Passing null will clear the message.\n@param message the status message","static":false,"name":"setStatusMessage","comment":"Sets a message to be painted on the viewer.  This is useful to show a text message to the\n user.  Passing null will clear the message.","params":[{"type_long":"java.lang.String","name":"message","comment":"the status message","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getGraphComponent","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.graph.viewer.GraphComponent<V,E,G>","comment":"","type_short":"GraphComponent"}},{"javadoc":"Returns whether the satellite intended to be visible.  If this component is built, then\n a result of true means that the satellite is showing.  If the component is not yet \n built, then a result of true means that the satellite will be made visible when the \n component is built.\n@return true if visible","static":false,"name":"isSatelliteVisible","comment":"Returns whether the satellite intended to be visible.  If this component is built, then\n a result of true means that the satellite is showing.  If the component is not yet \n built, then a result of true means that the satellite will be made visible when the \n component is built.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if visible","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setSatelliteVisible","comment":"","params":[{"type_long":"boolean","name":"visible","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setSatelliteDocked","comment":"","params":[{"type_long":"boolean","name":"docked","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns whether the satellite intended to be docked.  If this component is built, then\n a result of true means that the satellite is docked.  If the component is not yet \n built, then a result of true means that the satellite will be made docked when the \n component is built.\n@return true if visible","static":false,"name":"isSatelliteDocked","comment":"Returns whether the satellite intended to be docked.  If this component is built, then\n a result of true means that the satellite is docked.  If the component is not yet \n built, then a result of true means that the satellite will be made docked when the \n component is built.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if visible","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setPopupsVisible","comment":"","params":[{"type_long":"boolean","name":"visible","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"arePopupsEnabled","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getUndockedSatelliteComponent","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.JComponent","comment":"","type_short":"JComponent"}},{"javadoc":"","static":false,"name":"isSatelliteComponent","comment":"","params":[{"type_long":"java.awt.Component","name":"c","comment":"","type_short":"Component"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setVertexHoverPathHighlightMode","comment":"","params":[{"type_long":"ghidra.graph.viewer.PathHighlightMode","name":"mode","comment":"","type_short":"PathHighlightMode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setVertexFocusPathHighlightMode","comment":"","params":[{"type_long":"ghidra.graph.viewer.PathHighlightMode","name":"mode","comment":"","type_short":"PathHighlightMode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getVertexFocusPathHighlightMode","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.graph.viewer.PathHighlightMode","comment":"","type_short":"PathHighlightMode"}},{"javadoc":"","static":false,"name":"getVertexHoverPathHighlightMode","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.graph.viewer.PathHighlightMode","comment":"","type_short":"PathHighlightMode"}},{"javadoc":"","static":false,"name":"setTooltipProvider","comment":"","params":[{"type_long":"ghidra.graph.viewer.event.mouse.VertexTooltipProvider<V,E>","name":"provider","comment":"","type_short":"VertexTooltipProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"zoomOutGraph","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"zoomInGraph","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"zoomToVertex","comment":"","params":[{"type_long":"V","name":"v","comment":"","type_short":"V"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"zoomToWindow","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getViewUpdater","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.graph.viewer.VisualGraphViewUpdater<V,E>","comment":"","type_short":"VisualGraphViewUpdater"}},{"javadoc":"","static":false,"name":"getVertexPointInViewSpace","comment":"","params":[{"type_long":"V","name":"v","comment":"","type_short":"V"}],"throws":[],"return":{"type_long":"java.awt.Point","comment":"","type_short":"Point"}},{"javadoc":"","static":false,"name":"translatePointFromVertexToViewSpace","comment":"","params":[{"type_long":"V","name":"v","comment":"","type_short":"V"},{"type_long":"java.awt.Point","name":"p","comment":"","type_short":"Point"}],"throws":[],"return":{"type_long":"java.awt.Point","comment":"","type_short":"Point"}},{"javadoc":"","static":false,"name":"translateRectangleFromVertexToViewSpace","comment":"","params":[{"type_long":"V","name":"v","comment":"","type_short":"V"},{"type_long":"java.awt.Rectangle","name":"r","comment":"","type_short":"Rectangle"}],"throws":[],"return":{"type_long":"java.awt.Rectangle","comment":"","type_short":"Rectangle"}},{"javadoc":"","static":false,"name":"translateMouseEventFromVertexToViewSpace","comment":"","params":[{"type_long":"V","name":"v","comment":"","type_short":"V"},{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"java.awt.event.MouseEvent","comment":"","type_short":"MouseEvent"}},{"javadoc":"","static":false,"name":"isScaledPastInteractionThreshold","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"maybeTwinkleVertex","comment":"","params":[{"type_long":"V","name":"twinkleVertex","comment":"","type_short":"V"},{"type_long":"boolean","name":"doTwinkle","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"requestFocus","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"repaint","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFocusedVertex","comment":"","params":[],"throws":[],"return":{"type_long":"V","comment":"","type_short":"V"}},{"javadoc":"","static":false,"name":"getSelectedVertices","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Set<V>","comment":"","type_short":"Set"}},{"javadoc":"","static":false,"name":"getLayoutProvider","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.graph.viewer.layout.LayoutProvider<V,E,G>","comment":"","type_short":"LayoutProvider"}},{"javadoc":"Effectively clears this display.  This method is not called dispose, as that implies \n the end of an object's lifecycle.  This object can be re-used after this method is\n called.","static":false,"name":"cleanup","comment":"Effectively clears this display.  This method is not called dispose, as that implies \n the end of an object's lifecycle.  This object can be re-used after this method is\n called.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"disposeViewer","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"VisualGraphView","comment":"A view object, where 'view' is used in the sense of the Model-View-Controller (MVC) pattern.\n This class will contain all UI widgets need to display and interact with a graph.\n\n Implementation Note: \n \n \tThe graph of this component can be null, changing to non-null values over the \n lifetime of this view.  This allows this view to be installed in a UI component, with the \n contents changing as needed. \n \t\n  \n \tWhen the graph is #setGraph(VisualGraph), the view portion of the class is\n \trecreated.\n  \n  \n  At any given point in time there may not be a #graphComponent.  This means that \n  this class must maintain settings state that it will apply when the component is created.\n  This state is atypical and makes this class a bit harder to understand.\n  \n ","fields":[{"type_long":"float","javadoc":"","static":true,"name":"ZOOM_OUT_AMOUNT","comment":"","type_short":"float","constant_value":"0.9"},{"type_long":"float","javadoc":"","static":true,"name":"ZOOM_IN_AMOUNT","comment":"","type_short":"float","constant_value":"1.1"},{"type_long":"javax.swing.JPanel","javadoc":"","static":false,"name":"viewPanel","comment":"","type_short":"JPanel","constant_value":null},{"type_long":"javax.swing.JPanel","javadoc":"","static":false,"name":"viewContentPanel","comment":"","type_short":"JPanel","constant_value":null},{"type_long":"javax.swing.JPanel","javadoc":"","static":false,"name":"undockedSatelliteContentPanel","comment":"","type_short":"JPanel","constant_value":null},{"type_long":"G","javadoc":"","static":false,"name":"graph","comment":"","type_short":"G","constant_value":null},{"type_long":"ghidra.graph.viewer.GraphComponent<V,E,G>","javadoc":"","static":false,"name":"graphComponent","comment":"","type_short":"GraphComponent","constant_value":null},{"type_long":"java.util.Optional<ghidra.graph.viewer.vertex.VertexFocusListener<V>>","javadoc":"","static":false,"name":"clientFocusListener","comment":"","type_short":"Optional","constant_value":null},{"type_long":"ghidra.graph.viewer.vertex.VertexFocusListener<V>","javadoc":"","static":false,"name":"internalFocusListener","comment":"","type_short":"VertexFocusListener","constant_value":null},{"type_long":"java.util.Optional<ghidra.graph.viewer.vertex.VertexClickListener<V,E>>","javadoc":"","static":false,"name":"clientVertexClickListener","comment":"","type_short":"Optional","constant_value":null},{"type_long":"ghidra.graph.viewer.vertex.VertexClickListener<V,E>","javadoc":"","static":false,"name":"internalVertexClickListener","comment":"","type_short":"VertexClickListener","constant_value":null},{"type_long":"java.util.Optional<ghidra.graph.viewer.GraphSatelliteListener>","javadoc":"","static":false,"name":"clientSatelliteListener","comment":"","type_short":"Optional","constant_value":null},{"type_long":"ghidra.graph.viewer.GraphSatelliteListener","javadoc":"","static":false,"name":"internalSatelliteListener","comment":"","type_short":"GraphSatelliteListener","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"satelliteDocked","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"showSatellite","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"showPopups","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.graph.viewer.event.mouse.VertexTooltipProvider<V,E>","javadoc":"","static":false,"name":"tooltipProvider","comment":"","type_short":"VertexTooltipProvider","constant_value":null},{"type_long":"ghidra.graph.viewer.GraphPerspectiveInfo<V,E>","javadoc":"","static":false,"name":"graphInfo","comment":"","type_short":"GraphPerspectiveInfo","constant_value":null},{"type_long":"ghidra.graph.viewer.PathHighlightMode","javadoc":"","static":false,"name":"vertexHoverHighlightMode","comment":"","type_short":"PathHighlightMode","constant_value":null},{"type_long":"ghidra.graph.viewer.PathHighlightMode","javadoc":"","static":false,"name":"vertexFocusHighlightMode","comment":"","type_short":"PathHighlightMode","constant_value":null},{"type_long":"ghidra.graph.viewer.layout.LayoutProvider<V,E,G>","javadoc":"","static":false,"name":"layoutProvider","comment":"","type_short":"LayoutProvider","constant_value":null},{"type_long":"edu.uci.ics.jung.visualization.control.ScalingControl","javadoc":"","static":false,"name":"scaler","comment":"","type_short":"ScalingControl","constant_value":null}]}
