{"implements":[],"javadoc":"A general base class for sharing code between graph algorithm implementations.\n@param <V> the vertex type\n@param <E> the edge type","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Converts multiple source\/root nodes in a graph into a single source of which those become\n children.\n@param graph the graph\n@param graphNavigator the navigator to determine graph direction\n@return the new single source\n@throws IllegalArgumentException if there is not at least one source node in the graph","static":true,"name":"unifySources","comment":"Converts multiple source\/root nodes in a graph into a single source of which those become\n children.","params":[{"type_long":"ghidra.graph.MutableGDirectedGraphWrapper<V,E>","name":"graph","comment":"the graph","type_short":"MutableGDirectedGraphWrapper"},{"type_long":"ghidra.graph.algo.GraphNavigator<V,E>","name":"graphNavigator","comment":"the navigator to determine graph direction","type_short":"GraphNavigator"}],"throws":[],"return":{"type_long":"V","comment":"the new single source","type_short":"V"}},{"javadoc":"Converts multiple sink\/exit nodes in a graph into a single sink of which those become\n parents.\n@param graph the graph\n@param graphNavigator the navigator to determine graph direction\n@return the new single sink\n@throws IllegalArgumentException if there is not at least one sink node in the graph","static":true,"name":"unifySinks","comment":"Converts multiple sink\/exit nodes in a graph into a single sink of which those become\n parents.","params":[{"type_long":"ghidra.graph.MutableGDirectedGraphWrapper<V,E>","name":"graph","comment":"the graph","type_short":"MutableGDirectedGraphWrapper"},{"type_long":"ghidra.graph.algo.GraphNavigator<V,E>","name":"graphNavigator","comment":"the navigator to determine graph direction","type_short":"GraphNavigator"}],"throws":[],"return":{"type_long":"V","comment":"the new single sink","type_short":"V"}}],"name":"AbstractDominanceAlgorithm","comment":"A general base class for sharing code between graph algorithm implementations.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"DUMMY_ROOT_NAME","comment":"","type_short":"String","constant_value":"\"Dummy Root Vertex\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"DUMMY_SINK_NAME","comment":"","type_short":"String","constant_value":"\"Dummy Sink Vertex\""}]}
