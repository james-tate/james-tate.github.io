{"implements":[],"javadoc":"","static":false,"extends":"ghidra.pcode.opbehavior.OpBehavior","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"int","name":"opcode","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Evaluate the unary operation using long data\n@param sizeout intended output size (bytes)\n@param sizein in1 size (bytes)\n@param unsignedIn1 unsigned input 1\n@return operation result.  NOTE: if the operation overflows bits may be\n set beyond the specified sizeout.  Even though results should be treated\n as unsigned it may be returned as a signed long value.  It is expected that the \n returned result always be properly truncated by the caller since the evaluation\n may not - this is done to conserve emulation cycles.\n@see Utils#longToBytes(long, int, boolean)\n@see Utils#bytesToLong(byte[], int, boolean)","static":false,"name":"evaluateUnary","comment":"Evaluate the unary operation using long data","params":[{"type_long":"int","name":"sizeout","comment":"intended output size (bytes)","type_short":"int"},{"type_long":"int","name":"sizein","comment":"in1 size (bytes)","type_short":"int"},{"type_long":"long","name":"unsignedIn1","comment":"unsigned input 1","type_short":"long"}],"throws":[],"return":{"type_long":"long","comment":"operation result.  NOTE: if the operation overflows bits may be\n set beyond the specified sizeout.  Even though results should be treated\n as unsigned it may be returned as a signed long value.  It is expected that the \n returned result always be properly truncated by the caller since the evaluation\n may not - this is done to conserve emulation cycles.","type_short":"long"}},{"javadoc":"Evaluate the unary operation using BigInteger data\n@param sizeout intended output size (bytes)\n@param sizein in1 size (bytes)\n@param unsignedIn1 unsigned input 1\n@return operation result.  NOTE: if the operation overflows bits may be\n set beyond the specified sizeout.  Even though results should be treated\n as unsigned it may be returned as a signed value.  It is expected that the \n returned result always be properly truncated by the caller since the evaluation\n may not - this is done to conserve emulation cycles.\n@see Utils#bigIntegerToBytes(BigInteger, int, boolean)\n@see Utils#bytesToBigInteger(byte[], int, boolean, boolean)","static":false,"name":"evaluateUnary","comment":"Evaluate the unary operation using BigInteger data","params":[{"type_long":"int","name":"sizeout","comment":"intended output size (bytes)","type_short":"int"},{"type_long":"int","name":"sizein","comment":"in1 size (bytes)","type_short":"int"},{"type_long":"java.math.BigInteger","name":"unsignedIn1","comment":"unsigned input 1","type_short":"BigInteger"}],"throws":[],"return":{"type_long":"java.math.BigInteger","comment":"operation result.  NOTE: if the operation overflows bits may be\n set beyond the specified sizeout.  Even though results should be treated\n as unsigned it may be returned as a signed value.  It is expected that the \n returned result always be properly truncated by the caller since the evaluation\n may not - this is done to conserve emulation cycles.","type_short":"BigInteger"}}],"name":"UnaryOpBehavior","comment":"","fields":[]}
