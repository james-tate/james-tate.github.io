{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get all of the applications's settings directories \n (<tt>.<i>application_name_version<\/i><\/tt>) for various versions in descending order by the \n modification time. In other words, <tt>list.get(0)<\/tt> will be the directory \n with the most recent modification time. If two directories have the same time then the \n directories will simply be sorted based on their pathnames as a string.\n <p>\n <b>Note: <\/b>This method ignores Test directories","static":true,"name":"getUserSettingsDirsByTime","comment":"Get all of the applications's settings directories \n (.application_name_version) for various versions in descending order by the \n modification time. In other words, list.get(0) will be the directory \n with the most recent modification time. If two directories have the same time then the \n directories will simply be sorted based on their pathnames as a string.\n \n Note: This method ignores Test directories","params":[],"throws":[],"return":{"type_long":"java.util.List<java.io.File>","comment":"","type_short":"List"}},{"javadoc":"","static":true,"name":"collectAllApplicationDirectories","comment":"","params":[{"type_long":"java.io.File","name":"dataDirectoryParentDir","comment":"","type_short":"File"}],"throws":[],"return":{"type_long":"java.util.List<java.io.File>","comment":"","type_short":"List"}},{"javadoc":"Searches previous Application Settings directories \n ({@link #getUserSettingsDirsByTime()}) to find a file by the given name.   This is \n useful for loading previous user settings, such as preferences.\n \n <p>Note: this method will ignore any test versions of settings directories.\n@param filename the name for which to seek; must be relative to a settings directory\n@return the most recent file matching that name found in a previous settings dir","static":true,"name":"getPreviousApplicationSettingsFile","comment":"Searches previous Application Settings directories \n (#getUserSettingsDirsByTime()) to find a file by the given name.   This is \n useful for loading previous user settings, such as preferences.\n \n Note: this method will ignore any test versions of settings directories.","params":[{"type_long":"java.lang.String","name":"filename","comment":"the name for which to seek; must be relative to a settings directory","type_short":"String"}],"throws":[],"return":{"type_long":"java.io.File","comment":"the most recent file matching that name found in a previous settings dir","type_short":"File"}},{"javadoc":"This is the same as {@link #getUserSettingsDirsByTime()} except that it doesn't include the \n current installation or installations with different release names.","static":true,"name":"getPreviousApplicationSettingsDirsByTime","comment":"This is the same as #getUserSettingsDirsByTime() except that it doesn't include the \n current installation or installations with different release names.","params":[],"throws":[],"return":{"type_long":"java.util.List<java.io.File>","comment":"","type_short":"List"}},{"javadoc":"Get the user's preferred projects directory.\n@return projects directory path.","static":true,"name":"getProjectsDirPath","comment":"Get the user's preferred projects directory.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"projects directory path.","type_short":"String"}},{"javadoc":"Set the user's current projects directory path.  Value is also retained\n within user's set of preferences.\n@param path projects directory path.","static":true,"name":"setProjectsDirPath","comment":"Set the user's current projects directory path.  Value is also retained\n within user's set of preferences.","params":[{"type_long":"java.lang.String","name":"path","comment":"projects directory path.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"GenericRunInfo","comment":"","fields":[{"type_long":"java.lang.String","javadoc":"The name appended to application directories during testing","static":true,"name":"TEST_DIRECTORY_SUFFIX","comment":"The name appended to application directories during testing","type_short":"String","constant_value":"\"-Test\""}]}
