{"implements":[],"javadoc":"<code>ClientUtil<\/code> allows a user to connect to a Repository Server and obtain its handle.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set client authenticator\n@param authenticator","static":true,"name":"setClientAuthenticator","comment":"Set client authenticator","params":[{"type_long":"ghidra.framework.client.ClientAuthenticator","name":"authenticator","comment":"","type_short":"ClientAuthenticator"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the currently installed client authenticator.  If one has not been\n installed, this will trigger the installation of a default instance.\n@return current client authenticator","static":true,"name":"getClientAuthenticator","comment":"Get the currently installed client authenticator.  If one has not been\n installed, this will trigger the installation of a default instance.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.client.ClientAuthenticator","comment":"current client authenticator","type_short":"ClientAuthenticator"}},{"javadoc":"Connect to a Repository Server and obtain a handle to it.\n Based upon the server authentication requirements, the user may be\n prompted for a password via a Swing dialog.  If a previous connection\n attempt to this server failed, the adapter may be returned in a\n disconnected state.\n@param host server name or address\n@param port server port, 0 indicates that default port should be used.\n@return repository server adapter\n@throws LoginException thrown if server fails to authenticate user or\n general access is denied.","static":true,"name":"getRepositoryServer","comment":"Connect to a Repository Server and obtain a handle to it.\n Based upon the server authentication requirements, the user may be\n prompted for a password via a Swing dialog.  If a previous connection\n attempt to this server failed, the adapter may be returned in a\n disconnected state.","params":[{"type_long":"java.lang.String","name":"host","comment":"server name or address","type_short":"String"},{"type_long":"int","name":"port","comment":"server port, 0 indicates that default port should be used.","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.framework.client.RepositoryServerAdapter","comment":"repository server adapter","type_short":"RepositoryServerAdapter"}},{"javadoc":"Connect to a Repository Server and obtain a handle to it.\n Based upon the server authentication requirements, the user may be\n prompted for a password via a Swing dialog.\n@param host server name or address\n@param port server port, 0 indicates that default port should be used.\n@param forceConnect if true and the server adapter is disconnected, an\n attempt will be made to reconnect.\n@return repository server handle\n@throws LoginException thrown if server fails to authenticate user or\n general access is denied.","static":true,"name":"getRepositoryServer","comment":"Connect to a Repository Server and obtain a handle to it.\n Based upon the server authentication requirements, the user may be\n prompted for a password via a Swing dialog.","params":[{"type_long":"java.lang.String","name":"host","comment":"server name or address","type_short":"String"},{"type_long":"int","name":"port","comment":"server port, 0 indicates that default port should be used.","type_short":"int"},{"type_long":"boolean","name":"forceConnect","comment":"if true and the server adapter is disconnected, an\n attempt will be made to reconnect.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.framework.client.RepositoryServerAdapter","comment":"repository server handle","type_short":"RepositoryServerAdapter"}},{"javadoc":"Eliminate the specified repository server from the connection cache\n@param host host name or IP address\n@param port port (0: use default port)\n@throws IOException","static":true,"name":"clearRepositoryAdapter","comment":"Eliminate the specified repository server from the connection cache","params":[{"type_long":"java.lang.String","name":"host","comment":"host name or IP address","type_short":"String"},{"type_long":"int","name":"port","comment":"port (0: use default port)","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns default user login name.  Actual user name used by repository\n should be obtained from RepositoryServerAdapter.getUser","static":true,"name":"getUserName","comment":"Returns default user login name.  Actual user name used by repository\n should be obtained from RepositoryServerAdapter.getUser","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Displays an error dialog appropriate for the given exception. If the exception is a\n ConnectException or NotConnectedException, a prompt to reconnect to the Ghidra Server\n is displayed.\n@param repository may be null if the exception is not a RemoteException\n@param exc exception that occurred\n@param operation operation that was being done when the exception occurred; this string\n is be used in the message for the error dialog if one should be displayed\n@param mustRetry true if the message should state that the user should retry the operation\n because it may not have succeeded (if the exception was because a RemoteException); there\n may be cases where the operation succeeded; as a result of the operation, a bad connection\n to the server was detected (e.g., save a file). Note: this parameter is ignored if the\n exception is not a ConnectException or NotConnectedException.\n@param parent parent of the error dialog","static":true,"name":"handleException","comment":"Displays an error dialog appropriate for the given exception. If the exception is a\n ConnectException or NotConnectedException, a prompt to reconnect to the Ghidra Server\n is displayed.","params":[{"type_long":"ghidra.framework.client.RepositoryAdapter","name":"repository","comment":"may be null if the exception is not a RemoteException","type_short":"RepositoryAdapter"},{"type_long":"java.lang.Exception","name":"exc","comment":"exception that occurred","type_short":"Exception"},{"type_long":"java.lang.String","name":"operation","comment":"operation that was being done when the exception occurred; this string\n is be used in the message for the error dialog if one should be displayed","type_short":"String"},{"type_long":"boolean","name":"mustRetry","comment":"true if the message should state that the user should retry the operation\n because it may not have succeeded (if the exception was because a RemoteException); there\n may be cases where the operation succeeded; as a result of the operation, a bad connection\n to the server was detected (e.g., save a file). Note: this parameter is ignored if the\n exception is not a ConnectException or NotConnectedException.","type_short":"boolean"},{"type_long":"java.awt.Component","name":"parent","comment":"parent of the error dialog","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Displays an error dialog appropriate for the given exception. If the exception is a\n ConnectException or NotConnectedException, a prompt to reconnect to the Ghidra Server\n is displayed. The message states that the operation may have to be retried due to the\n failed connection.\n@param repository may be null if the exception is not a RemoteException\n@param exc exception that occurred\n@param operation operation that was being done when the exception occurred; this string\n is be used in the message for the error dialog if one should be displayed\n@param parent parent of the error dialog","static":true,"name":"handleException","comment":"Displays an error dialog appropriate for the given exception. If the exception is a\n ConnectException or NotConnectedException, a prompt to reconnect to the Ghidra Server\n is displayed. The message states that the operation may have to be retried due to the\n failed connection.","params":[{"type_long":"ghidra.framework.client.RepositoryAdapter","name":"repository","comment":"may be null if the exception is not a RemoteException","type_short":"RepositoryAdapter"},{"type_long":"java.lang.Exception","name":"exc","comment":"exception that occurred","type_short":"Exception"},{"type_long":"java.lang.String","name":"operation","comment":"operation that was being done when the exception occurred; this string\n is be used in the message for the error dialog if one should be displayed","type_short":"String"},{"type_long":"java.awt.Component","name":"parent","comment":"parent of the error dialog","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Prompt the user to reconnect to the Ghidra Server.\n@param repository repository to connect to\n@param parent parent of the dialog","static":true,"name":"promptForReconnect","comment":"Prompt the user to reconnect to the Ghidra Server.","params":[{"type_long":"ghidra.framework.client.RepositoryAdapter","name":"repository","comment":"repository to connect to","type_short":"RepositoryAdapter"},{"type_long":"java.awt.Component","name":"parent","comment":"parent of the dialog","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"promptForReconnect","comment":"","params":[{"type_long":"ghidra.framework.client.RepositoryAdapter","name":"rep","comment":"","type_short":"RepositoryAdapter"},{"type_long":"java.lang.String","name":"operation","comment":"","type_short":"String"},{"type_long":"boolean","name":"mustRetry","comment":"","type_short":"boolean"},{"type_long":"java.awt.Component","name":"parent","comment":"","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Connect to a Ghidra Server and verify compatibility.  This method can be used\n to affectively \"ping\" the Ghidra Server to verify the ability to connect.\n NOTE: Use of this method when PKI authentication is enabled is not supported.\n@param host server hostname\n@param port first Ghidra Server port (0=use default)\n@throws IOException thrown if an IO Error occurs (e.g., server not found).\n@throws RemoteException if server interface is incompatible or another server-side\n error occurs.","static":true,"name":"checkGhidraServer","comment":"Connect to a Ghidra Server and verify compatibility.  This method can be used\n to affectively \"ping\" the Ghidra Server to verify the ability to connect.\n NOTE: Use of this method when PKI authentication is enabled is not supported.","params":[{"type_long":"java.lang.String","name":"host","comment":"server hostname","type_short":"String"},{"type_long":"int","name":"port","comment":"first Ghidra Server port (0=use default)","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"thrown if an IO Error occurs (e.g., server not found).","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Connect to a Repository Server and obtain a handle to it.\n Based upon the server authentication requirements, the user may be\n prompted for a name\/password via a Swing dialog.  If null\n is returned, this indicates that the user cancelled the connect\n operation.\n@param server server address and port\n@return repository server handle\n@throws LoginException thrown if server fails to authenticate user or\n general access is denied.\n@throws GeneralSecurityException if server authentication fails due to\n credential access error (e.g., PKI cert failure)\n@throws IOException thrown if an IO Error occurs.","static":true,"name":"connect","comment":"Connect to a Repository Server and obtain a handle to it.\n Based upon the server authentication requirements, the user may be\n prompted for a name\/password via a Swing dialog.  If null\n is returned, this indicates that the user cancelled the connect\n operation.","params":[{"type_long":"ghidra.framework.model.ServerInfo","name":"server","comment":"server address and port","type_short":"ServerInfo"}],"throws":[{"type_long":"javax.security.auth.login.LoginException","comment":"thrown if server fails to authenticate user or\n general access is denied.","type_short":"LoginException"},{"type_long":"java.security.GeneralSecurityException","comment":"if server authentication fails due to\n credential access error (e.g., PKI cert failure)","type_short":"GeneralSecurityException"},{"type_long":"java.io.IOException","comment":"thrown if an IO Error occurs.","type_short":"IOException"}],"return":{"type_long":"ghidra.framework.remote.RemoteRepositoryServerHandle","comment":"repository server handle","type_short":"RemoteRepositoryServerHandle"}},{"javadoc":"Prompt user and change password on server (not initiated by user).\n@param parent dialog parent\n@param handle server handle\n@param serverInfo server information\n@throws IOException","static":true,"name":"changePassword","comment":"Prompt user and change password on server (not initiated by user).","params":[{"type_long":"java.awt.Component","name":"parent","comment":"dialog parent","type_short":"Component"},{"type_long":"ghidra.framework.remote.RepositoryServerHandle","name":"handle","comment":"server handle","type_short":"RepositoryServerHandle"},{"type_long":"java.lang.String","name":"serverInfo","comment":"server information","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"processPasswordCallbacks","comment":"","params":[{"type_long":"javax.security.auth.callback.Callback[]","name":"callbacks","comment":"","type_short":"javax.security.auth.callback.Callback[]"},{"type_long":"java.lang.String","name":"serverName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"defaultUserID","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"loginError","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":true,"name":"processSignatureCallback","comment":"","params":[{"type_long":"java.lang.String","name":"serverName","comment":"","type_short":"String"},{"type_long":"ghidra.framework.remote.SignatureCallback","name":"sigCb","comment":"","type_short":"SignatureCallback"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"processSSHSignatureCallback","comment":"","params":[{"type_long":"javax.security.auth.callback.Callback[]","name":"callbacks","comment":"","type_short":"javax.security.auth.callback.Callback[]"},{"type_long":"java.lang.String","name":"serverName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"defaultUserID","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":true,"name":"isSSHKeyAvailable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"ClientUtil","comment":"ClientUtil allows a user to connect to a Repository Server and obtain its handle.","fields":[{"type_long":"ghidra.framework.client.ClientAuthenticator","javadoc":"","static":true,"name":"clientAuthenticator","comment":"","type_short":"ClientAuthenticator","constant_value":null},{"type_long":"java.util.Hashtable<ghidra.framework.model.ServerInfo,ghidra.framework.client.RepositoryServerAdapter>","javadoc":"","static":true,"name":"serverHandles","comment":"","type_short":"Hashtable","constant_value":null}]}
