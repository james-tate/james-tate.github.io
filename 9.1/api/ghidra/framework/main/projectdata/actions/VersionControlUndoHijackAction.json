{"implements":[],"javadoc":"Action to undo hijacked domain files in the project.","static":false,"extends":"ghidra.framework.main.projectdata.actions.VersionControlAction","methods":[{"javadoc":"Creates an action to undo hijacked domain files in the project.\n@param plugin the plug-in that owns this action.","static":false,"name":"<init>","comment":"Creates an action to undo hijacked domain files in the project.","params":[{"type_long":"ghidra.framework.plugintool.Plugin","name":"plugin","comment":"the plug-in that owns this action.","type_short":"Plugin"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"actionPerformed","comment":"","params":[{"type_long":"ghidra.framework.main.datatable.DomainFileProvider","name":"context","comment":"","type_short":"DomainFileProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if at least one of the provided domain files is hijacked.","static":false,"name":"isEnabledForContext","comment":"Returns true if at least one of the provided domain files is hijacked.","params":[{"type_long":"ghidra.framework.main.datatable.DomainFileProvider","name":"context","comment":"","type_short":"DomainFileProvider"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Gets the domain files from the provider and then undoes the hijack on any that are hijacked.","static":false,"name":"undoHijackedFiles","comment":"Gets the domain files from the provider and then undoes the hijack on any that are hijacked.","params":[{"type_long":"java.util.List<ghidra.framework.model.DomainFile>","name":"domainFiles","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Displays the undo hijack confirmation dialog for each hijacked file and then \n undoes the hijack while keeping a copy of the hijacked file if the user chooses to do so.\n@param hijackList the list of hijacked domain files.","static":false,"name":"undoHijack","comment":"Displays the undo hijack confirmation dialog for each hijacked file and then \n undoes the hijack while keeping a copy of the hijacked file if the user chooses to do so.","params":[{"type_long":"java.util.List<ghidra.framework.model.DomainFile>","name":"hijackList","comment":"the list of hijacked domain files.","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determines a unique keep file name for saving a copy of the hijack file \n when its hijack is undone.\n@param parent the domain folder where the hijacked file exists.\n@param name the name of the hijacked file.\n@return the unique keep file name.","static":false,"name":"getKeepName","comment":"Determines a unique keep file name for saving a copy of the hijack file \n when its hijack is undone.","params":[{"type_long":"ghidra.framework.model.DomainFolder","name":"parent","comment":"the domain folder where the hijacked file exists.","type_short":"DomainFolder"},{"type_long":"java.lang.String","name":"name","comment":"the name of the hijacked file.","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the unique keep file name.","type_short":"String"}}],"name":"VersionControlUndoHijackAction","comment":"Action to undo hijacked domain files in the project.","fields":[]}
