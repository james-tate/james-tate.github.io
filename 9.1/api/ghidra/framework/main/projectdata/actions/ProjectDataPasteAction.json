{"implements":[],"javadoc":"","static":false,"extends":"ghidra.framework.main.projectdata.actions.ProjectDataCopyCutBaseAction","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"owner","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"group","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"actionPerformed","comment":"","params":[{"type_long":"ghidra.framework.main.datatree.ProjectDataTreeActionContext","name":"context","comment":"","type_short":"ProjectDataTreeActionContext"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isEnabledForContext","comment":"","params":[{"type_long":"ghidra.framework.main.datatree.ProjectDataTreeActionContext","name":"context","comment":"","type_short":"ProjectDataTreeActionContext"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isAddToPopup","comment":"","params":[{"type_long":"ghidra.framework.main.datatree.ProjectDataTreeActionContext","name":"context","comment":"","type_short":"ProjectDataTreeActionContext"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getFolderForNode","comment":"","params":[{"type_long":"docking.widgets.tree.GTreeNode","name":"node","comment":"","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"ghidra.framework.main.datatree.DomainFolderNode","comment":"","type_short":"DomainFolderNode"}},{"javadoc":"Check the destination node for whether clipboard data can be pasted there.\n@param destNode destination for paste operation\n@return true if least one node can be pasted at destNode","static":false,"name":"checkNodeForPaste","comment":"Check the destination node for whether clipboard data can be pasted there.","params":[{"type_long":"docking.widgets.tree.GTreeNode","name":"destNode","comment":"destination for paste operation","type_short":"GTreeNode"}],"throws":[],"return":{"type_long":"boolean","comment":"true if least one node can be pasted at destNode","type_short":"boolean"}},{"javadoc":"Process a \"paste\" request from a menu action.","static":false,"name":"paste","comment":"Process a \"paste\" request from a menu action.","params":[{"type_long":"ghidra.framework.main.datatree.DataTree","name":"tree","comment":"","type_short":"DataTree"},{"type_long":"ghidra.framework.main.datatree.DomainFolderNode","name":"folderNode","comment":"","type_short":"DomainFolderNode"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Update the given list of nodes to paste if the corresponding file or\n folder cannot be pasted; remove it from the list and update the\n clipboard with the new list.\n@param destNode destination node\n@param list list of nodes to paste\n@param isCutOperation true if this is a cut vs copy; for cut, files\n cannot be in use","static":false,"name":"checkPasteList","comment":"Update the given list of nodes to paste if the corresponding file or\n folder cannot be pasted; remove it from the list and update the\n clipboard with the new list.","params":[{"type_long":"ghidra.framework.main.datatree.DataTree","name":"tree","comment":"","type_short":"DataTree"},{"type_long":"docking.widgets.tree.GTreeNode","name":"destNode","comment":"destination node","type_short":"GTreeNode"},{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","name":"list","comment":"list of nodes to paste","type_short":"List"},{"type_long":"boolean","name":"isCutOperation","comment":"true if this is a cut vs copy; for cut, files\n cannot be in use","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove descendant nodes from the list; having the parent node\n is enough when folders are getting pasted.","static":false,"name":"removeDecendantsFromList","comment":"Remove descendant nodes from the list; having the parent node\n is enough when folders are getting pasted.","params":[{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","name":"list","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isCutOperation","comment":"","params":[{"type_long":"java.util.List<docking.widgets.tree.GTreeNode>","name":"list","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"ProjectDataPasteAction","comment":"","fields":[{"type_long":"javax.swing.Icon","javadoc":"","static":true,"name":"icon","comment":"","type_short":"Icon","constant_value":null}]}
