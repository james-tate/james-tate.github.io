{"implements":["java.awt.event.MouseMotionListener","java.awt.event.MouseListener"],"javadoc":"The table that backs the {@link FileViewer} window. It is responsible for displaying\n {@link Chunk} instances.","static":false,"extends":"docking.widgets.table.GTable","methods":[{"javadoc":"Ctor.\n@param reader\n@param viewportUtility\n@param model\n@param eventListener","static":false,"name":"<init>","comment":"Ctor.","params":[{"type_long":"ghidra.framework.main.logviewer.model.ChunkReader","name":"reader","comment":"","type_short":"ChunkReader"},{"type_long":"ghidra.framework.main.logviewer.ui.ViewportUtility","name":"viewportUtility","comment":"","type_short":"ViewportUtility"},{"type_long":"ghidra.framework.main.logviewer.model.ChunkModel","name":"model","comment":"","type_short":"ChunkModel"},{"type_long":"ghidra.framework.main.logviewer.event.FVEventListener","name":"eventListener","comment":"","type_short":"FVEventListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adjusts the column widths to be at least as wide as the widest cell.  This is required\n for horizontal scrolling to work properly.","static":false,"name":"prepareRenderer","comment":"Adjusts the column widths to be at least as wide as the widest cell.  This is required\n for horizontal scrolling to work properly.","params":[{"type_long":"javax.swing.table.TableCellRenderer","name":"renderer","comment":"","type_short":"TableCellRenderer"},{"type_long":"int","name":"row","comment":"","type_short":"int"},{"type_long":"int","name":"column","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.awt.Component","comment":"","type_short":"Component"}},{"javadoc":"Sets the status of the shift key.\n@param isDown","static":false,"name":"setShiftDown","comment":"Sets the status of the shift key.","params":[{"type_long":"boolean","name":"isDown","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setMouseDragging","comment":"","params":[{"type_long":"boolean","name":"isMouseDragging","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds the given row to the table.\n@param row","static":false,"name":"addRow","comment":"Adds the given row to the table.","params":[{"type_long":"java.lang.String","name":"row","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds the list of rows to the table.\n@param rows","static":false,"name":"addRows","comment":"Adds the list of rows to the table.","params":[{"type_long":"java.util.List<java.lang.String>","name":"rows","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set any previously selected table rows to a selected state. This should be called any \n time a chunk is read into the table. \n \n Note: This is critically important when the user has selected a row, then scrolled such that \n the selected row is in a chunk that has been swapped out and is no longer in the table. When\n that chunk is scrolled back into view, this will restore the selection.\n \n Note2: If there is a range of selected values and the table is somewhere in the middle of\n that range, just select the entire table.","static":false,"name":"restoreSelection","comment":"Set any previously selected table rows to a selected state. This should be called any \n time a chunk is read into the table. \n \n Note: This is critically important when the user has selected a row, then scrolled such that \n the selected row is in a chunk that has been swapped out and is no longer in the table. When\n that chunk is scrolled back into view, this will restore the selection.\n \n Note2: If there is a range of selected values and the table is somewhere in the middle of\n that range, just select the entire table.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes all rows from the table model.","static":false,"name":"clear","comment":"Removes all rows from the table model.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Increments the selection by the given number of rows, but doesn't affect any previously\n selected rows. This is typically called when selecting while dragging.\n@param rows","static":false,"name":"incrementAndAddSelection","comment":"Increments the selection by the given number of rows, but doesn't affect any previously\n selected rows. This is typically called when selecting while dragging.","params":[{"type_long":"int","name":"rows","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Moves the table selection down by the number of rows specified, ensuring that selection\n does not go beyond the bounds of the file.\n@param rows","static":false,"name":"incrementSelection","comment":"Moves the table selection down by the number of rows specified, ensuring that selection\n does not go beyond the bounds of the file.","params":[{"type_long":"int","name":"rows","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Decrements the selection by the number of rows given, and adds the new rows to the \n selection.\n@param rows","static":false,"name":"decrementAndAddSelection","comment":"Decrements the selection by the number of rows given, and adds the new rows to the \n selection.","params":[{"type_long":"int","name":"rows","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Moves the table selection up by the number of rows specified, ensuring that selection\n does not go beyond the beginning of the file.\n@param rows","static":false,"name":"decrementSelection","comment":"Moves the table selection up by the number of rows specified, ensuring that selection\n does not go beyond the beginning of the file.","params":[{"type_long":"int","name":"rows","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Invoked when a new row has been selected in the table. Update our chunk model to \n reflect as much.\n@param e","static":false,"name":"valueChanged","comment":"Invoked when a new row has been selected in the table. Update our chunk model to \n reflect as much.","params":[{"type_long":"javax.swing.event.ListSelectionEvent","name":"e","comment":"","type_short":"ListSelectionEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create key bindings for the table. We have to capture the following:\n   - arrow down\n   - arrow up\n   - page down\n   - page up\n   - home\n   - end\n   - Ctrl-C (Command-C for mac) for copy\n   - Ctrl-A (Command-A for mac) for select all\n   - Shift pressed \n   - Shift released\n@param reader\n@param model\n@param eventListener","static":false,"name":"createKeyBindings","comment":"Create key bindings for the table. We have to capture the following:\n   - arrow down\n   - arrow up\n   - page down\n   - page up\n   - home\n   - end\n   - Ctrl-C (Command-C for mac) for copy\n   - Ctrl-A (Command-A for mac) for select all\n   - Shift pressed \n   - Shift released","params":[{"type_long":"ghidra.framework.main.logviewer.model.ChunkReader","name":"reader","comment":"","type_short":"ChunkReader"},{"type_long":"ghidra.framework.main.logviewer.model.ChunkModel","name":"model","comment":"","type_short":"ChunkModel"},{"type_long":"ghidra.framework.main.logviewer.event.FVEventListener","name":"eventListener","comment":"","type_short":"FVEventListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if the rows provided are both in the table.\n@param rowStart\n@param rowEnd\n@return ","static":false,"name":"checkBounds","comment":"Returns true if the rows provided are both in the table.","params":[{"type_long":"int","name":"rowStart","comment":"","type_short":"int"},{"type_long":"int","name":"rowEnd","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"mouseDragged","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mouseMoved","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mouseClicked","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mousePressed","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mouseReleased","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mouseEntered","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mouseExited","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"e","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"FVTable","comment":"The table that backs the FileViewer window. It is responsible for displaying\n Chunk instances.","fields":[{"type_long":"ghidra.framework.main.logviewer.model.ChunkReader","javadoc":"","static":false,"name":"reader","comment":"","type_short":"ChunkReader","constant_value":null},{"type_long":"ghidra.framework.main.logviewer.ui.ViewportUtility","javadoc":"","static":false,"name":"viewportUtility","comment":"","type_short":"ViewportUtility","constant_value":null},{"type_long":"ghidra.framework.main.logviewer.model.ChunkModel","javadoc":"","static":false,"name":"model","comment":"","type_short":"ChunkModel","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"shiftDown","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"mouseDragging","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.framework.main.logviewer.event.FVEventListener","javadoc":"","static":false,"name":"eventListener","comment":"","type_short":"FVEventListener","constant_value":null},{"type_long":"javax.swing.table.TableColumn","javadoc":"","static":false,"name":"dateCol","comment":"","type_short":"TableColumn","constant_value":null},{"type_long":"javax.swing.table.TableColumn","javadoc":"","static":false,"name":"timeCol","comment":"","type_short":"TableColumn","constant_value":null},{"type_long":"javax.swing.table.TableColumn","javadoc":"","static":false,"name":"levelCol","comment":"","type_short":"TableColumn","constant_value":null},{"type_long":"javax.swing.table.TableColumn","javadoc":"","static":false,"name":"messageCol","comment":"","type_short":"TableColumn","constant_value":null}]}
