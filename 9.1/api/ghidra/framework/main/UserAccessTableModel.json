{"implements":[],"javadoc":"Table model for managing a list of Ghidra users associated with a project, and\n their access permissions. The permissions (read-only, read\/write, admin) are rendered\n as checkboxes that can be selected by users, provided they have admin access.","static":false,"extends":"docking.widgets.table.GDynamicColumnTableModel","methods":[{"javadoc":"Constructs a new table model.\n@param currentUser the name of the current user\n@param userList list of all users associated with the current project\n@param serviceProvider the service provider","static":false,"name":"<init>","comment":"Constructs a new table model.","params":[{"type_long":"java.lang.String","name":"currentUser","comment":"the name of the current user","type_short":"String"},{"type_long":"java.util.List<ghidra.framework.remote.User>","name":"userList","comment":"list of all users associated with the current project","type_short":"List"},{"type_long":"ghidra.framework.plugintool.ServiceProvider","name":"serviceProvider","comment":"the service provider","type_short":"ServiceProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Invoked when the user has changed one of the access rights checkboxes. When this\n happens we have to update the associated User data.","static":false,"name":"setValueAt","comment":"Invoked when the user has changed one of the access rights checkboxes. When this\n happens we have to update the associated User data.","params":[{"type_long":"java.lang.Object","name":"aValue","comment":"","type_short":"Object"},{"type_long":"int","name":"rowIndex","comment":"","type_short":"int"},{"type_long":"int","name":"columnIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"The permissions columns in the table should be editable as long as the user\n is an admin and is not trying to adjust his\/her own permissions.","static":false,"name":"isCellEditable","comment":"The permissions columns in the table should be editable as long as the user\n is an admin and is not trying to adjust his\/her own permissions.","params":[{"type_long":"int","name":"rowIndex","comment":"","type_short":"int"},{"type_long":"int","name":"columnIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"createTableColumnDescriptor","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.TableColumnDescriptor<ghidra.framework.remote.User>","comment":"","type_short":"TableColumnDescriptor"}},{"javadoc":"","static":false,"name":"getDataSource","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.framework.remote.User>","comment":"","type_short":"List"}},{"javadoc":"Replaces the contents of this model with a given list of users.\n@param users the user list","static":false,"name":"setUserList","comment":"Replaces the contents of this model with a given list of users.","params":[{"type_long":"java.util.List<ghidra.framework.remote.User>","name":"users","comment":"the user list","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove a list of users from the table.\n@param list list of User objects","static":false,"name":"removeUsers","comment":"Remove a list of users from the table.","params":[{"type_long":"java.util.ArrayList<ghidra.framework.remote.User>","name":"users","comment":"","type_short":"ArrayList"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a list of users to the table.\n@param users list of User objects","static":false,"name":"addUsers","comment":"Add a list of users to the table.","params":[{"type_long":"java.util.ArrayList<ghidra.framework.remote.User>","name":"users","comment":"list of User objects","type_short":"ArrayList"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the {@link User} currently using the dialog.\n@return the current user or null if not found","static":false,"name":"getCurrentUser","comment":"Returns the User currently using the dialog.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.remote.User","comment":"the current user or null if not found","type_short":"User"}},{"javadoc":"","static":false,"name":"getModelData","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.framework.remote.User>","comment":"","type_short":"List"}}],"name":"UserAccessTableModel","comment":"Table model for managing a list of Ghidra users associated with a project, and\n their access permissions. The permissions (read-only, read\/write, admin) are rendered\n as checkboxes that can be selected by users, provided they have admin access.","fields":[{"type_long":"java.util.List<ghidra.framework.remote.User>","javadoc":"","static":false,"name":"users","comment":"","type_short":"List","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"currentUser","comment":"","type_short":"String","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"USERS_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"READ_ONLY_COL","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"READ_WRITE_COL","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"ADMIN_COL","comment":"","type_short":"int","constant_value":"3"}]}
