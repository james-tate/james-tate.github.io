{"implements":[],"javadoc":"Class for managing a queue of tasks to be executed, one at a time, in priority order.  All the\n tasks pertain to an UndoableDomainObject and transactions are created on the UndoableDomainObject\n so that tasks can operate on them.\n <P>\n Tasks are organized into groups such that all tasks in a group will be completed before the\n tasks in the next group, regardless of priority.  Within a group, task are ordered first by\n priority and then by the order in which they were added to the group. Groups are executed \n in the order that they are scheduled.\n <P>\n All tasks within the same group are executed within the same transaction on the\n UndoableDomainObject.  When all the tasks within a group are completed, the transaction is closed\n unless there is another group scheduled and that group does not specify that it should run in its\n own transaction.\n <P>\n <U>Suspending:<\/U><BR>\n The GTaskManager can be suspended.  When suspended, any currently running task will continue to\n run, but no new or currently scheduled tasks will be executed until the GTaskManager is resumed.\n There is a special method, {@link #runNextTaskEvenIfSuspended()}, that will run the next scheduled task\n even if the GTaskManager is suspended.\n <P>\n <U>Yielding to Other Tasks:<\/U><BR>\n While running, a GTask can call the method {@link #waitForHigherPriorityTasks()} on the GTaskManager, \n which will cause the the GTaskManager to run scheduled tasks (within the same group) that are \n a higher priority than the running task, effectively allowing the running task to yield until all\n higher priority tasks are executed.\n@see GTask\n@see GTaskGroup","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a new GTaskManager for an UndoableDomainObject\n@param undoableDomainObject the domainObject that tasks scheduled in this GTaskManager will\n operate upon.\n@param threadPool the GThreadPool that will provide the threads that will be used to run \n tasks in this GTaskManager.","static":false,"name":"<init>","comment":"Creates a new GTaskManager for an UndoableDomainObject","params":[{"type_long":"ghidra.framework.model.UndoableDomainObject","name":"undoableDomainObject","comment":"the domainObject that tasks scheduled in this GTaskManager will\n operate upon.","type_short":"UndoableDomainObject"},{"type_long":"generic.concurrent.GThreadPool","name":"threadPool","comment":"the GThreadPool that will provide the threads that will be used to run \n tasks in this GTaskManager.","type_short":"GThreadPool"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Schedules a task to be run by this TaskManager. Tasks are run one at a time.\n@param task the task to be run.\n@param priority the priority of the task.  Lower numbers are run before higher numbers.\n@param useCurrentGroup . If true, this task will be rolled into the current transaction group\n \t\t\t\t\t\t\tif one exists.  If false, any open transaction \n \t\t\t\t\t\t\twill be closed and a new transaction will be opened before \n \t\t\t\t\t\t\tthis task is run.","static":false,"name":"scheduleTask","comment":"Schedules a task to be run by this TaskManager. Tasks are run one at a time.","params":[{"type_long":"ghidra.framework.task.GTask","name":"task","comment":"the task to be run.","type_short":"GTask"},{"type_long":"int","name":"priority","comment":"the priority of the task.  Lower numbers are run before higher numbers.","type_short":"int"},{"type_long":"boolean","name":"useCurrentGroup","comment":". If true, this task will be rolled into the current transaction group\n \t\t\t\t\t\t\tif one exists.  If false, any open transaction \n \t\t\t\t\t\t\twill be closed and a new transaction will be opened before \n \t\t\t\t\t\t\tthis task is run.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.framework.task.GScheduledTask","comment":"","type_short":"GScheduledTask"}},{"javadoc":"Schedules a task to be run by this TaskManager within the group with the given group name.\n If a group already exists with the given name(either currently running or waiting), the task\n will be added to that group. Otherwise, a new group will be created with the given group name\n and the task will be placed in that group.\n@param task the task to be run.\n@param priority the priority of the task.  Lower numbers are run before higher numbers.\n@param groupName . The name of the group that the task will be added to.","static":false,"name":"scheduleTask","comment":"Schedules a task to be run by this TaskManager within the group with the given group name.\n If a group already exists with the given name(either currently running or waiting), the task\n will be added to that group. Otherwise, a new group will be created with the given group name\n and the task will be placed in that group.","params":[{"type_long":"ghidra.framework.task.GTask","name":"task","comment":"the task to be run.","type_short":"GTask"},{"type_long":"int","name":"priority","comment":"the priority of the task.  Lower numbers are run before higher numbers.","type_short":"int"},{"type_long":"java.lang.String","name":"groupName","comment":". The name of the group that the task will be added to.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Schedules a task group to run.  Task groups are run in the order they are scheduled. They \n have the option of being executed in the current transaction (if it exists) or starting\n a new transaction.\n@param group the TaskGroup to be scheduled.","static":false,"name":"scheduleTaskGroup","comment":"Schedules a task group to run.  Task groups are run in the order they are scheduled. They \n have the option of being executed in the current transaction (if it exists) or starting\n a new transaction.","params":[{"type_long":"ghidra.framework.task.GTaskGroup","name":"group","comment":"the TaskGroup to be scheduled.","type_short":"GTaskGroup"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the suspended state of this task queue.  While suspended, this task manager will not\n start any new tasks in its queue.  Any currently running task will continue to run.\n@param b true to suspend this manager, false to resume executing new tasks.","static":false,"name":"setSuspended","comment":"Sets the suspended state of this task queue.  While suspended, this task manager will not\n start any new tasks in its queue.  Any currently running task will continue to run.","params":[{"type_long":"boolean","name":"b","comment":"true to suspend this manager, false to resume executing new tasks.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This method will cause the next scheduled task to run even though the task manager is\n suspended.  Calling this method while the queue is not suspended has no effect because\n if not suspended, it will be busy (or have nothing to do)","static":false,"name":"runNextTaskEvenWhenSuspended","comment":"This method will cause the next scheduled task to run even though the task manager is\n suspended.  Calling this method while the queue is not suspended has no effect because\n if not suspended, it will be busy (or have nothing to do)","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a GTaskListener to be notified as tasks are completed.\n@param listener the listener to add","static":false,"name":"addTaskListener","comment":"Adds a GTaskListener to be notified as tasks are completed.","params":[{"type_long":"ghidra.framework.task.GTaskListener","name":"listener","comment":"the listener to add","type_short":"GTaskListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the given GTaskListener from this queue.\n@param listener the listener to remove.","static":false,"name":"removeTaskListener","comment":"Removes the given GTaskListener from this queue.","params":[{"type_long":"ghidra.framework.task.GTaskListener","name":"listener","comment":"the listener to remove.","type_short":"GTaskListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if this manager is running a task, or if suspended has additional tasks queued.\n@return true if this manager is running a task, or if suspended has additional tasks queued.","static":false,"name":"isBusy","comment":"Returns true if this manager is running a task, or if suspended has additional tasks queued.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this manager is running a task, or if suspended has additional tasks queued.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"waitWhileBusy","comment":"","params":[{"type_long":"long","name":"timeoutMillis","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"waitUntilBusy","comment":"","params":[{"type_long":"long","name":"timeoutMillis","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns true if this manager is currently running a task. If not suspended, a GTaskManager\n will always be executing a task as long as there are tasks to execute.  If suspended, a\n GTaskManager may have tasks scheduled, but may not be currently executing one.\n@return true if this manager is currently running a task.","static":false,"name":"isRunning","comment":"Returns true if this manager is currently running a task. If not suspended, a GTaskManager\n will always be executing a task as long as there are tasks to execute.  If suspended, a\n GTaskManager may have tasks scheduled, but may not be currently executing one.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this manager is currently running a task.","type_short":"boolean"}},{"javadoc":"This methods is for currently running tasks to suspend and allow higher priority tasks \n (within the same task group) to complete before continuing.  If called by any thread other\n than the thread that is currently executing a task for this queue, an exception will be \n thrown.\n@throws IllegalStateException if this method is called from any thread not currently \n executing the current task for this queue.","static":false,"name":"waitForHigherPriorityTasks","comment":"This methods is for currently running tasks to suspend and allow higher priority tasks \n (within the same task group) to complete before continuing.  If called by any thread other\n than the thread that is currently executing a task for this queue, an exception will be \n thrown.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a list of the most recent GTaskResults.  The TaskManager only keeps the most recent\n N GTaskResults.\n@return the list of the most recent GTaskResults.","static":false,"name":"getTaskResults","comment":"Returns a list of the most recent GTaskResults.  The TaskManager only keeps the most recent\n N GTaskResults.","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.framework.task.GTaskResult>","comment":"the list of the most recent GTaskResults.","type_short":"List"}},{"javadoc":"Returns a list of scheduled tasks for the currently running group.\n@return a list of scheduled tasks for the currently running group.","static":false,"name":"getScheduledTasks","comment":"Returns a list of scheduled tasks for the currently running group.","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.framework.task.GScheduledTask>","comment":"a list of scheduled tasks for the currently running group.","type_short":"List"}},{"javadoc":"Returns a list of Tasks that are currently waiting for higher priority tasks.\n@return a list of Tasks that are currently waiting for higher priority tasks.","static":false,"name":"getDelayedTasks","comment":"Returns a list of Tasks that are currently waiting for higher priority tasks.","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.framework.task.GScheduledTask>","comment":"a list of Tasks that are currently waiting for higher priority tasks.","type_short":"List"}},{"javadoc":"Returns the currently running task, or null if no task is running.\n@return the currently running task;","static":false,"name":"getRunningTask","comment":"Returns the currently running task, or null if no task is running.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.task.GScheduledTask","comment":"the currently running task;","type_short":"GScheduledTask"}},{"javadoc":"Returns the currently running group, or null if no group is running.\n@return the currently running group, or null if no group is running.","static":false,"name":"getCurrentGroup","comment":"Returns the currently running group, or null if no group is running.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.task.GTaskGroup","comment":"the currently running group, or null if no group is running.","type_short":"GTaskGroup"}},{"javadoc":"Returns a list of Groups that are waiting to run.\n@return a list of Groups that are waiting to run.","static":false,"name":"getScheduledGroups","comment":"Returns a list of Groups that are waiting to run.","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.framework.task.GTaskGroup>","comment":"a list of Groups that are waiting to run.","type_short":"List"}},{"javadoc":"Returns true if this GTaskManager is currently suspended.\n@return true if this GTaskManager is currently suspended.","static":false,"name":"isSuspended","comment":"Returns true if this GTaskManager is currently suspended.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this GTaskManager is currently suspended.","type_short":"boolean"}},{"javadoc":"Cancels all tasks in the currently running group.  Tasks in the group that have not yet started\n will never run and will immediately be put into the TaskResults list.  The TaskMonitor for\n the currently running task will be cancelled, but the task will continue to run until it\n checks the monitor.\n@param group the group to be cancelled.  It must match the currently running group or nothing\n will happen.","static":false,"name":"cancelRunningGroup","comment":"Cancels all tasks in the currently running group.  Tasks in the group that have not yet started\n will never run and will immediately be put into the TaskResults list.  The TaskMonitor for\n the currently running task will be cancelled, but the task will continue to run until it\n checks the monitor.","params":[{"type_long":"ghidra.framework.task.GTaskGroup","name":"group","comment":"the group to be cancelled.  It must match the currently running group or nothing\n will happen.","type_short":"GTaskGroup"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Cancels all scheduled groups and tasks. The TaskMonitor for\n the currently running task will be cancelled, but the task will continue to run until it\n checks the monitor.","static":false,"name":"cancelAll","comment":"Cancels all scheduled groups and tasks. The TaskMonitor for\n the currently running task will be cancelled, but the task will continue to run until it\n checks the monitor.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"wakeUpWaitingThread","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doWait","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"runNextTaskIfNotBusyOrSuspended","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"runNextTaskIfNotBusy","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processNextTaskGroup","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"prepareGroup","comment":"","params":[{"type_long":"ghidra.framework.task.GTaskGroup","name":"taskGroup","comment":"","type_short":"GTaskGroup"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"openTransaction","comment":"","params":[{"type_long":"java.lang.String","name":"description","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"closeTransaction","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processNextTaskInPriorityQ","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"taskCompleted","comment":"","params":[{"type_long":"ghidra.framework.task.GScheduledTask","name":"task","comment":"","type_short":"GScheduledTask"},{"type_long":"java.lang.Exception","name":"e","comment":"","type_short":"Exception"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyTaskStarted","comment":"","params":[{"type_long":"ghidra.framework.task.GScheduledTask","name":"task","comment":"","type_short":"GScheduledTask"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyTaskCompleted","comment":"","params":[{"type_long":"ghidra.framework.task.GScheduledTask","name":"task","comment":"","type_short":"GScheduledTask"},{"type_long":"ghidra.framework.task.GTaskResult","name":"result","comment":"","type_short":"GTaskResult"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyTaskGroupScheduled","comment":"","params":[{"type_long":"ghidra.framework.task.GTaskGroup","name":"group","comment":"","type_short":"GTaskGroup"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyTaskScheduled","comment":"","params":[{"type_long":"ghidra.framework.task.GScheduledTask","name":"scheduledTask","comment":"","type_short":"GScheduledTask"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyGroupStarted","comment":"","params":[{"type_long":"ghidra.framework.task.GTaskGroup","name":"taskGroup","comment":"","type_short":"GTaskGroup"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyGroupCompleted","comment":"","params":[{"type_long":"ghidra.framework.task.GTaskGroup","name":"taskGroup","comment":"","type_short":"GTaskGroup"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifySuspendedStateChanged","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processCancelledGroups","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processCancelledJobsInPriorityQ","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"GTaskManager","comment":"Class for managing a queue of tasks to be executed, one at a time, in priority order.  All the\n tasks pertain to an UndoableDomainObject and transactions are created on the UndoableDomainObject\n so that tasks can operate on them.\n \n Tasks are organized into groups such that all tasks in a group will be completed before the\n tasks in the next group, regardless of priority.  Within a group, task are ordered first by\n priority and then by the order in which they were added to the group. Groups are executed \n in the order that they are scheduled.\n \n All tasks within the same group are executed within the same transaction on the\n UndoableDomainObject.  When all the tasks within a group are completed, the transaction is closed\n unless there is another group scheduled and that group does not specify that it should run in its\n own transaction.\n \n Suspending:\n The GTaskManager can be suspended.  When suspended, any currently running task will continue to\n run, but no new or currently scheduled tasks will be executed until the GTaskManager is resumed.\n There is a special method, #runNextTaskEvenIfSuspended(), that will run the next scheduled task\n even if the GTaskManager is suspended.\n \n Yielding to Other Tasks:\n While running, a GTask can call the method #waitForHigherPriorityTasks() on the GTaskManager, \n which will cause the the GTaskManager to run scheduled tasks (within the same group) that are \n a higher priority than the running task, effectively allowing the running task to yield until all\n higher priority tasks are executed.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"MAX_RESULTS","comment":"","type_short":"int","constant_value":"100"},{"type_long":"ghidra.framework.model.UndoableDomainObject","javadoc":"","static":false,"name":"domainObject","comment":"","type_short":"UndoableDomainObject","constant_value":null},{"type_long":"java.util.SortedSet<ghidra.framework.task.GScheduledTask>","javadoc":"","static":false,"name":"priorityQ","comment":"","type_short":"SortedSet","constant_value":null},{"type_long":"java.util.Deque<ghidra.framework.task.GTaskGroup>","javadoc":"","static":false,"name":"taskGroupList","comment":"","type_short":"Deque","constant_value":null},{"type_long":"generic.concurrent.GThreadPool","javadoc":"","static":false,"name":"threadPool","comment":"","type_short":"GThreadPool","constant_value":null},{"type_long":"java.util.concurrent.locks.ReentrantLock","javadoc":"","static":false,"name":"lock","comment":"","type_short":"ReentrantLock","constant_value":null},{"type_long":"java.util.concurrent.locks.Condition","javadoc":"","static":false,"name":"notBusy","comment":"","type_short":"Condition","constant_value":null},{"type_long":"java.util.concurrent.locks.Condition","javadoc":"","static":false,"name":"isBusy","comment":"","type_short":"Condition","constant_value":null},{"type_long":"ghidra.framework.task.GScheduledTask","javadoc":"","static":false,"name":"runningTask","comment":"","type_short":"GScheduledTask","constant_value":null},{"type_long":"ghidra.framework.task.GTaskGroup","javadoc":"","static":false,"name":"runningGroup","comment":"","type_short":"GTaskGroup","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"suspended","comment":"","type_short":"boolean","constant_value":null},{"type_long":"java.lang.Integer","javadoc":"","static":false,"name":"currentGroupTransactionID","comment":"","type_short":"Integer","constant_value":null},{"type_long":"ghidra.framework.task.GTaskListener","javadoc":"","static":false,"name":"taskListener","comment":"","type_short":"GTaskListener","constant_value":null},{"type_long":"java.util.Deque<ghidra.framework.task.GScheduledTask>","javadoc":"","static":false,"name":"delayedTaskStack","comment":"","type_short":"Deque","constant_value":null},{"type_long":"java.util.Queue<ghidra.framework.task.GTaskResult>","javadoc":"","static":false,"name":"results","comment":"","type_short":"Queue","constant_value":null}]}
