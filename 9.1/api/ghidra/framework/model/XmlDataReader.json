{"implements":[],"javadoc":"Defines the method for creating an Object from an \n XML file in a JarInputStream.","static":false,"methods":[{"javadoc":"Reads the XML file indicated by the base path and relative path name.\n It creates an object(s) from this, that is used by the project.\n@param basePath the prefix part of the path for the XML file\n@param relPathName a pathname for the file relative to the basePath.\n@param removeFile on success this should remove the original file.\n@param monitor a monitor for providing progress information to the user.\n@return true if an object associated with the file was added to the\n project. false if the file couldn't be processed.\n@throws SAXException if the XML file has a XML parsing error.\n@throws IOException if there is problem reading\/removing the XML file\n or if there is a problem creating any resulting file.\n@throws NotFoundException if a required service can't be found in \n the service registry.","static":false,"name":"addXMLObject","comment":"Reads the XML file indicated by the base path and relative path name.\n It creates an object(s) from this, that is used by the project.","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"},{"type_long":"java.lang.String","name":"basePath","comment":"the prefix part of the path for the XML file","type_short":"String"},{"type_long":"java.lang.String","name":"relPathName","comment":"a pathname for the file relative to the basePath.","type_short":"String"},{"type_long":"boolean","name":"removeFile","comment":"on success this should remove the original file.","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"a monitor for providing progress information to the user.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"if a required service can't be found in \n the service registry.","type_short":"NotFoundException"},{"type_long":"org.xml.sax.SAXException","comment":"if the XML file has a XML parsing error.","type_short":"SAXException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.NotOwnerException","comment":"","type_short":"NotOwnerException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"if there is problem reading\/removing the XML file\n or if there is a problem creating any resulting file.","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"true if an object associated with the file was added to the\n project. false if the file couldn't be processed.","type_short":"boolean"}},{"javadoc":"Returns a string summarizing the results of the XML data read\n or <code>null<\/code> if there was nothing to report.\n@return a string summarizing the results of the xml data read\n         or <code>null<\/code> if there was nothing to report","static":false,"name":"getSummary","comment":"Returns a string summarizing the results of the XML data read\n or null if there was nothing to report.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"a string summarizing the results of the xml data read\n         or null if there was nothing to report","type_short":"String"}}],"name":"XmlDataReader","comment":"Defines the method for creating an Object from an \n XML file in a JarInputStream.","fields":[]}
