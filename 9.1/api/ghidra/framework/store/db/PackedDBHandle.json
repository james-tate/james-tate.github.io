{"implements":[],"javadoc":"<code>DBHandle<\/code> provides access to a PackedDatabase.","static":false,"extends":"db.DBHandle","methods":[{"javadoc":"Constructs a temporary packed database handle.\n@param contentType user defined content type.\n@throws IOException","static":false,"name":"<init>","comment":"Constructs a temporary packed database handle.","params":[{"type_long":"java.lang.String","name":"contentType","comment":"user defined content type.","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a database handle for an existing packed database.\n Update mode is determined by bfile.\n@param database packed database\n@param bfile temporary unpacked database which corresponds to the\n specified packed database.","static":false,"name":"<init>","comment":"Constructs a database handle for an existing packed database.\n Update mode is determined by bfile.","params":[{"type_long":"ghidra.framework.store.db.PackedDatabase","name":"pdb","comment":"","type_short":"PackedDatabase"},{"type_long":"db.buffers.BufferFile","name":"bfile","comment":"temporary unpacked database which corresponds to the\n specified packed database.","type_short":"BufferFile"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"save","comment":"","params":[{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"},{"type_long":"db.DBChangeSet","name":"changeSet","comment":"","type_short":"DBChangeSet"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Saves the open database to the corresponding PackedDatabase file.\n@param monitor\n@throws IOException\n@throws CancelledException","static":false,"name":"save","comment":"Saves the open database to the corresponding PackedDatabase file.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"saveAs","comment":"","params":[{"type_long":"db.buffers.BufferFile","name":"outFile","comment":"","type_short":"BufferFile"},{"type_long":"java.lang.Long","name":"newDatabaseId","comment":"","type_short":"Long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"saveAs","comment":"","params":[{"type_long":"db.buffers.BufferFile","name":"outFile","comment":"","type_short":"BufferFile"},{"type_long":"boolean","name":"associateWithNewFile","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"close","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Save open database to a new packed database.\n If another PackedDatabase was associated with this handle prior to this invocation\n it should be disposed to that the underlying database resources can be cleaned-up.\n@param itemName\n@param dir\n@param packedFileName\n@param monitor\n@return new packed Database object now associated with this handle.\n@throws CancelledException if task monitor cancelled operation.\n@throws IOException\n@throws DuplicateFileException\n@see db.DBHandle#saveAs(java.io.File, java.lang.String, ghidra.util.task.TaskMonitor)","static":false,"name":"saveAs","comment":"Save open database to a new packed database.\n If another PackedDatabase was associated with this handle prior to this invocation\n it should be disposed to that the underlying database resources can be cleaned-up.","params":[{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"},{"type_long":"java.io.File","name":"dir","comment":"","type_short":"File"},{"type_long":"java.lang.String","name":"packedFileName","comment":"","type_short":"String"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.DuplicateFileException","comment":"","type_short":"DuplicateFileException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if task monitor cancelled operation.","type_short":"CancelledException"}],"return":{"type_long":"ghidra.framework.store.db.PackedDatabase","comment":"new packed Database object now associated with this handle.","type_short":"PackedDatabase"}},{"javadoc":"Save open database to a new packed database with a specified newDatabaseId.\n If another PackedDatabase was associated with this handle prior to this invocation\n it should be disposed to that the underlying database resources can be cleaned-up.\n NOTE: This method is intended for use in transforming one database to\n match another existing database.\n@param itemName\n@param dir\n@param packedFileName\n@param newDatabaseId database ID to be forced for new database or null to generate \n new database ID\n@param monitor\n@return new packed Database object now associated with this handle.\n@throws CancelledException if task monitor cancelled operation.\n@throws IOException\n@throws DuplicateFileException\n@see db.DBHandle#saveAs(java.io.File, java.lang.String, ghidra.util.task.TaskMonitor)","static":false,"name":"saveAs","comment":"Save open database to a new packed database with a specified newDatabaseId.\n If another PackedDatabase was associated with this handle prior to this invocation\n it should be disposed to that the underlying database resources can be cleaned-up.\n NOTE: This method is intended for use in transforming one database to\n match another existing database.","params":[{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"},{"type_long":"java.io.File","name":"dir","comment":"","type_short":"File"},{"type_long":"java.lang.String","name":"packedFileName","comment":"","type_short":"String"},{"type_long":"java.lang.Long","name":"newDatabaseId","comment":"database ID to be forced for new database or null to generate \n new database ID","type_short":"Long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.DuplicateFileException","comment":"","type_short":"DuplicateFileException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if task monitor cancelled operation.","type_short":"CancelledException"}],"return":{"type_long":"ghidra.framework.store.db.PackedDatabase","comment":"new packed Database object now associated with this handle.","type_short":"PackedDatabase"}},{"javadoc":"Returns user defined content type associated with this handle.","static":false,"name":"getContentType","comment":"Returns user defined content type associated with this handle.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns PackedDatabase associated with this handle, or null if\n this is a temporary handle which has not yet been saved to a\n PackedDatabase using saveAs.","static":false,"name":"getPackedDatabase","comment":"Returns PackedDatabase associated with this handle, or null if\n this is a temporary handle which has not yet been saved to a\n PackedDatabase using saveAs.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.store.db.PackedDatabase","comment":"","type_short":"PackedDatabase"}}],"name":"PackedDBHandle","comment":"DBHandle provides access to a PackedDatabase.","fields":[{"type_long":"ghidra.framework.store.db.PackedDatabase","javadoc":"","static":false,"name":"pdb","comment":"","type_short":"PackedDatabase","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"contentType","comment":"","type_short":"String","constant_value":null}]}
