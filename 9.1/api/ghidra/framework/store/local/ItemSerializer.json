{"implements":[],"javadoc":"<code>ItemSerializer<\/code> facilitates the compressing and writing of a data stream\n to a \"packed\" file.  The resulting \"packed\" file will contain the following meta-data\n which is available after construction:\n <ul>\n <li>Item name<\/li>\n <li>Content type (int)<\/li>\n <li>File type (int)<\/li>\n <li>Data length<\/li>\n <\/ul>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Read and compress data from the specified content stream and write to \n a packed file along with additional meta-data.\n@param itemName item name\n@param contentType content type\n@param fileType file type\n@param length content length to be read\n@param content content input stream\n@param packedFile output packed file to be created\n@param monitor task monitor\n@throws CancelledException\n@throws IOException","static":true,"name":"outputItem","comment":"Read and compress data from the specified content stream and write to \n a packed file along with additional meta-data.","params":[{"type_long":"java.lang.String","name":"itemName","comment":"item name","type_short":"String"},{"type_long":"java.lang.String","name":"contentType","comment":"content type","type_short":"String"},{"type_long":"int","name":"fileType","comment":"file type","type_short":"int"},{"type_long":"long","name":"length","comment":"content length to be read","type_short":"long"},{"type_long":"java.io.InputStream","name":"content","comment":"content input stream","type_short":"InputStream"},{"type_long":"java.io.File","name":"packedFile","comment":"output packed file to be created","type_short":"File"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"A simple utility method to determine if the given file is a packed file as created by \n this class.\n@param file The file to check\n@return True if it is a packed file\n@throws IOException If there is a problem reading the given file","static":true,"name":"isPackedFile","comment":"A simple utility method to determine if the given file is a packed file as created by \n this class.","params":[{"type_long":"java.io.File","name":"file","comment":"The file to check","type_short":"File"}],"throws":[{"type_long":"java.io.IOException","comment":"If there is a problem reading the given file","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"True if it is a packed file","type_short":"boolean"}},{"javadoc":"A convenience method for checking if the file denoted by the given inputStream is a \n packed file.  \n <p>\n <b>Note: <\/b> This method will NOT close the given inputStream.\n@param inputStream a stream for accessing bytes of what may be a packed file\n@return true if the bytes from the inputStream represent the bytes of a packed file\n@throws IOException If there is a problem accessing the inputStream\n@see {@link #isPackedFile(File)}","static":true,"name":"isPackedFile","comment":"A convenience method for checking if the file denoted by the given inputStream is a \n packed file.  \n \n Note:  This method will NOT close the given inputStream.","params":[{"type_long":"java.io.InputStream","name":"inputStream","comment":"a stream for accessing bytes of what may be a packed file","type_short":"InputStream"}],"throws":[{"type_long":"java.io.IOException","comment":"If there is a problem accessing the inputStream","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"true if the bytes from the inputStream represent the bytes of a packed file","type_short":"boolean"}}],"name":"ItemSerializer","comment":"ItemSerializer facilitates the compressing and writing of a data stream\n to a \"packed\" file.  The resulting \"packed\" file will contain the following meta-data\n which is available after construction:\n \n Item name\n Content type (int)\n File type (int)\n Data length\n ","fields":[{"type_long":"int","javadoc":"","static":true,"name":"MAGIC_NUMBER_POS","comment":"","type_short":"int","constant_value":"6"},{"type_long":"int","javadoc":"","static":true,"name":"MAGIC_NUMBER_SIZE","comment":"","type_short":"int","constant_value":"8"},{"type_long":"long","javadoc":"","static":true,"name":"MAGIC_NUMBER","comment":"","type_short":"long","constant_value":"3328196572606966816"},{"type_long":"int","javadoc":"","static":true,"name":"FORMAT_VERSION","comment":"","type_short":"int","constant_value":"1"},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ZIP_ENTRY_NAME","comment":"","type_short":"String","constant_value":"\"FOLDER_ITEM\""},{"type_long":"int","javadoc":"","static":true,"name":"IO_BUFFER_SIZE","comment":"","type_short":"int","constant_value":"32768"}]}
