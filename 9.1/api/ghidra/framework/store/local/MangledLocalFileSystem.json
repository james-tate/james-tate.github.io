{"implements":[],"javadoc":"<code>MangledLocalFileSystem<\/code> implements the legacy project data storage \n scheme which utilizes a simplified name mangling which provides case-sensitive \n file-naming with support for spaces.  Project folder hierarchy maps directly to\n the actual storage hierarchy.","static":false,"extends":"ghidra.framework.store.local.LocalFileSystem","methods":[{"javadoc":"Constructor.\n@param rootPath path for root directory (must already exist).\n@param isVersioned if true item versioning will be enabled.\n@param readOnly if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException\n@param enableAsyncronousDispatching if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.\n@throws FileNotFoundException if specified rootPath does not exist","static":false,"name":"<init>","comment":"Constructor.","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"path for root directory (must already exist).","type_short":"String"},{"type_long":"boolean","name":"isVersioned","comment":"if true item versioning will be enabled.","type_short":"boolean"},{"type_long":"boolean","name":"readOnly","comment":"if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException","type_short":"boolean"},{"type_long":"boolean","name":"enableAsyncronousDispatching","comment":"if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.","type_short":"boolean"}],"throws":[{"type_long":"java.io.FileNotFoundException","comment":"if specified rootPath does not exist","type_short":"FileNotFoundException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor for an empty read-only file-system.","static":false,"name":"<init>","comment":"Constructor for an empty read-only file-system.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getMaxNameLength","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Find an existing storage location\n@param folderPath\n@param itemName\n@return storage location.  A non-null value does not guarantee that the associated \n item actually exists.\n@throws FileNotFoundException","static":false,"name":"findItemStorage","comment":"Find an existing storage location","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.FileNotFoundException","comment":"","type_short":"FileNotFoundException"}],"return":{"type_long":"ghidra.framework.store.local.LocalFileSystem.ItemStorage","comment":"storage location.  A non-null value does not guarantee that the associated \n item actually exists.","type_short":"ItemStorage"}},{"javadoc":"Allocate a new storage location\n@param folderPath\n@param itemName\n@return storage location\n@throws DuplicateFileException if item path has previously been allocated\n@throws IOException if invalid path\/item name specified\n@throws InvalidNameException if folderPath or itemName contains invalid characters","static":false,"name":"allocateItemStorage","comment":"Allocate a new storage location","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if invalid path\/item name specified","type_short":"IOException"},{"type_long":"ghidra.util.InvalidNameException","comment":"if folderPath or itemName contains invalid characters","type_short":"InvalidNameException"}],"return":{"type_long":"ghidra.framework.store.local.LocalFileSystem.ItemStorage","comment":"storage location","type_short":"ItemStorage"}},{"javadoc":"Deallocate item storage\n@param folderPath\n@param itemName","static":false,"name":"deallocateItemStorage","comment":"Deallocate item storage","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getItemCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getItemNames","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"boolean","name":"includeHiddenFiles","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"","static":false,"name":"getFolderNames","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"","static":false,"name":"createFolder","comment":"","params":[{"type_long":"java.lang.String","name":"parentPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"folderName","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"deleteFolder","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"moveFolder","comment":"","params":[{"type_long":"java.lang.String","name":"parentPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"folderName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"newParentPath","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"renameFolder","comment":"","params":[{"type_long":"java.lang.String","name":"parentPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"folderName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"newFolderName","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the underlying File object which corresponds to the specified unmangled path.\n@param path unmangled path for folder or file\n@return File object\n@throws FileNotFoundException if specified file path does not begin with '\/'","static":false,"name":"getFile","comment":"Returns the underlying File object which corresponds to the specified unmangled path.","params":[{"type_long":"java.lang.String","name":"path","comment":"unmangled path for folder or file","type_short":"String"}],"throws":[{"type_long":"java.io.FileNotFoundException","comment":"if specified file path does not begin with '\/'","type_short":"FileNotFoundException"}],"return":{"type_long":"java.io.File","comment":"File object","type_short":"File"}},{"javadoc":"","static":false,"name":"manglePath","comment":"","params":[{"type_long":"java.lang.String","name":"path","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Mangle non-hidden name\n@param name\n@return mangled non-hidden name","static":false,"name":"mangleName","comment":"Mangle non-hidden name","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"mangled non-hidden name","type_short":"String"}},{"javadoc":"Demangle non-hidden name\n@param name\n@return demangled name or null if name was hidden","static":false,"name":"demangleName","comment":"Demangle non-hidden name","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"demangled name or null if name was hidden","type_short":"String"}},{"javadoc":"Convert the path separators to system specific File path separators.\n@param path file path\n@return modified file path","static":false,"name":"toSystemDependantSeparator","comment":"Convert the path separators to system specific File path separators.","params":[{"type_long":"java.lang.String","name":"path","comment":"file path","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"modified file path","type_short":"String"}},{"javadoc":"Recursively create all directories associated with the specified\n folder path.\n@param folderDir folder path","static":false,"name":"createFolders","comment":"Recursively create all directories associated with the specified\n folder path.","params":[{"type_long":"java.io.File","name":"folderDir","comment":"folder path","type_short":"File"},{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.FileNotFoundException","comment":"","type_short":"FileNotFoundException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"folderExists","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"migrationInProgress","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Convert this mangled filesystem to an indexed filesystem.  This instance should be discarded\n and not used once the conversion has completed.\n@throws IOException","static":false,"name":"convertToIndexedLocalFileSystem","comment":"Convert this mangled filesystem to an indexed filesystem.  This instance should be discarded\n and not used once the conversion has completed.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"migrateFolder","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem","name":"indexedFs","comment":"","type_short":"IndexedLocalFileSystem"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"MangledLocalFileSystem","comment":"MangledLocalFileSystem implements the legacy project data storage \n scheme which utilizes a simplified name mangling which provides case-sensitive \n file-naming with support for spaces.  Project folder hierarchy maps directly to\n the actual storage hierarchy.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"MAX_NAME_LENGTH","comment":"","type_short":"int","constant_value":"60"},{"type_long":"boolean","javadoc":"","static":false,"name":"migrationInProgress","comment":"","type_short":"boolean","constant_value":null}]}
