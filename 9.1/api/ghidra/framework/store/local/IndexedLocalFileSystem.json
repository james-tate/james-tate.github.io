{"implements":[],"javadoc":"<code>IndexedLocalFileSystem<\/code> implements a case-sensitive indexed filesystem\n which uses a shallow storage hierarchy with no restriction on file name or path \n length.  This filesystem is identified by the existence of an index file (~index.dat) \n and recovery journal (~index.jrn).","static":false,"extends":"ghidra.framework.store.local.LocalFileSystem","methods":[{"javadoc":"Constructor.\n@param file path path for root directory.\n@param isVersioned if true item versioning will be enabled.\n@param readOnly if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException\n@param enableAsyncronousDispatching if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.\n@throws FileNotFoundException if specified rootPath does not exist\n@throws IOException if error occurs while reading\/writing index files","static":false,"name":"<init>","comment":"Constructor.","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"","type_short":"String"},{"type_long":"boolean","name":"isVersioned","comment":"if true item versioning will be enabled.","type_short":"boolean"},{"type_long":"boolean","name":"readOnly","comment":"if true modifications within this file-system will not be allowed\n and result in an ReadOnlyException","type_short":"boolean"},{"type_long":"boolean","name":"enableAsyncronousDispatching","comment":"if true a separate dispatch thread will be used\n to notify listeners.  If false, blocking notification will be performed.","type_short":"boolean"},{"type_long":"boolean","name":"create","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if error occurs while reading\/writing index files","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct existing indexed filesystem with an empty index.\n This can be used to prepare for rebuilding the filesystem index.\n@param rootPath\n@throws IOException","static":false,"name":"<init>","comment":"Construct existing indexed filesystem with an empty index.\n This can be used to prepare for rebuilding the filesystem index.","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getMaxNameLength","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"refreshReadOnlyIndex","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Dispose folder structure to speed-up garbage collection\n@param folder","static":false,"name":"dispose","comment":"Dispose folder structure to speed-up garbage collection","params":[{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.Folder","name":"folder","comment":"","type_short":"Folder"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Assign next available storage name\n@return storage name (8 hex digits)","static":false,"name":"getNextStorageName","comment":"Assign next available storage name","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"storage name (8 hex digits)","type_short":"String"}},{"javadoc":"Ensure that the nextFileIndexID is adjusted when replaying \n item adds and moves from the index journal\n@param storageName previously allocated storageName","static":false,"name":"bumpNextFileIndexID","comment":"Ensure that the nextFileIndexID is adjusted when replaying \n item adds and moves from the index journal","params":[{"type_long":"java.lang.String","name":"storageName","comment":"previously allocated storageName","type_short":"String"}],"throws":[{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.BadStorageNameException","comment":"","type_short":"BadStorageNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get storage directory corresponding to the specified storageName\n@param storageName Item storage name (8 hex digits)\n@return ","static":false,"name":"getStorageDir","comment":"Get storage directory corresponding to the specified storageName","params":[{"type_long":"java.lang.String","name":"storageName","comment":"Item storage name (8 hex digits)","type_short":"String"}],"throws":[],"return":{"type_long":"java.io.File","comment":"","type_short":"File"}},{"javadoc":"Writes current folder index.\n Same as writeIndex with any IOException getting logged\n@see #writeIndex()","static":false,"name":"flushIndex","comment":"Writes current folder index.\n Same as writeIndex with any IOException getting logged","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Writes current folder index.\n@throws IOException","static":false,"name":"writeIndex","comment":"Writes current folder index.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"digest","comment":"","params":[{"type_long":"java.lang.String","name":"str","comment":"","type_short":"String"},{"type_long":"java.security.MessageDigest","name":"messageDigest","comment":"","type_short":"MessageDigest"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"writeIndexFolder","comment":"","params":[{"type_long":"java.io.PrintWriter","name":"indexWriter","comment":"","type_short":"PrintWriter"},{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.Folder","name":"folder","comment":"","type_short":"Folder"},{"type_long":"java.security.MessageDigest","name":"messageDigest","comment":"","type_short":"MessageDigest"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"formatIndexItem","comment":"","params":[{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.Item","name":"item","comment":"","type_short":"Item"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getIndexImplementationVersion","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Check the firstIndexLine to verify the index version.\n@return true if firstIndexLine was consumed\n@throws IndexVersionException if index version error occurs","static":false,"name":"checkIndexVersion","comment":"Check the firstIndexLine to verify the index version.","params":[{"type_long":"java.lang.String","name":"firstIndexLine","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.IndexVersionException","comment":"if index version error occurs","type_short":"IndexVersionException"}],"return":{"type_long":"boolean","comment":"true if firstIndexLine was consumed","type_short":"boolean"}},{"javadoc":"Attempt to parse index version\n@param firstIndexLine\n@return index version or -1 if index version unknown","static":true,"name":"getIndexVersion","comment":"Attempt to parse index version","params":[{"type_long":"java.lang.String","name":"firstIndexLine","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"int","comment":"index version or -1 if index version unknown","type_short":"int"}},{"javadoc":"","static":true,"name":"readIndexVersion","comment":"","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"readIndex","comment":"","params":[],"throws":[{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.IndexReadException","comment":"","type_short":"IndexReadException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"parseIndexItem","comment":"","params":[{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.Folder","name":"parent","comment":"","type_short":"Folder"},{"type_long":"java.lang.String","name":"entry","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.Item","comment":"","type_short":"Item"}},{"javadoc":"","static":false,"name":"logRebuildError","comment":"","params":[{"type_long":"java.lang.String","name":"text","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"rebuildIndex","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"rebuildDirectoryIndex","comment":"","params":[{"type_long":"java.io.File","name":"dir","comment":"","type_short":"File"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addFileToIndex","comment":"","params":[{"type_long":"ghidra.util.PropertyFile","name":"pfile","comment":"","type_short":"PropertyFile"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Add folder to index during rebuild if missing\n NOTE: indexJournal must already open'ed by caller\n@param folderPath\n@return \n@throws IOException\n@throws NotFoundException","static":false,"name":"addFolderToIndexIfMissing","comment":"Add folder to index during rebuild if missing\n NOTE: indexJournal must already open'ed by caller","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.Folder","comment":"","type_short":"Folder"}},{"javadoc":"Verify that the specified root directory passes all criteria to be an indexed \n filesystem.\n@param root\n@return number of property files processed\n@throws IndexReadException","static":true,"name":"verifyIndexedFileStructure","comment":"Verify that the specified root directory passes all criteria to be an indexed \n filesystem.","params":[{"type_long":"java.io.File","name":"root","comment":"","type_short":"File"}],"throws":[{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.IndexReadException","comment":"","type_short":"IndexReadException"}],"return":{"type_long":"int","comment":"number of property files processed","type_short":"int"}},{"javadoc":"","static":true,"name":"verifyIndexedDirectory","comment":"","params":[{"type_long":"java.io.File","name":"dir","comment":"","type_short":"File"}],"throws":[{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.IndexReadException","comment":"","type_short":"IndexReadException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"verifyIndexedPropertyFile","comment":"","params":[{"type_long":"java.io.File","name":"f","comment":"","type_short":"File"}],"throws":[{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.IndexReadException","comment":"","type_short":"IndexReadException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFolder","comment":"","params":[{"type_long":"java.lang.String","name":"path","comment":"","type_short":"String"},{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.GetFolderOption","name":"option","comment":"","type_short":"GetFolderOption"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.Folder","comment":"","type_short":"Folder"}},{"javadoc":"Find an existing storage location\n@param folderPath\n@param itemName\n@return storage location.  A non-null value does not guarantee that the associated \n item actually exists.\n@throws FileNotFoundException","static":false,"name":"findItemStorage","comment":"Find an existing storage location","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.FileNotFoundException","comment":"","type_short":"FileNotFoundException"}],"return":{"type_long":"ghidra.framework.store.local.LocalFileSystem.ItemStorage","comment":"storage location.  A non-null value does not guarantee that the associated \n item actually exists.","type_short":"ItemStorage"}},{"javadoc":"Allocate a new storage location\n@param folderPath\n@param itemName\n@return storage location\n@throws DuplicateFileException if item path has previously been allocated\n@throws IOException if invalid path\/item name specified\n@throws InvalidNameException if folderPath or itemName contains invalid characters","static":false,"name":"allocateItemStorage","comment":"Allocate a new storage location","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if invalid path\/item name specified","type_short":"IOException"},{"type_long":"ghidra.util.InvalidNameException","comment":"if folderPath or itemName contains invalid characters","type_short":"InvalidNameException"}],"return":{"type_long":"ghidra.framework.store.local.LocalFileSystem.ItemStorage","comment":"storage location","type_short":"ItemStorage"}},{"javadoc":"Deallocate item storage\n@param folderPath\n@param itemName","static":false,"name":"deallocateItemStorage","comment":"Deallocate item storage","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"itemDeleted","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"itemName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mapFileID","comment":"","params":[{"type_long":"java.lang.String","name":"fileId","comment":"","type_short":"String"},{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.Item","name":"item","comment":"","type_short":"Item"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"unmapFileID","comment":"","params":[{"type_long":"java.lang.String","name":"fileId","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getItemNames","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"boolean","name":"includeHiddenFiles","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"","static":false,"name":"getItemCount","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getItemCount","comment":"","params":[{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.Folder","name":"folder","comment":"","type_short":"Folder"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getFolderNames","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"","static":false,"name":"createFolder","comment":"","params":[{"type_long":"java.lang.String","name":"parentPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"folderName","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"deleteFolder","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"migrateItem","comment":"","params":[{"type_long":"ghidra.framework.store.local.LocalFolderItem","name":"item","comment":"","type_short":"LocalFolderItem"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"moveItem","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"newFolderPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"newName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"moveFolder","comment":"","params":[{"type_long":"java.lang.String","name":"parentPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"folderName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"newParentPath","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateAffectedItemPaths","comment":"","params":[{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.Folder","name":"folder","comment":"","type_short":"Folder"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"renameFolder","comment":"","params":[{"type_long":"java.lang.String","name":"parentPath","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"folderName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"newFolderName","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"folderExists","comment":"","params":[{"type_long":"java.lang.String","name":"folderPath","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Determine if the specified directory corresponds to an \n indexed filesystem.\n@param rootPath filesystem root\n@return true if filesystem contains an index (not mangled)","static":true,"name":"isIndexed","comment":"Determine if the specified directory corresponds to an \n indexed filesystem.","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"filesystem root","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if filesystem contains an index (not mangled)","type_short":"boolean"}},{"javadoc":"Determine if the specified directory contains a likely \n indexed filesystem.\n@param rootPath filesystem root\n@return true if filesystem appears to be indexed (not mangled)","static":true,"name":"hasIndexedStructure","comment":"Determine if the specified directory contains a likely \n indexed filesystem.","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"filesystem root","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if filesystem appears to be indexed (not mangled)","type_short":"boolean"}},{"javadoc":"Get the V0 indexed-file-system instance.  File system storage should first be \n pre-qualified as an having indexed storage using the {@link #isIndexed(String)} method.\n@param rootPath\n@param isVersioned\n@param readOnly\n@param enableAsyncronousDispatching\n@return file-system instance\n@throws IOException","static":true,"name":"getFileSystem","comment":"Get the V0 indexed-file-system instance.  File system storage should first be \n pre-qualified as an having indexed storage using the #isIndexed(String) method.","params":[{"type_long":"java.lang.String","name":"rootPath","comment":"","type_short":"String"},{"type_long":"boolean","name":"isVersioned","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"readOnly","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"enableAsyncronousDispatching","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem","comment":"file-system instance","type_short":"IndexedLocalFileSystem"}},{"javadoc":"Completely rebuild filesystem index using item information contained\n within indexed property files.  Empty folders will be lost.\n@param rootDir\n@throws IOException","static":true,"name":"rebuild","comment":"Completely rebuild filesystem index using item information contained\n within indexed property files.  Empty folders will be lost.","params":[{"type_long":"java.io.File","name":"rootDir","comment":"","type_short":"File"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"IndexedLocalFileSystem","comment":"IndexedLocalFileSystem implements a case-sensitive indexed filesystem\n which uses a shallow storage hierarchy with no restriction on file name or path \n length.  This filesystem is identified by the existence of an index file (~index.dat) \n and recovery journal (~index.jrn).","fields":[{"type_long":"int","javadoc":"","static":true,"name":"LATEST_INDEX_VERSION","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"<code>INDEX_REWRITE_JOURNAL_LIMIT<\/code> determines the maximum number of journal\n entries permitted before a rewrite of the index is forced","static":true,"name":"INDEX_REWRITE_JOURNAL_LIMIT","comment":"INDEX_REWRITE_JOURNAL_LIMIT determines the maximum number of journal\n entries permitted before a rewrite of the index is forced","type_short":"int","constant_value":"1000"},{"type_long":"int","javadoc":"<code>INDEX_REWRITE_TIME_LIMIT_MS<\/code> determines the maximum time which will\n lapse before the index is rewritten with any changes","static":true,"name":"INDEX_REWRITE_TIME_LIMIT_MS","comment":"INDEX_REWRITE_TIME_LIMIT_MS determines the maximum time which will\n lapse before the index is rewritten with any changes","type_short":"int","constant_value":"1800000"},{"type_long":"int","javadoc":"","static":true,"name":"MAX_NAME_LENGTH","comment":"","type_short":"int","constant_value":"254"},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"INDEX_FILE","comment":"","type_short":"String","constant_value":"\"~index.dat\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"BAK_INDEX_FILE","comment":"","type_short":"String","constant_value":"\"~index.bak\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TMP_INDEX_FILE","comment":"","type_short":"String","constant_value":"\"~index.tmp\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"JOURNAL_FILE","comment":"","type_short":"String","constant_value":"\"~journal.dat\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"BAK_JOURNAL_FILE","comment":"","type_short":"String","constant_value":"\"~journal.bak\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"REBUILD_ERROR_FILE","comment":"","type_short":"String","constant_value":"\"~rebuild.err\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"INDEX_LOCK_FILE","comment":"","type_short":"String","constant_value":"\"~index.lock\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"INDEX_VERSION_PREFIX","comment":"","type_short":"String","constant_value":"\"VERSION=\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"MD5_PREFIX","comment":"","type_short":"String","constant_value":"\"MD5:\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"NEXT_FILE_INDEX_ID_PREFIX","comment":"","type_short":"String","constant_value":"\"NEXT-ID:\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"INDEX_ITEM_INDENT","comment":"","type_short":"String","constant_value":"\"  \""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"INDEX_ITEM_SEPARATOR","comment":"","type_short":"String","constant_value":"\":\""},{"type_long":"java.io.File","javadoc":"","static":false,"name":"indexFile","comment":"","type_short":"File","constant_value":null},{"type_long":"java.io.File","javadoc":"","static":false,"name":"journalFile","comment":"","type_short":"File","constant_value":null},{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.IndexJournal","javadoc":"","static":false,"name":"indexJournal","comment":"","type_short":"IndexJournal","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"journalCount","comment":"","type_short":"int","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"nextFileIndexID","comment":"","type_short":"long","constant_value":null},{"type_long":"ghidra.framework.store.local.IndexedLocalFileSystem.Folder","javadoc":"","static":false,"name":"rootFolder","comment":"","type_short":"Folder","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"emptyFilesystem","comment":"","type_short":"boolean","constant_value":null},{"type_long":"generic.timer.GhidraSwinglessTimer","javadoc":"","static":false,"name":"indexRewriteTimer","comment":"","type_short":"GhidraSwinglessTimer","constant_value":null},{"type_long":"java.io.PrintWriter","javadoc":"","static":false,"name":"rebuildErrWriter","comment":"","type_short":"PrintWriter","constant_value":null}]}
