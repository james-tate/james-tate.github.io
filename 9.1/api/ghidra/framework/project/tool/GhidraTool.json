{"implements":[],"javadoc":"Tool created by the workspace when the user chooses to create a new\n tool. Its ToolConfigProvider shows all Plugins with the exception of\n those plugins that can be added to the Front End tool only.","static":false,"extends":"ghidra.framework.plugintool.PluginTool","methods":[{"javadoc":"Construct a new Ghidra Tool.\n@param project the project associated with the tool\n@param name the name of the tool","static":false,"name":"<init>","comment":"Construct a new Ghidra Tool.","params":[{"type_long":"ghidra.framework.model.Project","name":"project","comment":"the project associated with the tool","type_short":"Project"},{"type_long":"java.lang.String","name":"name","comment":"the name of the tool","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new GhidraTool using an existing template.\n@param project project that is the associated with the tool.\n@param template the template to use when creating the tool","static":false,"name":"<init>","comment":"Construct a new GhidraTool using an existing template.","params":[{"type_long":"ghidra.framework.model.Project","name":"project","comment":"project that is the associated with the tool.","type_short":"Project"},{"type_long":"ghidra.framework.project.tool.GhidraToolTemplate","name":"template","comment":"the template to use when creating the tool","type_short":"GhidraToolTemplate"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createDockingWindowManager","comment":"","params":[{"type_long":"boolean","name":"isDockable","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"hasStatus","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"isModal","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"docking.DockingWindowManager","comment":"","type_short":"DockingWindowManager"}},{"javadoc":"","static":false,"name":"initActions","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPluginClassManager","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.util.PluginClassManager","comment":"","type_short":"PluginClassManager"}},{"javadoc":"","static":false,"name":"setToolName","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getToolTemplate","comment":"","params":[{"type_long":"boolean","name":"includeConfigState","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolTemplate","comment":"","type_short":"ToolTemplate"}},{"javadoc":"","static":false,"name":"saveWindowingDataToXml","comment":"","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"restoreWindowingDataFromXml","comment":"","params":[{"type_long":"org.jdom.Element","name":"windowData","comment":"","type_short":"Element"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"shouldSave","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"doSaveTool","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"promptUserToSave","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"exit","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addCloseAction","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addManagePluginsAction","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"showConfig","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Looks for extensions that have been installed since the last time this tool\n was launched. If any are found, and if those extensions contain plugins, the user is\n notified and given the chance to install them.","static":false,"name":"checkForNewExtensions","comment":"Looks for extensions that have been installed since the last time this tool\n was launched. If any are found, and if those extensions contain plugins, the user is\n notified and given the chance to install them.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes any extensions in the tool preferences that are no longer installed.","static":false,"name":"removeUninstalledExtensions","comment":"Removes any extensions in the tool preferences that are no longer installed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Updates the preferences for this tool with a set of new extensions.\n@param newExtensions the extensions to add","static":false,"name":"addInstalledExtensions","comment":"Updates the preferences for this tool with a set of new extensions.","params":[{"type_long":"java.util.Set<ghidra.framework.plugintool.dialog.ExtensionDetails>","name":"newExtensions","comment":"the extensions to add","type_short":"Set"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return the extensions portion of the preferences object.\n@param dockingWindowManager the docking window manager\n@return the extensions portion of the preference state, or a new preference state object if no extension section exists","static":false,"name":"getExtensionPreferences","comment":"Return the extensions portion of the preferences object.","params":[{"type_long":"docking.DockingWindowManager","name":"dockingWindowManager","comment":"the docking window manager","type_short":"DockingWindowManager"}],"throws":[],"return":{"type_long":"ghidra.framework.options.PreferenceState","comment":"the extensions portion of the preference state, or a new preference state object if no extension section exists","type_short":"PreferenceState"}}],"name":"GhidraTool","comment":"Tool created by the workspace when the user chooses to create a new\n tool. Its ToolConfigProvider shows all Plugins with the exception of\n those plugins that can be added to the Front End tool only.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"NON_AUTOSAVE_SAVE_TOOL_TITLE","comment":"","type_short":"String","constant_value":"\"Save Tool?\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"EXTENSIONS_PREFERENCE_NAME","comment":"","type_short":"String","constant_value":"\"KNOWN_EXTENSIONS\""},{"type_long":"boolean","javadoc":"","static":true,"name":"autoSave","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.app.util.FileOpenDropHandler","javadoc":"","static":false,"name":"fileOpenDropHandler","comment":"","type_short":"FileOpenDropHandler","constant_value":null},{"type_long":"ghidra.framework.plugintool.util.PluginClassManager","javadoc":"","static":false,"name":"pluginClassManager","comment":"","type_short":"PluginClassManager","constant_value":null},{"type_long":"docking.action.DockingAction","javadoc":"","static":false,"name":"configureToolAction","comment":"","type_short":"DockingAction","constant_value":null}]}
