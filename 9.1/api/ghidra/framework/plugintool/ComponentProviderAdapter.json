{"implements":[],"javadoc":"Extends the {@link ComponentProvider} to fit into the Plugin architecture by taking in a \n {@link PluginTool} which extends {@link DockingTool}.  Most implementers will want to extend\n this class instead of the ComponentProvider class because they will want to access the extra\n methods provided by PluginTool over DockingTool without having to cast the dockingTool variable.","static":false,"extends":"docking.ComponentProvider","methods":[{"javadoc":"Creates a new component provider with a default location of {@link PluginTool#WINDOW}.\n@param windowMgr The window manager that will manage and show this provider.\n@param name The providers name.  This is used to group similar providers into a tab within\n        the same window.\n@param owner The owner of this provider, usually a plugin name.","static":false,"name":"<init>","comment":"Creates a new component provider with a default location of PluginTool#WINDOW.","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"},{"type_long":"java.lang.String","name":"name","comment":"The providers name.  This is used to group similar providers into a tab within\n        the same window.","type_short":"String"},{"type_long":"java.lang.String","name":"owner","comment":"The owner of this provider, usually a plugin name.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new component provider with a default location of {@link PluginTool#WINDOW}.\n@param windowMgr The window manager that will manage and show this provider.\n@param name The providers name.  This is used to group similar providers into a tab within\n        the same window.\n@param owner The owner of this provider, usually a plugin name.","static":false,"name":"<init>","comment":"Creates a new component provider with a default location of PluginTool#WINDOW.","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"},{"type_long":"java.lang.String","name":"name","comment":"The providers name.  This is used to group similar providers into a tab within\n        the same window.","type_short":"String"},{"type_long":"java.lang.String","name":"owner","comment":"The owner of this provider, usually a plugin name.","type_short":"String"},{"type_long":"java.lang.Class<?>","name":"contextType","comment":"","type_short":"Class"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getTool","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"","type_short":"PluginTool"}}],"name":"ComponentProviderAdapter","comment":"Extends the ComponentProvider to fit into the Plugin architecture by taking in a \n PluginTool which extends DockingTool.  Most implementers will want to extend\n this class instead of the ComponentProvider class because they will want to access the extra\n methods provided by PluginTool over DockingTool without having to cast the dockingTool variable.","fields":[{"type_long":"ghidra.framework.plugintool.PluginTool","javadoc":"","static":false,"name":"tool","comment":"","type_short":"PluginTool","constant_value":null}]}
