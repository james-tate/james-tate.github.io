{"implements":["java.lang.Comparable"],"javadoc":"Representation of a Ghidra extension. This class encapsulates all information required to \n uniquely identify an extension and where (or if) it has been installed.\n <p>\n Note that hashCode and equals have been implemented for this. Two extension\n descriptions are considered equal if they have the same {@link #name} attribute; all other\n fields are unimportant save for display purposes.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor.\n@param name unique name of the extension; cannot be null\n@param description brief explanation of what the extension does; can be null\n@param author creator of the extension; can be null\n@param createdOn creation date of the extension, can be null\n@param version the extension version","static":false,"name":"<init>","comment":"Constructor.","params":[{"type_long":"java.lang.String","name":"name","comment":"unique name of the extension; cannot be null","type_short":"String"},{"type_long":"java.lang.String","name":"description","comment":"brief explanation of what the extension does; can be null","type_short":"String"},{"type_long":"java.lang.String","name":"author","comment":"creator of the extension; can be null","type_short":"String"},{"type_long":"java.lang.String","name":"createdOn","comment":"creation date of the extension, can be null","type_short":"String"},{"type_long":"java.lang.String","name":"version","comment":"the extension version","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns the location where this extension is installed. If the extension is \n not installed this will be null.\n@return the extension path, or null","static":false,"name":"getInstallPath","comment":"Returns the location where this extension is installed. If the extension is \n not installed this will be null.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the extension path, or null","type_short":"String"}},{"javadoc":"","static":false,"name":"setInstallPath","comment":"","params":[{"type_long":"java.lang.String","name":"path","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the location where the extension archive is located. If there is no \n archive this will be null.\n@return the archive path, or null","static":false,"name":"getArchivePath","comment":"Returns the location where the extension archive is located. If there is no \n archive this will be null.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the archive path, or null","type_short":"String"}},{"javadoc":"","static":false,"name":"setArchivePath","comment":"","params":[{"type_long":"java.lang.String","name":"path","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setName","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDescription","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setDescription","comment":"","params":[{"type_long":"java.lang.String","name":"description","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getAuthor","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setAuthor","comment":"","params":[{"type_long":"java.lang.String","name":"author","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getCreatedOn","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setCreatedOn","comment":"","params":[{"type_long":"java.lang.String","name":"date","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getVersion","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setVersion","comment":"","params":[{"type_long":"java.lang.String","name":"version","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"An extension is known to be installed if it has a valid installation path AND that path\n contains a Module.manifest file. \n <p>\n Note: The module manifest file is a marker that indicates several things; one of which is\n the installation status of an extension. When a user marks an extension to be uninstalled (by\n checking the appropriate checkbox in the {@link ExtensionTableModel}), the only thing\n that is done is to remove this manifest file, which tells the {@link ExtensionTableProvider}\n to remove the entire extension directory on the next launch.\n@return true if the extension is installed.","static":false,"name":"isInstalled","comment":"An extension is known to be installed if it has a valid installation path AND that path\n contains a Module.manifest file. \n \n Note: The module manifest file is a marker that indicates several things; one of which is\n the installation status of an extension. When a user marks an extension to be uninstalled (by\n checking the appropriate checkbox in the ExtensionTableModel), the only thing\n that is done is to remove this manifest file, which tells the ExtensionTableProvider\n to remove the entire extension directory on the next launch.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the extension is installed.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"compareTo","comment":"","params":[{"type_long":"ghidra.framework.plugintool.dialog.ExtensionDetails","name":"other","comment":"","type_short":"ExtensionDetails"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"ExtensionDetails","comment":"Representation of a Ghidra extension. This class encapsulates all information required to \n uniquely identify an extension and where (or if) it has been installed.\n \n Note that hashCode and equals have been implemented for this. Two extension\n descriptions are considered equal if they have the same #name attribute; all other\n fields are unimportant save for display purposes.","fields":[{"type_long":"java.lang.String","javadoc":"Absolute path to where this extension is installed. If not installed, this will be null.","static":false,"name":"installPath","comment":"Absolute path to where this extension is installed. If not installed, this will be null.","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"Absolute path to where the original source archive (zip) for this extension can be found. If \n there is no archive (likely because this is an extension that comes pre-installed with\n Ghidra, or Ghidra is being run in development mode), this will be null.","static":false,"name":"archivePath","comment":"Absolute path to where the original source archive (zip) for this extension can be found. If \n there is no archive (likely because this is an extension that comes pre-installed with\n Ghidra, or Ghidra is being run in development mode), this will be null.","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"Name of the extension. This must be unique.","static":false,"name":"name","comment":"Name of the extension. This must be unique.","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"Brief description, for display purposes only.","static":false,"name":"description","comment":"Brief description, for display purposes only.","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"Date when the extension was created, for display purposes only.","static":false,"name":"createdOn","comment":"Date when the extension was created, for display purposes only.","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"Author of the extension, for display purposes only.","static":false,"name":"author","comment":"Author of the extension, for display purposes only.","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"The extension version","static":false,"name":"version","comment":"The extension version","type_short":"String","constant_value":null}]}
