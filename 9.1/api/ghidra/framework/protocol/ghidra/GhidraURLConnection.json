{"implements":[],"javadoc":"","static":false,"extends":"java.net.URLConnection","methods":[{"javadoc":"Construct a Ghidra URL connection which uses the default handler without\n any extension protocol.\n@param ghidraUrl ghidra protocol URL (e.g., {@literal ghidra:\/\/server\/repo})\n@throws MalformedURLException if URL is invalid","static":false,"name":"<init>","comment":"Construct a Ghidra URL connection which uses the default handler without\n any extension protocol.","params":[{"type_long":"java.net.URL","name":"ghidraUrl","comment":"ghidra protocol URL (e.g., )","type_short":"URL"}],"throws":[{"type_long":"java.net.MalformedURLException","comment":"if URL is invalid","type_short":"MalformedURLException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a Ghidra URL connection which requires an Ghidra protocol extension\n@param url extension URL without the ghidra protocol prefix (e.g., {@literal http:\/\/server\/repo})\n@param protocolHandler Ghidra protocol extension handler\n@throws MalformedURLException if URL is invalid","static":false,"name":"<init>","comment":"Construct a Ghidra URL connection which requires an Ghidra protocol extension","params":[{"type_long":"java.net.URL","name":"url","comment":"extension URL without the ghidra protocol prefix (e.g., )","type_short":"URL"},{"type_long":"ghidra.framework.protocol.ghidra.GhidraProtocolHandler","name":"protocolHandler","comment":"Ghidra protocol extension handler","type_short":"GhidraProtocolHandler"}],"throws":[{"type_long":"java.net.MalformedURLException","comment":"if URL is invalid","type_short":"MalformedURLException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Connection was opened as read-only\n@return true if read-only connection","static":false,"name":"isReadOnly","comment":"Connection was opened as read-only","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if read-only connection","type_short":"boolean"}},{"javadoc":"Set the read-only state of the content.\n Extreme care must be taken when setting the state to false for local projects\n without the use of a ProjectLock.  This setting is currently ignored\n for server repositories which are always read-only in Headed mode and \n read-write in Headless mode.\n@param state read-only if true, otherwise read-write","static":false,"name":"setReadOnly","comment":"Set the read-only state of the content.\n Extreme care must be taken when setting the state to false for local projects\n without the use of a ProjectLock.  This setting is currently ignored\n for server repositories which are always read-only in Headed mode and \n read-write in Headless mode.","params":[{"type_long":"boolean","name":"state","comment":"read-only if true, otherwise read-write","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the repository name associated with this <code>GhidraURLConnection<\/code>.\n@return the repository name or null if URL does not identify a specific repository","static":false,"name":"getRepositoryName","comment":"Gets the repository name associated with this GhidraURLConnection.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the repository name or null if URL does not identify a specific repository","type_short":"String"}},{"javadoc":"Gets the repository folder path associated with this connection.\n If an ambiguous path has been specified, the folder path may change\n after a connection is established (e.g., folder item name will be appended \n to folder path and item name will become null if item turns out to\n be a folder).\n@return repository folder path or null","static":false,"name":"getFolderPath","comment":"Gets the repository folder path associated with this connection.\n If an ambiguous path has been specified, the folder path may change\n after a connection is established (e.g., folder item name will be appended \n to folder path and item name will become null if item turns out to\n be a folder).","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"repository folder path or null","type_short":"String"}},{"javadoc":"Gets the repository folder item name associated with this connection.\n If an ambiguous path has been specified, the folder item name may become null\n after a connection is established (e.g., folder item name will be appended \n to folder path and item name will become null if item turns out to\n be a folder).\n@return folder item name or null","static":false,"name":"getFolderItemName","comment":"Gets the repository folder item name associated with this connection.\n If an ambiguous path has been specified, the folder item name may become null\n after a connection is established (e.g., folder item name will be appended \n to folder path and item name will become null if item turns out to\n be a folder).","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"folder item name or null","type_short":"String"}},{"javadoc":"Gets the status code from a Ghidra URL response.\n@throws IOException if an error occurred connecting to the server.\n@return the Ghidra Status-Code, or -1","static":false,"name":"getResponseCode","comment":"Gets the status code from a Ghidra URL response.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if an error occurred connecting to the server.","type_short":"IOException"}],"return":{"type_long":"int","comment":"the Ghidra Status-Code, or -1","type_short":"int"}},{"javadoc":"","static":false,"name":"getContentType","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Get content associated with the URL\n@return URL content generally in the form of GhidraURLWrappedContent, although other\n special cases may result in different content (Example: a server-only URL could result in\n content class of RepositoryServerAdapter).\n@throws IOException","static":false,"name":"getContent","comment":"Get content associated with the URL","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.lang.Object","comment":"URL content generally in the form of GhidraURLWrappedContent, although other\n special cases may result in different content (Example: a server-only URL could result in\n content class of RepositoryServerAdapter).","type_short":"Object"}},{"javadoc":"If URL connects and corresponds to a valid repository, this method\n may be used to obtain the associated ProjectData object.  The caller is\n responsible for closing the returned project data when no longer in-use,\n failure to do so may prevent release of repository handle to server.\n Only a single call to this method is permitted.\n@return transient project data or null if unavailable\n@throws IOException","static":false,"name":"getProjectData","comment":"If URL connects and corresponds to a valid repository, this method\n may be used to obtain the associated ProjectData object.  The caller is\n responsible for closing the returned project data when no longer in-use,\n failure to do so may prevent release of repository handle to server.\n Only a single call to this method is permitted.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.framework.model.ProjectData","comment":"transient project data or null if unavailable","type_short":"ProjectData"}},{"javadoc":"","static":false,"name":"localConnect","comment":"","params":[{"type_long":"ghidra.framework.model.ProjectLocator","name":"localProjectLocator","comment":"","type_short":"ProjectLocator"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"connect","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getInputStream","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.io.InputStream","comment":"","type_short":"InputStream"}},{"javadoc":"","static":false,"name":"getOutputStream","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.io.OutputStream","comment":"","type_short":"OutputStream"}}],"name":"GhidraURLConnection","comment":"","fields":[{"type_long":"int","javadoc":"Ghidra Status-Code 200: OK.","static":true,"name":"GHIDRA_OK","comment":"Ghidra Status-Code 200: OK.","type_short":"int","constant_value":"200"},{"type_long":"int","javadoc":"Ghidra Status-Code 401: Unauthorized.\n This response code includes a variety of connection errors\n which are reported\/logged by the Ghidra Server support code.","static":true,"name":"GHIDRA_UNAUTHORIZED","comment":"Ghidra Status-Code 401: Unauthorized.\n This response code includes a variety of connection errors\n which are reported\/logged by the Ghidra Server support code.","type_short":"int","constant_value":"401"},{"type_long":"int","javadoc":"Ghidra Status-Code 404: Not Found.","static":true,"name":"GHIDRA_NOT_FOUND","comment":"Ghidra Status-Code 404: Not Found.","type_short":"int","constant_value":"404"},{"type_long":"java.lang.String","javadoc":"Ghidra content type - domain folder\/file wrapped within GhidraURLWrappedContent object.\n@see GhidraURLWrappedContent","static":true,"name":"GHIDRA_WRAPPED_CONTENT","comment":"Ghidra content type - domain folder\/file wrapped within GhidraURLWrappedContent object.","type_short":"String","constant_value":"\"GhidraWrappedContent\""},{"type_long":"java.lang.String","javadoc":"Ghidra content type - repository server in the form of a RepositoryAdapter\n@see RepositoryAdapter","static":true,"name":"REPOSITORY_SERVER_CONTENT","comment":"Ghidra content type - repository server in the form of a RepositoryAdapter","type_short":"String","constant_value":"\"RepositoryServer\""},{"type_long":"int","javadoc":"","static":false,"name":"responseCode","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.framework.protocol.ghidra.GhidraProtocolConnector","javadoc":"","static":false,"name":"protocolConnector","comment":"","type_short":"GhidraProtocolConnector","constant_value":null},{"type_long":"ghidra.framework.data.ProjectFileManager","javadoc":"","static":false,"name":"projectData","comment":"","type_short":"ProjectFileManager","constant_value":null},{"type_long":"java.lang.Object","javadoc":"","static":false,"name":"refObject","comment":"","type_short":"Object","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"readOnly","comment":"","type_short":"boolean","constant_value":null}]}
