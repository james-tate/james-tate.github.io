{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determine if the specified URL refers to a local project and\n it exists.\n@param url\n@return true if specified URL refers to a local project and\n it exists.","static":true,"name":"localProjectExists","comment":"Determine if the specified URL refers to a local project and\n it exists.","params":[{"type_long":"java.net.URL","name":"url","comment":"","type_short":"URL"}],"throws":[],"return":{"type_long":"boolean","comment":"true if specified URL refers to a local project and\n it exists.","type_short":"boolean"}},{"javadoc":"Determine if the specified URL is a local project URL.\n No checking is performed as to the existence of the project.\n@param url\n@return true if specified URL refers to a local \n project (ghidra:\/path\/projectName...)","static":true,"name":"isLocalProjectURL","comment":"Determine if the specified URL is a local project URL.\n No checking is performed as to the existence of the project.","params":[{"type_long":"java.net.URL","name":"url","comment":"","type_short":"URL"}],"throws":[],"return":{"type_long":"boolean","comment":"true if specified URL refers to a local \n project (ghidra:\/path\/projectName...)","type_short":"boolean"}},{"javadoc":"Get the project name which corresponds to the specified \n local project URL.\n@param localProjectURL local Ghidra project URL\n@return project name\n@throws IllegalArgumentException URL is not a valid local project URL","static":true,"name":"getProjectName","comment":"Get the project name which corresponds to the specified \n local project URL.","params":[{"type_long":"java.net.URL","name":"localProjectURL","comment":"local Ghidra project URL","type_short":"URL"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"project name","type_short":"String"}},{"javadoc":"Get the project location path which corresponds to the specified \n local project URL.\n@param localProjectURL local Ghidra project URL\n@return project location path\n@throws IllegalArgumentException URL is not a valid local project URL","static":true,"name":"getProjectLocation","comment":"Get the project location path which corresponds to the specified \n local project URL.","params":[{"type_long":"java.net.URL","name":"localProjectURL","comment":"local Ghidra project URL","type_short":"URL"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"project location path","type_short":"String"}},{"javadoc":"Get the project locator which corresponds to the specified \n local project URL.\n@param localProjectURL local Ghidra project URL\n@return project locator\n@throws IllegalArgumentException URL is not a valid local project URL","static":true,"name":"getProjectStorageLocator","comment":"Get the project locator which corresponds to the specified \n local project URL.","params":[{"type_long":"java.net.URL","name":"localProjectURL","comment":"local Ghidra project URL","type_short":"URL"}],"throws":[],"return":{"type_long":"ghidra.framework.model.ProjectLocator","comment":"project locator","type_short":"ProjectLocator"}},{"javadoc":"Determine if the specified URL is any type of server \"repository\" URL.\n No checking is performed as to the existence of the server or repository.\n@param url\n@return true if specified URL refers to a Ghidra server \n repository (ghidra:\/\/host\/repositoryNAME\/path...)","static":true,"name":"isServerRepositoryURL","comment":"Determine if the specified URL is any type of server \"repository\" URL.\n No checking is performed as to the existence of the server or repository.","params":[{"type_long":"java.net.URL","name":"url","comment":"","type_short":"URL"}],"throws":[],"return":{"type_long":"boolean","comment":"true if specified URL refers to a Ghidra server \n repository (ghidra:\/\/host\/repositoryNAME\/path...)","type_short":"boolean"}},{"javadoc":"Determine if the specified URL is any type of server URL.\n No checking is performed as to the existence of the server or repository.\n@param url\n@return true if specified URL refers to a Ghidra server \n repository (ghidra:\/\/host\/repositoryNAME\/path...)","static":true,"name":"isServerURL","comment":"Determine if the specified URL is any type of server URL.\n No checking is performed as to the existence of the server or repository.","params":[{"type_long":"java.net.URL","name":"url","comment":"","type_short":"URL"}],"throws":[],"return":{"type_long":"boolean","comment":"true if specified URL refers to a Ghidra server \n repository (ghidra:\/\/host\/repositoryNAME\/path...)","type_short":"boolean"}},{"javadoc":"","static":true,"name":"checkAbsolutePath","comment":"","params":[{"type_long":"java.lang.String","name":"path","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Create a Ghidra URL from a string form of Ghidra URL or local project path.\n This method can consume strings produced by the getDisplayString method.\n@param path project path (<absolute-directory>\/<project-name>)\n@return local Ghidra project URL\n@see #getDisplayString(URL)\n@throws IllegalArgumentException invalid path or URL specified","static":true,"name":"toURL","comment":"Create a Ghidra URL from a string form of Ghidra URL or local project path.\n This method can consume strings produced by the getDisplayString method.","params":[{"type_long":"java.lang.String","name":"projectPathOrURL","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.net.URL","comment":"local Ghidra project URL","type_short":"URL"}},{"javadoc":"Get a normalized URL which eliminates use of host names and additional URL refs\n which may prevent direct comparison.\n@param url\n@return normalized url","static":true,"name":"getNormalizedURL","comment":"Get a normalized URL which eliminates use of host names and additional URL refs\n which may prevent direct comparison.","params":[{"type_long":"java.net.URL","name":"url","comment":"","type_short":"URL"}],"throws":[],"return":{"type_long":"java.net.URL","comment":"normalized url","type_short":"URL"}},{"javadoc":"Generate preferred display string for Ghidra URLs.\n Form can be parsed by the toURL method.\n@param url\n@return \n@see #toURL(String)","static":true,"name":"getDisplayString","comment":"Generate preferred display string for Ghidra URLs.\n Form can be parsed by the toURL method.","params":[{"type_long":"java.net.URL","name":"url","comment":"","type_short":"URL"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Create a local project URL for a specified project marker file.\n@param projectMarkerFile project marker file\n@return local project URL","static":true,"name":"makeURL","comment":"Create a local project URL for a specified project marker file.","params":[{"type_long":"java.io.File","name":"projectMarkerFile","comment":"project marker file","type_short":"File"}],"throws":[],"return":{"type_long":"java.net.URL","comment":"local project URL","type_short":"URL"}},{"javadoc":"Create a URL which refers to a local Ghidra project\n@param dirPath absolute path of project location directory\n@param projectName name of project\n@return local Ghidra project URL","static":true,"name":"makeURL","comment":"Create a URL which refers to a local Ghidra project","params":[{"type_long":"java.lang.String","name":"dirPath","comment":"absolute path of project location directory","type_short":"String"},{"type_long":"java.lang.String","name":"projectName","comment":"name of project","type_short":"String"}],"throws":[],"return":{"type_long":"java.net.URL","comment":"local Ghidra project URL","type_short":"URL"}},{"javadoc":"Create a URL which refers to Ghidra Server repository content.  Path may correspond \n to either a file or folder.\n@param host server host name\/address\n@param port optional server port (a value <= 0 refers to the default port)\n@param repositoryName repository name\n@param repositoryPath absolute folder or file path within repository.  \n Folder paths should end with a '\/' character.\n@return Ghidra Server repository content URL","static":true,"name":"makeURL","comment":"Create a URL which refers to Ghidra Server repository content.  Path may correspond \n to either a file or folder.","params":[{"type_long":"java.lang.String","name":"host","comment":"server host name\/address","type_short":"String"},{"type_long":"int","name":"port","comment":"optional server port (a value = 0 refers to the default port)","type_short":"int"},{"type_long":"java.lang.String","name":"repositoryName","comment":"repository name","type_short":"String"},{"type_long":"java.lang.String","name":"repositoryPath","comment":"absolute folder or file path within repository.  \n Folder paths should end with a '\/' character.","type_short":"String"}],"throws":[],"return":{"type_long":"java.net.URL","comment":"Ghidra Server repository content URL","type_short":"URL"}},{"javadoc":"Create a URL which refers to Ghidra Server repository content.  Path may correspond \n to either a file or folder.\n@param host server host name\/address\n@param port optional server port (a value <= 0 refers to the default port)\n@param repositoryName repository name\n@param repositoryPath absolute folder path within repository.\n@param fileName name of a file contained within the specified repository\/path\n@param ref optional URL ref or null\n Folder paths should end with a '\/' character.\n@return Ghidra Server repository content URL","static":true,"name":"makeURL","comment":"Create a URL which refers to Ghidra Server repository content.  Path may correspond \n to either a file or folder.","params":[{"type_long":"java.lang.String","name":"host","comment":"server host name\/address","type_short":"String"},{"type_long":"int","name":"port","comment":"optional server port (a value = 0 refers to the default port)","type_short":"int"},{"type_long":"java.lang.String","name":"repositoryName","comment":"repository name","type_short":"String"},{"type_long":"java.lang.String","name":"repositoryPath","comment":"absolute folder path within repository.","type_short":"String"},{"type_long":"java.lang.String","name":"fileName","comment":"name of a file contained within the specified repository\/path","type_short":"String"},{"type_long":"java.lang.String","name":"ref","comment":"optional URL ref or null\n Folder paths should end with a '\/' character.","type_short":"String"}],"throws":[],"return":{"type_long":"java.net.URL","comment":"Ghidra Server repository content URL","type_short":"URL"}},{"javadoc":"Create a URL which refers to Ghidra Server repository and its root folder\n@param host server host name\/address\n@param port optional server port (a value <= 0 refers to the default port)\n@param repositoryName repository name\n@return Ghidra Server repository URL","static":true,"name":"makeURL","comment":"Create a URL which refers to Ghidra Server repository and its root folder","params":[{"type_long":"java.lang.String","name":"host","comment":"server host name\/address","type_short":"String"},{"type_long":"int","name":"port","comment":"optional server port (a value = 0 refers to the default port)","type_short":"int"},{"type_long":"java.lang.String","name":"repositoryName","comment":"repository name","type_short":"String"}],"throws":[],"return":{"type_long":"java.net.URL","comment":"Ghidra Server repository URL","type_short":"URL"}}],"name":"GhidraURL","comment":"","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"PROTOCOL","comment":"","type_short":"String","constant_value":"\"ghidra\""},{"type_long":"java.util.regex.Pattern","javadoc":"","static":true,"name":"IS_LOCAL_URL_PATTERN","comment":"","type_short":"Pattern","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"MARKER_FILE_EXTENSION","comment":"","type_short":"String","constant_value":"\".gpr\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"PROJECT_DIRECTORY_EXTENSION","comment":"","type_short":"String","constant_value":"\".rep\""}]}
