{"implements":[],"javadoc":"A class to hold pieces of a decompiled function.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new decompiled function.\n@param signature the function signature or prototype (eg, \"int foo(double d)\")\n@param c the complete C code of the function.","static":false,"name":"<init>","comment":"Constructs a new decompiled function.","params":[{"type_long":"java.lang.String","name":"signature","comment":"the function signature or prototype (eg, \"int foo(double d)\")","type_short":"String"},{"type_long":"java.lang.String","name":"c","comment":"the complete C code of the function.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the function signature or prototype (eg, \"int foo(double d)\").\n@return the function signature or prototype (eg, \"int foo(double d)\")","static":false,"name":"getSignature","comment":"Returns the function signature or prototype (eg, \"int foo(double d)\").","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the function signature or prototype (eg, \"int foo(double d)\")","type_short":"String"}},{"javadoc":"Returns the complete C code of the function.\n@return the complete C code of the function","static":false,"name":"getC","comment":"Returns the complete C code of the function.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the complete C code of the function","type_short":"String"}}],"name":"DecompiledFunction","comment":"A class to hold pieces of a decompiled function.","fields":[{"type_long":"java.lang.String","javadoc":"","static":false,"name":"signature","comment":"","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"c","comment":"","type_short":"String","constant_value":null}]}
