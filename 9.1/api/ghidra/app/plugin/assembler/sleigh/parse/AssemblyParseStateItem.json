{"implements":["java.lang.Comparable"],"javadoc":"An item in the state of an LR(0) parser\n \n An item is a production with a dot indicating a position while parsing","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a new item starting at the far left of the given production\n@param prod the production","static":false,"name":"<init>","comment":"Construct a new item starting at the far left of the given production","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.grammars.AssemblyProduction","name":"prod","comment":"the production","type_short":"AssemblyProduction"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new item starting immediately before the symbol at the given position in the\n given production\n@param prod the production\n@param pos the position of the dot","static":false,"name":"<init>","comment":"Construct a new item starting immediately before the symbol at the given position in the\n given production","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.grammars.AssemblyProduction","name":"prod","comment":"the production","type_short":"AssemblyProduction"},{"type_long":"int","name":"pos","comment":"the position of the dot","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Advance the dot by one position, producing a new item\n@return the new item","static":false,"name":"read","comment":"Advance the dot by one position, producing a new item","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem","comment":"the new item","type_short":"AssemblyParseStateItem"}},{"javadoc":"Get the symbol immediately to the right of the dot\n \n This is the symbol which must be matched to advance the dot.\n@return the symbol, or null if the item is completed, i.e., the dot is at the far right","static":false,"name":"getNext","comment":"Get the symbol immediately to the right of the dot\n \n This is the symbol which must be matched to advance the dot.","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.symbol.AssemblySymbol","comment":"the symbol, or null if the item is completed, i.e., the dot is at the far right","type_short":"AssemblySymbol"}},{"javadoc":"\"Fill\" one step out to close a state containing this item\n \n To compute the full closure, you must continue stepping out until no new items are generated\n@param grammar the grammar containing the production\n@return a subset of items in the closure of a state containing this item","static":false,"name":"getClosure","comment":"\"Fill\" one step out to close a state containing this item\n \n To compute the full closure, you must continue stepping out until no new items are generated","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.grammars.AssemblyGrammar","name":"grammar","comment":"the grammar containing the production","type_short":"AssemblyGrammar"}],"throws":[],"return":{"type_long":"java.util.Collection<ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem>","comment":"a subset of items in the closure of a state containing this item","type_short":"Collection"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"that","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"compareTo","comment":"","params":[{"type_long":"ghidra.app.plugin.assembler.sleigh.parse.AssemblyParseStateItem","name":"that","comment":"","type_short":"AssemblyParseStateItem"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Check if this item is completed\n \n The item is completed if all symbols have been matched, i.e., the dot is at the far right of\n the production.\n@return true iff the item is completed","static":false,"name":"completed","comment":"Check if this item is completed\n \n The item is completed if all symbols have been matched, i.e., the dot is at the far right of\n the production.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true iff the item is completed","type_short":"boolean"}},{"javadoc":"Get the position of the dot\n \n The position is the number of symbols to the left of the dot.\n@return ","static":false,"name":"getPos","comment":"Get the position of the dot\n \n The position is the number of symbols to the left of the dot.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Get the production associated with this item\n@return the production","static":false,"name":"getProduction","comment":"Get the production associated with this item","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.grammars.AssemblyProduction","comment":"the production","type_short":"AssemblyProduction"}}],"name":"AssemblyParseStateItem","comment":"An item in the state of an LR(0) parser\n \n An item is a production with a dot indicating a position while parsing","fields":[{"type_long":"ghidra.app.plugin.assembler.sleigh.grammars.AssemblyProduction","javadoc":"","static":false,"name":"prod","comment":"","type_short":"AssemblyProduction","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"pos","comment":"","type_short":"int","constant_value":null}]}
