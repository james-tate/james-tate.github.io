{"implements":[],"javadoc":"The transition table defining an LR(0) parsing machine","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Put an entry into the state machine\n@param fromState the source state\n@param next the symbol that is matched\n@param newState the destination state\n@return the previous value for newState\n@note Generally, if this return non-null, something is probably wrong with your LR(0)\n       machine generator","static":false,"name":"put","comment":"Put an entry into the state machine","params":[{"type_long":"int","name":"fromState","comment":"the source state","type_short":"int"},{"type_long":"ghidra.app.plugin.assembler.sleigh.symbol.AssemblySymbol","name":"next","comment":"the symbol that is matched","type_short":"AssemblySymbol"},{"type_long":"int","name":"newState","comment":"the destination state","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.Integer","comment":"the previous value for newState","type_short":"Integer"}},{"javadoc":"Get an entry from the state machine\n@param fromState the source state\n@param next the symbol that has been matched\n@return the destination state","static":false,"name":"get","comment":"Get an entry from the state machine","params":[{"type_long":"int","name":"fromState","comment":"the source state","type_short":"int"},{"type_long":"ghidra.app.plugin.assembler.sleigh.symbol.AssemblySymbol","name":"next","comment":"the symbol that has been matched","type_short":"AssemblySymbol"}],"throws":[],"return":{"type_long":"java.lang.Integer","comment":"the destination state","type_short":"Integer"}},{"javadoc":"Traverse every entry in the table, invoking {@link Consumer#accept(Object)} on each\n@param consumer the callback","static":false,"name":"forEach","comment":"Traverse every entry in the table, invoking Consumer#accept(Object) on each","params":[{"type_long":"java.util.function.Consumer<ghidra.app.plugin.assembler.sleigh.util.TableEntry<java.lang.Integer>>","name":"consumer","comment":"the callback","type_short":"Consumer"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"AssemblyParseTransitionTable","comment":"The transition table defining an LR(0) parsing machine","fields":[{"type_long":"java.util.Map<ghidra.app.plugin.assembler.sleigh.util.TableEntryKey,java.lang.Integer>","javadoc":"","static":false,"name":"map","comment":"","type_short":"Map","constant_value":null}]}
