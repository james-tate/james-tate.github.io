{"implements":[],"javadoc":"Class for converting ConstructTpl into a pcode ops given\n a particular InstructionContext","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Pcode emitter constructor for empty or unimiplemented instructions","static":false,"name":"<init>","comment":"Pcode emitter constructor for empty or unimiplemented instructions","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Pcode emitter constructor\n@param walk is the ParserWalker state for the tree that needs to be walked to generate pcode\n@param ictx is the InstructionContext interface to resolve requests for context\n@param fallOffset default instruction fall offset (i.e., instruction length including delay slotted instructions)\n@param override required if pcode overrides are to be utilized\n@param uniqueFactory required when override specified or if overlay normalization is required","static":false,"name":"<init>","comment":"Pcode emitter constructor","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.ParserWalker","name":"walk","comment":"is the ParserWalker state for the tree that needs to be walked to generate pcode","type_short":"ParserWalker"},{"type_long":"ghidra.program.model.lang.InstructionContext","name":"ictx","comment":"is the InstructionContext interface to resolve requests for context","type_short":"InstructionContext"},{"type_long":"int","name":"fallOffset","comment":"default instruction fall offset (i.e., instruction length including delay slotted instructions)","type_short":"int"},{"type_long":"ghidra.program.model.pcode.PcodeOverride","name":"override","comment":"required if pcode overrides are to be utilized","type_short":"PcodeOverride"},{"type_long":"ghidra.program.model.address.UniqueAddressFactory","name":"uniqueFactory","comment":"required when override specified or if overlay normalization is required","type_short":"UniqueAddressFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setUniqueOffset","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getStartAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getFallOffset","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getWalker","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.processors.sleigh.ParserWalker","comment":"","type_short":"ParserWalker"}},{"javadoc":"Make a note of the current op index, and associate\n it with the label index from the label template,\n so that the label can later be resolved to a relative\n address by resolveRelatives\n@param op = the label template op","static":false,"name":"setLabel","comment":"Make a note of the current op index, and associate\n it with the label index from the label template,\n so that the label can later be resolved to a relative\n address by resolveRelatives","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.OpTpl","name":"op","comment":"= the label template op","type_short":"OpTpl"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Make a note of a reference to a label within a\n BRANCH or CBRANCH op, so that it can later be resolved\n to a relative address.  We assume that the varnode\n reference is the first input to the op in question,\n so all we need to store is the index of the op","static":false,"name":"addLabelRef","comment":"Make a note of a reference to a label within a\n BRANCH or CBRANCH op, so that it can later be resolved\n to a relative address.  We assume that the varnode\n reference is the first input to the op in question,\n so all we need to store is the index of the op","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Now that we have seen all label templates and references\n convert the collected references into full relative\n addresses","static":false,"name":"resolveRelatives","comment":"Now that we have seen all label templates and references\n convert the collected references into full relative\n addresses","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Now that all pcode has been generated, including special\n overrides and injections, ensure that a fallthrough override\n adds a final branch to prevent dropping out the bottom.  This\n addresses both fall-through cases:\n <ul>\n <li>last pcode op has fall-through<\/li>\n <li>internal label used to branch beyond last pcode op<\/li>\n <\/ul>","static":false,"name":"resolveFinalFallthrough","comment":"Now that all pcode has been generated, including special\n overrides and injections, ensure that a fallthrough override\n adds a final branch to prevent dropping out the bottom.  This\n addresses both fall-through cases:\n \n last pcode op has fall-through\n internal label used to branch beyond last pcode op\n ","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dump","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"instrAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"opcode","comment":"","type_short":"int"},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData[]","name":"in","comment":"","type_short":"ghidra.app.plugin.processors.sleigh.VarnodeData[]"},{"type_long":"int","name":"isize","comment":"","type_short":"int"},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData","name":"out","comment":"","type_short":"VarnodeData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dumpBranchOverride","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.OpTpl","name":"opt","comment":"","type_short":"OpTpl"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dumpNullReturn","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dumpCallOverride","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.OpTpl","name":"opt","comment":"","type_short":"OpTpl"},{"type_long":"boolean","name":"returnAfterCall","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dumpReturnOverride","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.OpTpl","name":"opt","comment":"","type_short":"OpTpl"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dumpFlowOverride","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.OpTpl","name":"opt","comment":"","type_short":"OpTpl"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Convert a varnode template into a concrete varnode\n@param vntpl is the varnode template\n@param vn is the resulting concrete varnode","static":false,"name":"generateLocation","comment":"Convert a varnode template into a concrete varnode","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.VarnodeTpl","name":"vntpl","comment":"is the varnode template","type_short":"VarnodeTpl"},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData","name":"vn","comment":"is the resulting concrete varnode","type_short":"VarnodeData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Generate a concrete pointer varnode for a dynamic varnode template\n@param vntpl is the VarnodeTpl\n@param vn is the resulting concrete varnode\n@return the AddressSpace into which the pointer points","static":false,"name":"generatePointer","comment":"Generate a concrete pointer varnode for a dynamic varnode template","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.VarnodeTpl","name":"vntpl","comment":"is the VarnodeTpl","type_short":"VarnodeTpl"},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData","name":"vn","comment":"is the resulting concrete varnode","type_short":"VarnodeData"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSpace","comment":"the AddressSpace into which the pointer points","type_short":"AddressSpace"}},{"javadoc":"","static":false,"name":"dump","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.OpTpl","name":"opt","comment":"","type_short":"OpTpl"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"appendBuild","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.OpTpl","name":"bld","comment":"","type_short":"OpTpl"},{"type_long":"int","name":"secnum","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.lang.UnknownInstructionException","comment":"","type_short":"UnknownInstructionException"},{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Insert the p-code of instruction(s) in the delay slot at this point in the p-code generation for the current instruction\n@param op is the DELAYSLOT directive\n@throws UnknownInstructionException\n@throws MemoryAccessException","static":false,"name":"delaySlot","comment":"Insert the p-code of instruction(s) in the delay slot at this point in the p-code generation for the current instruction","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.OpTpl","name":"op","comment":"is the DELAYSLOT directive","type_short":"OpTpl"}],"throws":[{"type_long":"ghidra.program.model.lang.UnknownInstructionException","comment":"","type_short":"UnknownInstructionException"},{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Inject the p-code for a different instruction at this point in the p-code generation for current instruction\n@param bld is the CROSSBUILD directive containing the section number and address parameters\n@param secnum is the section number of the section containing the CROSSBUILD directive\n@throws UnknownInstructionException\n@throws MemoryAccessException","static":false,"name":"appendCrossBuild","comment":"Inject the p-code for a different instruction at this point in the p-code generation for current instruction","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.OpTpl","name":"bld","comment":"is the CROSSBUILD directive containing the section number and address parameters","type_short":"OpTpl"},{"type_long":"int","name":"secnum","comment":"is the section number of the section containing the CROSSBUILD directive","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.lang.UnknownInstructionException","comment":"","type_short":"UnknownInstructionException"},{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"build","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.ConstructTpl","name":"construct","comment":"","type_short":"ConstructTpl"},{"type_long":"int","name":"secnum","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.lang.UnknownInstructionException","comment":"","type_short":"UnknownInstructionException"},{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Build a named p-code section of a constructor that contains only implied BUILD directives\n@param ct Constructor to build section for\n@param secnum index of the section to be built\n@throws MemoryAccessException\n@throws UnknownInstructionException","static":false,"name":"buildEmpty","comment":"Build a named p-code section of a constructor that contains only implied BUILD directives","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.Constructor","name":"ct","comment":"Constructor to build section for","type_short":"Constructor"},{"type_long":"int","name":"secnum","comment":"index of the section to be built","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.lang.UnknownInstructionException","comment":"","type_short":"UnknownInstructionException"},{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"checkOverlays","comment":"","params":[{"type_long":"int","name":"opcode","comment":"","type_short":"int"},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData[]","name":"in","comment":"","type_short":"ghidra.app.plugin.processors.sleigh.VarnodeData[]"},{"type_long":"int","name":"isize","comment":"","type_short":"int"},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData","name":"out","comment":"","type_short":"VarnodeData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Applies opcode-specific overrides\n@param opcode opcode of instruction\n@param in input varnodes\n@return opcode of modified instruction","static":false,"name":"checkOverrides","comment":"Applies opcode-specific overrides","params":[{"type_long":"int","name":"opcode","comment":"opcode of instruction","type_short":"int"},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData[]","name":"in","comment":"input varnodes","type_short":"ghidra.app.plugin.processors.sleigh.VarnodeData[]"}],"throws":[],"return":{"type_long":"int","comment":"opcode of modified instruction","type_short":"int"}},{"javadoc":"","static":false,"name":"actualOverride","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData","name":"data","comment":"","type_short":"VarnodeData"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"PcodeEmit","comment":"Class for converting ConstructTpl into a pcode ops given\n a particular InstructionContext","fields":[{"type_long":"ghidra.program.model.pcode.PcodeOverride","javadoc":"","static":false,"name":"override","comment":"","type_short":"PcodeOverride","constant_value":null},{"type_long":"ghidra.app.plugin.processors.sleigh.SleighParserContext","javadoc":"","static":false,"name":"parsercontext","comment":"","type_short":"SleighParserContext","constant_value":null},{"type_long":"ghidra.program.model.lang.InstructionContext","javadoc":"","static":false,"name":"instcontext","comment":"","type_short":"InstructionContext","constant_value":null},{"type_long":"ghidra.app.plugin.processors.sleigh.ParserWalker","javadoc":"","static":false,"name":"walker","comment":"","type_short":"ParserWalker","constant_value":null},{"type_long":"ghidra.program.model.listing.FlowOverride","javadoc":"","static":false,"name":"flowOverride","comment":"","type_short":"FlowOverride","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"startAddress","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"defaultFallAddress","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"fallOverride","comment":"","type_short":"Address","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"fallOffset","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.program.model.address.UniqueAddressFactory","javadoc":"","static":false,"name":"uniqueFactory","comment":"","type_short":"UniqueAddressFactory","constant_value":null},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData","javadoc":"","static":false,"name":"outcache","comment":"","type_short":"VarnodeData","constant_value":null},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData[]","javadoc":"","static":false,"name":"incache","comment":"","type_short":"ghidra.app.plugin.processors.sleigh.VarnodeData[]","constant_value":null},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData[]","javadoc":"","static":false,"name":"dyncache","comment":"","type_short":"ghidra.app.plugin.processors.sleigh.VarnodeData[]","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Integer>","javadoc":"","static":false,"name":"labeldef","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"numOps","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"labelbase","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"labelcount","comment":"","type_short":"int","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"inDelaySlot","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSpace","javadoc":"","static":false,"name":"const_space","comment":"","type_short":"AddressSpace","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSpace","javadoc":"","static":false,"name":"uniq_space","comment":"","type_short":"AddressSpace","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"uniquemask","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"uniqueoffset","comment":"","type_short":"long","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSpace","javadoc":"","static":false,"name":"overlayspace","comment":"","type_short":"AddressSpace","constant_value":null}]}
