{"implements":["ghidra.program.model.lang.ParserContext"],"javadoc":"All the recovered context for a single instruction\n The main data structure is the tree of constructors and operands","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"memBuf","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.app.plugin.processors.sleigh.SleighInstructionPrototype","name":"prototype","comment":"","type_short":"SleighInstructionPrototype"},{"type_long":"ghidra.program.model.lang.ProcessorContextView","name":"processorContext","comment":"","type_short":"ProcessorContextView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPrototype","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.processors.sleigh.SleighInstructionPrototype","comment":"","type_short":"SleighInstructionPrototype"}},{"javadoc":"Constructor for building precompiled templates\n@param aAddr = address to which 'inst_start' resolves\n@param nAddr = address to which 'inst_next' resolves\n@param rAddr = special address associated with original call\n@param dAddr = destination address of original call being replaced","static":false,"name":"<init>","comment":"Constructor for building precompiled templates","params":[{"type_long":"ghidra.program.model.address.Address","name":"aAddr","comment":"= address to which 'inst_start' resolves","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"nAddr","comment":"= address to which 'inst_next' resolves","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"rAddr","comment":"= special address associated with original call","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"dAddr","comment":"= destination address of original call being replaced","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return context commits for normal instruction parse.","static":false,"name":"getContextCommits","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.app.plugin.processors.sleigh.SleighParserContext.ContextSet>","comment":"context commits for normal instruction parse.","type_short":"Iterator"}},{"javadoc":"","static":false,"name":"addCommit","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.ConstructState","name":"point","comment":"","type_short":"ConstructState"},{"type_long":"ghidra.app.plugin.processors.sleigh.symbol.TripleSymbol","name":"sym","comment":"","type_short":"TripleSymbol"},{"type_long":"int","name":"num","comment":"","type_short":"int"},{"type_long":"int","name":"mask","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"applyCommits","comment":"","params":[{"type_long":"ghidra.program.model.lang.ProcessorContext","name":"ctx","comment":"","type_short":"ProcessorContext"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFixedHandle","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.ConstructState","name":"constructState","comment":"","type_short":"ConstructState"}],"throws":[],"return":{"type_long":"ghidra.app.plugin.processors.sleigh.FixedHandle","comment":"","type_short":"FixedHandle"}},{"javadoc":"","static":false,"name":"getAddr","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getNaddr","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"setDelaySlotLength","comment":"","params":[{"type_long":"int","name":"delayByteLength","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getCurSpace","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSpace","comment":"","type_short":"AddressSpace"}},{"javadoc":"","static":false,"name":"getConstSpace","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSpace","comment":"","type_short":"AddressSpace"}},{"javadoc":"","static":false,"name":"getMemBuffer","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.mem.MemBuffer","comment":"","type_short":"MemBuffer"}},{"javadoc":"Get bytes from the instruction stream into an int\n (packed in big endian format).  Uninitialized or \n undefined memory will return zero byte values.\n@param offset offset relative start of this context\n@param bytestart pattern byte offset relative to specified context offset\n@param size\n@return requested byte-range value\n@throws MemoryAccessException if no bytes are available at first byte when (offset+bytestart==0).","static":false,"name":"getInstructionBytes","comment":"Get bytes from the instruction stream into an int\n (packed in big endian format).  Uninitialized or \n undefined memory will return zero byte values.","params":[{"type_long":"int","name":"offset","comment":"offset relative start of this context","type_short":"int"},{"type_long":"int","name":"bytestart","comment":"pattern byte offset relative to specified context offset","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"if no bytes are available at first byte when (offset+bytestart==0).","type_short":"MemoryAccessException"}],"return":{"type_long":"int","comment":"requested byte-range value","type_short":"int"}},{"javadoc":"Get bits from the instruction stream into an int\n (packed in big endian format).  Uninitialized or \n undefined memory will return zero bit values.\n@param offset offset relative start of this context\n@param startbit\n@param size\n@return requested bit-range value\n@throws MemoryAccessException if no bytes are available at first byte when (offset+bytestart\/8==0).","static":false,"name":"getInstructionBits","comment":"Get bits from the instruction stream into an int\n (packed in big endian format).  Uninitialized or \n undefined memory will return zero bit values.","params":[{"type_long":"int","name":"offset","comment":"offset relative start of this context","type_short":"int"},{"type_long":"int","name":"startbit","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"if no bytes are available at first byte when (offset+bytestart\/8==0).","type_short":"MemoryAccessException"}],"return":{"type_long":"int","comment":"requested bit-range value","type_short":"int"}},{"javadoc":"Get bytes from context into an int\n@param bytestart\n@param bytesize number of bytes (range: 1 - 4)\n@return ","static":false,"name":"getContextBytes","comment":"Get bytes from context into an int","params":[{"type_long":"int","name":"bytestart","comment":"","type_short":"int"},{"type_long":"int","name":"bytesize","comment":"number of bytes (range: 1 - 4)","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Get full set of context bytes.  Sleigh only supports context\n which is a multiple of 4-bytes (i.e., size of int)\n@return ","static":false,"name":"getContextBytes","comment":"Get full set of context bytes.  Sleigh only supports context\n which is a multiple of 4-bytes (i.e., size of int)","params":[],"throws":[],"return":{"type_long":"int[]","comment":"","type_short":"int[]"}},{"javadoc":"Get bits from context into an int\n@param startbit\n@param bitsize number of bits (range: 1 - 32)\n@return ","static":false,"name":"getContextBits","comment":"Get bits from context into an int","params":[{"type_long":"int","name":"startbit","comment":"","type_short":"int"},{"type_long":"int","name":"bitsize","comment":"number of bits (range: 1 - 32)","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"setContextWord","comment":"","params":[{"type_long":"int","name":"i","comment":"","type_short":"int"},{"type_long":"int","name":"val","comment":"","type_short":"int"},{"type_long":"int","name":"mask","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getRootState","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.processors.sleigh.ConstructState","comment":"","type_short":"ConstructState"}},{"javadoc":"","static":false,"name":"isValid","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getFlowRefAddr","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getFlowDestAddr","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}}],"name":"SleighParserContext","comment":"All the recovered context for a single instruction\n The main data structure is the tree of constructors and operands","fields":[{"type_long":"ghidra.program.model.mem.MemBuffer","javadoc":"","static":false,"name":"memBuffer","comment":"","type_short":"MemBuffer","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"addr","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"nextInstrAddr","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"refAddr","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"destAddr","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.app.plugin.processors.sleigh.SleighInstructionPrototype","javadoc":"","static":false,"name":"prototype","comment":"","type_short":"SleighInstructionPrototype","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSpace","javadoc":"","static":false,"name":"constantSpace","comment":"","type_short":"AddressSpace","constant_value":null},{"type_long":"java.util.HashMap<ghidra.app.plugin.processors.sleigh.ConstructState,ghidra.app.plugin.processors.sleigh.FixedHandle>","javadoc":"","static":false,"name":"handleMap","comment":"","type_short":"HashMap","constant_value":null},{"type_long":"java.util.ArrayList<ghidra.app.plugin.processors.sleigh.SleighParserContext.ContextSet>","javadoc":"","static":false,"name":"contextcommit","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"int[]","javadoc":"","static":false,"name":"context","comment":"","type_short":"int[]","constant_value":null}]}
