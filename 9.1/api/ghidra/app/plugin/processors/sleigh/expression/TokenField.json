{"implements":[],"javadoc":"A contiguous set of bits within instruction stream, interpreted\n as an integer value","static":false,"extends":"ghidra.app.plugin.processors.sleigh.expression.PatternValue","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"minValue","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"maxValue","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getValue","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.ParserWalker","name":"walker","comment":"","type_short":"ParserWalker"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getBitStart","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getBitEnd","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getByteStart","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getByteEnd","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"restoreXml","comment":"","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"ghidra.app.plugin.processors.sleigh.SleighLanguage","name":"lang","comment":"","type_short":"SleighLanguage"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hasSignbit","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Build a long from the instruction bytes in pos\n@param pos Current instruction\n@return \n@throws MemoryAccessException","static":false,"name":"getInstructionBytes","comment":"Build a long from the instruction bytes in pos","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.ParserWalker","name":"walker","comment":"","type_short":"ParserWalker"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Sign extend -val- above -bit-\n@param val value to extend\n@param bit bit specifying sign\n@return ","static":true,"name":"signExtend","comment":"Sign extend -val- above -bit-","params":[{"type_long":"long","name":"val","comment":"value to extend","type_short":"long"},{"type_long":"int","name":"bit","comment":"bit specifying sign","type_short":"int"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Clear all bits in -val- above -bit-\n@param val value to zero extend\n@param bit bit above which to zero extend\n@return ","static":true,"name":"zeroExtend","comment":"Clear all bits in -val- above -bit-","params":[{"type_long":"long","name":"val","comment":"value to zero extend","type_short":"long"},{"type_long":"int","name":"bit","comment":"bit above which to zero extend","type_short":"int"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Swap the least sig -size- bytes in -val-\n@param val value to be byte swapped\n@param size number of bytes involved in swap\n@return ","static":true,"name":"byteSwap","comment":"Swap the least sig -size- bytes in -val-","params":[{"type_long":"long","name":"val","comment":"value to be byte swapped","type_short":"long"},{"type_long":"int","name":"size","comment":"number of bytes involved in swap","type_short":"int"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"isBigEndian","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getShift","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"TokenField","comment":"A contiguous set of bits within instruction stream, interpreted\n as an integer value","fields":[{"type_long":"boolean","javadoc":"","static":false,"name":"bigendian","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"signbit","comment":"","type_short":"boolean","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"bitstart","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"bitend","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"bytestart","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"byteend","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"shift","comment":"","type_short":"int","constant_value":null}]}
