{"implements":[],"javadoc":"","static":false,"extends":"ghidra.app.plugin.processors.sleigh.PcodeEmit","methods":[{"javadoc":"Pcode emitter constructor for producing PcodeOp objects for unimplemented, snippets or empty responses\n when {@link #getFallOffset()} will not be used.\n@param walk state of the ParserContext from which to generate p-code","static":false,"name":"<init>","comment":"Pcode emitter constructor for producing PcodeOp objects for unimplemented, snippets or empty responses\n when #getFallOffset() will not be used.","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.ParserWalker","name":"walk","comment":"state of the ParserContext from which to generate p-code","type_short":"ParserWalker"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Pcode emitter constructor for producing PcodeOp objects for unimplemented, snippets or empty responses.\n@param walk state of the ParserContext from which to generate p-code\n@param fallOffset default fall-through offset (i.e., the full length \n of instruction including delay-sloted instructions)","static":false,"name":"<init>","comment":"Pcode emitter constructor for producing PcodeOp objects for unimplemented, snippets or empty responses.","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.ParserWalker","name":"walk","comment":"state of the ParserContext from which to generate p-code","type_short":"ParserWalker"},{"type_long":"int","name":"fallOffset","comment":"default fall-through offset (i.e., the full length \n of instruction including delay-sloted instructions)","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@param walk state of the ParserContext from which to generate p-code\n@param ictx is the InstructionContext used to resolve delayslot and crossbuild directives\n@param fallOffset default instruction fall offset (i.e., instruction length including delay slotted instructions)\n@param override required if pcode overrides are to be utilized\n@param uniqueFactory required when override specified or if overlay normalization is required","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.ParserWalker","name":"walk","comment":"state of the ParserContext from which to generate p-code","type_short":"ParserWalker"},{"type_long":"ghidra.program.model.lang.InstructionContext","name":"ictx","comment":"is the InstructionContext used to resolve delayslot and crossbuild directives","type_short":"InstructionContext"},{"type_long":"int","name":"fallOffset","comment":"default instruction fall offset (i.e., instruction length including delay slotted instructions)","type_short":"int"},{"type_long":"ghidra.program.model.pcode.PcodeOverride","name":"override","comment":"required if pcode overrides are to be utilized","type_short":"PcodeOverride"},{"type_long":"ghidra.program.model.address.UniqueAddressFactory","name":"uniqueFactory","comment":"required when override specified or if overlay normalization is required","type_short":"UniqueAddressFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPcodeOp","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeOp[]","comment":"","type_short":"ghidra.program.model.pcode.PcodeOp[]"}},{"javadoc":"","static":false,"name":"resolveRelatives","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addLabelRef","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dump","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"instrAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"opcode","comment":"","type_short":"int"},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData[]","name":"in","comment":"","type_short":"ghidra.app.plugin.processors.sleigh.VarnodeData[]"},{"type_long":"int","name":"isize","comment":"","type_short":"int"},{"type_long":"ghidra.app.plugin.processors.sleigh.VarnodeData","name":"out","comment":"","type_short":"VarnodeData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"PcodeEmitObjects","comment":"","fields":[{"type_long":"java.util.ArrayList<ghidra.program.model.pcode.PcodeOp>","javadoc":"","static":false,"name":"oplist","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Integer>","javadoc":"","static":false,"name":"labelref","comment":"","type_short":"ArrayList","constant_value":null}]}
