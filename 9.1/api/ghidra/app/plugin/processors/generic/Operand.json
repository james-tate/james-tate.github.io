{"implements":["java.io.Serializable"],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"n","comment":"","type_short":"String"},{"type_long":"ghidra.app.plugin.processors.generic.OperandValue","name":"o","comment":"","type_short":"OperandValue"},{"type_long":"ghidra.app.plugin.processors.generic.Offset","name":"off","comment":"","type_short":"Offset"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"int","name":"off","comment":"","type_short":"int"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"length","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"int","name":"off","comment":"","type_short":"int"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getInfo","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"int","name":"off","comment":"","type_short":"int"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"ghidra.app.plugin.processors.generic.ConstructorInfo","comment":"","type_short":"ConstructorInfo"}},{"javadoc":"","static":false,"name":"name","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"linkRelativeOffsets","comment":"","params":[{"type_long":"java.util.Hashtable<java.lang.String,ghidra.app.plugin.processors.generic.Operand>","name":"opHash","comment":"","type_short":"Hashtable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Method getHandle.\n@param pcode\n@param position\n@param off\n@return Handle","static":false,"name":"getHandle","comment":"Method getHandle.","params":[{"type_long":"java.util.ArrayList<ghidra.program.model.pcode.PcodeOp>","name":"pcode","comment":"","type_short":"ArrayList"},{"type_long":"ghidra.app.plugin.processors.generic.Position","name":"position","comment":"","type_short":"Position"},{"type_long":"int","name":"off","comment":"","type_short":"int"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"ghidra.app.plugin.processors.generic.Handle","comment":"Handle","type_short":"Handle"}},{"javadoc":"Returns previously computed handle for this operand.  Should not\n be called before the full version of getHandle, where Position and and\n offset are specified.\n@return Handle","static":false,"name":"getHandle","comment":"Returns previously computed handle for this operand.  Should not\n be called before the full version of getHandle, where Position and and\n offset are specified.","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.processors.generic.Handle","comment":"Handle","type_short":"Handle"}},{"javadoc":"Returns a handle for this operand *without* generating any pcode\n@param position\n@param off\n@return \n@throws Exception","static":false,"name":"getHandle","comment":"Returns a handle for this operand *without* generating any pcode","params":[{"type_long":"ghidra.app.plugin.processors.generic.Position","name":"position","comment":"","type_short":"Position"},{"type_long":"int","name":"off","comment":"","type_short":"int"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"ghidra.app.plugin.processors.generic.Handle","comment":"","type_short":"Handle"}},{"javadoc":"","static":false,"name":"getAllHandles","comment":"","params":[{"type_long":"java.util.ArrayList<ghidra.app.plugin.processors.generic.Handle>","name":"handles","comment":"","type_short":"ArrayList"},{"type_long":"ghidra.app.plugin.processors.generic.Position","name":"position","comment":"","type_short":"Position"},{"type_long":"int","name":"off","comment":"","type_short":"int"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Method getPcode\n@param position\n@return array of pcode ops for this operand\n@throws Exception","static":false,"name":"getPcode","comment":"Method getPcode","params":[{"type_long":"ghidra.app.plugin.processors.generic.Position","name":"position","comment":"","type_short":"Position"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"ghidra.program.model.pcode.PcodeOp[]","comment":"array of pcode ops for this operand","type_short":"ghidra.program.model.pcode.PcodeOp[]"}},{"javadoc":"","static":false,"name":"dynamic","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"testDynamic","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return l\n@param list\n@param buf\n@param i\n@return ","static":false,"name":"toList","comment":"Return l","params":[{"type_long":"java.util.ArrayList<ghidra.app.plugin.processors.generic.Handle>","name":"list","comment":"","type_short":"ArrayList"},{"type_long":"ghidra.app.plugin.processors.generic.Position","name":"position","comment":"","type_short":"Position"},{"type_long":"int","name":"off","comment":"","type_short":"int"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return ","static":false,"name":"getSize","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"Operand","comment":"","fields":[{"type_long":"boolean","javadoc":"","static":false,"name":"dynamic","comment":"","type_short":"boolean","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"name","comment":"","type_short":"String","constant_value":null},{"type_long":"ghidra.app.plugin.processors.generic.OperandValue","javadoc":"","static":false,"name":"op","comment":"","type_short":"OperandValue","constant_value":null},{"type_long":"ghidra.app.plugin.processors.generic.Offset","javadoc":"","static":false,"name":"offset","comment":"","type_short":"Offset","constant_value":null},{"type_long":"ghidra.app.plugin.processors.generic.Handle","javadoc":"","static":false,"name":"handle","comment":"","type_short":"Handle","constant_value":null}]}
