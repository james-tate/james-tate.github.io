{"implements":["ghidra.program.model.listing.Instruction","ghidra.program.model.lang.InstructionContext"],"javadoc":"Pseudo (i.e., fake) instruction that is generated by the Disassembler.  This form of \n has some limitation over an instruction which is obtained from a program listing.\n The instruction will completely cache all bytes corresponding to the prototype length\n at the specified address.  Additional bytes will be cached for delay-slotted instructions\n to facilitate pcode generation and obtaining general pcode related attributes.","static":false,"extends":"ghidra.app.util.PseudoCodeUnit","methods":[{"javadoc":"Construct a new PseudoInstruction within a program.\n@param program\n@param addr address of the instruction\n@param prototype prototype of the instruction\n@param memBuffer buffer containing the bytes for the instruction\n@param procContext processor state information during disassembly\n@throws AddressOverflowException if code unit length causes wrap within space","static":false,"name":"<init>","comment":"Construct a new PseudoInstruction within a program.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"address of the instruction","type_short":"Address"},{"type_long":"ghidra.program.model.lang.InstructionPrototype","name":"prototype","comment":"prototype of the instruction","type_short":"InstructionPrototype"},{"type_long":"ghidra.program.model.mem.MemBuffer","name":"memBuffer","comment":"buffer containing the bytes for the instruction","type_short":"MemBuffer"},{"type_long":"ghidra.program.model.lang.ProcessorContext","name":"procContext","comment":"processor state information during disassembly","type_short":"ProcessorContext"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"if code unit length causes wrap within space","type_short":"AddressOverflowException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new PseudoInstruction within a program.\n@param addrFactory program\/language address factory\n@param addr address of the instruction\n@param prototype prototype of the instruction\n@param memBuffer buffer containing the bytes for the instruction\n@param procContext processor state information during disassembly\n@throws AddressOverflowException if code unit length causes wrap within space","static":false,"name":"<init>","comment":"Construct a new PseudoInstruction within a program.","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"addrFactory","comment":"program\/language address factory","type_short":"AddressFactory"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"address of the instruction","type_short":"Address"},{"type_long":"ghidra.program.model.lang.InstructionPrototype","name":"prototype","comment":"prototype of the instruction","type_short":"InstructionPrototype"},{"type_long":"ghidra.program.model.mem.MemBuffer","name":"memBuffer","comment":"buffer containing the bytes for the instruction","type_short":"MemBuffer"},{"type_long":"ghidra.program.model.lang.ProcessorContext","name":"procContext","comment":"processor state information during disassembly","type_short":"ProcessorContext"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"if code unit length causes wrap within space","type_short":"AddressOverflowException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new PseudoInstruction without a program (flow override not supported).\n@param addr address of the instruction\n@param prototype prototype of the instruction\n@param memBuffer buffer containing the bytes for the instruction\n@param procContext processor state information during disassembly\n@throws AddressOverflowException if code unit length causes wrap within space","static":false,"name":"<init>","comment":"Construct a new PseudoInstruction without a program (flow override not supported).","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"address of the instruction","type_short":"Address"},{"type_long":"ghidra.program.model.lang.InstructionPrototype","name":"prototype","comment":"prototype of the instruction","type_short":"InstructionPrototype"},{"type_long":"ghidra.program.model.mem.MemBuffer","name":"memBuffer","comment":"buffer containing the bytes for the instruction","type_short":"MemBuffer"},{"type_long":"ghidra.program.model.lang.ProcessorContext","name":"procContext","comment":"processor state information during disassembly","type_short":"ProcessorContext"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"if code unit length causes wrap within space","type_short":"AddressOverflowException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getByteCacheSize","comment":"","params":[{"type_long":"ghidra.program.model.lang.InstructionPrototype","name":"prototype","comment":"","type_short":"InstructionPrototype"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Return the byte value repeated for all bytes within this instruction or null\n if byte values vary.\n@return repeated byte value or null if bytes vary","static":false,"name":"getRepeatedByte","comment":"Return the byte value repeated for all bytes within this instruction or null\n if byte values vary.","params":[],"throws":[],"return":{"type_long":"java.lang.Byte","comment":"repeated byte value or null if bytes vary","type_short":"Byte"}},{"javadoc":"","static":false,"name":"getBaseContextRegister","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"","type_short":"Register"}},{"javadoc":"","static":false,"name":"getOperandReferences","comment":"","params":[{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference[]","comment":"","type_short":"ghidra.program.model.symbol.Reference[]"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getPrototype","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.InstructionPrototype","comment":"","type_short":"InstructionPrototype"}},{"javadoc":"","static":false,"name":"getMnemonicString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getNumOperands","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getAddress","comment":"","params":[{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getScalar","comment":"","params":[{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.scalar.Scalar","comment":"","type_short":"Scalar"}},{"javadoc":"","static":false,"name":"getRegister","comment":"","params":[{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"","type_short":"Register"}},{"javadoc":"","static":false,"name":"getOpObjects","comment":"","params":[{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.Object[]","comment":"","type_short":"java.lang.Object[]"}},{"javadoc":"","static":false,"name":"getInputObjects","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Object[]","comment":"","type_short":"java.lang.Object[]"}},{"javadoc":"","static":false,"name":"getResultObjects","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Object[]","comment":"","type_short":"java.lang.Object[]"}},{"javadoc":"","static":false,"name":"getDefaultOperandRepresentation","comment":"","params":[{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getDefaultOperandRepresentationList","comment":"","params":[{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.util.List<java.lang.Object>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getOperandType","comment":"","params":[{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getOperandRefType","comment":"","params":[{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.RefType","comment":"","type_short":"RefType"}},{"javadoc":"","static":false,"name":"getFallThrough","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getDefaultFallThroughOffset","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getDefaultFallThrough","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getFallFrom","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getFlows","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address[]","comment":"","type_short":"ghidra.program.model.address.Address[]"}},{"javadoc":"","static":false,"name":"getDefaultFlows","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address[]","comment":"","type_short":"ghidra.program.model.address.Address[]"}},{"javadoc":"","static":false,"name":"getFlowType","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.FlowType","comment":"","type_short":"FlowType"}},{"javadoc":"","static":false,"name":"getPcode","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeOp[]","comment":"","type_short":"ghidra.program.model.pcode.PcodeOp[]"}},{"javadoc":"","static":false,"name":"getPcode","comment":"","params":[{"type_long":"boolean","name":"includeOverrides","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeOp[]","comment":"","type_short":"ghidra.program.model.pcode.PcodeOp[]"}},{"javadoc":"","static":false,"name":"getPcode","comment":"","params":[{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeOp[]","comment":"","type_short":"ghidra.program.model.pcode.PcodeOp[]"}},{"javadoc":"","static":false,"name":"getDelaySlotDepth","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isInDelaySlot","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getNext","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Instruction","comment":"","type_short":"Instruction"}},{"javadoc":"","static":false,"name":"getPrevious","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Instruction","comment":"","type_short":"Instruction"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"clearFallThroughOverride","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setFallThrough","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFlowOverride","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FlowOverride","comment":"","type_short":"FlowOverride"}},{"javadoc":"","static":false,"name":"setFlowOverride","comment":"","params":[{"type_long":"ghidra.program.model.listing.FlowOverride","name":"flowOverride","comment":"","type_short":"FlowOverride"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isFallThroughOverridden","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hasFallthrough","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isFallthrough","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getSeparator","comment":"","params":[{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"hasValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"},{"type_long":"boolean","name":"signed","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.math.BigInteger","comment":"","type_short":"BigInteger"}},{"javadoc":"","static":false,"name":"getRegisterValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.RegisterValue","comment":"","type_short":"RegisterValue"}},{"javadoc":"","static":false,"name":"getRegister","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"","type_short":"Register"}},{"javadoc":"","static":false,"name":"getRegisters","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register[]","comment":"","type_short":"ghidra.program.model.lang.Register[]"}},{"javadoc":"","static":false,"name":"setValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"},{"type_long":"java.math.BigInteger","name":"value","comment":"","type_short":"BigInteger"}],"throws":[{"type_long":"ghidra.program.model.listing.ContextChangeException","comment":"","type_short":"ContextChangeException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setRegisterValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.RegisterValue","name":"value","comment":"","type_short":"RegisterValue"}],"throws":[{"type_long":"ghidra.program.model.listing.ContextChangeException","comment":"","type_short":"ContextChangeException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"clearRegister","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"}],"throws":[{"type_long":"ghidra.program.model.listing.ContextChangeException","comment":"","type_short":"ContextChangeException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getProcessorContext","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.ProcessorContextView","comment":"","type_short":"ProcessorContextView"}},{"javadoc":"","static":false,"name":"getMemBuffer","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.mem.MemBuffer","comment":"","type_short":"MemBuffer"}},{"javadoc":"","static":false,"name":"getParserContext","comment":"","params":[],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"ghidra.program.model.lang.ParserContext","comment":"","type_short":"ParserContext"}},{"javadoc":"","static":false,"name":"getParserContext","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"instructionAddress","comment":"","type_short":"Address"}],"throws":[{"type_long":"ghidra.program.model.lang.UnknownContextException","comment":"","type_short":"UnknownContextException"},{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"ghidra.program.model.lang.ParserContext","comment":"","type_short":"ParserContext"}},{"javadoc":"","static":false,"name":"getInstructionContext","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.InstructionContext","comment":"","type_short":"InstructionContext"}},{"javadoc":"","static":false,"name":"setInstructionBlock","comment":"","params":[{"type_long":"ghidra.program.model.lang.InstructionBlock","name":"bl","comment":"","type_short":"InstructionBlock"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"PseudoInstruction","comment":"Pseudo (i.e., fake) instruction that is generated by the Disassembler.  This form of \n has some limitation over an instruction which is obtained from a program listing.\n The instruction will completely cache all bytes corresponding to the prototype length\n at the specified address.  Additional bytes will be cached for delay-slotted instructions\n to facilitate pcode generation and obtaining general pcode related attributes.","fields":[{"type_long":"ghidra.program.model.address.Address[]","javadoc":"","static":true,"name":"EMPTY_ADDR_ARRAY","comment":"","type_short":"ghidra.program.model.address.Address[]","constant_value":null},{"type_long":"ghidra.program.model.address.AddressFactory","javadoc":"","static":false,"name":"addrFactory","comment":"","type_short":"AddressFactory","constant_value":null},{"type_long":"ghidra.program.model.lang.InstructionBlock","javadoc":"","static":false,"name":"block","comment":"","type_short":"InstructionBlock","constant_value":null},{"type_long":"ghidra.program.model.lang.InstructionPrototype","javadoc":"","static":false,"name":"instrProto","comment":"","type_short":"InstructionPrototype","constant_value":null},{"type_long":"ghidra.program.model.lang.ProcessorContext","javadoc":"","static":false,"name":"procContext","comment":"","type_short":"ProcessorContext","constant_value":null},{"type_long":"ghidra.program.model.lang.ParserContext","javadoc":"","static":false,"name":"parserContext","comment":"","type_short":"ParserContext","constant_value":null},{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"fallThroughOverride","comment":"","type_short":"Address","constant_value":null},{"type_long":"ghidra.program.model.listing.FlowOverride","javadoc":"","static":false,"name":"flowOverride","comment":"","type_short":"FlowOverride","constant_value":null}]}
