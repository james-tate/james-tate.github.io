{"implements":[],"javadoc":"<code>RepeatInstructionByteTracker<\/code> provides pseudo-disassemblers the ability to track\n repeated bytes during disassembly of a block of instructions.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor.\n@param repeatPatternLimit maximum number of instructions containing the same repeated \n byte values.  A value less than or equal to 0 will disable counting.\n@param repeatPatternLimitIgnoredRegion optional set of addresses where check is not \n performed or null for check to be performed everywhere.","static":false,"name":"<init>","comment":"Constructor.","params":[{"type_long":"int","name":"repeatPatternLimit","comment":"maximum number of instructions containing the same repeated \n byte values.  A value less than or equal to 0 will disable counting.","type_short":"int"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"repeatPatternLimitIgnoredRegion","comment":"optional set of addresses where check is not \n performed or null for check to be performed everywhere.","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Reset internal counter.  This should be performed before disassembling\n a new block of instructions.","static":false,"name":"reset","comment":"Reset internal counter.  This should be performed before disassembling\n a new block of instructions.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Check the next instruction within a block of instructions.\n@param inst next instruction\n@return true if repeat limit has been exceeded, else false.  \n If the repeat limit has been set &lt;= 0 false will be returned.","static":false,"name":"exceedsRepeatBytePattern","comment":"Check the next instruction within a block of instructions.","params":[{"type_long":"ghidra.app.util.PseudoInstruction","name":"inst","comment":"next instruction","type_short":"PseudoInstruction"}],"throws":[],"return":{"type_long":"boolean","comment":"true if repeat limit has been exceeded, else false.  \n If the repeat limit has been set = 0 false will be returned.","type_short":"boolean"}},{"javadoc":"Set the maximum number of instructions in a single run which contain the same byte values.\n@param maxInstructions limit on the number of consecutive instructions with the same \n byte values.  A non-positive value (&lt;= 0) will disable the \n {@link #exceedsRepeatBytePattern(PseudoInstruction)} checking.","static":false,"name":"setRepeatPatternLimit","comment":"Set the maximum number of instructions in a single run which contain the same byte values.","params":[{"type_long":"int","name":"maxInstructions","comment":"limit on the number of consecutive instructions with the same \n byte values.  A non-positive value (= 0) will disable the \n #exceedsRepeatBytePattern(PseudoInstruction) checking.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the region over which the repeat pattern limit will be ignored.\n@param set region over which the repeat pattern limit will be ignored","static":false,"name":"setRepeatPatternLimitIgnored","comment":"Set the region over which the repeat pattern limit will be ignored.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"region over which the repeat pattern limit will be ignored","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"RepeatInstructionByteTracker","comment":"RepeatInstructionByteTracker provides pseudo-disassemblers the ability to track\n repeated bytes during disassembly of a block of instructions.","fields":[{"type_long":"ghidra.program.model.address.AddressSetView","javadoc":"","static":false,"name":"repeatPatternLimitIgnoredRegion","comment":"","type_short":"AddressSetView","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"repeatPatternLimit","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"repeatPatternCnt","comment":"","type_short":"int","constant_value":null},{"type_long":"byte","javadoc":"","static":false,"name":"repeatByteValue","comment":"","type_short":"byte","constant_value":null}]}
