{"implements":[],"javadoc":"A utility class to handle the generation of\n direct and offcut cross-reference (XREF) lists\n on code units and stack variables.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns an array containing all\n direct XREF addresses to the specified code unit.\n@param cu the code unit to generate the XREFs\n@return array of all XREFs to the code unit","static":true,"name":"getXRefList","comment":"Returns an array containing all\n direct XREF addresses to the specified code unit.","params":[{"type_long":"ghidra.program.model.listing.CodeUnit","name":"cu","comment":"the code unit to generate the XREFs","type_short":"CodeUnit"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address[]","comment":"array of all XREFs to the code unit","type_short":"ghidra.program.model.address.Address[]"}},{"javadoc":"Returns an array containing the first <b><code>maxNumber<\/code><\/b>\n direct XREF addresses to the specified code unit.\n@param cu the code unit to generate the XREFs\n@param maxNumber max number of XREFs to get,\n                  or -1 to get all references\n@return array first <b><code>maxNumber<\/code><\/b> XREFs to the code unit","static":true,"name":"getXRefList","comment":"Returns an array containing the first maxNumber\n direct XREF addresses to the specified code unit.","params":[{"type_long":"ghidra.program.model.listing.CodeUnit","name":"cu","comment":"the code unit to generate the XREFs","type_short":"CodeUnit"},{"type_long":"int","name":"maxNumber","comment":"max number of XREFs to get,\n                  or -1 to get all references","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address[]","comment":"array first maxNumber XREFs to the code unit","type_short":"ghidra.program.model.address.Address[]"}},{"javadoc":"Returns an array containing the first <b><code>maxNumber<\/code><\/b>\n direct XREF references to the specified code unit.\n@param cu the code unit to generate the XREFs\n@param maxNumber max number of XREFs to get,\n                  or -1 to get all references\n@return array first <b><code>maxNumber<\/code><\/b> XREFs to the code unit","static":true,"name":"getXReferences","comment":"Returns an array containing the first maxNumber\n direct XREF references to the specified code unit.","params":[{"type_long":"ghidra.program.model.listing.CodeUnit","name":"cu","comment":"the code unit to generate the XREFs","type_short":"CodeUnit"},{"type_long":"int","name":"maxNumber","comment":"max number of XREFs to get,\n                  or -1 to get all references","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference[]","comment":"array first maxNumber XREFs to the code unit","type_short":"ghidra.program.model.symbol.Reference[]"}},{"javadoc":"Returns an array containing all\n offcut XREF addresses to the specified code unit.\n@param cu the code unit to generate the offcut XREFs\n@return array of all offcut XREFs to the code unit","static":true,"name":"getOffcutXRefList","comment":"Returns an array containing all\n offcut XREF addresses to the specified code unit.","params":[{"type_long":"ghidra.program.model.listing.CodeUnit","name":"cu","comment":"the code unit to generate the offcut XREFs","type_short":"CodeUnit"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address[]","comment":"array of all offcut XREFs to the code unit","type_short":"ghidra.program.model.address.Address[]"}},{"javadoc":"Returns an array containing all\n offcut XREF addresses to the specified code unit.\n@param cu the code unit to generate the offcut XREFs\n@param maxXRefs max number of offcut XREFs to get,\n                  or -1 to get all offcut references\n@return array of all offcut XREFs to the code unit","static":true,"name":"getOffcutXRefList","comment":"Returns an array containing all\n offcut XREF addresses to the specified code unit.","params":[{"type_long":"ghidra.program.model.listing.CodeUnit","name":"cu","comment":"the code unit to generate the offcut XREFs","type_short":"CodeUnit"},{"type_long":"int","name":"maxXRefs","comment":"max number of offcut XREFs to get,\n                  or -1 to get all offcut references","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address[]","comment":"array of all offcut XREFs to the code unit","type_short":"ghidra.program.model.address.Address[]"}},{"javadoc":"Returns an array containing all\n offcut XREF references to the specified code unit.\n@param cu the code unit to generate the offcut XREFs\n@param maxXRefs max number of offcut XREFs to get,\n                  or -1 to get all offcut references\n@return array of all offcut XREFs to the code unit","static":true,"name":"getOffcutXReferences","comment":"Returns an array containing all\n offcut XREF references to the specified code unit.","params":[{"type_long":"ghidra.program.model.listing.CodeUnit","name":"cu","comment":"the code unit to generate the offcut XREFs","type_short":"CodeUnit"},{"type_long":"int","name":"maxXRefs","comment":"max number of offcut XREFs to get,\n                  or -1 to get all offcut references","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference[]","comment":"array of all offcut XREFs to the code unit","type_short":"ghidra.program.model.symbol.Reference[]"}},{"javadoc":"Returns the count of all \n offcut XREF addresses to the specified code unit.\n@param cu the code unit to generate the offcut XREFs\n@return count of all offcut XREFs to the code unit","static":true,"name":"getOffcutXRefCount","comment":"Returns the count of all \n offcut XREF addresses to the specified code unit.","params":[{"type_long":"ghidra.program.model.listing.CodeUnit","name":"cu","comment":"the code unit to generate the offcut XREFs","type_short":"CodeUnit"}],"throws":[],"return":{"type_long":"int","comment":"count of all offcut XREFs to the code unit","type_short":"int"}},{"javadoc":"Populates the provided array lists with the direct and\n offcut XREFs to the specified variable.\n@param var variable to get references\n@param xrefs list to put direct references on\n@param offcuts list to put offcut references on","static":true,"name":"getVariableRefs","comment":"Populates the provided array lists with the direct and\n offcut XREFs to the specified variable.","params":[{"type_long":"ghidra.program.model.listing.Variable","name":"var","comment":"variable to get references","type_short":"Variable"},{"type_long":"java.util.List<ghidra.program.model.symbol.Reference>","name":"xrefs","comment":"list to put direct references on","type_short":"List"},{"type_long":"java.util.List<ghidra.program.model.symbol.Reference>","name":"offcuts","comment":"list to put offcut references on","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the reference count to the min address of the given code unit.\n If an external entry exists there, then subtract one from the count.\n@param cu code unit\n@return reference count, excluding an external entry reference","static":true,"name":"getReferenceCount","comment":"Get the reference count to the min address of the given code unit.\n If an external entry exists there, then subtract one from the count.","params":[{"type_long":"ghidra.program.model.listing.CodeUnit","name":"cu","comment":"code unit","type_short":"CodeUnit"}],"throws":[],"return":{"type_long":"int","comment":"reference count, excluding an external entry reference","type_short":"int"}}],"name":"XReferenceUtil","comment":"A utility class to handle the generation of\n direct and offcut cross-reference (XREF) lists\n on code units and stack variables.","fields":[{"type_long":"ghidra.program.model.address.Address[]","javadoc":"","static":true,"name":"EMPTY_ADDR_ARRAY","comment":"","type_short":"ghidra.program.model.address.Address[]","constant_value":null},{"type_long":"ghidra.program.model.symbol.Reference[]","javadoc":"","static":true,"name":"EMPTY_REF_ARRAY","comment":"","type_short":"ghidra.program.model.symbol.Reference[]","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"ALL_REFS","comment":"","type_short":"int","constant_value":"-1"}]}
