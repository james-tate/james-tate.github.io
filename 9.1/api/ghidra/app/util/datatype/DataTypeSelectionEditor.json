{"implements":[],"javadoc":"An editor that is used to show the {@link DropDownSelectionTextField} for the entering of\n data types by name and offers the user of a completion window.  This editor also provides a\n browse button that when pressed will show a data type tree so that the user may browse a tree\n of known data types.\n <p>\n The typical usage of this class is in conjunction with the {@link DataTypeChooserDialog}.   The\n dialog uses this editor as part of its DataType selection process.  Users seeking a dialog\n that allows users to choose DataTypes are encouraged to use that dialog.  If you wish to add\n this editor to a widget directly, then see below.\n <p>\n <u>Stand Alone Usage<\/u><br>\n In order to use this component directly you need to call {@link #getEditorComponent()}.  This\n will give you a Component for editing.\n <p>\n In order to know when changes are made to the component you need to add a DocumentListener\n via the {@link #addDocumentListener(DocumentListener)} method.  The added listener will be\n notified as the user enters text into the editor's text field.  Then, to determine when there\n is as valid DataType in the field you may call {@link #validateUserSelection()}.","static":false,"extends":"javax.swing.AbstractCellEditor","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.framework.plugintool.ServiceProvider","name":"serviceProvider","comment":"","type_short":"ServiceProvider"},{"type_long":"int","name":"maxSize","comment":"","type_short":"int"},{"type_long":"ghidra.util.data.DataTypeParser.AllowedDataTypes","name":"allowedDataTypes","comment":"","type_short":"AllowedDataTypes"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.services.DataTypeManagerService","name":"service","comment":"","type_short":"DataTypeManagerService"},{"type_long":"int","name":"maxSize","comment":"","type_short":"int"},{"type_long":"ghidra.util.data.DataTypeParser.AllowedDataTypes","name":"allowedDataTypes","comment":"","type_short":"AllowedDataTypes"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the {@link DataTypeManager} to use when the chooser is forced to parse the given\n data type text to resolve the data type.  If the users chooses a type, then this value\n is not used.  Note that setting this value does not restrict the parser to just the \n given value, but rather the given value is the preferred manager and is thus searched\n first.\n@param dataTypeManager the preferred data type manager","static":false,"name":"setPreferredDataTypeManager","comment":"Sets the DataTypeManager to use when the chooser is forced to parse the given\n data type text to resolve the data type.  If the users chooses a type, then this value\n is not used.  Note that setting this value does not restrict the parser to just the \n given value, but rather the given value is the preferred manager and is thus searched\n first.","params":[{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dataTypeManager","comment":"the preferred data type manager","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see DropDownSelectionTextField#setConsumeEnterKeyPress(boolean)","static":false,"name":"setConsumeEnterKeyPress","comment":"","params":[{"type_long":"boolean","name":"consume","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"init","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see javax.swing.CellEditor#getCellEditorValue()","static":false,"name":"getCellEditorValue","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Object","comment":"","type_short":"Object"}},{"javadoc":"","static":false,"name":"getCellEditorValueAsDataType","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"Returns the text value of the editor's text field.\n@return the text value of the editor's text field.","static":false,"name":"getCellEditorValueAsText","comment":"Returns the text value of the editor's text field.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the text value of the editor's text field.","type_short":"String"}},{"javadoc":"Returns the component that allows the user to edit.\n@return the component that allows the user to edit.","static":false,"name":"getEditorComponent","comment":"Returns the component that allows the user to edit.","params":[],"throws":[],"return":{"type_long":"javax.swing.JComponent","comment":"the component that allows the user to edit.","type_short":"JComponent"}},{"javadoc":"","static":false,"name":"getDropDownTextField","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.DropDownSelectionTextField<ghidra.program.model.data.DataType>","comment":"","type_short":"DropDownSelectionTextField"}},{"javadoc":"","static":false,"name":"getBrowseButton","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.JButton","comment":"","type_short":"JButton"}},{"javadoc":"Sets the initially selected node in the data type tree that the user can choose to \n show.\n@param path The path to set","static":false,"name":"setDefaultSelectedTreePath","comment":"Sets the initially selected node in the data type tree that the user can choose to \n show.","params":[{"type_long":"javax.swing.tree.TreePath","name":"path","comment":"The path to set","type_short":"TreePath"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"requestFocus","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Highlights the text of the cell editor.","static":false,"name":"selectCellEditorValue","comment":"Highlights the text of the cell editor.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the value to be edited on this cell editor.\n@param dataType The data type which is to be edited.","static":false,"name":"setCellEditorValue","comment":"Sets the value to be edited on this cell editor.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"The data type which is to be edited.","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setCellEditorValueAsText","comment":"","params":[{"type_long":"java.lang.String","name":"text","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a document listener to the text field editing component of this editor so that users\n can be notified when the text contents of the editor change.  You may verify whether the \n text changes represent a valid DataType by calling {@link #validateUserSelection()}.\n@param listener the listener to add.\n@see #validateUserSelection()","static":false,"name":"addDocumentListener","comment":"Adds a document listener to the text field editing component of this editor so that users\n can be notified when the text contents of the editor change.  You may verify whether the \n text changes represent a valid DataType by calling #validateUserSelection().","params":[{"type_long":"javax.swing.event.DocumentListener","name":"listener","comment":"the listener to add.","type_short":"DocumentListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes a previously added document listener.\n@param listener the listener to remove.s","static":false,"name":"removeDocumentListener","comment":"Removes a previously added document listener.","params":[{"type_long":"javax.swing.event.DocumentListener","name":"listener","comment":"the listener to remove.s","type_short":"DocumentListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addFocusListener","comment":"","params":[{"type_long":"java.awt.event.FocusListener","name":"listener","comment":"","type_short":"FocusListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeFocusListener","comment":"","params":[{"type_long":"java.awt.event.FocusListener","name":"listener","comment":"","type_short":"FocusListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setTabCommitsEdit","comment":"","params":[{"type_long":"boolean","name":"doesCommit","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the direction of the user triggered navigation; null if the user did not trigger\n navigation out of this component.","static":false,"name":"getNavigationDirection","comment":"Returns the direction of the user triggered navigation; null if the user did not trigger\n navigation out of this component.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.datatype.NavigationDirection","comment":"","type_short":"NavigationDirection"}},{"javadoc":"","static":false,"name":"addKeyListener","comment":"","params":[{"type_long":"java.awt.event.KeyListener","name":"listener","comment":"","type_short":"KeyListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeKeyListener","comment":"","params":[{"type_long":"java.awt.event.KeyListener","name":"listener","comment":"","type_short":"KeyListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if the current value of the data type editor is a know data type.\n@return true if the current value of the data type editor is a know data type.\n@throws InvalidDataTypeException If the current text in the editor's text field could not\n         be parsed into a valid DataType","static":false,"name":"validateUserSelection","comment":"Returns true if the current value of the data type editor is a know data type.","params":[],"throws":[{"type_long":"ghidra.program.model.data.InvalidDataTypeException","comment":"If the current text in the editor's text field could not\n         be parsed into a valid DataType","type_short":"InvalidDataTypeException"}],"return":{"type_long":"boolean","comment":"true if the current value of the data type editor is a know data type.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"containsValidDataType","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isValidDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.program.model.data.InvalidDataTypeException","comment":"","type_short":"InvalidDataTypeException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getDataTypeRootForCurrentText","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"Parse datatype text entry using {@link DataTypeParser}.  Allows addition\n of supported modifiers (e.g., arrays, pointers, etc.).\n@return true if parse successful else false","static":false,"name":"parseDataTypeTextEntry","comment":"Parse datatype text entry using DataTypeParser.  Allows addition\n of supported modifiers (e.g., arrays, pointers, etc.).","params":[],"throws":[{"type_long":"ghidra.program.model.data.InvalidDataTypeException","comment":"","type_short":"InvalidDataTypeException"}],"return":{"type_long":"boolean","comment":"true if parse successful else false","type_short":"boolean"}},{"javadoc":"","static":false,"name":"showDataTypeBrowser","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DataTypeSelectionEditor","comment":"An editor that is used to show the DropDownSelectionTextField for the entering of\n data types by name and offers the user of a completion window.  This editor also provides a\n browse button that when pressed will show a data type tree so that the user may browse a tree\n of known data types.\n \n The typical usage of this class is in conjunction with the DataTypeChooserDialog.   The\n dialog uses this editor as part of its DataType selection process.  Users seeking a dialog\n that allows users to choose DataTypes are encouraged to use that dialog.  If you wish to add\n this editor to a widget directly, then see below.\n \n Stand Alone Usage\n In order to use this component directly you need to call #getEditorComponent().  This\n will give you a Component for editing.\n \n In order to know when changes are made to the component you need to add a DocumentListener\n via the #addDocumentListener(DocumentListener) method.  The added listener will be\n notified as the user enters text into the editor's text field.  Then, to determine when there\n is as valid DataType in the field you may call #validateUserSelection().","fields":[{"type_long":"javax.swing.JPanel","javadoc":"","static":false,"name":"editorPanel","comment":"","type_short":"JPanel","constant_value":null},{"type_long":"docking.widgets.DropDownSelectionTextField<ghidra.program.model.data.DataType>","javadoc":"","static":false,"name":"selectionField","comment":"","type_short":"DropDownSelectionTextField","constant_value":null},{"type_long":"javax.swing.JButton","javadoc":"","static":false,"name":"browseButton","comment":"","type_short":"JButton","constant_value":null},{"type_long":"ghidra.app.services.DataTypeManagerService","javadoc":"","static":false,"name":"dataTypeManagerService","comment":"","type_short":"DataTypeManagerService","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"maxSize","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.program.model.data.DataTypeManager","javadoc":"","static":false,"name":"dataTypeManager","comment":"","type_short":"DataTypeManager","constant_value":null},{"type_long":"ghidra.util.data.DataTypeParser.AllowedDataTypes","javadoc":"","static":false,"name":"allowedDataTypes","comment":"","type_short":"AllowedDataTypes","constant_value":null},{"type_long":"java.awt.event.KeyAdapter","javadoc":"","static":false,"name":"keyListener","comment":"","type_short":"KeyAdapter","constant_value":null},{"type_long":"ghidra.app.util.datatype.NavigationDirection","javadoc":"","static":false,"name":"navigationDirection","comment":"","type_short":"NavigationDirection","constant_value":null},{"type_long":"javax.swing.tree.TreePath","javadoc":"","static":false,"name":"initiallySelectedTreePath","comment":"","type_short":"TreePath","constant_value":null}]}
