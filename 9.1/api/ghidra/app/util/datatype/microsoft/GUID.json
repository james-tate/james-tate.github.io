{"implements":[],"javadoc":"GUIDs identify objects such as interfaces, manager entry-point vectors (EPVs), \n and class objects. A GUID is a 128-bit value consisting of one group \n of 8 hexadecimal digits, followed by three groups of 4 hexadecimal \n digits each, followed by one group of 12 hexadecimal digits. The \n following example shows the groupings of hexadecimal digits in a GUID.\n <br>\n <code>6B29FC40-CA47-1067-B31D-00DD010662DA<\/code>\n <br>\n <pre>\n typedef struct _GUID {\n \t\tDWORD Data1;\n \t\tWORD Data2;\n \t\tWORD Data3;\n \t\tBYTE Data4[8];\n } GUID;\n <\/pre>\n Data1 - Specifies the first 8 hexadecimal digits of the GUID.<br> \n Data2 - Specifies the first group of 4 hexadecimal digits.<br>\n Data3 - Specifies the second group of 4 hexadecimal digits.<br>\n Data4 - Array of 8 bytes.\n         The first 2 bytes contain the third group of 4 hexadecimal digits.\n         The remaining 6 bytes contain the final 12 hexadecimal digits.<br>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a GUID object using the GUID string form.\n@param guidString - \"6B29FC40-CA47-1067-B31D-00DD010662DA\"\n@throws IllegalArgumentException if string does not represent a valid GUID","static":false,"name":"<init>","comment":"Creates a GUID object using the GUID string form.","params":[{"type_long":"java.lang.String","name":"guidString","comment":"- \"6B29FC40-CA47-1067-B31D-00DD010662DA\"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a GUID using the constitute pieces.","static":false,"name":"<init>","comment":"Constructs a GUID using the constitute pieces.","params":[{"type_long":"int","name":"data1","comment":"","type_short":"int"},{"type_long":"short","name":"data2","comment":"","type_short":"short"},{"type_long":"short","name":"data3","comment":"","type_short":"short"},{"type_long":"byte[]","name":"data4","comment":"","type_short":"byte[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Reads a GUID from the given binary reader.\n@param reader the binary reader to read the GUID\n@throws IOException if an I\/O error occurs while reading the GUID","static":false,"name":"<init>","comment":"Reads a GUID from the given binary reader.","params":[{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"the binary reader to read the GUID","type_short":"BinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"if an I\/O error occurs while reading the GUID","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Reads a GUID from the given memory buffer.\n@param buf the memory buffer to read the GUID\n@throws MemoryAccessException if an error occurs while reading the GUID","static":false,"name":"<init>","comment":"Reads a GUID from the given memory buffer.","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"the memory buffer to read the GUID","type_short":"MemBuffer"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"if an error occurs while reading the GUID","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDataConverter","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"}],"throws":[],"return":{"type_long":"ghidra.util.DataConverter","comment":"","type_short":"DataConverter"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Specifies the first 8 hexadecimal digits of the GUID.\n@return ","static":false,"name":"getData1","comment":"Specifies the first 8 hexadecimal digits of the GUID.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Specifies the first group of 4 hexadecimal digits.\n@return ","static":false,"name":"getData2","comment":"Specifies the first group of 4 hexadecimal digits.","params":[],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"Specifies the second group of 4 hexadecimal digits.\n@return ","static":false,"name":"getData3","comment":"Specifies the second group of 4 hexadecimal digits.","params":[],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"Array of 8 bytes.\n The first 2 bytes contain the third group of 4 hexadecimal digits.\n The remaining 6 bytes contain the final 12 hexadecimal digits.\n@return ","static":false,"name":"getData4","comment":"Array of 8 bytes.\n The first 2 bytes contain the third group of 4 hexadecimal digits.\n The remaining 6 bytes contain the final 12 hexadecimal digits.","params":[],"throws":[],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"GUID","comment":"GUIDs identify objects such as interfaces, manager entry-point vectors (EPVs), \n and class objects. A GUID is a 128-bit value consisting of one group \n of 8 hexadecimal digits, followed by three groups of 4 hexadecimal \n digits each, followed by one group of 12 hexadecimal digits. The \n following example shows the groupings of hexadecimal digits in a GUID.\n \n 6B29FC40-CA47-1067-B31D-00DD010662DA\n \n \n typedef struct _GUID {\n \t\tDWORD Data1;\n \t\tWORD Data2;\n \t\tWORD Data3;\n \t\tBYTE Data4[8];\n } GUID;\n \n Data1 - Specifies the first 8 hexadecimal digits of the GUID. \n Data2 - Specifies the first group of 4 hexadecimal digits.\n Data3 - Specifies the second group of 4 hexadecimal digits.\n Data4 - Array of 8 bytes.\n         The first 2 bytes contain the third group of 4 hexadecimal digits.\n         The remaining 6 bytes contain the final 12 hexadecimal digits.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"SIZEOF","comment":"","type_short":"int","constant_value":"16"},{"type_long":"int","javadoc":"","static":false,"name":"data1","comment":"","type_short":"int","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"data2","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"data3","comment":"","type_short":"short","constant_value":null},{"type_long":"byte[]","javadoc":"","static":false,"name":"data4","comment":"","type_short":"byte[]","constant_value":null}]}
