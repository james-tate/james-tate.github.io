{"implements":[],"javadoc":"An abstract class that each RTTI data type should extend to get common functionality.","static":false,"extends":"ghidra.program.model.data.DynamicDataType","methods":[{"javadoc":"Creates an RTTI data type.\n@param name the name of the data type.\n@param dtm the data type manager for this data type.","static":false,"name":"<init>","comment":"Creates an RTTI data type.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the data type.","type_short":"String"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"the data type manager for this data type.","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determines if the data type is valid for placing at the indicated address in the program.\n@param program the program\n@param address the address\n@param overwriteInstructions true indicates that existing instructions can be overwritten \n by this data type.\n@param overwriteDefinedData true indicates that existing defined data can be overwritten \n by this data type.\n@return true if this data type can be laid down at the specified address.\n@see #isValid(Program program, Address address, DataValidationOptions validationOptions)","static":false,"name":"isValid","comment":"Determines if the data type is valid for placing at the indicated address in the program.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"startAddress","comment":"","type_short":"Address"},{"type_long":"boolean","name":"overwriteInstructions","comment":"true indicates that existing instructions can be overwritten \n by this data type.","type_short":"boolean"},{"type_long":"boolean","name":"overwriteDefinedData","comment":"true indicates that existing defined data can be overwritten \n by this data type.","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"true if this data type can be laid down at the specified address.","type_short":"boolean"}},{"javadoc":"Creates a DataValidationOptions object with the indicated settings for instructions \n and defined data. Other validation options will be set to the default values.\n@param overwriteInstructions true indicates it is valid to overwrite instructions\n@param overwriteDefinedData true indicates it is valid to overwrite defined data\n@return the DataValidationOptions object","static":false,"name":"convertValidationOptions","comment":"Creates a DataValidationOptions object with the indicated settings for instructions \n and defined data. Other validation options will be set to the default values.","params":[{"type_long":"boolean","name":"overwriteInstructions","comment":"true indicates it is valid to overwrite instructions","type_short":"boolean"},{"type_long":"boolean","name":"overwriteDefinedData","comment":"true indicates it is valid to overwrite defined data","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.app.util.datatype.microsoft.DataValidationOptions","comment":"the DataValidationOptions object","type_short":"DataValidationOptions"}},{"javadoc":"Determines if the data type is valid for placing at the indicated address in the program.\n@param program the program\n@param address the address where the validated data type will be used to create data\n@param validationOptions options indicating how to perform the validation\n@return true if this data type can be laid down at the specified address","static":false,"name":"isValid","comment":"Determines if the data type is valid for placing at the indicated address in the program.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address where the validated data type will be used to create data","type_short":"Address"},{"type_long":"ghidra.app.util.datatype.microsoft.DataValidationOptions","name":"validationOptions","comment":"options indicating how to perform the validation","type_short":"DataValidationOptions"}],"throws":[],"return":{"type_long":"boolean","comment":"true if this data type can be laid down at the specified address","type_short":"boolean"}},{"javadoc":"Determines if data is already defined between the start and end address.\n@param listing the program listing where the data type is to be placed.\n@param startAddress the start address of the range to check.\n@param endAddress the end address of the range to check.\n@return true if there is already defined data in the range from the start to end address.","static":false,"name":"containsDefinedData","comment":"Determines if data is already defined between the start and end address.","params":[{"type_long":"ghidra.program.model.listing.Listing","name":"listing","comment":"the program listing where the data type is to be placed.","type_short":"Listing"},{"type_long":"ghidra.program.model.address.Address","name":"startAddress","comment":"the start address of the range to check.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"endAddress","comment":"the end address of the range to check.","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if there is already defined data in the range from the start to end address.","type_short":"boolean"}},{"javadoc":"Determines if an instruction is already defined between the start and end address.\n@param listing the program listing where the data type is to be placed.\n@param startAddress the start address of the range to check.\n@param endAddress the end address of the range to check.\n@return true if there is already an instruction in the range from the start to end address.","static":false,"name":"containsInstruction","comment":"Determines if an instruction is already defined between the start and end address.","params":[{"type_long":"ghidra.program.model.listing.Listing","name":"listing","comment":"the program listing where the data type is to be placed.","type_short":"Listing"},{"type_long":"ghidra.program.model.address.Address","name":"startAddress","comment":"the start address of the range to check.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"endAddress","comment":"the end address of the range to check.","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if there is already an instruction in the range from the start to end address.","type_short":"boolean"}}],"name":"RTTIDataType","comment":"An abstract class that each RTTI data type should extend to get common functionality.","fields":[]}
