{"implements":["ghidra.app.util.bin.StructConverter"],"javadoc":"See Apple's -- PEFBinaryFormat\n <pre>\n struct PEFSectionHeader {\n     SInt32   nameOffset;             \/\/ Offset of name within the section name table, -1 => none.\n     UInt32   defaultAddress;         \/\/ Default address, affects relocations.\n     UInt32   totalLength;            \/\/ Fully expanded size in bytes of the section contents.\n     UInt32   unpackedLength;         \/\/ Size in bytes of the \"initialized\" part of the contents.\n     UInt32   containerLength;        \/\/ Size in bytes of the raw data in the container.\n     UInt32   containerOffset;        \/\/ Offset of section's raw data.\n     UInt8    sectionKind;            \/\/ Kind of section contents\/usage.\n     UInt8    shareKind;              \/\/ Sharing level, if a writeable section.\n     UInt8    alignment;              \/\/ Preferred alignment, expressed as log 2.\n     UInt8    reservedA;              \/\/ Reserved, must be zero.\n };\n <\/pre>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"","type_short":"BinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"The offset from the start of the section name table\n to the name of this section.\n A value of -1 indicates an unnamed section.\n@return the offset from the start of the section name table","static":false,"name":"getNameOffset","comment":"The offset from the start of the section name table\n to the name of this section.\n A value of -1 indicates an unnamed section.","params":[],"throws":[],"return":{"type_long":"int","comment":"the offset from the start of the section name table","type_short":"int"}},{"javadoc":"Returns the name of this section.\n@return the name of this section","static":false,"name":"getName","comment":"Returns the name of this section.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the name of this section","type_short":"String"}},{"javadoc":"Returns an input stream to underlying bytes of this section.\n@return an input stream to underlying bytes of this section\n@throws IOException if an i\/o error occurs.","static":false,"name":"getData","comment":"Returns an input stream to underlying bytes of this section.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if an i\/o error occurs.","type_short":"IOException"}],"return":{"type_long":"java.io.InputStream","comment":"an input stream to underlying bytes of this section","type_short":"InputStream"}},{"javadoc":"Unpack the data in a packed section.\n Calling this method is only valid on a packed section.\n@param monitor the task monitor\n@return the unpacked data\n@throws IOException if an i\/o error occurs or the section is not packed.","static":false,"name":"getUnpackedData","comment":"Unpack the data in a packed section.\n Calling this method is only valid on a packed section.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"if an i\/o error occurs or the section is not packed.","type_short":"IOException"}],"return":{"type_long":"byte[]","comment":"the unpacked data","type_short":"byte[]"}},{"javadoc":"","static":false,"name":"unpackNextValue","comment":"","params":[{"type_long":"java.io.InputStream","name":"input","comment":"","type_short":"InputStream"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the preferred address of this section.\n@return the preferred address of this section","static":false,"name":"getDefaultAddress","comment":"Returns the preferred address of this section.","params":[],"throws":[],"return":{"type_long":"int","comment":"the preferred address of this section","type_short":"int"}},{"javadoc":"","static":false,"name":"getTotalLength","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the size in bytes of the \"initialized\" part of the contents.\n@return the size in bytes of the \"initialized\" part of the contents","static":false,"name":"getUnpackedLength","comment":"Returns the size in bytes of the \"initialized\" part of the contents.","params":[],"throws":[],"return":{"type_long":"int","comment":"the size in bytes of the \"initialized\" part of the contents","type_short":"int"}},{"javadoc":"Returns the size in bytes of the raw data in the container.\n@return the size in bytes of the raw data in the container","static":false,"name":"getContainerLength","comment":"Returns the size in bytes of the raw data in the container.","params":[],"throws":[],"return":{"type_long":"int","comment":"the size in bytes of the raw data in the container","type_short":"int"}},{"javadoc":"","static":false,"name":"getContainerOffset","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getSectionKind","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pef.SectionKind","comment":"","type_short":"SectionKind"}},{"javadoc":"","static":false,"name":"getShareKind","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pef.SectionShareKind","comment":"","type_short":"SectionShareKind"}},{"javadoc":"","static":false,"name":"getAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"byte","comment":"","type_short":"byte"}},{"javadoc":"Reserved!\n@return Reserved!","static":false,"name":"getReservedA","comment":"Reserved!","params":[],"throws":[],"return":{"type_long":"byte","comment":"Reserved!","type_short":"byte"}},{"javadoc":"Returns true if this section has read permissions.\n@return true if this section has read permissions","static":false,"name":"isRead","comment":"Returns true if this section has read permissions.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this section has read permissions","type_short":"boolean"}},{"javadoc":"Returns true if this section has write permissions.\n@return true if this section has write permissions","static":false,"name":"isWrite","comment":"Returns true if this section has write permissions.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this section has write permissions","type_short":"boolean"}},{"javadoc":"Returns true if this section has execute permissions.\n@return true if this section has execute permissions","static":false,"name":"isExecute","comment":"Returns true if this section has execute permissions.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this section has execute permissions","type_short":"boolean"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}}],"name":"SectionHeader","comment":"See Apple's -- PEFBinaryFormat\n \n struct PEFSectionHeader {\n     SInt32   nameOffset;             \/\/ Offset of name within the section name table, -1 = none.\n     UInt32   defaultAddress;         \/\/ Default address, affects relocations.\n     UInt32   totalLength;            \/\/ Fully expanded size in bytes of the section contents.\n     UInt32   unpackedLength;         \/\/ Size in bytes of the \"initialized\" part of the contents.\n     UInt32   containerLength;        \/\/ Size in bytes of the raw data in the container.\n     UInt32   containerOffset;        \/\/ Offset of section's raw data.\n     UInt8    sectionKind;            \/\/ Kind of section contents\/usage.\n     UInt8    shareKind;              \/\/ Sharing level, if a writeable section.\n     UInt8    alignment;              \/\/ Preferred alignment, expressed as log 2.\n     UInt8    reservedA;              \/\/ Reserved, must be zero.\n };\n ","fields":[{"type_long":"int","javadoc":"","static":true,"name":"NO_NAME_OFFSET","comment":"","type_short":"int","constant_value":"-1"},{"type_long":"ghidra.app.util.bin.BinaryReader","javadoc":"","static":false,"name":"_reader","comment":"","type_short":"BinaryReader","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"_name","comment":"","type_short":"String","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"nameOffset","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"defaultAddress","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"totalLength","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"unpackedLength","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"containerLength","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"containerOffset","comment":"","type_short":"int","constant_value":null},{"type_long":"byte","javadoc":"","static":false,"name":"sectionKind","comment":"","type_short":"byte","constant_value":null},{"type_long":"byte","javadoc":"","static":false,"name":"shareKind","comment":"","type_short":"byte","constant_value":null},{"type_long":"byte","javadoc":"","static":false,"name":"alignment","comment":"","type_short":"byte","constant_value":null},{"type_long":"byte","javadoc":"","static":false,"name":"reservedA","comment":"","type_short":"byte","constant_value":null}]}
