{"implements":["ghidra.app.util.bin.StructConverter"],"javadoc":"Represents a mach_header structure.\n@see <a href=\"https:\/\/opensource.apple.com\/source\/xnu\/xnu-4570.71.2\/EXTERNAL_HEADERS\/mach-o\/loader.h.auto.html\">mach-o\/loader.h<\/a>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Assumes the MachHeader starts at index 0 in the ByteProvider.\n@param provider the ByteProvider\n@throws IOException if an I\/O error occurs while reading from the ByteProvider\n@throws MachException if an invalid MachHeader is detected","static":true,"name":"createMachHeader","comment":"Assumes the MachHeader starts at index 0 in the ByteProvider.","params":[{"type_long":"generic.continues.GenericFactory","name":"factory","comment":"","type_short":"GenericFactory"},{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"the ByteProvider","type_short":"ByteProvider"}],"throws":[{"type_long":"java.io.IOException","comment":"if an I\/O error occurs while reading from the ByteProvider","type_short":"IOException"},{"type_long":"ghidra.app.util.bin.format.macho.MachException","comment":"if an invalid MachHeader is detected","type_short":"MachException"}],"return":{"type_long":"ghidra.app.util.bin.format.macho.MachHeader","comment":"","type_short":"MachHeader"}},{"javadoc":"Assumes the MachHeader starts at index <i>machHeaderStartIndexInProvider<\/i> in the ByteProvider.\n@param provider the ByteProvider\n@param machHeaderStartIndexInProvider the index into the ByteProvider where the MachHeader begins.\n@throws IOException if an I\/O error occurs while reading from the ByteProvider\n@throws MachException if an invalid MachHeader is detected","static":true,"name":"createMachHeader","comment":"Assumes the MachHeader starts at index machHeaderStartIndexInProvider in the ByteProvider.","params":[{"type_long":"generic.continues.GenericFactory","name":"factory","comment":"","type_short":"GenericFactory"},{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"the ByteProvider","type_short":"ByteProvider"},{"type_long":"long","name":"machHeaderStartIndexInProvider","comment":"the index into the ByteProvider where the MachHeader begins.","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if an I\/O error occurs while reading from the ByteProvider","type_short":"IOException"},{"type_long":"ghidra.app.util.bin.format.macho.MachException","comment":"if an invalid MachHeader is detected","type_short":"MachException"}],"return":{"type_long":"ghidra.app.util.bin.format.macho.MachHeader","comment":"","type_short":"MachHeader"}},{"javadoc":"Assumes the MachHeader starts at index <i>machHeaderStartIndexInProvider<\/i> in the ByteProvider.\n@param provider the ByteProvider\n@param machHeaderStartIndexInProvider the index into the ByteProvider where the MachHeader begins.\n@param isRemainingMachoRelativeToStartIndex TRUE if the rest of the macho uses relative indexing. This is common in UBI and kernel cache files.\n                                             FALSE if the rest of the file uses absolute indexing from 0. This is common in DYLD cache files.\n@throws IOException if an I\/O error occurs while reading from the ByteProvider\n@throws MachException if an invalid MachHeader is detected","static":true,"name":"createMachHeader","comment":"Assumes the MachHeader starts at index machHeaderStartIndexInProvider in the ByteProvider.","params":[{"type_long":"generic.continues.GenericFactory","name":"factory","comment":"","type_short":"GenericFactory"},{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"the ByteProvider","type_short":"ByteProvider"},{"type_long":"long","name":"machHeaderStartIndexInProvider","comment":"the index into the ByteProvider where the MachHeader begins.","type_short":"long"},{"type_long":"boolean","name":"isRemainingMachoRelativeToStartIndex","comment":"TRUE if the rest of the macho uses relative indexing. This is common in UBI and kernel cache files.\n                                             FALSE if the rest of the file uses absolute indexing from 0. This is common in DYLD cache files.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if an I\/O error occurs while reading from the ByteProvider","type_short":"IOException"},{"type_long":"ghidra.app.util.bin.format.macho.MachException","comment":"if an invalid MachHeader is detected","type_short":"MachException"}],"return":{"type_long":"ghidra.app.util.bin.format.macho.MachHeader","comment":"","type_short":"MachHeader"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initMachHeader","comment":"","params":[{"type_long":"generic.continues.GenericFactory","name":"factory","comment":"","type_short":"GenericFactory"},{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"","type_short":"ByteProvider"},{"type_long":"long","name":"machHeaderStartIndexInProvider","comment":"","type_short":"long"},{"type_long":"boolean","name":"isRemainingMachoRelativeToStartIndex","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.app.util.bin.format.macho.MachException","comment":"","type_short":"MachException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"parse","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.app.util.bin.format.macho.MachException","comment":"","type_short":"MachException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getMagic","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getCpuType","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getImageBase","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getCpuSubType","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getFileType","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getNumberOfCommands","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getSizeOfCommands","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getFlags","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getReserved","comment":"","params":[],"throws":[{"type_long":"ghidra.app.util.bin.format.macho.MachException","comment":"","type_short":"MachException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"getStartIndexInProvider","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"is32bit","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getAddressSize","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getAllSegments","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.bin.format.macho.commands.SegmentCommand>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getSegment","comment":"","params":[{"type_long":"java.lang.String","name":"segmentName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.macho.commands.SegmentCommand","comment":"","type_short":"SegmentCommand"}},{"javadoc":"","static":false,"name":"getSection","comment":"","params":[{"type_long":"java.lang.String","name":"segmentName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"sectionName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.macho.Section","comment":"","type_short":"Section"}},{"javadoc":"","static":false,"name":"getAllSections","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.bin.format.macho.Section>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getLoadCommands","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.bin.format.macho.commands.LoadCommand>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getLoadCommands","comment":"","params":[{"type_long":"java.lang.Class<T>","name":"classType","comment":"","type_short":"Class"}],"throws":[],"return":{"type_long":"java.util.List<T>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getFirstLoadCommand","comment":"","params":[{"type_long":"java.lang.Class<T>","name":"classType","comment":"","type_short":"Class"}],"throws":[],"return":{"type_long":"T","comment":"","type_short":"T"}},{"javadoc":"","static":false,"name":"isLittleEndian","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getDescription","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getDataStream","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.io.InputStream","comment":"","type_short":"InputStream"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"readMagic","comment":"","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"","type_short":"ByteProvider"},{"type_long":"long","name":"machHeaderStartIndexInProvider","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"MachHeader","comment":"Represents a mach_header structure.","fields":[{"type_long":"int","javadoc":"","static":false,"name":"magic","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"cpuType","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"cpuSubType","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"fileType","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"nCmds","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"sizeOfCmds","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"flags","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"reserved","comment":"","type_short":"int","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"_is32bit","comment":"","type_short":"boolean","constant_value":null},{"type_long":"java.util.List<ghidra.app.util.bin.format.macho.commands.LoadCommand>","javadoc":"","static":false,"name":"_commands","comment":"","type_short":"List","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"_commandIndex","comment":"","type_short":"long","constant_value":null},{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","javadoc":"","static":false,"name":"_reader","comment":"","type_short":"FactoryBundledWithBinaryReader","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"_machHeaderStartIndexInProvider","comment":"","type_short":"long","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"_parsed","comment":"","type_short":"boolean","constant_value":null}]}
