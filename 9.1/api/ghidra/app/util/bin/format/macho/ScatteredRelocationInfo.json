{"implements":[],"javadoc":"Represents a scattered_relocation_info structure.\n@see <a href=\"https:\/\/opensource.apple.com\/source\/xnu\/xnu-4570.71.2\/EXTERNAL_HEADERS\/mach-o\/reloc.h.auto.html\">mach-o\/reloc.h<\/a>","static":false,"extends":"ghidra.app.util.bin.format.macho.RelocationInfo","methods":[{"javadoc":"","static":true,"name":"createScatteredRelocationInfo","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.macho.ScatteredRelocationInfo","comment":"","type_short":"ScatteredRelocationInfo"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initScatteredRelocationInfo","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true this is a scattered relocation.\n@return true this is a scattered relocation","static":false,"name":"isScattered","comment":"Returns true this is a scattered relocation.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true this is a scattered relocation","type_short":"boolean"}},{"javadoc":"The address of the relocatable expression for the item in the file that\n needs to be updated if the address is changed. For relocatable\n expressions with the difference of two section addresses, the address\n from which to subtract (in mathematical terms, the minuend) is\n contained in the first relocation entry and the address to subtract (the\n subtrahend) is contained in the second relocation entry.\n@return ","static":false,"name":"getValue","comment":"The address of the relocatable expression for the item in the file that\n needs to be updated if the address is changed. For relocatable\n expressions with the difference of two section addresses, the address\n from which to subtract (in mathematical terms, the minuend) is\n contained in the first relocation entry and the address to subtract (the\n subtrahend) is contained in the second relocation entry.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"toValues","comment":"","params":[],"throws":[],"return":{"type_long":"long[]","comment":"","type_short":"long[]"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}}],"name":"ScatteredRelocationInfo","comment":"Represents a scattered_relocation_info structure.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"R_SCATTERED","comment":"","type_short":"int","constant_value":"-2147483648"},{"type_long":"int","javadoc":"","static":false,"name":"r_scattered","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"r_value","comment":"","type_short":"int","constant_value":null}]}
