{"implements":[],"javadoc":"A class to represent a new-executable segment.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"short","name":"segmentAlignment","comment":"","type_short":"short"},{"type_long":"int","name":"segmentID","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns segment ID.\n@return segment ID","static":false,"name":"getSegmentID","comment":"Returns segment ID.","params":[],"throws":[],"return":{"type_long":"int","comment":"segment ID","type_short":"int"}},{"javadoc":"Returns true if the segment should operate in 32 bit mode.\n@return true if the segment should operate in 32 bit mode","static":false,"name":"is32bit","comment":"Returns true if the segment should operate in 32 bit mode.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the segment should operate in 32 bit mode","type_short":"boolean"}},{"javadoc":"Returns true if this is a code segment.\n@return true if this is a code segment","static":false,"name":"isCode","comment":"Returns true if this is a code segment.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this is a code segment","type_short":"boolean"}},{"javadoc":"Returns true if this is a data segment.\n@return true if this is a data segment","static":false,"name":"isData","comment":"Returns true if this is a data segment.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this is a data segment","type_short":"boolean"}},{"javadoc":"Returns true if this segment has relocations.\n@return true if this segment has relocations","static":false,"name":"hasRelocation","comment":"Returns true if this segment has relocations.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this segment has relocations","type_short":"boolean"}},{"javadoc":"Returns true if this segment is loader allocated.\n@return true if this segment is loader allocated","static":false,"name":"isLoaderAllocated","comment":"Returns true if this segment is loader allocated.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this segment is loader allocated","type_short":"boolean"}},{"javadoc":"Returns true if this segment is loaded.\n@return true if this segment is loaded","static":false,"name":"isLoaded","comment":"Returns true if this segment is loaded.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this segment is loaded","type_short":"boolean"}},{"javadoc":"Returns true if this segment is moveable.\n@return true if this segment is moveable","static":false,"name":"isMoveable","comment":"Returns true if this segment is moveable.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this segment is moveable","type_short":"boolean"}},{"javadoc":"Returns true if this segment is preloaded.\n@return true if this segment is preloaded","static":false,"name":"isPreload","comment":"Returns true if this segment is preloaded.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this segment is preloaded","type_short":"boolean"}},{"javadoc":"Returns true if this segment is pure.\n@return true if this segment is pure","static":false,"name":"isPure","comment":"Returns true if this segment is pure.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this segment is pure","type_short":"boolean"}},{"javadoc":"Returns true if this segment is read-only.\n@return true if this segment is read-only","static":false,"name":"isReadOnly","comment":"Returns true if this segment is read-only.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this segment is read-only","type_short":"boolean"}},{"javadoc":"Returns true if this segment is execute-only.\n@return true if this segment is execute-only","static":false,"name":"isExecuteOnly","comment":"Returns true if this segment is execute-only.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this segment is execute-only","type_short":"boolean"}},{"javadoc":"Returns true if this segment is discardable.\n@return true if this segment is discardable","static":false,"name":"isDiscardable","comment":"Returns true if this segment is discardable.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this segment is discardable","type_short":"boolean"}},{"javadoc":"Returns the flag word of this segment.\n@return the flag word of this segment","static":false,"name":"getFlagword","comment":"Returns the flag word of this segment.","params":[],"throws":[],"return":{"type_long":"short","comment":"the flag word of this segment","type_short":"short"}},{"javadoc":"Returns the length of this segment.\n@return the length of this segment","static":false,"name":"getLength","comment":"Returns the length of this segment.","params":[],"throws":[],"return":{"type_long":"short","comment":"the length of this segment","type_short":"short"}},{"javadoc":"Returns the minimum allocation size of this segment.\n@return the minimum allocation size of this segment","static":false,"name":"getMinAllocSize","comment":"Returns the minimum allocation size of this segment.","params":[],"throws":[],"return":{"type_long":"short","comment":"the minimum allocation size of this segment","type_short":"short"}},{"javadoc":"Returns the offset to the contents of this segment. \n NOTE: This value needs to be shift aligned.\n@return the offset to the contents of this segment","static":false,"name":"getOffset","comment":"Returns the offset to the contents of this segment. \n NOTE: This value needs to be shift aligned.","params":[],"throws":[],"return":{"type_long":"short","comment":"the offset to the contents of this segment","type_short":"short"}},{"javadoc":"Returns the actual (shifted) offset to the contents.\n@return the actual (shifted) offset to the contents","static":false,"name":"getOffsetShiftAligned","comment":"Returns the actual (shifted) offset to the contents.","params":[],"throws":[],"return":{"type_long":"int","comment":"the actual (shifted) offset to the contents","type_short":"int"}},{"javadoc":"Returns an array of the relocations defined for this segment.\n@return an array of the relocations defined for this segment","static":false,"name":"getRelocations","comment":"Returns an array of the relocations defined for this segment.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.ne.SegmentRelocation[]","comment":"an array of the relocations defined for this segment","type_short":"ghidra.app.util.bin.format.ne.SegmentRelocation[]"}},{"javadoc":"Returns the bytes the comprise this segment.\n The size of the byte array is MAX(length,minalloc).\n@return the bytes the comprise this segment","static":false,"name":"getBytes","comment":"Returns the bytes the comprise this segment.\n The size of the byte array is MAX(length,minalloc).","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"byte[]","comment":"the bytes the comprise this segment","type_short":"byte[]"}}],"name":"Segment","comment":"A class to represent a new-executable segment.","fields":[{"type_long":"short","javadoc":"data segment type.","static":true,"name":"FLAG_DATA","comment":"data segment type.","type_short":"short","constant_value":"1"},{"type_long":"short","javadoc":"loaded has allocated memory.","static":true,"name":"FLAG_ALLOC","comment":"loaded has allocated memory.","type_short":"short","constant_value":"2"},{"type_long":"short","javadoc":"segment is loaded.","static":true,"name":"FLAG_LOADED","comment":"segment is loaded.","type_short":"short","constant_value":"4"},{"type_long":"short","javadoc":"segment not fixed.","static":true,"name":"FLAG_MOVEABLE","comment":"segment not fixed.","type_short":"short","constant_value":"16"},{"type_long":"short","javadoc":"pure (shareable) or impure (unshareable).","static":true,"name":"FLAG_PURE","comment":"pure (shareable) or impure (unshareable).","type_short":"short","constant_value":"32"},{"type_long":"short","javadoc":"preload or load-on-call.","static":true,"name":"FLAG_PRELOAD","comment":"preload or load-on-call.","type_short":"short","constant_value":"64"},{"type_long":"short","javadoc":"if code, segment is execute-only.","static":true,"name":"FLAG_EXE_ONLY","comment":"if code, segment is execute-only.","type_short":"short","constant_value":"128"},{"type_long":"short","javadoc":"if data, segment is read-only.","static":true,"name":"FLAG_READ_ONLY","comment":"if data, segment is read-only.","type_short":"short","constant_value":"128"},{"type_long":"short","javadoc":"segment has relocation records.","static":true,"name":"FLAG_RELOC_INFO","comment":"segment has relocation records.","type_short":"short","constant_value":"256"},{"type_long":"short","javadoc":"segment is discardable.","static":true,"name":"FLAG_DISCARD","comment":"segment is discardable.","type_short":"short","constant_value":"4096"},{"type_long":"short","javadoc":"segment is 32 bit","static":true,"name":"FLAG_32BIT","comment":"segment is 32 bit","type_short":"short","constant_value":"8192"},{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","javadoc":"","static":false,"name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"segmentID","comment":"","type_short":"int","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"offset","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"length","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"flagword","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"minAllocSize","comment":"","type_short":"short","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"offsetAlign","comment":"","type_short":"int","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"nRelocations","comment":"","type_short":"short","constant_value":null},{"type_long":"ghidra.app.util.bin.format.ne.SegmentRelocation[]","javadoc":"","static":false,"name":"relocations","comment":"","type_short":"ghidra.app.util.bin.format.ne.SegmentRelocation[]","constant_value":null}]}
