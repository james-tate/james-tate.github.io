{"implements":[],"javadoc":"A class to represent a new-executable segment relocation.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constucts a new segment relocation.\n@param reader the binary reader","static":false,"name":"<init>","comment":"Constucts a new segment relocation.","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"the binary reader","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"segment","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"byte","name":"type","comment":"","type_short":"byte"},{"type_long":"long[]","name":"values","comment":"","type_short":"long[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if this relocation is an internal reference.\n@return true if this relocation is an internal reference","static":false,"name":"isInternalRef","comment":"Returns true if this relocation is an internal reference.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this relocation is an internal reference","type_short":"boolean"}},{"javadoc":"Returns true if this relocation is an import by ordinal.\n@return true if this relocation is an import by ordinal","static":false,"name":"isImportOrdinal","comment":"Returns true if this relocation is an import by ordinal.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this relocation is an import by ordinal","type_short":"boolean"}},{"javadoc":"Returns true if this relocation is an import by name.\n@return true if this relocation is an import by name","static":false,"name":"isImportName","comment":"Returns true if this relocation is an import by name.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this relocation is an import by name","type_short":"boolean"}},{"javadoc":"Returns true if this relocation is an operating system fixup.\n@return true if this relocation is an operating system fixup","static":false,"name":"isOpSysFixup","comment":"Returns true if this relocation is an operating system fixup.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this relocation is an operating system fixup","type_short":"boolean"}},{"javadoc":"Returns true if this relocation is additive.\n If this bit is set, then add relocation to existing value.\n Otherwise overwrite the existing value.\n@return true if this relocation is additive.","static":false,"name":"isAdditive","comment":"Returns true if this relocation is additive.\n If this bit is set, then add relocation to existing value.\n Otherwise overwrite the existing value.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this relocation is additive.","type_short":"boolean"}},{"javadoc":"Returns the relocation type.\n@return the relocation type","static":false,"name":"getType","comment":"Returns the relocation type.","params":[],"throws":[],"return":{"type_long":"byte","comment":"the relocation type","type_short":"byte"}},{"javadoc":"Returns the relocation flags.\n@return the relocation flags","static":false,"name":"getFlagByte","comment":"Returns the relocation flags.","params":[],"throws":[],"return":{"type_long":"byte","comment":"the relocation flags","type_short":"byte"}},{"javadoc":"Returns the relocation offset.\n@return the relocation offset","static":false,"name":"getOffset","comment":"Returns the relocation offset.","params":[],"throws":[],"return":{"type_long":"short","comment":"the relocation offset","type_short":"short"}},{"javadoc":"Returns the relocation target segment.\n@return the relocation target segment","static":false,"name":"getTargetSegment","comment":"Returns the relocation target segment.","params":[],"throws":[],"return":{"type_long":"short","comment":"the relocation target segment","type_short":"short"}},{"javadoc":"Returns the relocation target offset.\n@return the relocation target offset","static":false,"name":"getTargetOffset","comment":"Returns the relocation target offset.","params":[],"throws":[],"return":{"type_long":"short","comment":"the relocation target offset","type_short":"short"}},{"javadoc":"Returns values required to reconstruct this object.\n@return values required to reconstruct this object","static":false,"name":"getValues","comment":"Returns values required to reconstruct this object.","params":[],"throws":[],"return":{"type_long":"long[]","comment":"values required to reconstruct this object","type_short":"long[]"}}],"name":"SegmentRelocation","comment":"A class to represent a new-executable segment relocation.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"VALUES_SIZE","comment":"","type_short":"int","constant_value":"5"},{"type_long":"short","javadoc":"Moveable relocation.","static":true,"name":"MOVEABLE","comment":"Moveable relocation.","type_short":"short","constant_value":"255"},{"type_long":"byte","javadoc":"A mask indicating that the low-order nibble is the type.","static":true,"name":"TYPE_MASK","comment":"A mask indicating that the low-order nibble is the type.","type_short":"byte","constant_value":"15"},{"type_long":"byte","javadoc":"low byte at the specified address.","static":true,"name":"TYPE_LO_BYTE","comment":"low byte at the specified address.","type_short":"byte","constant_value":"0"},{"type_long":"byte","javadoc":"16-bit selector.","static":true,"name":"TYPE_SEGMENT","comment":"16-bit selector.","type_short":"byte","constant_value":"2"},{"type_long":"byte","javadoc":"32-bit pointer.","static":true,"name":"TYPE_FAR_ADDR","comment":"32-bit pointer.","type_short":"byte","constant_value":"3"},{"type_long":"byte","javadoc":"16-bit pointer.","static":true,"name":"TYPE_OFFSET","comment":"16-bit pointer.","type_short":"byte","constant_value":"5"},{"type_long":"byte","javadoc":"48-bit pointer.","static":true,"name":"TYPE_FAR_ADDR_48","comment":"48-bit pointer.","type_short":"byte","constant_value":"12"},{"type_long":"byte","javadoc":"32-bit offset.","static":true,"name":"TYPE_OFFSET_32","comment":"32-bit offset.","type_short":"byte","constant_value":"13"},{"type_long":"java.lang.String[]","javadoc":"The names of the available relocations.","static":true,"name":"TYPE_STRINGS","comment":"The names of the available relocations.","type_short":"java.lang.String[]","constant_value":null},{"type_long":"int[]","javadoc":"The number of bytes required to perform relocation","static":true,"name":"TYPE_LENGTHS","comment":"The number of bytes required to perform relocation","type_short":"int[]","constant_value":null},{"type_long":"byte","javadoc":"A mask indicating that the low-order two-bits is the type.","static":true,"name":"FLAG_TARGET_MASK","comment":"A mask indicating that the low-order two-bits is the type.","type_short":"byte","constant_value":"3"},{"type_long":"byte","javadoc":"Internal reference relocation.","static":true,"name":"FLAG_INTERNAL_REF","comment":"Internal reference relocation.","type_short":"byte","constant_value":"0"},{"type_long":"byte","javadoc":"Import ordinal relocation.","static":true,"name":"FLAG_IMPORT_ORDINAL","comment":"Import ordinal relocation.","type_short":"byte","constant_value":"1"},{"type_long":"byte","javadoc":"Import name relocation.","static":true,"name":"FLAG_IMPORT_NAME","comment":"Import name relocation.","type_short":"byte","constant_value":"2"},{"type_long":"byte","javadoc":"Operating system fixup relocation.","static":true,"name":"FLAG_OS_FIXUP","comment":"Operating system fixup relocation.","type_short":"byte","constant_value":"3"},{"type_long":"byte","javadoc":"Additive relocaiton.","static":true,"name":"FLAG_ADDITIVE","comment":"Additive relocaiton.","type_short":"byte","constant_value":"4"},{"type_long":"int","javadoc":"","static":false,"name":"segment","comment":"","type_short":"int","constant_value":null},{"type_long":"byte","javadoc":"","static":false,"name":"type","comment":"","type_short":"byte","constant_value":null},{"type_long":"byte","javadoc":"","static":false,"name":"flagbyte","comment":"","type_short":"byte","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"offset","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"targetSegment","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"targetOffset","comment":"","type_short":"short","constant_value":null}]}
