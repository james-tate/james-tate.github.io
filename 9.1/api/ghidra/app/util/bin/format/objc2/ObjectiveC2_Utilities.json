{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Reads the next index value. If is32bit is true, then 4 bytes\n will be read to form index. Otherwise, 8 bytes will be read to form index.","static":true,"name":"readNextIndex","comment":"Reads the next index value. If is32bit is true, then 4 bytes\n will be read to form index. Otherwise, 8 bytes will be read to form index.","params":[{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"","type_short":"BinaryReader"},{"type_long":"boolean","name":"is32bit","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Returns the name space inside the given parent name space.\n If it does not exist, then create it and return it.","static":true,"name":"getNamespace","comment":"Returns the name space inside the given parent name space.\n If it does not exist, then create it and return it.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"parentNamespace","comment":"","type_short":"Namespace"},{"type_long":"java.lang.String","name":"namespaceName","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.symbol.Namespace","comment":"","type_short":"Namespace"}},{"javadoc":"Returns the class inside the given parent name space.\n If it does not exist, then create it and return it.","static":true,"name":"getClassNamespace","comment":"Returns the class inside the given parent name space.\n If it does not exist, then create it and return it.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"parentNamespace","comment":"","type_short":"Namespace"},{"type_long":"java.lang.String","name":"namespaceName","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.symbol.Namespace","comment":"","type_short":"Namespace"}},{"javadoc":"Creates a symbol with the given name at the specified address.\n The symbol will be created in a name space with the name of\n the memory block that contains the address.","static":true,"name":"createSymbolUsingMemoryBlockAsNamespace","comment":"Creates a symbol with the given name at the specified address.\n The symbol will be created in a name space with the name of\n the memory block that contains the address.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"","type_short":"Symbol"}}],"name":"ObjectiveC2_Utilities","comment":"","fields":[]}
