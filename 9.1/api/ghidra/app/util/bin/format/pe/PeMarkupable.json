{"implements":[],"javadoc":"Common interface for standardizing the markup of a PE structure.","static":false,"methods":[{"javadoc":"Marks up a PE structure.\n@param program The program to markup.\n@param isBinary True if the program is binary; otherwise, false.\n@param monitor The monitor.\n@param log The log.\n@param ntHeader The PE's NT Header structure.\n@throws DuplicateNameException\n@throws CodeUnitInsertionException\n@throws IOException\n@throws MemoryAccessException","static":false,"name":"markup","comment":"Marks up a PE structure.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The program to markup.","type_short":"Program"},{"type_long":"boolean","name":"isBinary","comment":"True if the program is binary; otherwise, false.","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"The monitor.","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"The log.","type_short":"MessageLog"},{"type_long":"ghidra.app.util.bin.format.pe.NTHeader","name":"ntHeader","comment":"The PE's NT Header structure.","type_short":"NTHeader"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.program.model.util.CodeUnitInsertionException","comment":"","type_short":"CodeUnitInsertionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"PeMarkupable","comment":"Common interface for standardizing the markup of a PE structure.","fields":[]}
