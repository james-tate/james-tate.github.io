{"implements":["ghidra.app.util.bin.StructConverter","ghidra.app.util.bin.ByteArrayConverter"],"javadoc":"A class to represent the Debug Directory data structure.\n <br>\n <pre>\n typedef struct _IMAGE_DEBUG_DIRECTORY {\n     DWORD   Characteristics;\n     DWORD   TimeDateStamp;\n     WORD    MajorVersion;\n     WORD    MinorVersion;\n     DWORD   Type;\n     DWORD   SizeOfData;\n     DWORD   AddressOfRawData;\n     DWORD   PointerToRawData;\n } IMAGE_DEBUG_DIRECTORY, *PIMAGE_DEBUG_DIRECTORY;\n <\/pre>\n <br>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constuctor.\n@param reader the binary reader\n@param index the index where this debug directory begins\n@param ntHeader","static":true,"name":"createDebugDirectory","comment":"Constuctor.","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"the binary reader","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"long","name":"index","comment":"the index where this debug directory begins","type_short":"long"},{"type_long":"ghidra.app.util.bin.format.pe.OffsetValidator","name":"validator","comment":"","type_short":"OffsetValidator"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.DebugDirectory","comment":"","type_short":"DebugDirectory"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initDebugDirectory","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"long","name":"index","comment":"","type_short":"long"},{"type_long":"ghidra.app.util.bin.format.pe.OffsetValidator","name":"validator","comment":"","type_short":"OffsetValidator"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Reserved.\n@return reserved value","static":false,"name":"getCharacteristics","comment":"Reserved.","params":[],"throws":[],"return":{"type_long":"int","comment":"reserved value","type_short":"int"}},{"javadoc":"Returns the time and date the debugging information was created.\n@return the time and date the debugging information was created","static":false,"name":"getTimeDateStamp","comment":"Returns the time and date the debugging information was created.","params":[],"throws":[],"return":{"type_long":"int","comment":"the time and date the debugging information was created","type_short":"int"}},{"javadoc":"Returns the major version number of the debugging information format.\n@return the major version number of the debugging information format","static":false,"name":"getMajorVersion","comment":"Returns the major version number of the debugging information format.","params":[],"throws":[],"return":{"type_long":"int","comment":"the major version number of the debugging information format","type_short":"int"}},{"javadoc":"Returns the minor version number of the debugging information format.\n@return the minor version number of the debugging information format","static":false,"name":"getMinorVersion","comment":"Returns the minor version number of the debugging information format.","params":[],"throws":[],"return":{"type_long":"int","comment":"the minor version number of the debugging information format","type_short":"int"}},{"javadoc":"Returns the format of the debugging information.\n@return the format of the debugging information","static":false,"name":"getType","comment":"Returns the format of the debugging information.","params":[],"throws":[],"return":{"type_long":"int","comment":"the format of the debugging information","type_short":"int"}},{"javadoc":"Returns the size of the debugging information, in bytes. \n This value does not include the debug directory itself.\n@return the size of the debugging information, in bytes","static":false,"name":"getSizeOfData","comment":"Returns the size of the debugging information, in bytes. \n This value does not include the debug directory itself.","params":[],"throws":[],"return":{"type_long":"int","comment":"the size of the debugging information, in bytes","type_short":"int"}},{"javadoc":"Returns the address of the debugging information when the image is loaded, relative to the image base.\n@return the address of the debugging information when the image is loaded, relative to the image base","static":false,"name":"getAddressOfRawData","comment":"Returns the address of the debugging information when the image is loaded, relative to the image base.","params":[],"throws":[],"return":{"type_long":"int","comment":"the address of the debugging information when the image is loaded, relative to the image base","type_short":"int"}},{"javadoc":"Returns the file pointer to the debugging information.\n@return the file pointer to the debugging information","static":false,"name":"getPointerToRawData","comment":"Returns the file pointer to the debugging information.","params":[],"throws":[],"return":{"type_long":"int","comment":"the file pointer to the debugging information","type_short":"int"}},{"javadoc":"Returns a description of this debug directory.\n@return a description of this debug directory","static":false,"name":"getDescription","comment":"Returns a description of this debug directory.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"a description of this debug directory","type_short":"String"}},{"javadoc":"Sets the description of this debug directory.\n@param desc the description of this debug directory","static":false,"name":"setDescription","comment":"Sets the description of this debug directory.","params":[{"type_long":"java.lang.String","name":"desc","comment":"the description of this debug directory","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.app.util.bin.StructConverter#toDataType()","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"writeHeader","comment":"","params":[{"type_long":"java.io.RandomAccessFile","name":"raf","comment":"","type_short":"RandomAccessFile"},{"type_long":"ghidra.util.DataConverter","name":"dc","comment":"","type_short":"DataConverter"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toBytes","comment":"","params":[{"type_long":"ghidra.util.DataConverter","name":"dc","comment":"","type_short":"DataConverter"}],"throws":[],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}},{"javadoc":"","static":false,"name":"updatePointers","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"int","name":"postOffset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DebugDirectory","comment":"A class to represent the Debug Directory data structure.\n \n \n typedef struct _IMAGE_DEBUG_DIRECTORY {\n     DWORD   Characteristics;\n     DWORD   TimeDateStamp;\n     WORD    MajorVersion;\n     WORD    MinorVersion;\n     DWORD   Type;\n     DWORD   SizeOfData;\n     DWORD   AddressOfRawData;\n     DWORD   PointerToRawData;\n } IMAGE_DEBUG_DIRECTORY, *PIMAGE_DEBUG_DIRECTORY;\n \n ","fields":[{"type_long":"java.lang.String","javadoc":"The name to use when converting into a structure data type.","static":true,"name":"NAME","comment":"The name to use when converting into a structure data type.","type_short":"String","constant_value":"\"IMAGE_DEBUG_DIRECTORY\""},{"type_long":"int","javadoc":"The size of the <code>IMAGE_DEBUG_DIRECTORY<\/code>, in bytes.","static":true,"name":"IMAGE_SIZEOF_DEBUG_DIRECTORY","comment":"The size of the IMAGE_DEBUG_DIRECTORY, in bytes.","type_short":"int","constant_value":"28"},{"type_long":"int","javadoc":"","static":false,"name":"characteristics","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"timeDateStamp","comment":"","type_short":"int","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"majorVersion","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"minorVersion","comment":"","type_short":"short","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"type","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"sizeOfData","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"addressOfRawData","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"pointerToRawData","comment":"","type_short":"int","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"description","comment":"","type_short":"String","constant_value":null},{"type_long":"byte[]","javadoc":"","static":false,"name":"blobBytes","comment":"","type_short":"byte[]","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"index","comment":"","type_short":"long","constant_value":null}]}
