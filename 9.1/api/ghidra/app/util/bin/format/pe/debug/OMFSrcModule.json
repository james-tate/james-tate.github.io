{"implements":[],"javadoc":"A class to represent the Object Module Format (OMF) Source Module data structure.\n <br>\n short cFile \t\t  - Number of source files contributing code to segments\n <br>\n short cSeg\t\t  - Number of code segments receiving code from module\n <br>\n int [] baseSrcFile -  An array of base offsets\n <br>\n int [] starts \t  - start offset within the segment of the first byte of code from the module\n <br>\n int [] ends        - ending address of code from the module\n <br>\n short [] segs      - Array of segment indicies that receive code from the module","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createOMFSrcModule","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"ptr","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.OMFSrcModule","comment":"","type_short":"OMFSrcModule"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initOMFSrcModule","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"ptr","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the array of source files.\n@return the array of source files","static":false,"name":"getOMFSrcModuleFiles","comment":"Returns the array of source files.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.OMFSrcModuleFile[]","comment":"the array of source files","type_short":"ghidra.app.util.bin.format.pe.debug.OMFSrcModuleFile[]"}},{"javadoc":"Returns an array of base offsets.\n@return an array of base offsets","static":false,"name":"getBaseSrcFile","comment":"Returns an array of base offsets.","params":[],"throws":[],"return":{"type_long":"int[]","comment":"an array of base offsets","type_short":"int[]"}},{"javadoc":"Returns the number of source files contributing code to segments.\n@return the number of source files contributing code to segments","static":false,"name":"getFileCount","comment":"Returns the number of source files contributing code to segments.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of source files contributing code to segments","type_short":"short"}},{"javadoc":"Returns the number of code segments receiving code from module.\n@return the number of code segments receiving code from module","static":false,"name":"getSegmentCount","comment":"Returns the number of code segments receiving code from module.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of code segments receiving code from module","type_short":"short"}},{"javadoc":"Returns an array of ending addresses of code from the module.\n@return an array of ending addresses of code from the module","static":false,"name":"getEnds","comment":"Returns an array of ending addresses of code from the module.","params":[],"throws":[],"return":{"type_long":"int[]","comment":"an array of ending addresses of code from the module","type_short":"int[]"}},{"javadoc":"Returns an array of segment indicies that receive code from the module.\n@return an array of segment indicies that receive code from the module","static":false,"name":"getSegments","comment":"Returns an array of segment indicies that receive code from the module.","params":[],"throws":[],"return":{"type_long":"short[]","comment":"an array of segment indicies that receive code from the module","type_short":"short[]"}},{"javadoc":"Returns an array of start offsets within the segment of the first byte of code from the module.\n@return an array of start offsets within the segment of the first byte of code from the module","static":false,"name":"getStarts","comment":"Returns an array of start offsets within the segment of the first byte of code from the module.","params":[],"throws":[],"return":{"type_long":"int[]","comment":"an array of start offsets within the segment of the first byte of code from the module","type_short":"int[]"}}],"name":"OMFSrcModule","comment":"A class to represent the Object Module Format (OMF) Source Module data structure.\n \n short cFile \t\t  - Number of source files contributing code to segments\n \n short cSeg\t\t  - Number of code segments receiving code from module\n \n int [] baseSrcFile -  An array of base offsets\n \n int [] starts \t  - start offset within the segment of the first byte of code from the module\n \n int [] ends        - ending address of code from the module\n \n short [] segs      - Array of segment indicies that receive code from the module","fields":[{"type_long":"short","javadoc":"","static":false,"name":"cFile","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"cSeg","comment":"","type_short":"short","constant_value":null},{"type_long":"int[]","javadoc":"","static":false,"name":"baseSrcFile","comment":"","type_short":"int[]","constant_value":null},{"type_long":"int[]","javadoc":"","static":false,"name":"starts","comment":"","type_short":"int[]","constant_value":null},{"type_long":"int[]","javadoc":"","static":false,"name":"ends","comment":"","type_short":"int[]","constant_value":null},{"type_long":"short[]","javadoc":"","static":false,"name":"segs","comment":"","type_short":"short[]","constant_value":null},{"type_long":"java.util.ArrayList<ghidra.app.util.bin.format.pe.debug.OMFSrcModuleFile>","javadoc":"","static":false,"name":"moduleFileList","comment":"","type_short":"ArrayList","constant_value":null}]}
