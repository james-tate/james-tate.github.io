{"implements":["ghidra.app.util.bin.StructConverter"],"javadoc":"A class to represent the \n <code>ImgDelayDescr<\/code>\n data structure defined in <b><code>DELAYIMP.H<\/code><\/b>.\n <p>\n <pre>\n typedef struct ImgDelayDescr {\n     DWORD           grAttrs;        \/\/ attributes\n     LPCSTR          szName;         \/\/ pointer to dll name\n     HMODULE *       phmod;          \/\/ address of module handle\n     PImgThunkData   pIAT;           \/\/ address of the IAT\n     PCImgThunkData  pINT;           \/\/ address of the INT\n     PCImgThunkData  pBoundIAT;      \/\/ address of the optional bound IAT\n     PCImgThunkData  pUnloadIAT;     \/\/ address of optional copy of original IAT\n     DWORD           dwTimeStamp;    \/\/ 0 if not bound,\n                                     \/\/ O.W. date\/time stamp of DLL bound to (old BIND)\n } ImgDelayDescr, * PImgDelayDescr;\n <\/pre>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createDelayImportDescriptor","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.pe.NTHeader","name":"ntHeader","comment":"","type_short":"NTHeader"},{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.pe.DelayImportDescriptor","comment":"","type_short":"DelayImportDescriptor"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initDelayImportDescriptor","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.pe.NTHeader","name":"ntHeader","comment":"","type_short":"NTHeader"},{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"readThunks","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.pe.NTHeader","name":"ntHeader","comment":"","type_short":"NTHeader"},{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"long","name":"ptr","comment":"","type_short":"long"},{"type_long":"boolean","name":"isName","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.util.List<ghidra.app.util.bin.format.pe.ThunkData>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"readName","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.pe.NTHeader","name":"ntHeader","comment":"","type_short":"NTHeader"},{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"readFields","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if the \"using relative virtual address\" is flag is set\n@return true if the \"using relative virtual address\" is flag is set","static":false,"name":"isUsingRVA","comment":"Returns true if the \"using relative virtual address\" is flag is set","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the \"using relative virtual address\" is flag is set","type_short":"boolean"}},{"javadoc":"Returns the attributes.\n@return the attributes","static":false,"name":"getAttibutes","comment":"Returns the attributes.","params":[],"throws":[],"return":{"type_long":"int","comment":"the attributes","type_short":"int"}},{"javadoc":"Returns the pointer to the DLL name.\n@return the pointer to the DLL name","static":false,"name":"getPointerToDLLName","comment":"Returns the pointer to the DLL name.","params":[],"throws":[],"return":{"type_long":"long","comment":"the pointer to the DLL name","type_short":"long"}},{"javadoc":"Returns the address of the module handle.\n@return the address of the module handle","static":false,"name":"getAddressOfModuleHandle","comment":"Returns the address of the module handle.","params":[],"throws":[],"return":{"type_long":"long","comment":"the address of the module handle","type_short":"long"}},{"javadoc":"Returns the address of the import address table.\n@return the address of the import address table","static":false,"name":"getAddressOfIAT","comment":"Returns the address of the import address table.","params":[],"throws":[],"return":{"type_long":"long","comment":"the address of the import address table","type_short":"long"}},{"javadoc":"Returns the address of the import name table.\n@return the address of the import name table","static":false,"name":"getAddressOfINT","comment":"Returns the address of the import name table.","params":[],"throws":[],"return":{"type_long":"long","comment":"the address of the import name table","type_short":"long"}},{"javadoc":"Returns the address of the optional bound IAT.\n@return the address of the optional bound IAT","static":false,"name":"getAddressOfBoundIAT","comment":"Returns the address of the optional bound IAT.","params":[],"throws":[],"return":{"type_long":"long","comment":"the address of the optional bound IAT","type_short":"long"}},{"javadoc":"Returns the address of the optional copy of original IAT.\n@return the address of the optional copy of original IAT","static":false,"name":"getAddressOfOriginalIAT","comment":"Returns the address of the optional copy of original IAT.","params":[],"throws":[],"return":{"type_long":"long","comment":"the address of the optional copy of original IAT","type_short":"long"}},{"javadoc":"Returns the date\/time stamp of DLL bound to (Old BIND),\n otherwise 0 if not bound.\n@return if bound returns the time stamp, otherwise 0","static":false,"name":"getTimeStamp","comment":"Returns the date\/time stamp of DLL bound to (Old BIND),\n otherwise 0 if not bound.","params":[],"throws":[],"return":{"type_long":"int","comment":"if bound returns the time stamp, otherwise 0","type_short":"int"}},{"javadoc":"Returns the DLL name.\n@return the DLL name","static":false,"name":"getDLLName","comment":"Returns the DLL name.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the DLL name","type_short":"String"}},{"javadoc":"","static":false,"name":"getImportByNameMap","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Map<ghidra.app.util.bin.format.pe.ThunkData,ghidra.app.util.bin.format.pe.ImportByName>","comment":"","type_short":"Map"}},{"javadoc":"","static":false,"name":"getImportList","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.bin.format.pe.DelayImportInfo>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getThunksIAT","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.bin.format.pe.ThunkData>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getThunksINT","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.bin.format.pe.ThunkData>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getThunksBoundIAT","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.bin.format.pe.ThunkData>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getThunksUnloadIAT","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.bin.format.pe.ThunkData>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"Returns the size of this structure. It accounts for 32 vs 64 bit.\n@return the size of this structure","static":false,"name":"sizeof","comment":"Returns the size of this structure. It accounts for 32 vs 64 bit.","params":[],"throws":[],"return":{"type_long":"int","comment":"the size of this structure","type_short":"int"}},{"javadoc":"","static":false,"name":"isValid","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"DelayImportDescriptor","comment":"A class to represent the \n ImgDelayDescr\n data structure defined in DELAYIMP.H.\n \n \n typedef struct ImgDelayDescr {\n     DWORD           grAttrs;        \/\/ attributes\n     LPCSTR          szName;         \/\/ pointer to dll name\n     HMODULE *       phmod;          \/\/ address of module handle\n     PImgThunkData   pIAT;           \/\/ address of the IAT\n     PCImgThunkData  pINT;           \/\/ address of the INT\n     PCImgThunkData  pBoundIAT;      \/\/ address of the optional bound IAT\n     PCImgThunkData  pUnloadIAT;     \/\/ address of optional copy of original IAT\n     DWORD           dwTimeStamp;    \/\/ 0 if not bound,\n                                     \/\/ O.W. date\/time stamp of DLL bound to (old BIND)\n } ImgDelayDescr, * PImgDelayDescr;\n ","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"NAME","comment":"","type_short":"String","constant_value":"\"ImgDelayDescr\""},{"type_long":"int","javadoc":"","static":false,"name":"grAttrs","comment":"","type_short":"int","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"szName","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"phmod","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"pIAT","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"pINT","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"pBoundIAT","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"pUnloadIAT","comment":"","type_short":"long","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"dwTimeStamp","comment":"","type_short":"int","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"dllName","comment":"","type_short":"String","constant_value":null},{"type_long":"java.util.List<ghidra.app.util.bin.format.pe.ThunkData>","javadoc":"","static":false,"name":"thunksIAT","comment":"","type_short":"List","constant_value":null},{"type_long":"java.util.List<ghidra.app.util.bin.format.pe.ThunkData>","javadoc":"","static":false,"name":"thunksINT","comment":"","type_short":"List","constant_value":null},{"type_long":"java.util.List<ghidra.app.util.bin.format.pe.ThunkData>","javadoc":"","static":false,"name":"thunksBoundIAT","comment":"","type_short":"List","constant_value":null},{"type_long":"java.util.List<ghidra.app.util.bin.format.pe.ThunkData>","javadoc":"","static":false,"name":"thunksUnloadIAT","comment":"","type_short":"List","constant_value":null},{"type_long":"java.util.List<ghidra.app.util.bin.format.pe.DelayImportInfo>","javadoc":"","static":false,"name":"delayImportInfoList","comment":"","type_short":"List","constant_value":null},{"type_long":"java.util.Map<ghidra.app.util.bin.format.pe.ThunkData,ghidra.app.util.bin.format.pe.ImportByName>","javadoc":"","static":false,"name":"importByNameMap","comment":"","type_short":"Map","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isValid","comment":"","type_short":"boolean","constant_value":null}]}
