{"implements":["ghidra.app.util.bin.StructConverter"],"javadoc":"","static":false,"methods":[{"javadoc":"Returns true of this optional header is 64-bit.\n@return true of this optional header is 64-bit","static":false,"name":"is64bit","comment":"Returns true of this optional header is 64-bit.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true of this optional header is 64-bit","type_short":"boolean"}},{"javadoc":"Return the major version number of the linker that built this binary.\n@return ","static":false,"name":"getMajorLinkerVersion","comment":"Return the major version number of the linker that built this binary.","params":[],"throws":[],"return":{"type_long":"byte","comment":"","type_short":"byte"}},{"javadoc":"Return the minor version number of the linker that built this binary.\n@return ","static":false,"name":"getMinorLinkerVersion","comment":"Return the minor version number of the linker that built this binary.","params":[],"throws":[],"return":{"type_long":"byte","comment":"","type_short":"byte"}},{"javadoc":"Return the major version number of the required operating system.\n@return ","static":false,"name":"getMajorOperatingSystemVersion","comment":"Return the major version number of the required operating system.","params":[],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"Return the minor version number of the required operating system.\n@return ","static":false,"name":"getMinorOperatingSystemVersion","comment":"Return the minor version number of the required operating system.","params":[],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"Get the major version number of the image.\n@return ","static":false,"name":"getMajorImageVersion","comment":"Get the major version number of the image.","params":[],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"Get the minor version number of the image.\n@return ","static":false,"name":"getMinorImageVersion","comment":"Get the minor version number of the image.","params":[],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"Get the major version number of the subsystem.","static":false,"name":"getMajorSubsystemVersion","comment":"Get the major version number of the subsystem.","params":[],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"Get the minor version number of the subsystem.\n@return ","static":false,"name":"getMinorSubsystemVersion","comment":"Get the minor version number of the subsystem.","params":[],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"This value is reserved, and must be 0","static":false,"name":"getWin32VersionValue","comment":"This value is reserved, and must be 0","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Get the image file checksum.\n@return ","static":false,"name":"getChecksum","comment":"Get the image file checksum.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Get the subsystem that is required to run this image.\n@return ","static":false,"name":"getSubsystem","comment":"Get the subsystem that is required to run this image.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Return flags that describe properties of and features of this binary.\n@see ghidra.app.util.bin.format.pe.DllCharacteristics\n@return ","static":false,"name":"getDllCharacteristics","comment":"Return flags that describe properties of and features of this binary.","params":[],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"Return the size of the stack reservation\n@return ","static":false,"name":"getSizeOfStackReserve","comment":"Return the size of the stack reservation","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Return the size of the stack to commit\n@return ","static":false,"name":"getSizeOfStackCommit","comment":"Return the size of the stack to commit","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Return the size of the heap reservation\n@return ","static":false,"name":"getSizeOfHeapReserve","comment":"Return the size of the heap reservation","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Return the size of the heap to commit\n@return ","static":false,"name":"getSizeOfHeapCommit","comment":"Return the size of the heap to commit","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Return the flags passed to the loader. Obsolete.\n@return ","static":false,"name":"getLoaderFlags","comment":"Return the flags passed to the loader. Obsolete.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@return the RVA of the first code byte in the file that will be executed","static":false,"name":"getAddressOfEntryPoint","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"the RVA of the first code byte in the file that will be executed","type_short":"long"}},{"javadoc":"@return the preferred load address of this file in memory","static":false,"name":"getImageBase","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"the preferred load address of this file in memory","type_short":"long"}},{"javadoc":"","static":false,"name":"getOriginalImageBase","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"wasRebased","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@return the RVA that would be assigned to the next section following the last section","static":false,"name":"getSizeOfImage","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"the RVA that would be assigned to the next section following the last section","type_short":"long"}},{"javadoc":"@see #getSizeOfImage()","static":false,"name":"setSizeOfImage","comment":"","params":[{"type_long":"long","name":"size","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return the combined size of all headers","static":false,"name":"getSizeOfHeaders","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"the combined size of all headers","type_short":"long"}},{"javadoc":"@see #getSizeOfHeaders()","static":false,"name":"setSizeOfHeaders","comment":"","params":[{"type_long":"long","name":"size","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the combined total size of all sections with\n the <code>IMAGE_SCN_CNT_CODE<\/code> attribute.\n@return the combined total size of all sections with\n the <code>IMAGE_SCN_CNT_CODE<\/code> attribute.","static":false,"name":"getSizeOfCode","comment":"Returns the combined total size of all sections with\n the IMAGE_SCN_CNT_CODE attribute.","params":[],"throws":[],"return":{"type_long":"long","comment":"the combined total size of all sections with\n the IMAGE_SCN_CNT_CODE attribute.","type_short":"long"}},{"javadoc":"@see #getSizeOfCode()","static":false,"name":"setSizeOfCode","comment":"","params":[{"type_long":"long","name":"size","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getNumberOfRvaAndSizes","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Returns the combined size of all initialized data sections.\n@return the combined size of all initialized data sections","static":false,"name":"getSizeOfInitializedData","comment":"Returns the combined size of all initialized data sections.","params":[],"throws":[],"return":{"type_long":"long","comment":"the combined size of all initialized data sections","type_short":"long"}},{"javadoc":"@see #getSizeOfInitializedData()","static":false,"name":"setSizeOfInitializedData","comment":"","params":[{"type_long":"long","name":"size","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the size of all sections with the uninitialized \n data attributes.\n@return the size of all sections with the uninitialized data attributes","static":false,"name":"getSizeOfUninitializedData","comment":"Returns the size of all sections with the uninitialized \n data attributes.","params":[],"throws":[],"return":{"type_long":"long","comment":"the size of all sections with the uninitialized data attributes","type_short":"long"}},{"javadoc":"@see #getSizeOfUninitializedData()","static":false,"name":"setSizeOfUninitializedData","comment":"","params":[{"type_long":"long","name":"size","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the RVA of the first byte of code when loaded in memory.\n@return the RVA of the first byte of code when loaded in memory","static":false,"name":"getBaseOfCode","comment":"Returns the RVA of the first byte of code when loaded in memory.","params":[],"throws":[],"return":{"type_long":"long","comment":"the RVA of the first byte of code when loaded in memory","type_short":"long"}},{"javadoc":"@return the RVA of the first byte of data when loaded into memory","static":false,"name":"getBaseOfData","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"the RVA of the first byte of data when loaded into memory","type_short":"long"}},{"javadoc":"This methods tells this optional header to process its data directories.","static":false,"name":"processDataDirectories","comment":"This methods tells this optional header to process its data directories.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the array of data directories.\n@return the array of data directories","static":false,"name":"getDataDirectories","comment":"Returns the array of data directories.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.DataDirectory[]","comment":"the array of data directories","type_short":"ghidra.app.util.bin.format.pe.DataDirectory[]"}},{"javadoc":"@return the section alignment","static":false,"name":"getSectionAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"the section alignment","type_short":"int"}},{"javadoc":"@return the file alignment","static":false,"name":"getFileAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"the file alignment","type_short":"int"}},{"javadoc":"Writes this optional header to the specified random access file.\n@param raf the random access file\n@param dc the data converter\n@throws IOException","static":false,"name":"writeHeader","comment":"Writes this optional header to the specified random access file.","params":[{"type_long":"java.io.RandomAccessFile","name":"raf","comment":"the random access file","type_short":"RandomAccessFile"},{"type_long":"ghidra.util.DataConverter","name":"dc","comment":"the data converter","type_short":"DataConverter"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"validateDataDirectories","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return true if the PE uses predominantly CLI code; otherwise, false.","static":false,"name":"isCLI","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"true if the PE uses predominantly CLI code; otherwise, false.","type_short":"boolean"}}],"name":"OptionalHeader","comment":"","fields":[{"type_long":"byte","javadoc":"The count of data directories in the optional header.","static":true,"name":"IMAGE_NUMBEROF_DIRECTORY_ENTRIES","comment":"The count of data directories in the optional header.","type_short":"byte","constant_value":"16"},{"type_long":"byte","javadoc":"Export directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_EXPORT","comment":"Export directory index","type_short":"byte","constant_value":"0"},{"type_long":"byte","javadoc":"Import directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_IMPORT","comment":"Import directory index","type_short":"byte","constant_value":"1"},{"type_long":"byte","javadoc":"Resource directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_RESOURCE","comment":"Resource directory index","type_short":"byte","constant_value":"2"},{"type_long":"byte","javadoc":"Exception directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_EXCEPTION","comment":"Exception directory index","type_short":"byte","constant_value":"3"},{"type_long":"byte","javadoc":"Security directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_SECURITY","comment":"Security directory index","type_short":"byte","constant_value":"4"},{"type_long":"byte","javadoc":"Base Relocation Table directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_BASERELOC","comment":"Base Relocation Table directory index","type_short":"byte","constant_value":"5"},{"type_long":"byte","javadoc":"Debug directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_DEBUG","comment":"Debug directory index","type_short":"byte","constant_value":"6"},{"type_long":"byte","javadoc":"Architecture Specific Data directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_ARCHITECTURE","comment":"Architecture Specific Data directory index","type_short":"byte","constant_value":"7"},{"type_long":"byte","javadoc":"Global Pointer directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_GLOBALPTR","comment":"Global Pointer directory index","type_short":"byte","constant_value":"8"},{"type_long":"byte","javadoc":"TLS directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_TLS","comment":"TLS directory index","type_short":"byte","constant_value":"9"},{"type_long":"byte","javadoc":"Load Configuration directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG","comment":"Load Configuration directory index","type_short":"byte","constant_value":"10"},{"type_long":"byte","javadoc":"Bound Import directory  index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT","comment":"Bound Import directory  index","type_short":"byte","constant_value":"11"},{"type_long":"byte","javadoc":"Import Address Table directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_IAT","comment":"Import Address Table directory index","type_short":"byte","constant_value":"12"},{"type_long":"byte","javadoc":"Delay Load Import Descriptors directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT","comment":"Delay Load Import Descriptors directory index","type_short":"byte","constant_value":"13"},{"type_long":"byte","javadoc":"COM Runtime Descriptor directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","comment":"COM Runtime Descriptor directory index","type_short":"byte","constant_value":"14"},{"type_long":"byte","javadoc":"New name for the COM Descriptor directory index","static":true,"name":"IMAGE_DIRECTORY_ENTRY_COMHEADER","comment":"New name for the COM Descriptor directory index","type_short":"byte","constant_value":"14"}]}
