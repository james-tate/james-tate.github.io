{"implements":["ghidra.app.util.bin.StructConverter"],"javadoc":"Describes a blob in the #Blob heap. Format is a coded size then the blob contents.\n <p>\n Paraphrasing from ISO 23271:2012 11.24.2.4 (p272):\n - If the first one byte of the 'blob' is 0bbbbbbb_2: size is bbbbbbb_2 bytes.\n - If the first two bytes are 10bbbbbb_2 and x: size is (bbbbbb_2 << 8 + x) bytes.\n - If the first four bytes are 110bbbbb_2, x, y, and z: size is (bbbbb_2<<24 + x<<16 + y<<8 + z) bytes.\n The first entry in the heap is the empty 'blob' consisting of a single zero byte.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a new blob from the given reader, which should be positioned at the start\n of the blob.  The reader will be positioned directly after the blob upon completion\n of the constructor.\n@param streamIndex The blob's stream index.\n@param reader The reader to use to read the blob.\n@throws IOException if there was a problem reading the blob.","static":false,"name":"<init>","comment":"Creates a new blob from the given reader, which should be positioned at the start\n of the blob.  The reader will be positioned directly after the blob upon completion\n of the constructor.","params":[{"type_long":"int","name":"streamIndex","comment":"The blob's stream index.","type_short":"int"},{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"The reader to use to read the blob.","type_short":"BinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem reading the blob.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new blob that is a copy of the given blob.\n@param blob The blob to copy.","static":false,"name":"<init>","comment":"Creates a new blob that is a copy of the given blob.","params":[{"type_long":"ghidra.app.util.bin.format.pe.cli.blobs.CliBlob","name":"blob","comment":"The blob to copy.","type_short":"CliBlob"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new blob that is a copy of the given blob but with a new reader.  \n The provided reader must be positioned to the start of the new blob.\n@param blob The blob to copy.\n@param reader The reader to use to read the new blob.  It must be positioned\n   to the start of the new blob.","static":false,"name":"<init>","comment":"Creates a new blob that is a copy of the given blob but with a new reader.  \n The provided reader must be positioned to the start of the new blob.","params":[{"type_long":"ghidra.app.util.bin.format.pe.cli.blobs.CliBlob","name":"blob","comment":"The blob to copy.","type_short":"CliBlob"},{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"The reader to use to read the new blob.  It must be positioned\n   to the start of the new blob.","type_short":"BinaryReader"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the blob's size in bytes (includes all fields).\n@return The blob's size in bytes.","static":false,"name":"getSize","comment":"Gets the blob's size in bytes (includes all fields).","params":[],"throws":[],"return":{"type_long":"int","comment":"The blob's size in bytes.","type_short":"int"}},{"javadoc":"Gets a new binary reader positioned at the start of this blob's contents.\n@return A new binary reader positioned at the start of this blob's contents.","static":false,"name":"getContentsReader","comment":"Gets a new binary reader positioned at the start of this blob's contents.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.BinaryReader","comment":"A new binary reader positioned at the start of this blob's contents.","type_short":"BinaryReader"}},{"javadoc":"Gets the blob's contents size in bytes.\n@return The blob's contents size in bytes.","static":false,"name":"getContentsSize","comment":"Gets the blob's contents size in bytes.","params":[],"throws":[],"return":{"type_long":"int","comment":"The blob's contents size in bytes.","type_short":"int"}},{"javadoc":"Gets the blob's contents.\n@return the blob's contents.  Could be null if there was a problem reading the \n   contents.","static":false,"name":"getContents","comment":"Gets the blob's contents.","params":[],"throws":[],"return":{"type_long":"byte[]","comment":"the blob's contents.  Could be null if there was a problem reading the \n   contents.","type_short":"byte[]"}},{"javadoc":"Gets the string representation of this blob.\n@return The string representation of this blob.","static":false,"name":"getRepresentation","comment":"Gets the string representation of this blob.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"The string representation of this blob.","type_short":"String"}},{"javadoc":"Checks to see whether or not this blob is little endian.\n@return True if this blob is little endian; false if big endian.","static":false,"name":"isLittleEndian","comment":"Checks to see whether or not this blob is little endian.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"True if this blob is little endian; false if big endian.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"toDataType","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"Gets the index into the blob stream of this blob.\n@return The index into the blob stream of this blob.","static":false,"name":"getStreamIndex","comment":"Gets the index into the blob stream of this blob.","params":[],"throws":[],"return":{"type_long":"int","comment":"The index into the blob stream of this blob.","type_short":"int"}},{"javadoc":"Gets the name of this blob.\n@return The name of this blob.","static":false,"name":"getName","comment":"Gets the name of this blob.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"The name of this blob.","type_short":"String"}},{"javadoc":"Gets the name associated with this blob's contents.\n@return The name associated with this blob's contents.","static":false,"name":"getContentsName","comment":"Gets the name associated with this blob's contents.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"The name associated with this blob's contents.","type_short":"String"}},{"javadoc":"Gets the data type associated with this blob's contents.\n@return The data type associated with this blob's contents.","static":false,"name":"getContentsDataType","comment":"Gets the data type associated with this blob's contents.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"The data type associated with this blob's contents.","type_short":"DataType"}},{"javadoc":"Gets the comment associated with this blob's contents.\n@return The comment associated with this blob's contents.","static":false,"name":"getContentsComment","comment":"Gets the comment associated with this blob's contents.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"The comment associated with this blob's contents.","type_short":"String"}},{"javadoc":"Gets the proper data type for the blob's size field.\n@return The proper data type for the blob's size field.","static":false,"name":"getSizeDataType","comment":"Gets the proper data type for the blob's size field.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"The proper data type for the blob's size field.","type_short":"DataType"}},{"javadoc":"Parses the coded blob size that the given reader is positioned at.\n@param reader The reader to use to read the coded blob size.\n@return The size of the blob contents in bytes.\n@throws IOException if there is a problem reading the coded size field.","static":true,"name":"parseCodedSize","comment":"Parses the coded blob size that the given reader is positioned at.","params":[{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"The reader to use to read the coded blob size.","type_short":"BinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is a problem reading the coded size field.","type_short":"IOException"}],"return":{"type_long":"int","comment":"The size of the blob contents in bytes.","type_short":"int"}},{"javadoc":"","static":true,"name":"testSizeDecoding","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getNumberBytesInCodedInt","comment":"","params":[{"type_long":"byte","name":"firstByte","comment":"","type_short":"byte"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Rotates toRotate circularly right using a maximum of bitSize bits for the numeric representation.\n Bits must be in the rightmost (least significant) positions.","static":true,"name":"rotateCircularRight","comment":"Rotates toRotate circularly right using a maximum of bitSize bits for the numeric representation.\n Bits must be in the rightmost (least significant) positions.","params":[{"type_long":"int","name":"toRotate","comment":"","type_short":"int"},{"type_long":"int","name":"bitSize","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"decodeCompressedSigned","comment":"","params":[{"type_long":"byte","name":"codedSize","comment":"","type_short":"byte"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"decodeCompressedSigned","comment":"","params":[{"type_long":"short","name":"codedSize","comment":"","type_short":"short"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"decodeCompressedSigned","comment":"","params":[{"type_long":"int","name":"codedSize","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"decodeCompressedUnsigned","comment":"","params":[{"type_long":"byte","name":"codedSize","comment":"","type_short":"byte"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"decodeCompressedUnsigned","comment":"","params":[{"type_long":"short","name":"codedSize","comment":"","type_short":"short"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"decodeCompressedUnsigned","comment":"","params":[{"type_long":"int","name":"codedSize","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"decodeCompressedInt","comment":"","params":[{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"","type_short":"BinaryReader"},{"type_long":"boolean","name":"signed","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"decodeCompressedSignedInt","comment":"","params":[{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"","type_short":"BinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"decodeCompressedUnsignedInt","comment":"","params":[{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"","type_short":"BinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"getDataTypeForBytes","comment":"","params":[{"type_long":"int","name":"numBytes","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}}],"name":"CliBlob","comment":"Describes a blob in the #Blob heap. Format is a coded size then the blob contents.\n \n Paraphrasing from ISO 23271:2012 11.24.2.4 (p272):\n - If the first one byte of the 'blob' is 0bbbbbbb_2: size is bbbbbbb_2 bytes.\n - If the first two bytes are 10bbbbbb_2 and x: size is (bbbbbb_2  8 + x) bytes.\n - If the first four bytes are 110bbbbb_2, x, y, and z: size is (bbbbb_224 + x16 + y8 + z) bytes.\n The first entry in the heap is the empty 'blob' consisting of a single zero byte.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"PATH","comment":"","type_short":"String","constant_value":"\"\/PE\/CLI\/Blobs\""},{"type_long":"int","javadoc":"","static":false,"name":"streamIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.app.util.bin.BinaryReader","javadoc":"","static":false,"name":"reader","comment":"","type_short":"BinaryReader","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"blobOffset","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"contentsOffset","comment":"","type_short":"long","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"contentsSize","comment":"","type_short":"int","constant_value":null}]}
