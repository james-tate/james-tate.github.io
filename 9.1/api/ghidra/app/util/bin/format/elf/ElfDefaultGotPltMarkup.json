{"implements":[],"javadoc":"<code>ElfDefaultGotPltMarkup<\/code> provides the legacy\/default implementation of ELF GOT\/PLT processing \n which handles a limited set of cases.  It is intended that over time this default implementation be \n eliminated although it may form the basis of an abstract implementation for specific processor\n extensions.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfLoadHelper","name":"elfLoadHelper","comment":"","type_short":"ElfLoadHelper"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"log","comment":"","params":[{"type_long":"java.lang.String","name":"msg","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"log","comment":"","params":[{"type_long":"java.lang.Throwable","name":"t","comment":"","type_short":"Throwable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"process","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processGOT","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processPLT","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Perform disassembly and markup of specified external linkage table which \n consists of thunks to external functions.  If symbols are defined within the \n linkage table, these will be transitioned to external functions.\n@param minAddress minimum address of linkage table\n@param maxAddress maximum address of linkage table\n@param monitor task monitor\n@throws CancelledException task cancelled","static":false,"name":"processLinkageTable","comment":"Perform disassembly and markup of specified external linkage table which \n consists of thunks to external functions.  If symbols are defined within the \n linkage table, these will be transitioned to external functions.","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"minAddress","comment":"minimum address of linkage table","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"maxAddress","comment":"maximum address of linkage table","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"task cancelled","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Convert all symbols over a specified range to thunks to external functions.\n@param minAddress\n@param maxAddress\n@return number of symbols converted","static":false,"name":"convertSymbolsToExternalFunctions","comment":"Convert all symbols over a specified range to thunks to external functions.","params":[{"type_long":"ghidra.program.model.address.Address","name":"minAddress","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"maxAddress","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"int","comment":"number of symbols converted","type_short":"int"}},{"javadoc":"","static":false,"name":"disassemble","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Program","name":"prog","comment":"","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createPointer","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"boolean","name":"keepRefWhenValid","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.program.model.util.CodeUnitInsertionException","comment":"","type_short":"CodeUnitInsertionException"},{"type_long":"ghidra.program.model.data.DataTypeConflictException","comment":"","type_short":"DataTypeConflictException"}],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"","type_short":"Data"}},{"javadoc":"","static":false,"name":"removeMemRefs","comment":"","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"","type_short":"Data"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This is an ugly hack to catch pre-linked ARM shared libraries.  All entries in the .GOT should\n be either relocated, or point to a good location in the binary.  If they aren't a good address,\n then the base of the .so is most likely incorrect.  Shift it!","static":false,"name":"UglyImageBaseCheck","comment":"This is an ugly hack to catch pre-linked ARM shared libraries.  All entries in the .GOT should\n be either relocated, or point to a good location in the binary.  If they aren't a good address,\n then the base of the .so is most likely incorrect.  Shift it!","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"","type_short":"Data"},{"type_long":"ghidra.program.model.address.Address","name":"imageBase","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}}],"name":"ElfDefaultGotPltMarkup","comment":"ElfDefaultGotPltMarkup provides the legacy\/default implementation of ELF GOT\/PLT processing \n which handles a limited set of cases.  It is intended that over time this default implementation be \n eliminated although it may form the basis of an abstract implementation for specific processor\n extensions.","fields":[{"type_long":"ghidra.app.util.bin.format.elf.ElfLoadHelper","javadoc":"","static":false,"name":"elfLoadHelper","comment":"","type_short":"ElfLoadHelper","constant_value":null},{"type_long":"ghidra.app.util.bin.format.elf.ElfHeader","javadoc":"","static":false,"name":"elf","comment":"","type_short":"ElfHeader","constant_value":null},{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program","comment":"","type_short":"Program","constant_value":null},{"type_long":"ghidra.program.model.listing.Listing","javadoc":"","static":false,"name":"listing","comment":"","type_short":"Listing","constant_value":null},{"type_long":"ghidra.program.model.mem.Memory","javadoc":"","static":false,"name":"memory","comment":"","type_short":"Memory","constant_value":null}]}
