{"implements":["ghidra.app.util.bin.format.elf.ElfFileSection"],"javadoc":"If an object file participates in dynamic linking, its program header table \n will have an element of type PT_DYNAMIC. This \"segment\" contains the \".dynamic\" section. \n A special symbol, _DYNAMIC, labels the section, which contains an array of the \n Elf32_Dyn or Elf64_Dyn structures.\n <p>\n All address entries contained within this table should adjusted for pre-linking \n using {@link ElfHeader#adjustAddressForPrelink(long)}.  If a pre-link adjustment is not applicable, \n this adjustment will have no affect.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createDynamicTable","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"ghidra.app.util.bin.format.elf.ElfHeader","name":"header","comment":"","type_short":"ElfHeader"},{"type_long":"long","name":"fileOffset","comment":"","type_short":"long"},{"type_long":"long","name":"addrOffset","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.elf.ElfDynamicTable","comment":"","type_short":"ElfDynamicTable"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initDynamicTable","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"},{"type_long":"ghidra.app.util.bin.format.elf.ElfHeader","name":"header","comment":"","type_short":"ElfHeader"},{"type_long":"long","name":"fileOffset","comment":"","type_short":"long"},{"type_long":"long","name":"addrOffset","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds the new dynamic at the specified index.\n@param dyn the new dynamic\n@param index the new index","static":false,"name":"addDynamic","comment":"Adds the new dynamic at the specified index.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfDynamic","name":"dyn","comment":"the new dynamic","type_short":"ElfDynamic"},{"type_long":"int","name":"index","comment":"the new index","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns an array of the dynamics defined this dynamic header.\n@return an array of the dynamics defined this dynamic header","static":false,"name":"getDynamics","comment":"Returns an array of the dynamics defined this dynamic header.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.elf.ElfDynamic[]","comment":"an array of the dynamics defined this dynamic header","type_short":"ghidra.app.util.bin.format.elf.ElfDynamic[]"}},{"javadoc":"Returns an array of the dynamics defined this dynamic header\n with the specified type.\n@param type the desired dynamic type, e.g., DT_NEEDED\n@return an array of the dynamics defined this dynamic header","static":false,"name":"getDynamics","comment":"Returns an array of the dynamics defined this dynamic header\n with the specified type.","params":[{"type_long":"long","name":"type","comment":"the desired dynamic type, e.g., DT_NEEDED","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.elf.ElfDynamic[]","comment":"an array of the dynamics defined this dynamic header","type_short":"ghidra.app.util.bin.format.elf.ElfDynamic[]"}},{"javadoc":"Returns an array of the dynamics defined this dynamic header\n with the specified (enum) type.\n@param type the desired dynamic type, e.g., DT_NEEDED\n@return an array of the dynamics defined this dynamic header","static":false,"name":"getDynamics","comment":"Returns an array of the dynamics defined this dynamic header\n with the specified (enum) type.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfDynamicType","name":"type","comment":"the desired dynamic type, e.g., DT_NEEDED","type_short":"ElfDynamicType"}],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.elf.ElfDynamic[]","comment":"an array of the dynamics defined this dynamic header","type_short":"ghidra.app.util.bin.format.elf.ElfDynamic[]"}},{"javadoc":"Sets the dynamic with the specified type to the specified value.\n@param type the dynamic type\n@param value the new value","static":false,"name":"setDynamicValue","comment":"Sets the dynamic with the specified type to the specified value.","params":[{"type_long":"long","name":"type","comment":"the dynamic type","type_short":"long"},{"type_long":"long","name":"value","comment":"the new value","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the dynamic with the specified (enum) type to the specified value.\n@param type the dynamic (enum) type\n@param value the new value","static":false,"name":"setDynamicValue","comment":"Sets the dynamic with the specified (enum) type to the specified value.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfDynamicType","name":"type","comment":"the dynamic (enum) type","type_short":"ElfDynamicType"},{"type_long":"long","name":"value","comment":"the new value","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the value of the specified dynamic type.\n@param type the dynamic type\n@return the dynamic value","static":false,"name":"getDynamicValue","comment":"Returns the value of the specified dynamic type.","params":[{"type_long":"long","name":"type","comment":"the dynamic type","type_short":"long"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"long","comment":"the dynamic value","type_short":"long"}},{"javadoc":"Returns true if the specified dynamic (enum) type has a value.\n@param type the dynamic (enum) type\n@return true if dynamic value exists","static":false,"name":"containsDynamicValue","comment":"Returns true if the specified dynamic (enum) type has a value.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfDynamicType","name":"type","comment":"the dynamic (enum) type","type_short":"ElfDynamicType"}],"throws":[],"return":{"type_long":"boolean","comment":"true if dynamic value exists","type_short":"boolean"}},{"javadoc":"Returns true if the specified dynamic type has a value.\n@param type the dynamic type\n@return true if dynamic value exists","static":false,"name":"containsDynamicValue","comment":"Returns true if the specified dynamic type has a value.","params":[{"type_long":"long","name":"type","comment":"the dynamic type","type_short":"long"}],"throws":[],"return":{"type_long":"boolean","comment":"true if dynamic value exists","type_short":"boolean"}},{"javadoc":"Returns the value of the specified dynamic (enum) type.\n@param type the dynamic (enum) type\n@return the dynamic value","static":false,"name":"getDynamicValue","comment":"Returns the value of the specified dynamic (enum) type.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfDynamicType","name":"type","comment":"the dynamic (enum) type","type_short":"ElfDynamicType"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"long","comment":"the dynamic value","type_short":"long"}},{"javadoc":"","static":false,"name":"getFileOffset","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getAddressOffset","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"getTagDataType","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"getLength","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getEntrySize","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Get this dynamic table data as a byte array\n@param dc data converter\n@return data array","static":false,"name":"toBytes","comment":"Get this dynamic table data as a byte array","params":[{"type_long":"ghidra.util.DataConverter","name":"dc","comment":"data converter","type_short":"DataConverter"}],"throws":[{"type_long":"java.lang.ArrayIndexOutOfBoundsException","comment":"","type_short":"ArrayIndexOutOfBoundsException"}],"return":{"type_long":"byte[]","comment":"data array","type_short":"byte[]"}}],"name":"ElfDynamicTable","comment":"If an object file participates in dynamic linking, its program header table \n will have an element of type PT_DYNAMIC. This \"segment\" contains the \".dynamic\" section. \n A special symbol, _DYNAMIC, labels the section, which contains an array of the \n Elf32_Dyn or Elf64_Dyn structures.\n \n All address entries contained within this table should adjusted for pre-linking \n using ElfHeader#adjustAddressForPrelink(long).  If a pre-link adjustment is not applicable, \n this adjustment will have no affect.","fields":[{"type_long":"java.util.List<ghidra.app.util.bin.format.elf.ElfDynamic>","javadoc":"","static":false,"name":"dynamics","comment":"","type_short":"List","constant_value":null},{"type_long":"ghidra.app.util.bin.format.elf.ElfHeader","javadoc":"","static":false,"name":"header","comment":"","type_short":"ElfHeader","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"fileOffset","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"addrOffset","comment":"","type_short":"long","constant_value":null}]}
