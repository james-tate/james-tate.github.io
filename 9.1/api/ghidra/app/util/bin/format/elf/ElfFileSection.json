{"implements":["ghidra.app.util.bin.StructConverter"],"javadoc":"","static":false,"methods":[{"javadoc":"Preferred memory address offset where data should be loaded.\n The returned offset will already have the prelink adjustment \n applied, although will not reflect any change in the image base.\n@return default memory address offset where data should be loaded","static":false,"name":"getAddressOffset","comment":"Preferred memory address offset where data should be loaded.\n The returned offset will already have the prelink adjustment \n applied, although will not reflect any change in the image base.","params":[],"throws":[],"return":{"type_long":"long","comment":"default memory address offset where data should be loaded","type_short":"long"}},{"javadoc":"Offset within file where section bytes are specified\n@return offset within file where section bytes are specified","static":false,"name":"getFileOffset","comment":"Offset within file where section bytes are specified","params":[],"throws":[],"return":{"type_long":"long","comment":"offset within file where section bytes are specified","type_short":"long"}},{"javadoc":"Length of file section in bytes\n@return length of file section in bytes","static":false,"name":"getLength","comment":"Length of file section in bytes","params":[],"throws":[],"return":{"type_long":"long","comment":"length of file section in bytes","type_short":"long"}},{"javadoc":"Size of each structured entry in bytes\n@return entry size or -1 if variable","static":false,"name":"getEntrySize","comment":"Size of each structured entry in bytes","params":[],"throws":[],"return":{"type_long":"int","comment":"entry size or -1 if variable","type_short":"int"}}],"name":"ElfFileSection","comment":"","fields":[]}
