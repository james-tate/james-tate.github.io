{"implements":["java.lang.Comparable"],"javadoc":"Object representing data loaded directly into the final image.","static":false,"methods":[{"javadoc":"@return the starting offset, within the loaded image, of this data","static":false,"name":"getDataOffset","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"the starting offset, within the loaded image, of this data","type_short":"long"}},{"javadoc":"@return the length of this data in bytes","static":false,"name":"getLength","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"the length of this data in bytes","type_short":"int"}},{"javadoc":"Create a byte array holding the data represented by this object. The length\n of the byte array should exactly match the value returned by getLength()\n@param reader is for pulling bytes directly from the binary image\n@return allocated and filled byte array\n@throws IOException for problems accessing data through the reader","static":false,"name":"getByteArray","comment":"Create a byte array holding the data represented by this object. The length\n of the byte array should exactly match the value returned by getLength()","params":[{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"is for pulling bytes directly from the binary image","type_short":"BinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"for problems accessing data through the reader","type_short":"IOException"}],"return":{"type_long":"byte[]","comment":"allocated and filled byte array","type_short":"byte[]"}},{"javadoc":"@return true if this is a block entirely of zeroes","static":false,"name":"isAllZeroes","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this is a block entirely of zeroes","type_short":"boolean"}}],"name":"OmfData","comment":"Object representing data loaded directly into the final image.","fields":[]}
