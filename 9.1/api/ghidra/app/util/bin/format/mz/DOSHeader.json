{"implements":["ghidra.app.util.bin.StructConverter","ghidra.app.util.bin.format.Writeable"],"javadoc":"This class represents the <code>IMAGE_DOS_HEADER<\/code> struct\n as defined in <b><code>winnt.h<\/code><\/b>.\n <br>\n <pre>\n typedef struct _IMAGE_DOS_HEADER {      \/\/ DOS .EXE header\n     WORD   e_magic;                     \/\/ Magic number\t\t\t\t\t\t\t\t\/\/ MANDATORY\n     WORD   e_cblp;                      \/\/ Bytes on last page of file\n     WORD   e_cp;                        \/\/ Pages in file\n     WORD   e_crlc;                      \/\/ Relocations\n     WORD   e_cparhdr;                   \/\/ Size of header in paragraphs\n     WORD   e_minalloc;                  \/\/ Minimum extra paragraphs needed\n     WORD   e_maxalloc;                  \/\/ Maximum extra paragraphs needed\n     WORD   e_ss;                        \/\/ Initial (relative) SS value\n     WORD   e_sp;                        \/\/ Initial SP value\n     WORD   e_csum;                      \/\/ Checksum\n     WORD   e_ip;                        \/\/ Initial IP value\n     WORD   e_cs;                        \/\/ Initial (relative) CS value\n     WORD   e_lfarlc;                    \/\/ File address of relocation table\n     WORD   e_ovno;                      \/\/ Overlay number\n     WORD   e_res[4];                    \/\/ Reserved words\n     WORD   e_oemid;                     \/\/ OEM identifier (for e_oeminfo)\n     WORD   e_oeminfo;                   \/\/ OEM information; e_oemid specific\n     WORD   e_res2[10];                  \/\/ Reserved words\t\t\t\t\t\t\t\/\/ MANDATORY\n     LONG   e_lfanew;                    \/\/ File address of new exe header\n } IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;\n <\/pre>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new DOS header.\n@param reader the binary reader","static":true,"name":"createDOSHeader","comment":"Constructs a new DOS header.","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"the binary reader","type_short":"FactoryBundledWithBinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.format.mz.DOSHeader","comment":"","type_short":"DOSHeader"}},{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initDOSHeader","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the processor name.\n@return the processor name","static":false,"name":"getProcessorName","comment":"Returns the processor name.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the processor name","type_short":"String"}},{"javadoc":"Returns the magic number.\n@return the magic number","static":false,"name":"e_magic","comment":"Returns the magic number.","params":[],"throws":[],"return":{"type_long":"short","comment":"the magic number","type_short":"short"}},{"javadoc":"Returns the number of bytes on the last page of file.\n@return the number of bytes on the last page of the file","static":false,"name":"e_cblp","comment":"Returns the number of bytes on the last page of file.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of bytes on the last page of the file","type_short":"short"}},{"javadoc":"Returns the number of pages in the file.\n@return the number of pages in the file","static":false,"name":"e_cp","comment":"Returns the number of pages in the file.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of pages in the file","type_short":"short"}},{"javadoc":"Returns the number of relocations.\n@return the number of relocations","static":false,"name":"e_crlc","comment":"Returns the number of relocations.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of relocations","type_short":"short"}},{"javadoc":"Returns the size of header in paragraphs.\n@return the size of header in paragraphs","static":false,"name":"e_cparhdr","comment":"Returns the size of header in paragraphs.","params":[],"throws":[],"return":{"type_long":"short","comment":"the size of header in paragraphs","type_short":"short"}},{"javadoc":"Returns the minimum extra paragraphs needed.\n@return the minimum extra paragraphs needed","static":false,"name":"e_minalloc","comment":"Returns the minimum extra paragraphs needed.","params":[],"throws":[],"return":{"type_long":"short","comment":"the minimum extra paragraphs needed","type_short":"short"}},{"javadoc":"Returns the maximum extra paragraphs needed.\n@return the maximum extra paragraphs needed","static":false,"name":"e_maxalloc","comment":"Returns the maximum extra paragraphs needed.","params":[],"throws":[],"return":{"type_long":"short","comment":"the maximum extra paragraphs needed","type_short":"short"}},{"javadoc":"Returns the initial (relative) SS value.\n@return the initial (relative) SS value","static":false,"name":"e_ss","comment":"Returns the initial (relative) SS value.","params":[],"throws":[],"return":{"type_long":"short","comment":"the initial (relative) SS value","type_short":"short"}},{"javadoc":"Returns the initial SP value.\n@return the initial SP value","static":false,"name":"e_sp","comment":"Returns the initial SP value.","params":[],"throws":[],"return":{"type_long":"short","comment":"the initial SP value","type_short":"short"}},{"javadoc":"Returns the checksum.\n@return the checksum","static":false,"name":"e_csum","comment":"Returns the checksum.","params":[],"throws":[],"return":{"type_long":"short","comment":"the checksum","type_short":"short"}},{"javadoc":"Returns the initial IP value.\n@return the initial IP value","static":false,"name":"e_ip","comment":"Returns the initial IP value.","params":[],"throws":[],"return":{"type_long":"short","comment":"the initial IP value","type_short":"short"}},{"javadoc":"Returns the initial (relative) CS value.\n@return the initial (relative) CS value","static":false,"name":"e_cs","comment":"Returns the initial (relative) CS value.","params":[],"throws":[],"return":{"type_long":"short","comment":"the initial (relative) CS value","type_short":"short"}},{"javadoc":"Returns the file address of relocation table.\n@return the file address of relocation table","static":false,"name":"e_lfarlc","comment":"Returns the file address of relocation table.","params":[],"throws":[],"return":{"type_long":"short","comment":"the file address of relocation table","type_short":"short"}},{"javadoc":"Returns the overlay number.\n@return the overlay number","static":false,"name":"e_ovno","comment":"Returns the overlay number.","params":[],"throws":[],"return":{"type_long":"short","comment":"the overlay number","type_short":"short"}},{"javadoc":"Returns the reserved words.\n@return the reserved words","static":false,"name":"e_res","comment":"Returns the reserved words.","params":[],"throws":[],"return":{"type_long":"short[]","comment":"the reserved words","type_short":"short[]"}},{"javadoc":"Returns the OEM identifier (for e_oeminfo).\n@return the OEM identifier (for e_oeminfo)","static":false,"name":"e_oemid","comment":"Returns the OEM identifier (for e_oeminfo).","params":[],"throws":[],"return":{"type_long":"short","comment":"the OEM identifier (for e_oeminfo)","type_short":"short"}},{"javadoc":"Returns the OEM information; e_oemid specific.\n@return the OEM information; e_oemid specific","static":false,"name":"e_oeminfo","comment":"Returns the OEM information; e_oemid specific.","params":[],"throws":[],"return":{"type_long":"short","comment":"the OEM information; e_oemid specific","type_short":"short"}},{"javadoc":"Returns the reserved words (2).\n@return the reserved words (2)","static":false,"name":"e_res2","comment":"Returns the reserved words (2).","params":[],"throws":[],"return":{"type_long":"short[]","comment":"the reserved words (2)","type_short":"short[]"}},{"javadoc":"Returns the file address of new EXE header.\n@return the file address of new EXE header","static":false,"name":"e_lfanew","comment":"Returns the file address of new EXE header.","params":[],"throws":[],"return":{"type_long":"int","comment":"the file address of new EXE header","type_short":"int"}},{"javadoc":"Returns true if a new EXE header exists.\n@return true if a new EXE header exists","static":false,"name":"hasNewExeHeader","comment":"Returns true if a new EXE header exists.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if a new EXE header exists","type_short":"boolean"}},{"javadoc":"Returns true if a PE header exists.\n@return true if a PE header exists","static":false,"name":"hasPeHeader","comment":"Returns true if a PE header exists.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if a PE header exists","type_short":"boolean"}},{"javadoc":"Returns true if the DOS magic number is correct\n@return true if the DOS magic number is correct","static":false,"name":"isDosSignature","comment":"Returns true if the DOS magic number is correct","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the DOS magic number is correct","type_short":"boolean"}},{"javadoc":"@see ghidra.app.util.bin.StructConverter#toDataType()","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"Returns the length (in bytes) of the DOS\n program.\n <p>\n In other words:\n <code>e_lfanew() - SIZEOF_DOS_HEADER<\/code>\n@return the length (in bytes)","static":false,"name":"getProgramLen","comment":"Returns the length (in bytes) of the DOS\n program.\n \n In other words:\n e_lfanew() - SIZEOF_DOS_HEADER","params":[],"throws":[],"return":{"type_long":"int","comment":"the length (in bytes)","type_short":"int"}},{"javadoc":"","static":false,"name":"parse","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"decrementStub","comment":"","params":[{"type_long":"int","name":"start","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.app.util.bin.format.Writeable#write(java.io.RandomAccessFile, ghidra.util.DataConverter)","static":false,"name":"write","comment":"","params":[{"type_long":"java.io.RandomAccessFile","name":"raf","comment":"","type_short":"RandomAccessFile"},{"type_long":"ghidra.util.DataConverter","name":"dc","comment":"","type_short":"DataConverter"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DOSHeader","comment":"This class represents the IMAGE_DOS_HEADER struct\n as defined in winnt.h.\n \n \n typedef struct _IMAGE_DOS_HEADER {      \/\/ DOS .EXE header\n     WORD   e_magic;                     \/\/ Magic number\t\t\t\t\t\t\t\t\/\/ MANDATORY\n     WORD   e_cblp;                      \/\/ Bytes on last page of file\n     WORD   e_cp;                        \/\/ Pages in file\n     WORD   e_crlc;                      \/\/ Relocations\n     WORD   e_cparhdr;                   \/\/ Size of header in paragraphs\n     WORD   e_minalloc;                  \/\/ Minimum extra paragraphs needed\n     WORD   e_maxalloc;                  \/\/ Maximum extra paragraphs needed\n     WORD   e_ss;                        \/\/ Initial (relative) SS value\n     WORD   e_sp;                        \/\/ Initial SP value\n     WORD   e_csum;                      \/\/ Checksum\n     WORD   e_ip;                        \/\/ Initial IP value\n     WORD   e_cs;                        \/\/ Initial (relative) CS value\n     WORD   e_lfarlc;                    \/\/ File address of relocation table\n     WORD   e_ovno;                      \/\/ Overlay number\n     WORD   e_res[4];                    \/\/ Reserved words\n     WORD   e_oemid;                     \/\/ OEM identifier (for e_oeminfo)\n     WORD   e_oeminfo;                   \/\/ OEM information; e_oemid specific\n     WORD   e_res2[10];                  \/\/ Reserved words\t\t\t\t\t\t\t\/\/ MANDATORY\n     LONG   e_lfanew;                    \/\/ File address of new exe header\n } IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;\n ","fields":[{"type_long":"java.lang.String","javadoc":"The name to use when converting into a structure data type.","static":true,"name":"NAME","comment":"The name to use when converting into a structure data type.","type_short":"String","constant_value":"\"IMAGE_DOS_HEADER\""},{"type_long":"int","javadoc":"","static":true,"name":"IMAGE_DOS_SIGNATURE","comment":"","type_short":"int","constant_value":"23117"},{"type_long":"int","javadoc":"","static":true,"name":"SIZEOF_DOS_HEADER","comment":"","type_short":"int","constant_value":"64"},{"type_long":"short","javadoc":"","static":false,"name":"e_magic","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_cblp","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_cp","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_crlc","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_cparhdr","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_minalloc","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_maxalloc","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_ss","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_sp","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_csum","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_ip","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_cs","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_lfarlc","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_ovno","comment":"","type_short":"short","constant_value":null},{"type_long":"short[]","javadoc":"","static":false,"name":"e_res","comment":"","type_short":"short[]","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_oemid","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"e_oeminfo","comment":"","type_short":"short","constant_value":null},{"type_long":"short[]","javadoc":"","static":false,"name":"e_res2","comment":"","type_short":"short[]","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"e_lfanew","comment":"","type_short":"int","constant_value":null},{"type_long":"byte[]","javadoc":"","static":false,"name":"stubBytes","comment":"","type_short":"byte[]","constant_value":null},{"type_long":"ghidra.app.util.bin.format.FactoryBundledWithBinaryReader","javadoc":"","static":false,"name":"reader","comment":"","type_short":"FactoryBundledWithBinaryReader","constant_value":null}]}
