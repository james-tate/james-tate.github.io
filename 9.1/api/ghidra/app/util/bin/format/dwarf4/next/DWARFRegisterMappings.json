{"implements":[],"javadoc":"Immutable mapping information between DWARF and Ghidra.\n <p>\n Use {@link DWARFRegisterMappingsManager} to get an instance for a Program's specific\n language.\n <p>\n The data held in this class is read from DWARF register mapping information contained \n in xml files referenced from the language *.ldefs file in an\n &lt;external_name tool=\"DWARF.register.mapping.file\" name=\"register_mapping_filename_here\"\/&gt; \n <p>\n The format is:<p>\n <pre>\n &lt;dwarf&gt;\n   &lt;register_mappings&gt;\n       &lt;!-- Simple single mapping: --&gt;\n       &lt;!-- NN == dwarf register number --&gt;\n       &lt;!-- RegName == Ghidra register name string --&gt;\n       &lt;!-- &lt;register_mapping dwarf=\"NN\" ghidra=\"RegName\" \/&gt; --&gt;\n       \n       &lt;!-- Example: --&gt;\n     &lt;register_mapping dwarf=\"0\" ghidra=\"r0\" \/&gt;\n     \n       &lt;!-- Single mapping specifying stack pointer: --&gt;\n       &lt;!-- NN == dwarf register number --&gt;\n       &lt;!-- RegName == Ghidra register name string --&gt;\n       &lt;!-- &lt;register_mapping dwarf=\"NN\" ghidra=\"RegName\" stackpointer=\"true\"\/&gt; --&gt;\n       \n       &lt;!-- Example: --&gt;\n     &lt;register_mapping dwarf=\"4\" ghidra=\"ESP\" stackpointer=\"true\"\/&gt;\n     \n       &lt;!-- Multiple mapping: --&gt;\n       &lt;!-- NN == dwarf register number --&gt;\n       &lt;!-- XX == number of times to repeat --&gt;\n       &lt;!-- RegNameYY == Ghidra register name string with a mandatory integer suffix --&gt;\n       &lt;!-- &lt;register_mapping dwarf=\"NN\" ghidra=\"RegNameYY\" auto_count=\"XX\"\/&gt; --&gt;\n       \n       &lt;!-- Example, creates mapping from 0..12 to r0..r12: --&gt;\n     &lt;register_mapping dwarf=\"0\" ghidra=\"r0\" auto_count=\"12\"\/&gt;\n     \n       &lt;!-- Example, creates mapping from 17..32 to XMM0..XMM15: --&gt;\n     &lt;register_mapping dwarf=\"17\" ghidra=\"XMM0\" auto_count=\"16\"\/&gt;\n     \n   &lt;\/register_mappings&gt;\n   \n     &lt;!-- Call Frame CFA Value: --&gt;\n   &lt;call_frame_cfa value=\"NN\"\/&gt;\n   \n     &lt;!-- Use Formal Parameter Storage toggle: --&gt;\n   &lt;use_formal_parameter_storage\/&gt;\n &lt;\/dwarf&gt;\n <\/pre>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.util.Map<java.lang.Integer,ghidra.program.model.lang.Register>","name":"regmap","comment":"","type_short":"Map"},{"type_long":"long","name":"callFrameCFA","comment":"","type_short":"long"},{"type_long":"int","name":"stackPointerIndex","comment":"","type_short":"int"},{"type_long":"boolean","name":"useFPS","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getGhidraReg","comment":"","params":[{"type_long":"int","name":"dwarfRegNum","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"","type_short":"Register"}},{"javadoc":"","static":false,"name":"getCallFrameCFA","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getDWARFStackPointerRegNum","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isUseFormalParameterStorage","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"DWARFRegisterMappings","comment":"Immutable mapping information between DWARF and Ghidra.\n \n Use DWARFRegisterMappingsManager to get an instance for a Program's specific\n language.\n \n The data held in this class is read from DWARF register mapping information contained \n in xml files referenced from the language *.ldefs file in an\n external_name tool=\"DWARF.register.mapping.file\" name=\"register_mapping_filename_here\"\/ \n \n The format is:\n \n dwarf\n   register_mappings\n       !-- Simple single mapping: --\n       !-- NN == dwarf register number --\n       !-- RegName == Ghidra register name string --\n       !-- register_mapping dwarf=\"NN\" ghidra=\"RegName\" \/ --\n       \n       !-- Example: --\n     register_mapping dwarf=\"0\" ghidra=\"r0\" \/\n     \n       !-- Single mapping specifying stack pointer: --\n       !-- NN == dwarf register number --\n       !-- RegName == Ghidra register name string --\n       !-- register_mapping dwarf=\"NN\" ghidra=\"RegName\" stackpointer=\"true\"\/ --\n       \n       !-- Example: --\n     register_mapping dwarf=\"4\" ghidra=\"ESP\" stackpointer=\"true\"\/\n     \n       !-- Multiple mapping: --\n       !-- NN == dwarf register number --\n       !-- XX == number of times to repeat --\n       !-- RegNameYY == Ghidra register name string with a mandatory integer suffix --\n       !-- register_mapping dwarf=\"NN\" ghidra=\"RegNameYY\" auto_count=\"XX\"\/ --\n       \n       !-- Example, creates mapping from 0..12 to r0..r12: --\n     register_mapping dwarf=\"0\" ghidra=\"r0\" auto_count=\"12\"\/\n     \n       !-- Example, creates mapping from 17..32 to XMM0..XMM15: --\n     register_mapping dwarf=\"17\" ghidra=\"XMM0\" auto_count=\"16\"\/\n     \n   \/register_mappings\n   \n     !-- Call Frame CFA Value: --\n   call_frame_cfa value=\"NN\"\/\n   \n     !-- Use Formal Parameter Storage toggle: --\n   use_formal_parameter_storage\/\n \/dwarf\n ","fields":[{"type_long":"ghidra.app.util.bin.format.dwarf4.next.DWARFRegisterMappings","javadoc":"","static":true,"name":"DUMMY","comment":"","type_short":"DWARFRegisterMappings","constant_value":null},{"type_long":"java.util.Map<java.lang.Integer,ghidra.program.model.lang.Register>","javadoc":"","static":false,"name":"dwarfRegisterMap","comment":"","type_short":"Map","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"callFrameCFA","comment":"","type_short":"long","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"stackPointerIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"useFormalParameterStorage","comment":"","type_short":"boolean","constant_value":null}]}
