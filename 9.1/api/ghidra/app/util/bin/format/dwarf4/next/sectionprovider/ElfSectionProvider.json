{"implements":["ghidra.app.util.bin.format.dwarf4.next.sectionprovider.DWARFSectionProvider"],"javadoc":"Fetches DWARF section data from ELF files, directly, without going through\n the Ghidra memory block api.  This section provider usually isn't needed as\n ELF sections are normally provided as Ghidra memory blocks.  In case of extra-\n large binaries, Ghidra may not be able to map the debug sections into memory\n and this section provider will allow the DWARF analyzer to still function.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createSectionProviderFor","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.dwarf4.next.sectionprovider.ElfSectionProvider","comment":"","type_short":"ElfSectionProvider"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.io.File","name":"exeFile","comment":"","type_short":"File"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getSectionAsByteProvider","comment":"","params":[{"type_long":"java.lang.String","name":"sectionName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.bin.ByteProvider","comment":"","type_short":"ByteProvider"}},{"javadoc":"","static":false,"name":"close","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hasSection","comment":"","params":[{"type_long":"java.lang.String[]","name":"sectionNames","comment":"","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"ElfSectionProvider","comment":"Fetches DWARF section data from ELF files, directly, without going through\n the Ghidra memory block api.  This section provider usually isn't needed as\n ELF sections are normally provided as Ghidra memory blocks.  In case of extra-\n large binaries, Ghidra may not be able to map the debug sections into memory\n and this section provider will allow the DWARF analyzer to still function.","fields":[{"type_long":"ghidra.app.util.bin.format.elf.ElfHeader","javadoc":"","static":false,"name":"header","comment":"","type_short":"ElfHeader","constant_value":null},{"type_long":"ghidra.app.util.bin.RandomAccessByteProvider","javadoc":"","static":false,"name":"provider","comment":"","type_short":"RandomAccessByteProvider","constant_value":null}]}
