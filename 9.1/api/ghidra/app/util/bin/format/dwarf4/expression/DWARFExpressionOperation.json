{"implements":[],"javadoc":"An immutable representation of a single {@link DWARFExpression} instruction and its operands.\n <p>\n A DWARF expression operation can take 0, 1, or 2 operands.\n <p>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Create a new DWARF expression opcode element.\n@param opcode numeric value of the opcode, ie. DW_OP_not from {@link DWARFExpressionOpCodes}\n@param operandTypes 'datatype' of the operands\n@param operands value of the operands, pre-converted into longs.\n@param blob if an operand is a byte array (ie. for DW_OP_implicit_value), this is the bytes\n@param offset byte offset of this operation from the start of the DWARF expression.","static":false,"name":"<init>","comment":"Create a new DWARF expression opcode element.","params":[{"type_long":"int","name":"opcode","comment":"numeric value of the opcode, ie. DW_OP_not from DWARFExpressionOpCodes","type_short":"int"},{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionOperandType[]","name":"operandTypes","comment":"'datatype' of the operands","type_short":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionOperandType[]"},{"type_long":"long[]","name":"operands","comment":"value of the operands, pre-converted into longs.","type_short":"long[]"},{"type_long":"byte[]","name":"blob","comment":"if an operand is a byte array (ie. for DW_OP_implicit_value), this is the bytes","type_short":"byte[]"},{"type_long":"int","name":"offset","comment":"byte offset of this operation from the start of the DWARF expression.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"See {@link DWARFExpressionOpCodes} for list of opcodes.\n@return ","static":false,"name":"getOpCode","comment":"See DWARFExpressionOpCodes for list of opcodes.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Get the operand value.\n@param opindex which operand to fetch.\n@return value of operand as a long.","static":false,"name":"getOperandValue","comment":"Get the operand value.","params":[{"type_long":"int","name":"opindex","comment":"which operand to fetch.","type_short":"int"}],"throws":[],"return":{"type_long":"long","comment":"value of operand as a long.","type_short":"long"}},{"javadoc":"Calculates the relative opcode number of this opcode, as compared to a base opcode.\n <p>\n Ie. If this opcode was DW_OP_reg12 (0x5c), and the base op code was DW_OP_reg0 (0x50),\n the result value would be 12.\n <p>\n@param baseOpCode Ordinal value of the opcode that this opcode is being compared ot.\n@return numeric difference between this opcode and the base opcode.","static":false,"name":"getRelativeOpCodeOffset","comment":"Calculates the relative opcode number of this opcode, as compared to a base opcode.\n \n Ie. If this opcode was DW_OP_reg12 (0x5c), and the base op code was DW_OP_reg0 (0x50),\n the result value would be 12.\n ","params":[{"type_long":"int","name":"baseOpCode","comment":"Ordinal value of the opcode that this opcode is being compared ot.","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"numeric difference between this opcode and the base opcode.","type_short":"int"}},{"javadoc":"Return the byte array that contains the bytes of the blob operand.\n@return byte array","static":false,"name":"getBlob","comment":"Return the byte array that contains the bytes of the blob operand.","params":[],"throws":[],"return":{"type_long":"byte[]","comment":"byte array","type_short":"byte[]"}},{"javadoc":"The offset of this opcode, relative to the start of the {@link DWARFExpression}.\n@return ","static":false,"name":"getOffset","comment":"The offset of this opcode, relative to the start of the DWARFExpression.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"DWARFExpressionOperation","comment":"An immutable representation of a single DWARFExpression instruction and its operands.\n \n A DWARF expression operation can take 0, 1, or 2 operands.\n ","fields":[{"type_long":"int","javadoc":"","static":false,"name":"offset","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"opcode","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionOperandType[]","javadoc":"","static":false,"name":"operandTypes","comment":"","type_short":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionOperandType[]","constant_value":null},{"type_long":"long[]","javadoc":"","static":false,"name":"operands","comment":"","type_short":"long[]","constant_value":null},{"type_long":"byte[]","javadoc":"","static":false,"name":"blob","comment":"","type_short":"byte[]","constant_value":null}]}
