{"implements":["ghidra.app.util.bin.StructConverter"],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"","type_short":"BinaryReader"},{"type_long":"ghidra.app.util.bin.format.xcoff.XCoffFileHeader","name":"header","comment":"","type_short":"XCoffFileHeader"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the magic value. The binder assigns the following value: 0x010b.\n@return the magic value","static":false,"name":"getMagic","comment":"Returns the magic value. The binder assigns the following value: 0x010b.","params":[],"throws":[],"return":{"type_long":"short","comment":"the magic value","type_short":"short"}},{"javadoc":"Returns the format version for this auxiliary header.\n The only valid value is 1.\n@return the format version for this auxiliary header","static":false,"name":"getVersionStamp","comment":"Returns the format version for this auxiliary header.\n The only valid value is 1.","params":[],"throws":[],"return":{"type_long":"short","comment":"the format version for this auxiliary header","type_short":"short"}},{"javadoc":"Returns the size (in bytes) of the raw data for the .text section.\n@return the size (in bytes) of the raw data for the .text section","static":false,"name":"getTextSize","comment":"Returns the size (in bytes) of the raw data for the .text section.","params":[],"throws":[],"return":{"type_long":"long","comment":"the size (in bytes) of the raw data for the .text section","type_short":"long"}},{"javadoc":"Returns the size (in bytes) of the raw data for the .data section.\n@return the size (in bytes) of the raw data for the .data section","static":false,"name":"getInitializedDataSize","comment":"Returns the size (in bytes) of the raw data for the .data section.","params":[],"throws":[],"return":{"type_long":"long","comment":"the size (in bytes) of the raw data for the .data section","type_short":"long"}},{"javadoc":"Returns the size (in bytes) of the .bss section.\n No raw data exists in the file for the .bss section.\n@return the size (in bytes) of the .bss section","static":false,"name":"getUninitializedDataSize","comment":"Returns the size (in bytes) of the .bss section.\n No raw data exists in the file for the .bss section.","params":[],"throws":[],"return":{"type_long":"long","comment":"the size (in bytes) of the .bss section","type_short":"long"}},{"javadoc":"Returns the virtual address of the entry point.\n@return the virtual address of the entry point","static":false,"name":"getEntry","comment":"Returns the virtual address of the entry point.","params":[],"throws":[],"return":{"type_long":"long","comment":"the virtual address of the entry point","type_short":"long"}},{"javadoc":"Returns the virtual address of the .text section.\n@return the virtual address of the .text section","static":false,"name":"getTextStart","comment":"Returns the virtual address of the .text section.","params":[],"throws":[],"return":{"type_long":"long","comment":"the virtual address of the .text section","type_short":"long"}},{"javadoc":"Returns the virtual address of the .data section.\n@return the virtual address of the .data section","static":false,"name":"getDataStart","comment":"Returns the virtual address of the .data section.","params":[],"throws":[],"return":{"type_long":"long","comment":"the virtual address of the .data section","type_short":"long"}},{"javadoc":"Returns the virtual address of the TOC anchor.\n@return the virtual address of the TOC anchor","static":false,"name":"getTOC","comment":"Returns the virtual address of the TOC anchor.","params":[],"throws":[],"return":{"type_long":"long","comment":"the virtual address of the TOC anchor","type_short":"long"}},{"javadoc":"Returns the number of the section that contains the entry point.\n The entry point must be in the .text or .data section.\n@return the number of the section that contains the entry point","static":false,"name":"getSectionNumberForEntry","comment":"Returns the number of the section that contains the entry point.\n The entry point must be in the .text or .data section.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of the section that contains the entry point","type_short":"short"}},{"javadoc":"Returns the number of the .text section.\n@return the number of the .text section","static":false,"name":"getSectionNumberForText","comment":"Returns the number of the .text section.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of the .text section","type_short":"short"}},{"javadoc":"Returns the number of the .data section.\n@return the number of the .data section","static":false,"name":"getSectionNumberForData","comment":"Returns the number of the .data section.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of the .data section","type_short":"short"}},{"javadoc":"Returns the number of the section that contains the TOC.\n@return the number of the section that contains the TOC","static":false,"name":"getSectionNumberForTOC","comment":"Returns the number of the section that contains the TOC.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of the section that contains the TOC","type_short":"short"}},{"javadoc":"Returns the number of the section that contains the system loader information.\n@return the number of the section that contains the system loader information","static":false,"name":"getSectionNumberForLoader","comment":"Returns the number of the section that contains the system loader information.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of the section that contains the system loader information","type_short":"short"}},{"javadoc":"Returns the number of the .bss section.\n@return the number of the .bss section","static":false,"name":"getSectionNumberForBss","comment":"Returns the number of the .bss section.","params":[],"throws":[],"return":{"type_long":"short","comment":"the number of the .bss section","type_short":"short"}},{"javadoc":"Returns log (base-2) of the maximum alignment needed for \n any csect in the .text section.\n@return the maximum alignment for the .text section","static":false,"name":"getMaxAlignmentForText","comment":"Returns log (base-2) of the maximum alignment needed for \n any csect in the .text section.","params":[],"throws":[],"return":{"type_long":"short","comment":"the maximum alignment for the .text section","type_short":"short"}},{"javadoc":"Returns log (base-2) of the maximum alignment needed for \n any csect in the .data or .bss section.\n@return the maximum alignment for the .data or .bss section","static":false,"name":"getMaxAlignmentForData","comment":"Returns log (base-2) of the maximum alignment needed for \n any csect in the .data or .bss section.","params":[],"throws":[],"return":{"type_long":"short","comment":"the maximum alignment for the .data or .bss section","type_short":"short"}},{"javadoc":"Returns the module type.\n Valid module types:\n \t\tRO - Specifies a read-only module.\n@return the module type","static":false,"name":"getModuleType","comment":"Returns the module type.\n Valid module types:\n \t\tRO - Specifies a read-only module.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the module type","type_short":"String"}},{"javadoc":"Returns the CPU bit flags.\n@return the CPU bit flags","static":false,"name":"getCpuFlag","comment":"Returns the CPU bit flags.","params":[],"throws":[],"return":{"type_long":"byte","comment":"the CPU bit flags","type_short":"byte"}},{"javadoc":"Reserved. Always returns 0.\n@return always returns 0","static":false,"name":"getCpuType","comment":"Reserved. Always returns 0.","params":[],"throws":[],"return":{"type_long":"byte","comment":"always returns 0","type_short":"byte"}},{"javadoc":"Returns the maximum stack size allowed for this executable.\n If the value is 0, then the default value is used.\n@return the maximum stack size allow for this executable","static":false,"name":"getMaxStackSize","comment":"Returns the maximum stack size allowed for this executable.\n If the value is 0, then the default value is used.","params":[],"throws":[],"return":{"type_long":"long","comment":"the maximum stack size allow for this executable","type_short":"long"}},{"javadoc":"Returns the maximum data size allowed for this executable.\n If the value is 0, then the default value is used.\n@return the maximum data size allow for this executable","static":false,"name":"getMaxDataSize","comment":"Returns the maximum data size allowed for this executable.\n If the value is 0, then the default value is used.","params":[],"throws":[],"return":{"type_long":"long","comment":"the maximum data size allow for this executable","type_short":"long"}},{"javadoc":"This field should be 0. When the loaded program\n is being debugged, the memory image of this field\n may be modified by the debugger to insert\n a trap instruction.\n@return should return 0","static":false,"name":"getDebugger","comment":"This field should be 0. When the loaded program\n is being debugged, the memory image of this field\n may be modified by the debugger to insert\n a trap instruction.","params":[],"throws":[],"return":{"type_long":"long","comment":"should return 0","type_short":"long"}},{"javadoc":"This field consists of 4 1-bit flags and a 4-bit .tdata alignment.\n@return the flags","static":false,"name":"getFlags","comment":"This field consists of 4 1-bit flags and a 4-bit .tdata alignment.","params":[],"throws":[],"return":{"type_long":"byte","comment":"the flags","type_short":"byte"}},{"javadoc":"","static":false,"name":"getSectionNumberForTData","comment":"","params":[],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"","static":false,"name":"getSectionNumberForTBss","comment":"","params":[],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}}],"name":"XCoffOptionalHeader","comment":"","fields":[{"type_long":"char","javadoc":"","static":true,"name":"NL","comment":"","type_short":"char","constant_value":"\n"},{"type_long":"int","javadoc":"","static":true,"name":"AOUTHDRSZ","comment":"","type_short":"int","constant_value":"72"},{"type_long":"short","javadoc":"","static":false,"name":"o_magic","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"o_vstamp","comment":"","type_short":"short","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"o_tsize","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"o_dsize","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"o_bsize","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"o_entry","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"o_text_start","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"o_data_start","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"o_toc","comment":"","type_short":"long","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"o_snentry","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"o_sntext","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"o_sndata","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"o_sntoc","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"o_snloader","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"o_snbss","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"o_algntext","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"o_algndata","comment":"","type_short":"short","constant_value":null},{"type_long":"byte[]","javadoc":"","static":false,"name":"o_modtype","comment":"","type_short":"byte[]","constant_value":null},{"type_long":"byte","javadoc":"","static":false,"name":"o_cpuflag","comment":"","type_short":"byte","constant_value":null},{"type_long":"byte","javadoc":"","static":false,"name":"o_cputype","comment":"","type_short":"byte","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"o_maxstack","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"o_maxdata","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"o_debugger","comment":"","type_short":"long","constant_value":null},{"type_long":"byte","javadoc":"","static":false,"name":"o_flags","comment":"","type_short":"byte","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"o_sntdata","comment":"","type_short":"short","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"o_sntbss","comment":"","type_short":"short","constant_value":null}]}
