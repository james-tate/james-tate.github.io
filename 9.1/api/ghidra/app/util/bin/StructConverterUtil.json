{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This is a convenience method for converting a class into structure.\n The class is reflected to extract the field members.\n Only private non-static fields are considered.\n Any field names that start with underscore (\"_\") are ignored.\n@param object the object to reflect\n@return a structure representing the class fields.","static":true,"name":"toDataType","comment":"This is a convenience method for converting a class into structure.\n The class is reflected to extract the field members.\n Only private non-static fields are considered.\n Any field names that start with underscore (\"_\") are ignored.","params":[{"type_long":"java.lang.Object","name":"object","comment":"the object to reflect","type_short":"Object"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"a structure representing the class fields.","type_short":"DataType"}},{"javadoc":"This is a convenience method for converting a class into structure.\n The class is reflected to extract the field members.\n Only private non-static fields are considered.\n Any field names that start with underscore (\"_\") are ignored.\n@param clazz the class to reflect\n@return a structure representing the class fields.","static":true,"name":"toDataType","comment":"This is a convenience method for converting a class into structure.\n The class is reflected to extract the field members.\n Only private non-static fields are considered.\n Any field names that start with underscore (\"_\") are ignored.","params":[{"type_long":"java.lang.Class<?>","name":"clazz","comment":"the class to reflect","type_short":"Class"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"a structure representing the class fields.","type_short":"DataType"}},{"javadoc":"","static":true,"name":"toDataType","comment":"","params":[{"type_long":"java.lang.Class<?>","name":"clazz","comment":"","type_short":"Class"},{"type_long":"java.lang.Object","name":"object","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":true,"name":"getFields","comment":"","params":[{"type_long":"java.lang.Class<?>","name":"clazz","comment":"","type_short":"Class"}],"throws":[],"return":{"type_long":"java.util.List<java.lang.reflect.Field>","comment":"","type_short":"List"}},{"javadoc":"","static":true,"name":"isValidField","comment":"","params":[{"type_long":"java.lang.reflect.Field","name":"field","comment":"","type_short":"Field"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":true,"name":"getDataType","comment":"","params":[{"type_long":"java.lang.reflect.Field","name":"field","comment":"","type_short":"Field"},{"type_long":"java.lang.Object","name":"object","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":true,"name":"getArrayDataType","comment":"","params":[{"type_long":"java.lang.reflect.Field","name":"field","comment":"","type_short":"Field"},{"type_long":"java.lang.Object","name":"object","comment":"","type_short":"Object"},{"type_long":"java.lang.Class<?>","name":"clazz","comment":"","type_short":"Class"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":true,"name":"parseName","comment":"","params":[{"type_long":"java.lang.Class<?>","name":"clazz","comment":"","type_short":"Class"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"main","comment":"","params":[{"type_long":"java.lang.String[]","name":"args","comment":"","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"StructConverterUtil","comment":"","fields":[]}
