{"implements":[],"javadoc":"The manager responsible for reading and writing a program in XML.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new program XML manager using the specified file.\n The file should be an XML file.\n@param file the XML file","static":false,"name":"<init>","comment":"Constructs a new program XML manager using the specified file.\n The file should be an XML file.","params":[{"type_long":"java.io.File","name":"file","comment":"the XML file","type_short":"File"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new program XML manager using the specified {@link ByteProvider}.\n <p>\n If {@link ByteProvider} has a {@link FSRL} and it is a simple local filepath,\n convert that to a normal local java.io.File instance instead of using the\n {@link ByteProvider}'s File property which is probably located in the\n {@link FileSystemService} filecache directory, which will break the ability\n to find the *.bytes file associated with this .xml file.\n <p>\n This workaround will not help xml files that are truly embedded in a GFileSystem\n (ie. in a .zip file).\n@param bp","static":false,"name":"<init>","comment":"Constructs a new program XML manager using the specified ByteProvider.\n \n If ByteProvider has a FSRL and it is a simple local filepath,\n convert that to a normal local java.io.File instance instead of using the\n ByteProvider's File property which is probably located in the\n FileSystemService filecache directory, which will break the ability\n to find the *.bytes file associated with this .xml file.\n \n This workaround will not help xml files that are truly embedded in a GFileSystem\n (ie. in a .zip file).","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"bp","comment":"","type_short":"ByteProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the program info from the underlying file. T``his method\n does not make sense to invoke if a write is being performed\n to a new file.\n@return the program info\n@throws SAXException if an XML error occurs\n@throws IOException if an I\/O error occurs","static":false,"name":"getProgramInfo","comment":"Returns the program info from the underlying file. T``his method\n does not make sense to invoke if a write is being performed\n to a new file.","params":[],"throws":[{"type_long":"org.xml.sax.SAXException","comment":"if an XML error occurs","type_short":"SAXException"},{"type_long":"java.io.IOException","comment":"if an I\/O error occurs","type_short":"IOException"}],"return":{"type_long":"ghidra.app.util.xml.ProgramInfo","comment":"the program info","type_short":"ProgramInfo"}},{"javadoc":"","static":false,"name":"getForCompilerTag","comment":"","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Reads from the underlying XML file and populates the specified program.\n@param program the program to load the XML into\n@param monitor the task monitor\n@param options the XML options, which features to load and to ignore\n@return the message log containing any warning\/error messages\n@throws SAXException if an XML error occurs\n@throws IOException if an I\/O occurs\n@throws AddressFormatException if an invalid address is specified in the XML","static":false,"name":"read","comment":"Reads from the underlying XML file and populates the specified program.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to load the XML into","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.xml.XmlProgramOptions","name":"options","comment":"the XML options, which features to load and to ignore","type_short":"XmlProgramOptions"}],"throws":[{"type_long":"org.xml.sax.SAXException","comment":"if an XML error occurs","type_short":"SAXException"},{"type_long":"java.io.IOException","comment":"if an I\/O occurs","type_short":"IOException"},{"type_long":"ghidra.program.model.address.AddressFormatException","comment":"if an invalid address is specified in the XML","type_short":"AddressFormatException"}],"return":{"type_long":"ghidra.app.util.importer.MessageLog","comment":"the message log containing any warning\/error messages","type_short":"MessageLog"}},{"javadoc":"Converts from a generic format name to standard Ghidra names;\n@param name the generic format name\n@return the equivalent Ghidra name","static":true,"name":"getStandardName","comment":"Converts from a generic format name to standard Ghidra names;","params":[{"type_long":"java.lang.String","name":"name","comment":"the generic format name","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the equivalent Ghidra name","type_short":"String"}},{"javadoc":"","static":false,"name":"isOldXml","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"createDefaultTree","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.app.util.xml.XmlProgramOptions","name":"options","comment":"","type_short":"XmlProgramOptions"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Writes the specified program in XML into the underlying file.\n@param program the program to write into XML\n@param addrSet an address set to limit areas of program that written, or null for entire program\n@param monitor the task monitor\n@param options the XML options to limit what is and is not written out\n@return the message log containing any warning\/error messages\n@throws IOException if an I\/O occurs\n@throws CancelledException if the user cancels the read","static":false,"name":"write","comment":"Writes the specified program in XML into the underlying file.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to write into XML","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"an address set to limit areas of program that written, or null for entire program","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.xml.XmlProgramOptions","name":"options","comment":"the XML options to limit what is and is not written out","type_short":"XmlProgramOptions"}],"throws":[{"type_long":"java.io.IOException","comment":"if an I\/O occurs","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancels the read","type_short":"CancelledException"}],"return":{"type_long":"ghidra.app.util.importer.MessageLog","comment":"the message log containing any warning\/error messages","type_short":"MessageLog"}},{"javadoc":"","static":false,"name":"writeProgramElements","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.util.xml.XmlWriter","name":"writer","comment":"","type_short":"XmlWriter"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"","type_short":"MessageLog"},{"type_long":"ghidra.app.util.xml.XmlProgramOptions","name":"options","comment":"","type_short":"XmlProgramOptions"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"writeInfoSource","comment":"","params":[{"type_long":"ghidra.util.xml.XmlWriter","name":"writer","comment":"","type_short":"XmlWriter"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"writeProcessor","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.util.xml.XmlWriter","name":"writer","comment":"","type_short":"XmlWriter"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ProgramXmlMgr","comment":"The manager responsible for reading and writing a program in XML.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"PROGRAM_DTD","comment":"","type_short":"String","constant_value":"\"program_dtd\""},{"type_long":"int","javadoc":"","static":false,"name":"dtdVersion","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.app.util.xml.ProgramInfo","javadoc":"","static":false,"name":"info","comment":"","type_short":"ProgramInfo","constant_value":null},{"type_long":"java.io.File","javadoc":"","static":false,"name":"file","comment":"","type_short":"File","constant_value":null}]}
