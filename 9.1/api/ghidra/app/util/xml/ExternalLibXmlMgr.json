{"implements":[],"javadoc":"XML for external library table for resolved external references.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Process the entry point section of the XML file.\n@param parser xml reader\n@param monitor monitor that can be canceled","static":false,"name":"read","comment":"Process the entry point section of the XML file.","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"xml reader","type_short":"XmlPullParser"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"monitor that can be canceled","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Write out the XML for the external library table.\n@param writer writer for XML\n@param monitor monitor that can be canceled\n should be written\n@throws IOException","static":false,"name":"write","comment":"Write out the XML for the external library table.","params":[{"type_long":"ghidra.util.xml.XmlWriter","name":"writer","comment":"writer for XML","type_short":"XmlWriter"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"monitor that can be canceled\n should be written","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processExternalLib","comment":"","params":[{"type_long":"ghidra.xml.XmlElement","name":"element","comment":"","type_short":"XmlElement"},{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ExternalLibXmlMgr","comment":"XML for external library table for resolved external references.","fields":[{"type_long":"ghidra.app.util.importer.MessageLog","javadoc":"","static":false,"name":"log","comment":"","type_short":"MessageLog","constant_value":null},{"type_long":"ghidra.program.model.symbol.ExternalManager","javadoc":"","static":false,"name":"extManager","comment":"","type_short":"ExternalManager","constant_value":null}]}
