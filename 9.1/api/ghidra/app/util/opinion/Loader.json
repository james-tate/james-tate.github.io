{"implements":["ghidra.util.classfinder.ExtensionPoint","java.lang.Comparable"],"javadoc":"An interface that all loaders must implement. A particular loader implementation should be \n designed to identify one and only one file format.\n <p>\n NOTE:  ALL loader CLASSES MUST END IN \"Loader\".  If not, the {@link ClassSearcher} will not find \n them.","static":false,"methods":[{"javadoc":"If this {@link Loader} supports loading the given {@link ByteProvider}, this methods returns\n a {@link Collection} of all supported {@link LoadSpec}s that contain discovered load \n specification information that this {@link Loader} will need to load.  If this {@link Loader}\n cannot support loading the given {@link ByteProvider}, an empty {@link Collection} is\n returned.\n@param provider The bytes being loaded.\n@return A {@link Collection} of {@link LoadSpec}s that this {@link Loader} supports loading, \n   or an empty {@link Collection} if this {@link Loader} doesn't support loading the given \n   {@link ByteProvider}.\n@throws IOException if there was an IO-related issue finding the {@link LoadSpec}s.","static":false,"name":"findSupportedLoadSpecs","comment":"If this Loader supports loading the given ByteProvider, this methods returns\n a Collection of all supported LoadSpecs that contain discovered load \n specification information that this Loader will need to load.  If this Loader\n cannot support loading the given ByteProvider, an empty Collection is\n returned.","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"The bytes being loaded.","type_short":"ByteProvider"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was an IO-related issue finding the LoadSpecs.","type_short":"IOException"}],"return":{"type_long":"java.util.Collection<ghidra.app.util.opinion.LoadSpec>","comment":"A Collection of LoadSpecs that this Loader supports loading, \n   or an empty Collection if this Loader doesn't support loading the given \n   ByteProvider.","type_short":"Collection"}},{"javadoc":"Loads bytes in a particular format as a new {@link DomainObject}. \n Multiple {@link DomainObject}s may end up getting created, depending on the nature of the\n format.\n@param provider The bytes to load.\n@param name The name of the thing that's being loaded.\n@param folder The {@link DomainFolder} where the loaded thing should be saved.  Could be\n   null if the thing should not be pre-saved.\n@param loadSpec The {@link LoadSpec} to use during load.\n@param options The load options.\n@param messageLog The message log.\n@param consumer A consumer object for {@link DomainObject} generated.\n@param monitor A cancelable task monitor.\n@return A list of loaded {@link DomainObject}s (element 0 corresponds to primary loaded \n   object).\n@throws IOException if there was an IO-related problem loading.\n@throws CancelledException if the user cancelled the load.\n@throws DuplicateNameException if the load resulted in a naming conflict with the \n   {@link DomainObject}.\n@throws InvalidNameException if an invalid {@link DomainObject} name was used during load.\n@throws VersionException if there was an issue with database versions, probably due to a\n   failed language upgrade.","static":false,"name":"load","comment":"Loads bytes in a particular format as a new DomainObject. \n Multiple DomainObjects may end up getting created, depending on the nature of the\n format.","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"The bytes to load.","type_short":"ByteProvider"},{"type_long":"java.lang.String","name":"name","comment":"The name of the thing that's being loaded.","type_short":"String"},{"type_long":"ghidra.framework.model.DomainFolder","name":"folder","comment":"The DomainFolder where the loaded thing should be saved.  Could be\n   null if the thing should not be pre-saved.","type_short":"DomainFolder"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"The LoadSpec to use during load.","type_short":"LoadSpec"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"The load options.","type_short":"List"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"messageLog","comment":"The message log.","type_short":"MessageLog"},{"type_long":"java.lang.Object","name":"consumer","comment":"A consumer object for DomainObject generated.","type_short":"Object"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"A cancelable task monitor.","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was an IO-related problem loading.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancelled the load.","type_short":"CancelledException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"if the load resulted in a naming conflict with the \n   DomainObject.","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"if an invalid DomainObject name was used during load.","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"if there was an issue with database versions, probably due to a\n   failed language upgrade.","type_short":"VersionException"}],"return":{"type_long":"java.util.List<ghidra.framework.model.DomainObject>","comment":"A list of loaded DomainObjects (element 0 corresponds to primary loaded \n   object).","type_short":"List"}},{"javadoc":"Loads bytes into the specified {@link Program}.  This method will not create any new \n {@link Program}s.  It is only for adding to an existing {@link Program}.\n@param provider The bytes to load into the {@link Program}.\n@param loadSpec The {@link LoadSpec} to use during load.\n@param options The load options.\n@param messageLog The message log.\n@param program The {@link Program} to load into.\n@param monitor A cancelable task monitor.\n@return True if the file was successfully loaded; otherwise, false.\n@throws IOException if there was an IO-related problem loading.\n@throws CancelledException if the user cancelled the load.","static":false,"name":"loadInto","comment":"Loads bytes into the specified Program.  This method will not create any new \n Programs.  It is only for adding to an existing Program.","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"The bytes to load into the Program.","type_short":"ByteProvider"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"The LoadSpec to use during load.","type_short":"LoadSpec"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"The load options.","type_short":"List"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"messageLog","comment":"The message log.","type_short":"MessageLog"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The Program to load into.","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"A cancelable task monitor.","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was an IO-related problem loading.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancelled the load.","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"True if the file was successfully loaded; otherwise, false.","type_short":"boolean"}},{"javadoc":"Gets the default {@link Loader} options.\n@param provider The bytes of the thing being loaded.\n@param loadSpec The {@link LoadSpec}.\n@param domainObject The {@link DomainObject} being loaded.\n@param loadIntoProgram True if the load is adding to an existing {@link DomainObject}; \n   otherwise, false.\n@return A list of the {@link Loader}'s default options.","static":false,"name":"getDefaultOptions","comment":"Gets the default Loader options.","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"The bytes of the thing being loaded.","type_short":"ByteProvider"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"The LoadSpec.","type_short":"LoadSpec"},{"type_long":"ghidra.framework.model.DomainObject","name":"domainObject","comment":"The DomainObject being loaded.","type_short":"DomainObject"},{"type_long":"boolean","name":"loadIntoProgram","comment":"True if the load is adding to an existing DomainObject; \n   otherwise, false.","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.Option>","comment":"A list of the Loader's default options.","type_short":"List"}},{"javadoc":"Validates the {@link Loader}'s options and returns null if all options are valid; otherwise, \n an error message describing the problem is returned.\n@param provider The bytes of the thing being loaded.\n@param loadSpec The proposed {@link LoadSpec}.\n@param options The list of {@link Option}s to validate.\n@param program existing program if the loader is adding to an existing program. If it is\n a fresh import, then this will be null.\n@return null if all {@link Option}s are valid; otherwise, an error message describing the \n   problem is returned.","static":false,"name":"validateOptions","comment":"Validates the Loader's options and returns null if all options are valid; otherwise, \n an error message describing the problem is returned.","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"The bytes of the thing being loaded.","type_short":"ByteProvider"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"The proposed LoadSpec.","type_short":"LoadSpec"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"The list of Options to validate.","type_short":"List"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"existing program if the loader is adding to an existing program. If it is\n a fresh import, then this will be null.","type_short":"Program"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"null if all Options are valid; otherwise, an error message describing the \n   problem is returned.","type_short":"String"}},{"javadoc":"Gets the {@link Loader}'s name, which is used both for display purposes, and to identify the \n {@link Loader} in the opinion files.\n@return The {@link Loader}'s name.","static":false,"name":"getName","comment":"Gets the Loader's name, which is used both for display purposes, and to identify the \n Loader in the opinion files.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"The Loader's name.","type_short":"String"}},{"javadoc":"For ordering purposes; lower tier numbers are more important (and listed\n first).\n@return the tier of the loader","static":false,"name":"getTier","comment":"For ordering purposes; lower tier numbers are more important (and listed\n first).","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.opinion.LoaderTier","comment":"the tier of the loader","type_short":"LoaderTier"}},{"javadoc":"For ordering purposes; lower numbers are more important (and listed\n first, within its tier).\n@return the ordering of the loader within its tier","static":false,"name":"getTierPriority","comment":"For ordering purposes; lower numbers are more important (and listed\n first, within its tier).","params":[],"throws":[],"return":{"type_long":"int","comment":"the ordering of the loader within its tier","type_short":"int"}},{"javadoc":"The preferred file name to use when loading.\n <p>\n The default behavior of this method is to return the (cleaned up) name of the given \n   {@link ByteProvider}.\n <p>\n NOTE: This method may get called frequently, so only parse the given {@link ByteProvider}\n if absolutely necessary.\n@param provider The bytes to load.\n@return The preferred file name to use when loading.","static":false,"name":"getPreferredFileName","comment":"The preferred file name to use when loading.\n \n The default behavior of this method is to return the (cleaned up) name of the given \n   ByteProvider.\n \n NOTE: This method may get called frequently, so only parse the given ByteProvider\n if absolutely necessary.","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"The bytes to load.","type_short":"ByteProvider"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"The preferred file name to use when loading.","type_short":"String"}},{"javadoc":"Checks to see if this {@link Loader} supports loading into an existing {@link Program}.\n <p>\n The default behavior of this method is to return false.\n@return True if this {@link Loader} supports loading into an existing {@link Program}; \n   otherwise, false.","static":false,"name":"supportsLoadIntoProgram","comment":"Checks to see if this Loader supports loading into an existing Program.\n \n The default behavior of this method is to return false.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"True if this Loader supports loading into an existing Program; \n   otherwise, false.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"compareTo","comment":"","params":[{"type_long":"ghidra.app.util.opinion.Loader","name":"o","comment":"","type_short":"Loader"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"Loader","comment":"An interface that all loaders must implement. A particular loader implementation should be \n designed to identify one and only one file format.\n \n NOTE:  ALL loader CLASSES MUST END IN \"Loader\".  If not, the ClassSearcher will not find \n them.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"COMMAND_LINE_ARG_PREFIX","comment":"","type_short":"String","constant_value":"\"-loader\""}]}
