{"implements":[],"javadoc":"","static":false,"extends":"ghidra.app.util.opinion.AbstractLibrarySupportLoader","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"OMF usually stores a string describing the compiler that produced it in a\n translator comment.  This routine maps this string to official\n \"secondary constraint\" used by the Ghidra opinion service to pick a\n language module for the program\n@param record is the translator comment string\n@return the \"secondary constraint\"","static":false,"name":"mapTranslator","comment":"OMF usually stores a string describing the compiler that produced it in a\n translator comment.  This routine maps this string to official\n \"secondary constraint\" used by the Ghidra opinion service to pick a\n language module for the program","params":[{"type_long":"java.lang.String","name":"record","comment":"is the translator comment string","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the \"secondary constraint\"","type_short":"String"}},{"javadoc":"","static":false,"name":"findSupportedLoadSpecs","comment":"","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"","type_short":"ByteProvider"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.util.Collection<ghidra.app.util.opinion.LoadSpec>","comment":"","type_short":"Collection"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"load","comment":"","params":[{"type_long":"ghidra.app.util.bin.ByteProvider","name":"provider","comment":"","type_short":"ByteProvider"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"","type_short":"LoadSpec"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"","type_short":"List"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"","type_short":"MessageLog"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Log a (hopefully) descriptive error, if we can't process a specific relocation\n@param program is the Program\n@param log will receive the error message\n@param state is the relocation record that could not be processed","static":false,"name":"relocationError","comment":"Log a (hopefully) descriptive error, if we can't process a specific relocation","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"is the Program","type_short":"Program"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"will receive the error message","type_short":"MessageLog"},{"type_long":"ghidra.app.util.bin.format.omf.OmfFixupRecord.FixupState","name":"state","comment":"is the relocation record that could not be processed","type_short":"FixupState"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Process an relocation (FIXUPP) records and create formal Ghidra relocation objects\n@param header is the file header for the program\n@param program is the Program\n@param monitor is checked for cancellation\n@param log receives error messages","static":false,"name":"processRelocations","comment":"Process an relocation (FIXUPP) records and create formal Ghidra relocation objects","params":[{"type_long":"ghidra.app.util.bin.format.omf.OmfFileHeader","name":"header","comment":"is the file header for the program","type_short":"OmfFileHeader"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"is the Program","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"is checked for cancellation","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"receives error messages","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Run through the OMF segments an produce Ghidra memory blocks.\n Most segments cause an initialized block to be created, but if a segment\n consists only of a string of zero bytes, as described by a compact LIDATA record,\n an uninitialized block is created.\n@param reader is a reader for the underlying file\n@param header is the OMF file header\n@param program is the Program\n@param mbu is the block creation utility\n@param monitor is checked for cancellation\n@param log receives error messages\n@throws AddressOverflowException if the underlying data stream causes an address to wrap\n@throws IOException for problems accessing the OMF file through the reader","static":false,"name":"processSegmentHeaders","comment":"Run through the OMF segments an produce Ghidra memory blocks.\n Most segments cause an initialized block to be created, but if a segment\n consists only of a string of zero bytes, as described by a compact LIDATA record,\n an uninitialized block is created.","params":[{"type_long":"ghidra.app.util.bin.BinaryReader","name":"reader","comment":"is a reader for the underlying file","type_short":"BinaryReader"},{"type_long":"ghidra.app.util.bin.format.omf.OmfFileHeader","name":"header","comment":"is the OMF file header","type_short":"OmfFileHeader"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"is the Program","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"is checked for cancellation","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"receives error messages","type_short":"MessageLog"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"if the underlying data stream causes an address to wrap","type_short":"AddressOverflowException"},{"type_long":"java.io.IOException","comment":"for problems accessing the OMF file through the reader","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Locate the start of a free range of memory (for holding external symbols)\n by finding an Address beyond any memory block in the program\n@param program is the Program\n@return the starting address of the free region","static":false,"name":"findFreeAddress","comment":"Locate the start of a free range of memory (for holding external symbols)\n by finding an Address beyond any memory block in the program","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"is the Program","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the starting address of the free region","type_short":"Address"}},{"javadoc":"Process any public symbol records and produce corresponding Ghidra symbols\n@param header is the file header for the program\n@param program is the Program\n@param monitor is checked for cancellations\n@param log receives any error messages","static":false,"name":"processPublicSymbols","comment":"Process any public symbol records and produce corresponding Ghidra symbols","params":[{"type_long":"ghidra.app.util.bin.format.omf.OmfFileHeader","name":"header","comment":"is the file header for the program","type_short":"OmfFileHeader"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"is the Program","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"is checked for cancellations","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"receives any error messages","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create an OMF symbol in the program\n@param symbol is the symbol record\n@param address is the resolved address for the symbol\n@param symbolTable is the table to hold the symbol\n@param log is used to log error messages\n@return true if there are no errors creating the symbol","static":false,"name":"createSymbol","comment":"Create an OMF symbol in the program","params":[{"type_long":"ghidra.app.util.bin.format.omf.OmfSymbol","name":"symbol","comment":"is the symbol record","type_short":"OmfSymbol"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"is the resolved address for the symbol","type_short":"Address"},{"type_long":"ghidra.program.model.symbol.SymbolTable","name":"symbolTable","comment":"is the table to hold the symbol","type_short":"SymbolTable"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"is used to log error messages","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"boolean","comment":"true if there are no errors creating the symbol","type_short":"boolean"}},{"javadoc":"Process any external symbol records and create the corresponding Ghidra symbols.\n Build an external memory block to hold them if necessary\n@param header is the file header for the program\n@param program is the Program\n@param monitor is checked for cancellation\n@param log receives error messages","static":false,"name":"processExternalSymbols","comment":"Process any external symbol records and create the corresponding Ghidra symbols.\n Build an external memory block to hold them if necessary","params":[{"type_long":"ghidra.app.util.bin.format.omf.OmfFileHeader","name":"header","comment":"is the file header for the program","type_short":"OmfFileHeader"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"is the Program","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"is checked for cancellation","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"receives error messages","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"If necessary, create an external block to hold external symbols for this file\n@param program is the program representing the file\n@param log for error messages\n@param externalAddress is the address of the first byte of the external block\n@param externalAddressStart is the address of the last byte (+1)","static":false,"name":"createExternalBlock","comment":"If necessary, create an external block to hold external symbols for this file","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"is the program representing the file","type_short":"Program"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"for error messages","type_short":"MessageLog"},{"type_long":"ghidra.program.model.address.Address","name":"externalAddress","comment":"is the address of the first byte of the external block","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"externalAddressStart","comment":"is the address of the last byte (+1)","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create undefined data at a specific address in the program\n@param listing is the Program listing\n@param memory is the Program Memory\n@param addr is the Address of the data\n@param size is the number of bytes in the data\n@return the new created Data object\n@throws CodeUnitInsertionException if the new data conflicts with another object\n@throws DataTypeConflictException if the data-type cannot be created","static":false,"name":"createUndefined","comment":"Create undefined data at a specific address in the program","params":[{"type_long":"ghidra.program.model.listing.Listing","name":"listing","comment":"is the Program listing","type_short":"Listing"},{"type_long":"ghidra.program.model.mem.Memory","name":"memory","comment":"is the Program Memory","type_short":"Memory"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"is the Address of the data","type_short":"Address"},{"type_long":"int","name":"size","comment":"is the number of bytes in the data","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.util.CodeUnitInsertionException","comment":"if the new data conflicts with another object","type_short":"CodeUnitInsertionException"},{"type_long":"ghidra.program.model.data.DataTypeConflictException","comment":"if the data-type cannot be created","type_short":"DataTypeConflictException"}],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"the new created Data object","type_short":"Data"}}],"name":"OmfLoader","comment":"","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"OMF_NAME","comment":"","type_short":"String","constant_value":"\"Relocatable Object Module Format (OMF)\""},{"type_long":"long","javadoc":"","static":true,"name":"MIN_BYTE_LENGTH","comment":"","type_short":"long","constant_value":"11"},{"type_long":"long","javadoc":"","static":true,"name":"IMAGE_BASE","comment":"","type_short":"long","constant_value":"8192"},{"type_long":"long","javadoc":"","static":true,"name":"MAX_UNINITIALIZED_FILL","comment":"","type_short":"long","constant_value":"8192"},{"type_long":"java.util.ArrayList<ghidra.app.util.bin.format.omf.OmfSymbol>","javadoc":"","static":false,"name":"externsyms","comment":"","type_short":"ArrayList","constant_value":null}]}
