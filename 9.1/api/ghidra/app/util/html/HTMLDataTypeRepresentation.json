{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createSpace","comment":"","params":[{"type_long":"int","name":"numberOfSpaces","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"addDataTypeLength","comment":"","params":[{"type_long":"java.lang.String","name":"dataTypeLengthString","comment":"","type_short":"String"},{"type_long":"java.lang.StringBuilder","name":"buffer","comment":"","type_short":"StringBuilder"}],"throws":[],"return":{"type_long":"java.lang.StringBuilder","comment":"","type_short":"StringBuilder"}},{"javadoc":"","static":true,"name":"addDataTypeLength","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"},{"type_long":"java.lang.StringBuffer","name":"buffer","comment":"","type_short":"StringBuffer"}],"throws":[],"return":{"type_long":"java.lang.StringBuffer","comment":"","type_short":"StringBuffer"}},{"javadoc":"Returns the plain-text value of the data type's description.\n <p>\n If there were html tags in the string, they are escaped.\n@param dataType the type to get the description \/ comment for\n@return plain-text string, w\/html escaped","static":true,"name":"getCommentForDataType","comment":"Returns the plain-text value of the data type's description.\n \n If there were html tags in the string, they are escaped.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"the type to get the description \/ comment for","type_short":"DataType"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"plain-text string, w\/html escaped","type_short":"String"}},{"javadoc":"","static":true,"name":"truncateAsNecessary","comment":"","params":[{"type_long":"java.lang.String","name":"string","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"truncateAsNecessary","comment":"","params":[{"type_long":"java.lang.String","name":"string","comment":"","type_short":"String"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Formats a multi-line plain-text comment string into a HTML string where the text has been\n wrapped at MAX_LINE_LENGTH.\n@param string plain-text string\n@return list of html strings","static":true,"name":"breakCommentAsNecessary","comment":"Formats a multi-line plain-text comment string into a HTML string where the text has been\n wrapped at MAX_LINE_LENGTH.","params":[{"type_long":"java.lang.String","name":"string","comment":"plain-text string","type_short":"String"}],"throws":[],"return":{"type_long":"java.util.List<java.lang.String>","comment":"list of html strings","type_short":"List"}},{"javadoc":"","static":true,"name":"breakLongLineAtWordBoundaries","comment":"","params":[{"type_long":"java.lang.String","name":"lineStr","comment":"","type_short":"String"},{"type_long":"int","name":"maxLineLen","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.util.List<java.lang.String>","comment":"","type_short":"List"}},{"javadoc":"","static":true,"name":"wrapStringInColor","comment":"","params":[{"type_long":"java.lang.String","name":"string","comment":"","type_short":"String"},{"type_long":"java.awt.Color","name":"color","comment":"","type_short":"Color"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Formats a multi-line plain-text comment as a list of HTML marked-up lines.\n@param comment multi-line plain-text string\n@param maxLines max number of formatted lines to return\n@return list of html marked-up {@link TextLine}s","static":true,"name":"createCommentLines","comment":"Formats a multi-line plain-text comment as a list of HTML marked-up lines.","params":[{"type_long":"java.lang.String","name":"comment","comment":"multi-line plain-text string","type_short":"String"},{"type_long":"int","name":"maxLines","comment":"max number of formatted lines to return","type_short":"int"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.html.TextLine>","comment":"list of html marked-up TextLines","type_short":"List"}},{"javadoc":"Returns a data type that can later be located","static":true,"name":"getLocatableDataType","comment":"Returns a data type that can later be located","params":[{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"Default constructor for those who promise to later set the HTML text","static":false,"name":"<init>","comment":"Default constructor for those who promise to later set the HTML text","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Convenience constructor for those representations that don't really do much, like diffing.","static":false,"name":"<init>","comment":"Convenience constructor for those representations that don't really do much, like diffing.","params":[{"type_long":"java.lang.String","name":"htmlText","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getHTMLString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"This is like {@link #getHTMLString()}, but does not put HTML tags around the data.","static":false,"name":"getHTMLContentString","comment":"This is like #getHTMLString(), but does not put HTML tags around the data.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Compares this representation and the given representation creates a diff string for both\n representations.\n@param otherRepresentation the other representation to diff against.\n@return An array of two strings: the first is this object's diff value, the second is the\n         given objects diff value.","static":false,"name":"diff","comment":"Compares this representation and the given representation creates a diff string for both\n representations.","params":[{"type_long":"ghidra.app.util.html.HTMLDataTypeRepresentation","name":"otherRepresentation","comment":"the other representation to diff against.","type_short":"HTMLDataTypeRepresentation"}],"throws":[],"return":{"type_long":"ghidra.app.util.html.HTMLDataTypeRepresentation[]","comment":"An array of two strings: the first is this object's diff value, the second is the\n         given objects diff value.","type_short":"ghidra.app.util.html.HTMLDataTypeRepresentation[]"}},{"javadoc":"","static":false,"name":"buildHeaderText","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.html.ValidatableLine>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"buildFooterText","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"ghidra.app.util.html.TextLine","comment":"","type_short":"TextLine"}},{"javadoc":"","static":false,"name":"getDiffInput","comment":"","params":[{"type_long":"ghidra.app.util.html.ValidatableLine","name":"line","comment":"","type_short":"ValidatableLine"}],"throws":[],"return":{"type_long":"ghidra.app.util.html.HTMLDataTypeRepresentationDiffInput","comment":"","type_short":"HTMLDataTypeRepresentationDiffInput"}},{"javadoc":"","static":false,"name":"getDiffInput","comment":"","params":[{"type_long":"java.util.List<ghidra.app.util.html.ValidatableLine>","name":"lines","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"ghidra.app.util.html.HTMLDataTypeRepresentationDiffInput","comment":"","type_short":"HTMLDataTypeRepresentationDiffInput"}},{"javadoc":"","static":false,"name":"completelyDifferentDiff","comment":"","params":[{"type_long":"ghidra.app.util.html.HTMLDataTypeRepresentation","name":"other","comment":"","type_short":"HTMLDataTypeRepresentation"}],"throws":[],"return":{"type_long":"ghidra.app.util.html.HTMLDataTypeRepresentation[]","comment":"","type_short":"ghidra.app.util.html.HTMLDataTypeRepresentation[]"}},{"javadoc":"","static":false,"name":"copyLines","comment":"","params":[{"type_long":"java.util.List<ghidra.app.util.html.ValidatableLine>","name":"lines","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.html.ValidatableLine>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"diffTextLine","comment":"","params":[{"type_long":"ghidra.app.util.html.TextLine","name":"textLine","comment":"","type_short":"TextLine"},{"type_long":"ghidra.app.util.html.TextLine","name":"otherTextLine","comment":"","type_short":"TextLine"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Extension point for adding empty lines.  Subclasses that do not wish to use the default\n empty text line can override this method.","static":false,"name":"createPlaceHolderLine","comment":"Extension point for adding empty lines.  Subclasses that do not wish to use the default\n empty text line can override this method.","params":[{"type_long":"ghidra.app.util.html.ValidatableLine","name":"oppositeLine","comment":"","type_short":"ValidatableLine"}],"throws":[],"return":{"type_long":"ghidra.app.util.html.PlaceHolderLine","comment":"","type_short":"PlaceHolderLine"}}],"name":"HTMLDataTypeRepresentation","comment":"","fields":[{"type_long":"java.lang.String","javadoc":"HACK: for some reason when opening the HTML document with '&#47;', all text until the\n next HTML tag is not displayed.  So, we put in a dummy tag and all is well.\n Java 1.5.0_12","static":true,"name":"EMPTY_TAG","comment":"HACK: for some reason when opening the HTML document with '', all text until the\n next HTML tag is not displayed.  So, we put in a dummy tag and all is well.\n Java 1.5.0_12","type_short":"String","constant_value":"\"<I><\/I>\""},{"type_long":"int","javadoc":"","static":true,"name":"MAX_COMPONENTS","comment":"","type_short":"int","constant_value":"50"},{"type_long":"int","javadoc":"","static":true,"name":"MAX_CHARACTER_LENGTH","comment":"","type_short":"int","constant_value":"80"},{"type_long":"int","javadoc":"","static":true,"name":"MAX_LINE_LENGTH","comment":"","type_short":"int","constant_value":"240"},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"HTML_OPEN","comment":"","type_short":"String","constant_value":"\"<HTML>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"HTML_CLOSE","comment":"","type_short":"String","constant_value":"\"<\/HTML>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"HTML_SPACE","comment":"","type_short":"String","constant_value":"\"&nbsp;\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"CHARACTER_SPACE","comment":"","type_short":"String","constant_value":"\" \""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TAB","comment":"","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"BR","comment":"","type_short":"String","constant_value":"\"<BR>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TABLE_OPEN","comment":"","type_short":"String","constant_value":"\"<TABLE>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TABLE_CLOSE","comment":"","type_short":"String","constant_value":"\"<\/TABLE>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TR_OPEN","comment":"","type_short":"String","constant_value":"\"<TR>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TR_CLOSE","comment":"","type_short":"String","constant_value":"\"<\/TR>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TD_OPEN","comment":"","type_short":"String","constant_value":"\"<TD ALIGN=LEFT VALIGN=TOP>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TD_CLOSE","comment":"","type_short":"String","constant_value":"\"<\/TD>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TT_OPEN","comment":"","type_short":"String","constant_value":"\"<TT>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TT_CLOSE","comment":"","type_short":"String","constant_value":"\"<\/TT>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"INDENT_OPEN","comment":"","type_short":"String","constant_value":"\"<P STYLE='margin-left: 10px;'>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"INDENT_CLOSE","comment":"","type_short":"String","constant_value":"\"<\/P>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ELLIPSES","comment":"","type_short":"String","constant_value":"\"...\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"LENGTH_PREFIX","comment":"","type_short":"String","constant_value":"\"Length: \""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"FORWARD_SLASH","comment":"","type_short":"String","constant_value":"\"&#47;\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"START_COMMENT","comment":"","type_short":"String","constant_value":"\"&#47;*<BR>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"MIDDLE_COMMENT","comment":"","type_short":"String","constant_value":"\"&nbsp;*&nbsp;\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"END_COMMENT","comment":"","type_short":"String","constant_value":"\"&nbsp;*&#47;<BR>\""},{"type_long":"int","javadoc":"","static":true,"name":"COMMENT_PREFIX_LENGTH","comment":"","type_short":"int","constant_value":null},{"type_long":"java.awt.Color","javadoc":"","static":true,"name":"DIFF_COLOR","comment":"","type_short":"Color","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"originalHTMLData","comment":"","type_short":"String","constant_value":null}]}
