{"implements":["ghidra.framework.options.OptionsChangeListener"],"javadoc":"Class to manage the set of format models.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new FormatManager.\n@param displayOptions the Options containing display options (color, fonts, etc)\n@param fieldOptions the Options contains specific field options.","static":false,"name":"<init>","comment":"Constructs a new FormatManager.","params":[{"type_long":"ghidra.framework.options.ToolOptions","name":"displayOptions","comment":"the Options containing display options (color, fonts, etc)","type_short":"ToolOptions"},{"type_long":"ghidra.framework.options.ToolOptions","name":"fieldOptions","comment":"the Options contains specific field options.","type_short":"ToolOptions"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getArrayDisplayOptions","comment":"","params":[{"type_long":"ghidra.framework.options.Options","name":"options","comment":"","type_short":"Options"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createClone","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.format.FormatManager","comment":"","type_short":"FormatManager"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the service provider used by the field factory objects.\n@param provider the service provider","static":false,"name":"setServiceProvider","comment":"Sets the service provider used by the field factory objects.","params":[{"type_long":"ghidra.framework.plugintool.ServiceProvider","name":"provider","comment":"the service provider","type_short":"ServiceProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyServicesChanged","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFactorys","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a listener to be notified when a format changes.\n@param listener the listener to be added.","static":false,"name":"addFormatModelListener","comment":"Adds a listener to be notified when a format changes.","params":[{"type_long":"ghidra.app.util.viewer.format.FormatModelListener","name":"listener","comment":"the listener to be added.","type_short":"FormatModelListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the given listener from the list of listeners to be notified of a\n format change.\n@param listener the listener to be removed.","static":false,"name":"removeFormatModleListener","comment":"Removes the given listener from the list of listeners to be notified of a\n format change.","params":[{"type_long":"ghidra.app.util.viewer.format.FormatModelListener","name":"listener","comment":"the listener to be removed.","type_short":"FormatModelListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the total number of model in the format manager.","static":false,"name":"getNumModels","comment":"Returns the total number of model in the format manager.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the format model for the given index.\n@param inde the index of the format model to return.","static":false,"name":"getModel","comment":"Returns the format model for the given index.","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel","comment":"","type_short":"FieldFormatModel"}},{"javadoc":"Returns the format model for the address break (divider)","static":false,"name":"getDividerModel","comment":"Returns the format model for the address break (divider)","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel","comment":"","type_short":"FieldFormatModel"}},{"javadoc":"Returns the format model for the plate field","static":false,"name":"getPlateFormat","comment":"Returns the format model for the plate field","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel","comment":"","type_short":"FieldFormatModel"}},{"javadoc":"Returns the format model for the function signature","static":false,"name":"getFunctionFormat","comment":"Returns the format model for the function signature","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel","comment":"","type_short":"FieldFormatModel"}},{"javadoc":"Returns the format model for the function variables.","static":false,"name":"getFunctionVarFormat","comment":"Returns the format model for the function variables.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel","comment":"","type_short":"FieldFormatModel"}},{"javadoc":"Returns the format model for a code unit.\n@param cu the code unit for which to get a model. The cu is used in case\n            there is a custom format for it.\n@param useCustomFormats if true seaches for a custom format for the code unit,\n            otherwise always returns the basic instruction\/data format\n            model.","static":false,"name":"getCodeUnitFormat","comment":"Returns the format model for a code unit.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel","comment":"","type_short":"FieldFormatModel"}},{"javadoc":"Returns the format model to use for the internals of open structures.\n@param data the data code unit to get the format model for.\n@param useCustomFormats if true, tries to find a custom format model, otherwise always\n            uses the default open data model.","static":false,"name":"getOpenDataFormat","comment":"Returns the format model to use for the internals of open structures.","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"the data code unit to get the format model for.","type_short":"Data"}],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel","comment":"","type_short":"FieldFormatModel"}},{"javadoc":"","static":false,"name":"isPrimitiveArrayElement","comment":"","params":[{"type_long":"ghidra.program.model.listing.Data","name":"data","comment":"","type_short":"Data"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"update all listeners that a model has changed.","static":false,"name":"update","comment":"update all listeners that a model has changed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the Options used for display properties.","static":false,"name":"getDisplayOptions","comment":"Returns the Options used for display properties.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.options.ToolOptions","comment":"","type_short":"ToolOptions"}},{"javadoc":"Returns the Options used for field specific properties.","static":false,"name":"getFieldOptions","comment":"Returns the Options used for field specific properties.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.options.ToolOptions","comment":"","type_short":"ToolOptions"}},{"javadoc":"Notifies listeners that the given model has changed.\n@param mode the format model that changed.","static":false,"name":"modelChanged","comment":"Notifies listeners that the given model has changed.","params":[{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel","name":"model","comment":"","type_short":"FieldFormatModel"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the width of the widest model in this manager.","static":false,"name":"getMaxWidth","comment":"Returns the width of the widest model in this manager.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getMaxRowCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getDefaultModel","comment":"","params":[{"type_long":"int","name":"modelID","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"getDefaultDividerFormat","comment":"","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"getDefaultPlateFormat","comment":"","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"getDefaultFunctionFormat","comment":"","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"getDefaultVariableFormat","comment":"","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"getDefaultCodeFormat","comment":"","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"getDefaultSubDataFormat","comment":"","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"getDefaultArrayFormat","comment":"","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"setRowIDs","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the maximum number of possible rows in a layout. This would only\n occur if some address had every possible type of information to be displayed.","static":false,"name":"getMaxNumRows","comment":"Returns the maximum number of possible rows in a layout. This would only\n occur if some address had every possible type of information to be displayed.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Resets the model with the given id to its default format.\n@param modelID the id of the model to reset.","static":false,"name":"setDefaultFormat","comment":"Resets the model with the given id to its default format.","params":[{"type_long":"int","name":"modelID","comment":"the id of the model to reset.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Resets all format models to their default format.","static":false,"name":"setDefaultFormats","comment":"Resets all format models to their default format.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a HighlightProvider\n@param provider the provider to use.\n@see #removeHighlightProvider(HighlightProvider)\n@see #getHighlightProviders()","static":false,"name":"addHighlightProvider","comment":"Adds a HighlightProvider","params":[{"type_long":"ghidra.app.util.HighlightProvider","name":"provider","comment":"the provider to use.","type_short":"HighlightProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the provider\n@param provider the provider to remove.\n@see #addHighlightProvider(HighlightProvider)","static":false,"name":"removeHighlightProvider","comment":"Removes the provider","params":[{"type_long":"ghidra.app.util.HighlightProvider","name":"provider","comment":"the provider to remove.","type_short":"HighlightProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets all {@link HighlightProvider}s installed on this FormatManager via the \n {@link #addHighlightProvider(HighlightProvider)}.\n@return all {@link HighlightProvider}s installed on this FormatManager.","static":false,"name":"getHighlightProviders","comment":"Gets all HighlightProviders installed on this FormatManager via the \n #addHighlightProvider(HighlightProvider).","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.HighlightProvider>","comment":"all HighlightProviders installed on this FormatManager.","type_short":"List"}},{"javadoc":"Returns the {@link HighlightProvider} that should be used when creating {@link FieldFactory}\n objects.","static":false,"name":"getFormatHighlightProvider","comment":"Returns the HighlightProvider that should be used when creating FieldFactory\n objects.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.HighlightProvider","comment":"","type_short":"HighlightProvider"}},{"javadoc":"","static":false,"name":"optionsChanged","comment":"","params":[{"type_long":"ghidra.framework.options.ToolOptions","name":"options","comment":"","type_short":"ToolOptions"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.Object","name":"oldValue","comment":"","type_short":"Object"},{"type_long":"java.lang.Object","name":"newValue","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Saves the state of this LayoutManager to the SaveState object.\n@param saveState the SaveState object to write to.","static":false,"name":"saveState","comment":"Saves the state of this LayoutManager to the SaveState object.","params":[{"type_long":"ghidra.framework.options.SaveState","name":"saveState","comment":"the SaveState object to write to.","type_short":"SaveState"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Restores the state of this LayoutController from the given SaveState\n object.\n@param saveState the SaveState to read from.","static":false,"name":"readState","comment":"Restores the state of this LayoutController from the given SaveState\n object.","params":[{"type_long":"ghidra.framework.options.SaveState","name":"saveState","comment":"the SaveState to read from.","type_short":"SaveState"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getServiceProvider","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.ServiceProvider","comment":"","type_short":"ServiceProvider"}}],"name":"FormatManager","comment":"Class to manage the set of format models.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ARRAY_OPTIONS_GROUP","comment":"","type_short":"String","constant_value":"\"Array Options\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"HIGHLIGHT_GROUP","comment":"","type_short":"String","constant_value":"\"Cursor Text Highlight\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"HIGHLIGHT_COLOR_NAME","comment":"","type_short":"String","constant_value":"\"Cursor Text Highlight.Highlight Color\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"HIGHLIGHT_ALT_COLOR_NAME","comment":"","type_short":"String","constant_value":"\"Cursor Text Highlight.Alternate Highlight Color\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ARRAY_DISPLAY_OPTIONS","comment":"","type_short":"String","constant_value":"\"Array Options.Array Display Options\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ARRAY_DISPLAY_DESCRIPTION","comment":"","type_short":"String","constant_value":"\"Adjusts the Array Field display\""},{"type_long":"int","javadoc":"","static":true,"name":"NUM_MODELS","comment":"","type_short":"int","constant_value":"7"},{"type_long":"java.lang.String[]","javadoc":"","static":true,"name":"NAMES","comment":"","type_short":"java.lang.String[]","constant_value":null},{"type_long":"java.lang.Class<?>[]","javadoc":"","static":true,"name":"PROXY_CLASSES","comment":"","type_short":"java.lang.Class<?>[]","constant_value":null},{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel[]","javadoc":"","static":false,"name":"models","comment":"","type_short":"ghidra.app.util.viewer.format.FieldFormatModel[]","constant_value":null},{"type_long":"ghidra.util.datastruct.WeakSet<ghidra.app.util.viewer.format.FormatModelListener>","javadoc":"","static":false,"name":"formatListeners","comment":"","type_short":"WeakSet","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"maxNumRows","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.app.util.viewer.field.FieldFactory[]","javadoc":"","static":false,"name":"factorys","comment":"","type_short":"ghidra.app.util.viewer.field.FieldFactory[]","constant_value":null},{"type_long":"ghidra.framework.options.ToolOptions","javadoc":"","static":false,"name":"fieldOptions","comment":"","type_short":"ToolOptions","constant_value":null},{"type_long":"ghidra.framework.options.ToolOptions","javadoc":"","static":false,"name":"displayOptions","comment":"","type_short":"ToolOptions","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"initialized","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.app.util.viewer.format.FormatManager.MultipleHighlighterProvider","javadoc":"","static":false,"name":"highlightProvider","comment":"","type_short":"MultipleHighlighterProvider","constant_value":null},{"type_long":"ghidra.framework.plugintool.ServiceProvider","javadoc":"","static":false,"name":"serviceProvider","comment":"","type_short":"ServiceProvider","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"arrayValuesPerLine","comment":"","type_short":"int","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"groupArrayElements","comment":"","type_short":"boolean","constant_value":null}]}
