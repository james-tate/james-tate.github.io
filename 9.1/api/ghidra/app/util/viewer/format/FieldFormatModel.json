{"implements":[],"javadoc":"Maintains the size and ordering for a layout of fields.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.util.viewer.format.FormatManager","name":"formatMgr","comment":"","type_short":"FormatManager"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"int","name":"categoryID","comment":"","type_short":"int"},{"type_long":"java.lang.Class<?>","name":"proxyObjectClass","comment":"","type_short":"Class"},{"type_long":"ghidra.app.util.viewer.field.FieldFactory[]","name":"factorys","comment":"","type_short":"ghidra.app.util.viewer.field.FieldFactory[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the base id for this model. Each row in a model gets an id which must\n be unique across all models.\n@param id the base id for this format.","static":false,"name":"setBaseRowID","comment":"Sets the base id for this model. Each row in a model gets an id which must\n be unique across all models.","params":[{"type_long":"int","name":"id","comment":"the base id for this format.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Updates users of the formatMgr to indicate the format has changed.","static":false,"name":"update","comment":"Updates users of the formatMgr to indicate the format has changed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the formatMgr that is managing this model.","static":false,"name":"getFormatManager","comment":"Returns the formatMgr that is managing this model.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.format.FormatManager","comment":"","type_short":"FormatManager"}},{"javadoc":"Generates the layout objects for the given index and proxy object\n@param list the list to add layouts to\n@param index the index (represents address)\n@param proxy the object to get layouts for.","static":false,"name":"addLayouts","comment":"Generates the layout objects for the given index and proxy object","params":[{"type_long":"java.util.List<docking.widgets.fieldpanel.support.RowLayout>","name":"list","comment":"the list to add layouts to","type_short":"List"},{"type_long":"int","name":"index","comment":"the index (represents address)","type_short":"int"},{"type_long":"ghidra.app.util.viewer.proxy.ProxyObj<?>","name":"proxy","comment":"the object to get layouts for.","type_short":"ProxyObj"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds new empty row at the given position.  The position must be in the\n interval [0,numRows].\n@exception IllegalArgumentException thrown if the position is outside the\n interval [0,numRows].","static":false,"name":"addRow","comment":"Adds new empty row at the given position.  The position must be in the\n interval [0,numRows].","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the row currently at the given position.\n@param index the index of the row to remove.","static":false,"name":"removeRow","comment":"Removes the row currently at the given position.","params":[{"type_long":"int","name":"index","comment":"the index of the row to remove.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"findWidth","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a new field to this format.\n@param factory the FieldFactory to add\n@param rowIndex the row to add the field to\n@param colIndex the position in the row for the new field.","static":false,"name":"addFactory","comment":"Adds a new field to this format.","params":[{"type_long":"ghidra.app.util.viewer.field.FieldFactory","name":"factory","comment":"the FieldFactory to add","type_short":"FieldFactory"},{"type_long":"int","name":"rowIndex","comment":"the row to add the field to","type_short":"int"},{"type_long":"int","name":"colIndex","comment":"the position in the row for the new field.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes a field from the format.\n@param rowIndex the row index of the field to remove.\n@param colIndex the column index of the field to remove.","static":false,"name":"removeFactory","comment":"Removes a field from the format.","params":[{"type_long":"int","name":"rowIndex","comment":"the row index of the field to remove.","type_short":"int"},{"type_long":"int","name":"colIndex","comment":"the column index of the field to remove.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notifies the formatMgr that this format model has changed.","static":false,"name":"modelChanged","comment":"Notifies the formatMgr that this format model has changed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the number of rows in the model.","static":false,"name":"getNumRows","comment":"Returns the number of rows in the model.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the name of this format model.","static":false,"name":"getName","comment":"Returns the name of this format model.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the number of FieldFactorys on any given row.","static":false,"name":"getNumFactorys","comment":"Returns the number of FieldFactorys on any given row.","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the FieldFactorys on a given row.","static":false,"name":"getFactorys","comment":"Returns the FieldFactorys on a given row.","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.field.FieldFactory[]","comment":"","type_short":"ghidra.app.util.viewer.field.FieldFactory[]"}},{"javadoc":"Returns the list factories valid for this format.","static":false,"name":"getFactorys","comment":"Returns the list factories valid for this format.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.field.FieldFactory[]","comment":"","type_short":"ghidra.app.util.viewer.field.FieldFactory[]"}},{"javadoc":"Moves the Field at (oldrow,oldCol) to (row,col)\n@param oldRowIndex the row containing the field to be moved.\n@param oldColIndex the column index of the field to be moved.\n@param newRowIndex the row to move to.\n@param newColIndex the column to move to.\n@exception IllegalArgumentException thrown if any of the parameters don't\n map to a valid grid position.","static":false,"name":"moveFactory","comment":"Moves the Field at (oldrow,oldCol) to (row,col)","params":[{"type_long":"int","name":"oldRowIndex","comment":"the row containing the field to be moved.","type_short":"int"},{"type_long":"int","name":"oldColIndex","comment":"the column index of the field to be moved.","type_short":"int"},{"type_long":"int","name":"newRowIndex","comment":"the row to move to.","type_short":"int"},{"type_long":"int","name":"newColIndex","comment":"the column to move to.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the width of this model","static":false,"name":"getWidth","comment":"Returns the width of this model","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Updates the fields on the given row.\n@param index the row to update.","static":false,"name":"updateRow","comment":"Updates the fields on the given row.","params":[{"type_long":"int","name":"index","comment":"the row to update.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notifies each row that the services have changed.","static":false,"name":"servicesChanged","comment":"Notifies each row that the services have changed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Saves this format to XML.","static":false,"name":"saveToXml","comment":"Saves this format to XML.","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"Restores the format for this model from XML.\n@param root the root XML element from which to get the format information.","static":false,"name":"restoreFromXml","comment":"Restores the format for this model from XML.","params":[{"type_long":"org.jdom.Element","name":"root","comment":"the root XML element from which to get the format information.","type_short":"Element"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createRow","comment":"","params":[{"type_long":"org.jdom.Element","name":"rowElement","comment":"","type_short":"Element"}],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.format.Row","comment":"","type_short":"Row"}},{"javadoc":"","static":false,"name":"getNewFieldFactoryInstance","comment":"","params":[{"type_long":"ghidra.app.util.viewer.field.FieldFactory","name":"factoryPrototype","comment":"","type_short":"FieldFactory"},{"type_long":"java.lang.String","name":"text","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.field.FieldFactory","comment":"","type_short":"FieldFactory"}},{"javadoc":"Adds all unused fields to this model.","static":false,"name":"addAllFactories","comment":"Adds all unused fields to this model.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a list of unused valid fields for this model\n@return a list of unused valid fields for this model","static":false,"name":"getUnusedFactories","comment":"Returns a list of unused valid fields for this model","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.field.FieldFactory[]","comment":"a list of unused valid fields for this model","type_short":"ghidra.app.util.viewer.field.FieldFactory[]"}},{"javadoc":"","static":false,"name":"getAllFactories","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.field.FieldFactory[]","comment":"","type_short":"ghidra.app.util.viewer.field.FieldFactory[]"}},{"javadoc":"Removes all fields from this model.","static":false,"name":"removeAllFactories","comment":"Removes all fields from this model.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notifies that the options have changed.\n@param options the Options object that changed.\n@param optionName the name of the property that changed.\n@param oldValue the old value of the property.\n@param newValue the new value of the property.","static":false,"name":"optionsChanged","comment":"Notifies that the options have changed.","params":[{"type_long":"ghidra.framework.options.Options","name":"options","comment":"the Options object that changed.","type_short":"Options"},{"type_long":"java.lang.String","name":"optionName","comment":"the name of the property that changed.","type_short":"String"},{"type_long":"java.lang.Object","name":"oldValue","comment":"the old value of the property.","type_short":"Object"},{"type_long":"java.lang.Object","name":"newValue","comment":"the new value of the property.","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"FieldFormatModel","comment":"Maintains the size and ordering for a layout of fields.","fields":[{"type_long":"java.util.Comparator<ghidra.app.util.viewer.field.FieldFactory>","javadoc":"","static":true,"name":"COMPARATOR","comment":"","type_short":"Comparator","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"DIVIDER","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"PLATE","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"FUNCTION","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"FUNCTION_VARS","comment":"","type_short":"int","constant_value":"3"},{"type_long":"int","javadoc":"","static":true,"name":"INSTRUCTION_OR_DATA","comment":"","type_short":"int","constant_value":"4"},{"type_long":"int","javadoc":"","static":true,"name":"OPEN_DATA","comment":"","type_short":"int","constant_value":"5"},{"type_long":"int","javadoc":"","static":true,"name":"ARRAY","comment":"","type_short":"int","constant_value":"6"},{"type_long":"int","javadoc":"","static":false,"name":"baseRowID","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.app.util.viewer.format.FormatManager","javadoc":"","static":false,"name":"formatMgr","comment":"","type_short":"FormatManager","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"name","comment":"","type_short":"String","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"width","comment":"","type_short":"int","constant_value":null},{"type_long":"java.util.List<ghidra.app.util.viewer.format.Row>","javadoc":"","static":false,"name":"rows","comment":"","type_short":"List","constant_value":null},{"type_long":"ghidra.app.util.viewer.field.FieldFactory[]","javadoc":"","static":false,"name":"factories","comment":"","type_short":"ghidra.app.util.viewer.field.FieldFactory[]","constant_value":null}]}
