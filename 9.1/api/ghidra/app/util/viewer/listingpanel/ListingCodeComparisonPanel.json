{"implements":["ghidra.app.util.viewer.format.FormatModelListener","ghidra.app.services.CodeFormatService","ghidra.app.util.viewer.listingpanel.ListingDiffChangeListener","ghidra.framework.options.OptionsChangeListener"],"javadoc":"Panel that displays two listings for comparison.","static":false,"extends":"ghidra.app.util.viewer.util.CodeComparisonPanel","methods":[{"javadoc":"Creates a comparison panel with two listings.\n@param owner the owner of this panel\n@param tool the tool displaying this panel","static":false,"name":"<init>","comment":"Creates a comparison panel with two listings.","params":[{"type_long":"java.lang.String","name":"owner","comment":"the owner of this panel","type_short":"String"},{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"the tool displaying this panel","type_short":"PluginTool"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initialize","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initializeOptions","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"optionsChanged","comment":"","params":[{"type_long":"ghidra.framework.options.ToolOptions","name":"options","comment":"","type_short":"ToolOptions"},{"type_long":"java.lang.String","name":"optionName","comment":"","type_short":"String"},{"type_long":"java.lang.Object","name":"oldValue","comment":"","type_short":"Object"},{"type_long":"java.lang.Object","name":"newValue","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getComponent","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.JComponent","comment":"","type_short":"JComponent"}},{"javadoc":"","static":false,"name":"getTitle","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setVisible","comment":"","params":[{"type_long":"boolean","name":"aFlag","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createFormatManager","comment":"","params":[{"type_long":"int","name":"leftOrRight","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.format.FormatManager","comment":"","type_short":"FormatManager"}},{"javadoc":"","static":false,"name":"initializeGoToServiceProviders","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initializeListingFieldPanels","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the coordinator for the two listings within this code comparison panel. It coordinates\n their scrolling and location synchronization.\n@param listingFieldPanelCoordinator the coordinator for the two listings","static":false,"name":"setFieldPanelCoordinator","comment":"Sets the coordinator for the two listings within this code comparison panel. It coordinates\n their scrolling and location synchronization.","params":[{"type_long":"ghidra.app.util.viewer.listingpanel.ListingComparisonFieldPanelCoordinator","name":"listingFieldPanelCoordinator","comment":"the coordinator for the two listings","type_short":"ListingComparisonFieldPanelCoordinator"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds the indicated highlight providers for the left and right listing panels.\n@param leftHighlightProvider the highlight provider for the left side's listing.\n@param rightHighlightProvider the highlight provider for the right side's listing.","static":false,"name":"addHighlightProviders","comment":"Adds the indicated highlight providers for the left and right listing panels.","params":[{"type_long":"ghidra.app.util.HighlightProvider","name":"leftHighlightProvider","comment":"the highlight provider for the left side's listing.","type_short":"HighlightProvider"},{"type_long":"ghidra.app.util.HighlightProvider","name":"rightHighlightProvider","comment":"the highlight provider for the right side's listing.","type_short":"HighlightProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addLeftHighlightProvider","comment":"","params":[{"type_long":"ghidra.app.util.HighlightProvider","name":"leftHighlightProvider","comment":"","type_short":"HighlightProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addRightHighlightProvider","comment":"","params":[{"type_long":"ghidra.app.util.HighlightProvider","name":"rightHighlightProvider","comment":"","type_short":"HighlightProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the indicated highlight providers from the left and right listing panels.\n@param leftHighlightProvider the highlight provider for the left side's listing.\n@param rightHighlightProvider the highlight provider for the right side's listing.","static":false,"name":"removeHighlightProviders","comment":"Removes the indicated highlight providers from the left and right listing panels.","params":[{"type_long":"ghidra.app.util.HighlightProvider","name":"leftHighlightProvider","comment":"the highlight provider for the left side's listing.","type_short":"HighlightProvider"},{"type_long":"ghidra.app.util.HighlightProvider","name":"rightHighlightProvider","comment":"the highlight provider for the right side's listing.","type_short":"HighlightProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeLeftHighlightProvider","comment":"","params":[{"type_long":"ghidra.app.util.HighlightProvider","name":"leftHighlightProvider","comment":"","type_short":"HighlightProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeRightHighlightProvider","comment":"","params":[{"type_long":"ghidra.app.util.HighlightProvider","name":"rightHighlightProvider","comment":"","type_short":"HighlightProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setPrograms","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"leftProgram","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"rightProgram","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateLeftListingTitle","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateRightListingTitle","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initializeListingFieldNavigation","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initializeListingFieldNavigation","comment":"","params":[{"type_long":"int","name":"leftOrRight","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFocusedNavigatable","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.nav.Navigatable","comment":"","type_short":"Navigatable"}},{"javadoc":"","static":false,"name":"initializeListingHoverService","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initializeListingHoverService","comment":"","params":[{"type_long":"int","name":"leftOrRight","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets a listener for program location changes for the left side's listing panel.\n@param programLocationListener the listener","static":false,"name":"setLeftProgramLocationListener","comment":"Sets a listener for program location changes for the left side's listing panel.","params":[{"type_long":"ghidra.app.util.viewer.listingpanel.ProgramLocationListener","name":"programLocationListener","comment":"the listener","type_short":"ProgramLocationListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets a listener for program location changes for the right side's listing panel.\n@param programLocationListener the listener","static":false,"name":"setRightProgramLocationListener","comment":"Sets a listener for program location changes for the right side's listing panel.","params":[{"type_long":"ghidra.app.util.viewer.listingpanel.ProgramLocationListener","name":"programLocationListener","comment":"the listener","type_short":"ProgramLocationListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createActions","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getListingDiffActions","comment":"","params":[],"throws":[],"return":{"type_long":"docking.action.DockingAction[]","comment":"","type_short":"docking.action.DockingAction[]"}},{"javadoc":"","static":false,"name":"getActions","comment":"","params":[],"throws":[],"return":{"type_long":"docking.action.DockingAction[]","comment":"","type_short":"docking.action.DockingAction[]"}},{"javadoc":"Updates the enablement for all actions provided by this panel.","static":false,"name":"updateActionEnablement","comment":"Updates the enablement for all actions provided by this panel.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setHoverEnabled","comment":"","params":[{"type_long":"boolean","name":"enabled","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isValidPanelContext","comment":"","params":[{"type_long":"docking.ActionContext","name":"context","comment":"","type_short":"ActionContext"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"nextAreaDiff","comment":"","params":[{"type_long":"java.lang.String","name":"currentUserData","comment":"","type_short":"String"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"outputNoNextPreviousMessage","comment":"","params":[{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"isFirstListing","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getCurrentAreaMarkerType","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"isEntireListingShowing","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Sets whether or not the entire programs are displayed in the listings or only\n the addresses in the limited set.\n@param show if true, the entire program will be shown. Otherwise the listings will only\n show the limited addresses.","static":false,"name":"showEntireListing","comment":"Sets whether or not the entire programs are displayed in the listings or only\n the addresses in the limited set.","params":[{"type_long":"boolean","name":"show","comment":"if true, the entire program will be shown. Otherwise the listings will only\n show the limited addresses.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determines if the listing's layout field header is currently showing.\n@return true if the header is showing.","static":false,"name":"isHeaderShowing","comment":"Determines if the listing's layout field header is currently showing.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the header is showing.","type_short":"boolean"}},{"javadoc":"Shows or hides the listing's layout field header.\n@param show true means show the field header. false means hide the header.","static":false,"name":"setHeaderShowing","comment":"Shows or hides the listing's layout field header.","params":[{"type_long":"boolean","name":"show","comment":"true means show the field header. false means hide the header.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isSideBySide","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Sets whether or not the listings are displayed side by side.\n@param sideBySide if true, the listings are side by side, otherwise one is above the other.","static":false,"name":"showSideBySide","comment":"Sets whether or not the listings are displayed side by side.","params":[{"type_long":"boolean","name":"sideBySide","comment":"if true, the listings are side by side, otherwise one is above the other.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"loadEntirePrograms","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"loadLimitedAddresses","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"loadFunctions","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"leftFunction","comment":"","type_short":"Function"},{"type_long":"ghidra.program.model.listing.Function","name":"rightFunction","comment":"","type_short":"Function"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the function loaded in the left listing panel.\n@return the function or null","static":false,"name":"getLeftFunction","comment":"Gets the function loaded in the left listing panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"the function or null","type_short":"Function"}},{"javadoc":"Gets the function loaded in the right listing panel.\n@return the function or null","static":false,"name":"getRightFunction","comment":"Gets the function loaded in the right listing panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"the function or null","type_short":"Function"}},{"javadoc":"","static":false,"name":"setFunctions","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"leftFunction","comment":"","type_short":"Function"},{"type_long":"ghidra.program.model.listing.Function","name":"rightFunction","comment":"","type_short":"Function"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Establishes the location and display of the arrow cursor. This method should be called\n after the function comparison window is loaded with functions, data, etc.","static":false,"name":"loadCursorArrow","comment":"Establishes the location and display of the arrow cursor. This method should be called\n after the function comparison window is loaded with functions, data, etc.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets an equivalent left side program location when given a right side program location or\n vice versa. The intent of this method is to translate a location from one side of the\n dual listing to an equivalent location for the other side if possible.\n@param leftOrRight LEFT or RIGHT indicating which side's program location is needed.\n@param programLocation the program location for the other side.\n@return a program location for the desired side. Otherwise, null.","static":false,"name":"getProgramLocation","comment":"Gets an equivalent left side program location when given a right side program location or\n vice versa. The intent of this method is to translate a location from one side of the\n dual listing to an equivalent location for the other side if possible.","params":[{"type_long":"int","name":"leftOrRight","comment":"LEFT or RIGHT indicating which side's program location is needed.","type_short":"int"},{"type_long":"ghidra.program.util.ProgramLocation","name":"programLocation","comment":"the program location for the other side.","type_short":"ProgramLocation"}],"throws":[],"return":{"type_long":"ghidra.program.util.ProgramLocation","comment":"a program location for the desired side. Otherwise, null.","type_short":"ProgramLocation"}},{"javadoc":"","static":false,"name":"adjustSymbolPath","comment":"","params":[{"type_long":"ghidra.framework.options.SaveState","name":"saveState","comment":"","type_short":"SaveState"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"desiredAddress","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"byteAddress","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"desiredByteAddress","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"desiredProgram","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"adjustSymbolRow","comment":"","params":[{"type_long":"ghidra.framework.options.SaveState","name":"saveState","comment":"","type_short":"SaveState"},{"type_long":"ghidra.program.model.symbol.Symbol[]","name":"symbols","comment":"","type_short":"ghidra.program.model.symbol.Symbol[]"},{"type_long":"ghidra.program.model.symbol.Symbol[]","name":"desiredSymbols","comment":"","type_short":"ghidra.program.model.symbol.Symbol[]"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getDesiredSymbolIndex","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol[]","name":"desiredSymbols","comment":"","type_short":"ghidra.program.model.symbol.Symbol[]"},{"type_long":"int","name":"desiredRow","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getSymbolPath","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"desiredSymbol","comment":"","type_short":"Symbol"}],"throws":[],"return":{"type_long":"ghidra.app.util.SymbolPath","comment":"","type_short":"SymbolPath"}},{"javadoc":"Infers a desired byte address based on the specified <code>byteAddress<\/code> as well \n as the <code>address<\/code> and <code>desiredAddress<\/code> that were matched.\n@param address matches up with the <code>desiredAddress<\/code> from the other function\/data.\n@param desiredAddress matches up with the <code>address<\/code> from the other function\/data.\n@param byteAddress the byte address that is associated with <code>address<\/code>\n@param program the program for the <code>address<\/code> and <code>byteAddress<\/code>.\n@param desiredProgram the program for the <code>desiredAddress<\/code> and \n <code>desiredByteAddress<\/code>.\n@return the desired byte address that matches up with the indicated <code>byteAddress<\/code>\n or null if it can't be determined.","static":false,"name":"inferDesiredByteAddress","comment":"Infers a desired byte address based on the specified byteAddress as well \n as the address and desiredAddress that were matched.","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"matches up with the desiredAddress from the other function\/data.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"desiredAddress","comment":"matches up with the address from the other function\/data.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"byteAddress","comment":"the byte address that is associated with address","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program for the address and byteAddress.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"desiredProgram","comment":"the program for the desiredAddress and \n desiredByteAddress.","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the desired byte address that matches up with the indicated byteAddress\n or null if it can't be determined.","type_short":"Address"}},{"javadoc":"This infers the desired byte address within Data based on the code units at \n <code>codeUnitAddress<\/code> and <code>desiredCodeUnitAddress<\/code>.\n The inferred address will be at an offset from the <code>desiredCodeUnitAddress<\/code> \n that is the same distance the <code>byteAddress<\/code> is from the <code>codeUnitAddress<\/code>.\n@param codeUnitAddress matches up with the <code>desiredCodeUnitAddress<\/code> from \n the other data.\n@param desiredCodeUnitAddress matches up with the <code>codeUnitAddress<\/code> from \n the other data.\n@param byteAddress the byte address that is associated with <code>codeUnitAddress<\/code>\n@param program the program for the <code>codeUnitAddress<\/code> and <code>byteAddress<\/code>.\n@param desiredProgram the program for the <code>desiredCodeUnitAddress<\/code> and \n <code>desiredByteAddress<\/code>.\n@return the desired byte address within the data that matches up with the indicated \n <code>byteAddress<\/code> or null if it can't be determined.","static":false,"name":"inferDesiredDataAddress","comment":"This infers the desired byte address within Data based on the code units at \n codeUnitAddress and desiredCodeUnitAddress.\n The inferred address will be at an offset from the desiredCodeUnitAddress \n that is the same distance the byteAddress is from the codeUnitAddress.","params":[{"type_long":"ghidra.program.model.address.Address","name":"codeUnitAddress","comment":"matches up with the desiredCodeUnitAddress from \n the other data.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"desiredCodeUnitAddress","comment":"matches up with the codeUnitAddress from \n the other data.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"byteAddress","comment":"the byte address that is associated with codeUnitAddress","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program for the codeUnitAddress and byteAddress.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"desiredProgram","comment":"the program for the desiredCodeUnitAddress and \n desiredByteAddress.","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the desired byte address within the data that matches up with the indicated \n byteAddress or null if it can't be determined.","type_short":"Address"}},{"javadoc":"This infers the desired byte address within a function based on the code units at \n <code>address<\/code> and <code>desiredAddress<\/code>.\n If the inferred address would be beyond the last byte of the code unit then it \n will get set to the last byte of the code unit at the <code>desiredAddress<\/code>.\n@param address matches up with the <code>desiredAddress<\/code> from the other function.\n@param desiredAddress matches up with the <code>address<\/code> from the other function.\n@param byteAddress the byte address that is associated with <code>address<\/code>\n@param program the program for the <code>address<\/code> and <code>byteAddress<\/code>.\n@param desiredProgram the program for the <code>desiredAddress<\/code> and \n <code>desiredByteAddress<\/code>.\n@return the desired byte address within the data that matches up with the indicated \n <code>byteAddress<\/code> or null if it can't be determined.","static":false,"name":"inferDesiredFunctionAddress","comment":"This infers the desired byte address within a function based on the code units at \n address and desiredAddress.\n If the inferred address would be beyond the last byte of the code unit then it \n will get set to the last byte of the code unit at the desiredAddress.","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"matches up with the desiredAddress from the other function.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"desiredAddress","comment":"matches up with the address from the other function.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"byteAddress","comment":"the byte address that is associated with address","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program for the address and byteAddress.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"desiredProgram","comment":"the program for the desiredAddress and \n desiredByteAddress.","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the desired byte address within the data that matches up with the indicated \n byteAddress or null if it can't be determined.","type_short":"Address"}},{"javadoc":"Gets an equivalent left side variable location when given a right side variable location or\n vice versa. The intent of this method is to translate a variable location from one side of\n the dual listing to an equivalent variable location for the other side if possible.\n@param leftOrRight LEFT or RIGHT indicating which side's variable location is needed.\n@param variableLocation the variable location for the other side.\n@return a variable location for the desired side. Otherwise, null.","static":false,"name":"getVariableLocation","comment":"Gets an equivalent left side variable location when given a right side variable location or\n vice versa. The intent of this method is to translate a variable location from one side of\n the dual listing to an equivalent variable location for the other side if possible.","params":[{"type_long":"int","name":"leftOrRight","comment":"LEFT or RIGHT indicating which side's variable location is needed.","type_short":"int"},{"type_long":"ghidra.program.util.VariableLocation","name":"variableLocation","comment":"the variable location for the other side.","type_short":"VariableLocation"}],"throws":[],"return":{"type_long":"ghidra.program.util.ProgramLocation","comment":"a variable location for the desired side. Otherwise, null.","type_short":"ProgramLocation"}},{"javadoc":"","static":false,"name":"clearMarkers","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"clearUnmatchedCodeMarkers","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"clearDiffMarkers","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setCursorMarkers","comment":"","params":[{"type_long":"int","name":"leftOrRight","comment":"","type_short":"int"},{"type_long":"ghidra.program.util.ProgramLocation","name":"location","comment":"","type_short":"ProgramLocation"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"clearCursorMarkers","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setFunctionTitles","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFunctionTitle","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"","type_short":"Function"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setDataTitles","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDataTitle","comment":"","params":[{"type_long":"ghidra.program.model.listing.Data","name":"currentData","comment":"","type_short":"Data"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setAddressesTitles","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getAddressesTitle","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"addresses","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setDiffHighlights","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setFunctionComparisonDiffHighlights","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setDiffAreaMarkers","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setUnmatchedCodeUnitAreaMarkers","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setupMarkerManagers","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setupMarkerManager","comment":"","params":[{"type_long":"int","name":"leftOrRight","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setupAreaMarkerSets","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setupCursorMarkerSets","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doLoadFunctions","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"leftFunction","comment":"","type_short":"Function"},{"type_long":"ghidra.program.model.listing.Function","name":"rightFunction","comment":"","type_short":"Function"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"goToLeftFunction","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"leftFunction","comment":"","type_short":"Function"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"goToRightFunction","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"rightFunction","comment":"","type_short":"Function"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateLeftAddressSet","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"leftFunction","comment":"","type_short":"Function"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateRightAddressSet","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"rightFunction","comment":"","type_short":"Function"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"loadAddresses","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"leftProgram","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"rightProgram","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"leftAddresses","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"rightAddresses","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the cursor location in the left and right listing at the specified functions.\n@param leftFunction the function in the left listing panel.\n@param rightFunction the function in the right listing panel.","static":false,"name":"setLocation","comment":"Sets the cursor location in the left and right listing at the specified functions.","params":[{"type_long":"ghidra.program.model.listing.Function","name":"leftFunction","comment":"the function in the left listing panel.","type_short":"Function"},{"type_long":"ghidra.program.model.listing.Function","name":"rightFunction","comment":"the function in the right listing panel.","type_short":"Function"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the cursor in the left side's listing to the specified location.\n@param program the left side's program\n@param location the location","static":false,"name":"setLeftLocation","comment":"Sets the cursor in the left side's listing to the specified location.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the left side's program","type_short":"Program"},{"type_long":"ghidra.program.util.ProgramLocation","name":"location","comment":"the location","type_short":"ProgramLocation"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the cursor in the right side's listing to the specified location.\n@param program the right side's program\n@param location the location","static":false,"name":"setRightLocation","comment":"Sets the cursor in the right side's listing to the specified location.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the right side's program","type_short":"Program"},{"type_long":"ghidra.program.util.ProgramLocation","name":"location","comment":"the location","type_short":"ProgramLocation"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"goToLeftLocation","comment":"","params":[{"type_long":"ghidra.program.util.ProgramLocation","name":"location","comment":"","type_short":"ProgramLocation"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"goToRightLocation","comment":"","params":[{"type_long":"ghidra.program.util.ProgramLocation","name":"location","comment":"","type_short":"ProgramLocation"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"buildPanel","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setTitle","comment":"","params":[{"type_long":"ghidra.app.util.viewer.util.TitledPanel","name":"titlePanel","comment":"","type_short":"TitledPanel"},{"type_long":"java.lang.String","name":"titlePrefix","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"title","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the title for the left side's listing.\n@param leftTitle the title","static":false,"name":"setLeftTitle","comment":"Sets the title for the left side's listing.","params":[{"type_long":"java.lang.String","name":"leftTitle","comment":"the title","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the title for the right side's listing.\n@param rightTitle the title","static":false,"name":"setRightTitle","comment":"Sets the title for the right side's listing.","params":[{"type_long":"java.lang.String","name":"rightTitle","comment":"the title","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the component displayed in the top of this panel.\n@param comp the component.","static":false,"name":"setTopComponent","comment":"Sets the component displayed in the top of this panel.","params":[{"type_long":"javax.swing.JComponent","name":"comp","comment":"the component.","type_short":"JComponent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the component displayed in the bottom of this panel.\n@param comp the component.","static":false,"name":"setBottomComponent","comment":"Sets the component displayed in the bottom of this panel.","params":[{"type_long":"javax.swing.JComponent","name":"comp","comment":"the component.","type_short":"JComponent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the program from the left or right side that has or last had focus.\n@return the program from the side of this panel with focus or null","static":false,"name":"getFocusedProgram","comment":"Gets the program from the left or right side that has or last had focus.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"the program from the side of this panel with focus or null","type_short":"Program"}},{"javadoc":"Gets the program in the left listing panel.\n@return the left program or null","static":false,"name":"getLeftProgram","comment":"Gets the program in the left listing panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"the left program or null","type_short":"Program"}},{"javadoc":"Gets the program in the right listing panel.\n@return the right program or null","static":false,"name":"getRightProgram","comment":"Gets the program in the right listing panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"the right program or null","type_short":"Program"}},{"javadoc":"Gets the addresses in the left listing panel.\n@return the addresses","static":false,"name":"getLeftAddresses","comment":"Gets the addresses in the left listing panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"the addresses","type_short":"AddressSetView"}},{"javadoc":"Gets the addresses in the right listing panel.\n@return the addresses","static":false,"name":"getRightAddresses","comment":"Gets the addresses in the right listing panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"the addresses","type_short":"AddressSetView"}},{"javadoc":"Get the left or right listing panel that has or last had focus.\n@return the listing panel with focus.","static":false,"name":"getFocusedListingPanel","comment":"Get the left or right listing panel that has or last had focus.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.listingpanel.ListingPanel","comment":"the listing panel with focus.","type_short":"ListingPanel"}},{"javadoc":"Get the left side's listing panel.\n@return the left panel","static":false,"name":"getLeftPanel","comment":"Get the left side's listing panel.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.listingpanel.ListingPanel","comment":"the left panel","type_short":"ListingPanel"}},{"javadoc":"Get the right side's listing panel.\n@return the right panel","static":false,"name":"getRightPanel","comment":"Get the right side's listing panel.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.listingpanel.ListingPanel","comment":"the right panel","type_short":"ListingPanel"}},{"javadoc":"Go to the indicated address in the listing that last had focus.\n@param addr the cursor should go to this address\n@return true if the location changed","static":false,"name":"goTo","comment":"Go to the indicated address in the listing that last had focus.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the cursor should go to this address","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the location changed","type_short":"boolean"}},{"javadoc":"Go to the indicated location in the listing that last had focus.\n@param loc the cursor should go to this location.\n@param centerOnScreen true indicates that the location should be centered in the listing's\n viewport.\n@return true if the location changed","static":false,"name":"goTo","comment":"Go to the indicated location in the listing that last had focus.","params":[{"type_long":"ghidra.program.util.ProgramLocation","name":"loc","comment":"the cursor should go to this location.","type_short":"ProgramLocation"},{"type_long":"boolean","name":"centerOnScreen","comment":"true indicates that the location should be centered in the listing's\n viewport.","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the location changed","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"focusGained","comment":"","params":[{"type_long":"java.awt.event.FocusEvent","name":"e","comment":"","type_short":"FocusEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setDualPanelFocus","comment":"","params":[{"type_long":"int","name":"leftOrRight","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getActionContext","comment":"","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"","type_short":"ComponentProvider"},{"type_long":"java.awt.event.MouseEvent","name":"event","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"docking.ActionContext","comment":"","type_short":"ActionContext"}},{"javadoc":"","static":false,"name":"getContextForMarginPanels","comment":"","params":[{"type_long":"ghidra.app.util.viewer.listingpanel.ListingPanel","name":"lp","comment":"","type_short":"ListingPanel"},{"type_long":"java.awt.event.MouseEvent","name":"event","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"java.lang.Object","comment":"","type_short":"Object"}},{"javadoc":"Adds the indicated button press listener to both listing panels in this code comparison panel.\n@param listener the listener","static":false,"name":"addButtonPressedListener","comment":"Adds the indicated button press listener to both listing panels in this code comparison panel.","params":[{"type_long":"ghidra.app.services.ButtonPressedListener","name":"listener","comment":"the listener","type_short":"ButtonPressedListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Repaints both the left and right listing panels if they are visible.","static":false,"name":"updateListings","comment":"Repaints both the left and right listing panels if they are visible.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the indicated (LEFT or RIGHT) side's address that is equivalent to the other side's\n address.\n@param leftOrRight LEFT or RIGHT indicating which side's address is needed.\n@param otherSidesAddress the address for the other side. If leftOrRight = LEFT, then this\n should be a right side address. If leftOrRight = RIGHT, then this should be a left side address.\n@return an address for the indicated side (LEFT or RIGHT) that is equivalent to the other\n side's address that is specified. Otherwise, null.","static":false,"name":"getAddress","comment":"Gets the indicated (LEFT or RIGHT) side's address that is equivalent to the other side's\n address.","params":[{"type_long":"int","name":"leftOrRight","comment":"LEFT or RIGHT indicating which side's address is needed.","type_short":"int"},{"type_long":"ghidra.program.model.address.Address","name":"otherSidesAddress","comment":"the address for the other side. If leftOrRight = LEFT, then this\n should be a right side address. If leftOrRight = RIGHT, then this should be a left side address.","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"an address for the indicated side (LEFT or RIGHT) that is equivalent to the other\n side's address that is specified. Otherwise, null.","type_short":"Address"}},{"javadoc":"Gets an address in the program indicated by <code>leftOrRight<\/code> that matches the \n <code>otherSidesAddress<\/code> that is an address in a function in the other program.\n@param leftOrRight indicates whether to get the address from the LEFT or RIGHT program.\n@param otherSidesAddress address in the other program that is equivalent to the \n desired address.\n@return the matching address in the indicated program or null.","static":false,"name":"getFunctionAddress","comment":"Gets an address in the program indicated by leftOrRight that matches the \n otherSidesAddress that is an address in a function in the other program.","params":[{"type_long":"int","name":"leftOrRight","comment":"indicates whether to get the address from the LEFT or RIGHT program.","type_short":"int"},{"type_long":"ghidra.program.model.address.Address","name":"otherSidesAddress","comment":"address in the other program that is equivalent to the \n desired address.","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the matching address in the indicated program or null.","type_short":"Address"}},{"javadoc":"","static":false,"name":"getDataAddress","comment":"","params":[{"type_long":"int","name":"leftOrRight","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.address.Address","name":"otherSidesAddress","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Is this panel currently comparing a function match?\n@return true if comparing functions.","static":false,"name":"isFunctionCompare","comment":"Is this panel currently comparing a function match?","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if comparing functions.","type_short":"boolean"}},{"javadoc":"Is this panel currently comparing a data match?\n@return true if comparing data.","static":false,"name":"isDataCompare","comment":"Is this panel currently comparing a data match?","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if comparing data.","type_short":"boolean"}},{"javadoc":"Gets the left side address that is equivalent to the indicated right side address.\n@param rightByteAddress the right side address\n@return the left side address or null.","static":false,"name":"getLeftCorrelatedAddress","comment":"Gets the left side address that is equivalent to the indicated right side address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"rightByteAddress","comment":"the right side address","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the left side address or null.","type_short":"Address"}},{"javadoc":"Gets the right side address that is equivalent to the indicated left side address.\n@param leftByteAddress the left side address\n@return the right side address or null.","static":false,"name":"getRightCorrelatedAddress","comment":"Gets the right side address that is equivalent to the indicated left side address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"leftByteAddress","comment":"the left side address","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the right side address or null.","type_short":"Address"}},{"javadoc":"Gets the left side function's entry point address.\n@return the left side function's entry point address or null.","static":false,"name":"getLeftFunctionAddress","comment":"Gets the left side function's entry point address.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the left side function's entry point address or null.","type_short":"Address"}},{"javadoc":"Gets the right side function's entry point address.\n@return the right side function's entry point address or null.","static":false,"name":"getRightFunctionAddress","comment":"Gets the right side function's entry point address.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the right side function's entry point address or null.","type_short":"Address"}},{"javadoc":"Gets the left side data's minimum address.\n@return the left side data's minimum address or null.","static":false,"name":"getLeftDataAddress","comment":"Gets the left side data's minimum address.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the left side data's minimum address or null.","type_short":"Address"}},{"javadoc":"Gets the right side data's minimum address.\n@return the right side data's minimum address or null.","static":false,"name":"getRightDataAddress","comment":"Gets the right side data's minimum address.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the right side data's minimum address or null.","type_short":"Address"}},{"javadoc":"","static":false,"name":"formatModelAdded","comment":"","params":[{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel","name":"model","comment":"","type_short":"FieldFormatModel"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"formatModelChanged","comment":"","params":[{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel","name":"model","comment":"","type_short":"FieldFormatModel"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"formatModelRemoved","comment":"","params":[{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel","name":"model","comment":"","type_short":"FieldFormatModel"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"changeRightToMatchLeftFormat","comment":"","params":[{"type_long":"ghidra.app.util.viewer.format.FieldFormatModel","name":"model","comment":"","type_short":"FieldFormatModel"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the left or right listing panel that contains the indicated field panel.\n@param fieldPanel the field panel\n@return the listing panel or null.","static":false,"name":"getListingPanel","comment":"Gets the left or right listing panel that contains the indicated field panel.","params":[{"type_long":"docking.widgets.fieldpanel.FieldPanel","name":"fieldPanel","comment":"the field panel","type_short":"FieldPanel"}],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.listingpanel.ListingPanel","comment":"the listing panel or null.","type_short":"ListingPanel"}},{"javadoc":"","static":false,"name":"getFormatManager","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.format.FormatManager","comment":"","type_short":"FormatManager"}},{"javadoc":"Disable mouse navigation from within this dual listing panel.\n@param enabled false disables navigation","static":false,"name":"setMouseNavigationEnabled","comment":"Disable mouse navigation from within this dual listing panel.","params":[{"type_long":"boolean","name":"enabled","comment":"false disables navigation","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"loadData","comment":"","params":[{"type_long":"ghidra.program.model.listing.Data","name":"leftData","comment":"","type_short":"Data"},{"type_long":"ghidra.program.model.listing.Data","name":"rightData","comment":"","type_short":"Data"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the maximum offset based on the larger data that is passed to this method.\n@param leftData the left view's data\n@param rightData the right view's data\n@return the maximum offset (one less than the larger data item's size).","static":false,"name":"getMaxOffset","comment":"Gets the maximum offset based on the larger data that is passed to this method.","params":[{"type_long":"ghidra.program.model.listing.Data","name":"leftData","comment":"the left view's data","type_short":"Data"},{"type_long":"ghidra.program.model.listing.Data","name":"rightData","comment":"the right view's data","type_short":"Data"}],"throws":[],"return":{"type_long":"long","comment":"the maximum offset (one less than the larger data item's size).","type_short":"long"}},{"javadoc":"Gets the ending address to be displayed. It tries to get an ending address that is\n maxOffset number of bytes beyond the minAddress without leaving the memory block\n that contains the minAddress. If the maxOffset is beyond the end of the block then\n the end of the block is returned. For an externalAddress the minAddress is returned.\n@param program the program containing the data\n@param maxOffset the max offset\n@param minAddress the minimum address of the data\n@return the end address to display","static":false,"name":"getEndAddress","comment":"Gets the ending address to be displayed. It tries to get an ending address that is\n maxOffset number of bytes beyond the minAddress without leaving the memory block\n that contains the minAddress. If the maxOffset is beyond the end of the block then\n the end of the block is returned. For an externalAddress the minAddress is returned.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program containing the data","type_short":"Program"},{"type_long":"long","name":"maxOffset","comment":"the max offset","type_short":"long"},{"type_long":"ghidra.program.model.address.Address","name":"minAddress","comment":"the minimum address of the data","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the end address to display","type_short":"Address"}},{"javadoc":"Clears the address correlation being used with the ListingDiff and the dual listing\n field panel coordinator.","static":false,"name":"clearCorrelation","comment":"Clears the address correlation being used with the ListingDiff and the dual listing\n field panel coordinator.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the data loaded in the left listing panel.\n@return the data or null","static":false,"name":"getLeftData","comment":"Gets the data loaded in the left listing panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"the data or null","type_short":"Data"}},{"javadoc":"Gets the data loaded in the right listing panel.\n@return the data or null","static":false,"name":"getRightData","comment":"Gets the data loaded in the right listing panel.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"the data or null","type_short":"Data"}},{"javadoc":"","static":false,"name":"getPanelThisSupersedes","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Class<? extends ghidra.app.util.viewer.util.CodeComparisonPanel<ghidra.app.util.viewer.listingpanel.ListingComparisonFieldPanelCoordinator>>","comment":"","type_short":"Class"}},{"javadoc":"","static":false,"name":"listingDiffChanged","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Displays the indicated text int the tool's status area.\n@param text the message to display","static":false,"name":"setStatusInfo","comment":"Displays the indicated text int the tool's status area.","params":[{"type_long":"java.lang.String","name":"text","comment":"the message to display","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"refreshLeftPanel","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"refreshRightPanel","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"programRestored","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"leftPanelHasFocus","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setTitlePrefixes","comment":"","params":[{"type_long":"java.lang.String","name":"leftTitlePrefix","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"rightTitlePrefix","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the GoToService that is used for either the left listing or the right listing.\n@param isLeftSide true means get the GoToService for the left side listing.\n false means get it for the right side listing.\n@return the goToService","static":false,"name":"getGoToService","comment":"Gets the GoToService that is used for either the left listing or the right listing.","params":[{"type_long":"boolean","name":"isLeftSide","comment":"true means get the GoToService for the left side listing.\n false means get it for the right side listing.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.app.services.GoToService","comment":"the goToService","type_short":"GoToService"}},{"javadoc":"","static":false,"name":"getActionContext","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"event","comment":"","type_short":"MouseEvent"},{"type_long":"docking.ComponentProvider","name":"provider","comment":"","type_short":"ComponentProvider"}],"throws":[],"return":{"type_long":"docking.ActionContext","comment":"","type_short":"ActionContext"}},{"javadoc":"Gets a marker margin or overview margin context object if the mouse event occurred on one\n of the GUI components for the indicated listing panel's marker margin (left edge of listing)\n or overview margin (right edge of listing).\n@param lp The listing panel to check\n@param event the mouse event\n@return a marker margin context object if the event was on a margin.","static":false,"name":"getContextObjectForMarginPanels","comment":"Gets a marker margin or overview margin context object if the mouse event occurred on one\n of the GUI components for the indicated listing panel's marker margin (left edge of listing)\n or overview margin (right edge of listing).","params":[{"type_long":"ghidra.app.util.viewer.listingpanel.ListingPanel","name":"lp","comment":"The listing panel to check","type_short":"ListingPanel"},{"type_long":"java.awt.event.MouseEvent","name":"event","comment":"the mouse event","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"java.lang.Object","comment":"a marker margin context object if the event was on a margin.","type_short":"Object"}},{"javadoc":"","static":false,"name":"getLeftFieldPanel","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.FieldPanel","comment":"","type_short":"FieldPanel"}},{"javadoc":"","static":false,"name":"getRightFieldPanel","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.FieldPanel","comment":"","type_short":"FieldPanel"}},{"javadoc":"","static":false,"name":"createFieldPanelCoordinator","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.viewer.listingpanel.ListingComparisonFieldPanelCoordinator","comment":"","type_short":"ListingComparisonFieldPanelCoordinator"}},{"javadoc":"Restores this panel to the indicated saved configuration state.\n@param prefix identifier to prepend to any save state names to make them unique.\n@param saveState the configuration state to restore","static":false,"name":"readConfigState","comment":"Restores this panel to the indicated saved configuration state.","params":[{"type_long":"java.lang.String","name":"prefix","comment":"identifier to prepend to any save state names to make them unique.","type_short":"String"},{"type_long":"ghidra.framework.options.SaveState","name":"saveState","comment":"the configuration state to restore","type_short":"SaveState"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Saves the current configuration state of this panel.\n@param prefix identifier to prepend to any save state names to make them unique.\n@param saveState the new configuration state","static":false,"name":"writeConfigState","comment":"Saves the current configuration state of this panel.","params":[{"type_long":"java.lang.String","name":"prefix","comment":"identifier to prepend to any save state names to make them unique.","type_short":"String"},{"type_long":"ghidra.framework.options.SaveState","name":"saveState","comment":"the new configuration state","type_short":"SaveState"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setScrollingSyncState","comment":"","params":[{"type_long":"boolean","name":"syncScrolling","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hasMatchingLocation","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"saveCoordinatorState","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"restoreCoordinatorState","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ListingCodeComparisonPanel","comment":"Panel that displays two listings for comparison.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"DUAL_LISTING_HEADER_SHOWING","comment":"","type_short":"String","constant_value":"\"DUAL_LISTING_HEADER_SHOWING\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"DUAL_LISTING_SIDE_BY_SIDE","comment":"","type_short":"String","constant_value":"\"DUAL_LISTING_SIDE_BY_SIDE\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"NAME","comment":"","type_short":"String","constant_value":"\"DualListing\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TITLE","comment":"","type_short":"String","constant_value":"\"Listing View\""},{"type_long":"docking.help.HelpService","javadoc":"","static":true,"name":"help","comment":"","type_short":"HelpService","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"DUAL_LISTING_HELP_TOPIC","comment":"","type_short":"String","constant_value":"\"FunctionComparison\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"DUAL_LISTING_ACTION_GROUP","comment":"","type_short":"String","constant_value":"\"DualListing\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"DIFF_NAVIGATE_GROUP","comment":"","type_short":"String","constant_value":"\"A2_DiffNavigate\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"HOVER_GROUP","comment":"","type_short":"String","constant_value":"\"A5_Hovers\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"PROPERTIES_GROUP","comment":"","type_short":"String","constant_value":"\"B1_Properties\""},{"type_long":"javax.swing.Icon","javadoc":"","static":true,"name":"NEXT_DIFF_ICON","comment":"","type_short":"Icon","constant_value":null},{"type_long":"javax.swing.Icon","javadoc":"","static":true,"name":"PREVIOUS_DIFF_ICON","comment":"","type_short":"Icon","constant_value":null},{"type_long":"javax.swing.Icon","javadoc":"","static":true,"name":"bothIcon","comment":"","type_short":"Icon","constant_value":null},{"type_long":"javax.swing.Icon","javadoc":"","static":true,"name":"unmatchedIcon","comment":"","type_short":"Icon","constant_value":null},{"type_long":"javax.swing.Icon","javadoc":"","static":true,"name":"diffsIcon","comment":"","type_short":"Icon","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ALL_AREA_MARKERS","comment":"","type_short":"String","constant_value":"\"All Area Markers\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"UNMATCHED_AREA_MARKERS","comment":"","type_short":"String","constant_value":"\"Unmatched Area Markers\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"DIFF_AREA_MARKERS","comment":"","type_short":"String","constant_value":"\"Diff Area Markers\""},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"nextPreviousAreaType","comment":"","type_short":"String","constant_value":null},{"type_long":"javax.swing.Icon","javadoc":"","static":true,"name":"HOVER_ON_ICON","comment":"","type_short":"Icon","constant_value":null},{"type_long":"javax.swing.Icon","javadoc":"","static":true,"name":"HOVER_OFF_ICON","comment":"","type_short":"Icon","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingPanel[]","javadoc":"","static":false,"name":"listingPanels","comment":"","type_short":"ghidra.app.util.viewer.listingpanel.ListingPanel[]","constant_value":null},{"type_long":"ghidra.program.util.ListingDiff","javadoc":"","static":false,"name":"listingDiff","comment":"","type_short":"ListingDiff","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingDiffActionManager","javadoc":"","static":false,"name":"diffActionManager","comment":"","type_short":"ListingDiffActionManager","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.DualListingServiceProvider[]","javadoc":"","static":false,"name":"dualListingServiceProviders","comment":"","type_short":"ghidra.app.util.viewer.listingpanel.DualListingServiceProvider[]","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.DualListingNavigator[]","javadoc":"","static":false,"name":"navigatables","comment":"","type_short":"ghidra.app.util.viewer.listingpanel.DualListingNavigator[]","constant_value":null},{"type_long":"ghidra.app.util.viewer.util.FieldNavigator[]","javadoc":"","static":false,"name":"fieldNavigators","comment":"","type_short":"ghidra.app.util.viewer.util.FieldNavigator[]","constant_value":null},{"type_long":"ghidra.app.util.viewer.util.AddressIndexMap[]","javadoc":"","static":false,"name":"indexMaps","comment":"","type_short":"ghidra.app.util.viewer.util.AddressIndexMap[]","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSetView[]","javadoc":"","static":false,"name":"addressSets","comment":"","type_short":"ghidra.program.model.address.AddressSetView[]","constant_value":null},{"type_long":"ghidra.app.plugin.core.marker.MarkerManager[]","javadoc":"","static":false,"name":"markerManagers","comment":"","type_short":"ghidra.app.plugin.core.marker.MarkerManager[]","constant_value":null},{"type_long":"ghidra.app.services.MarkerSet[]","javadoc":"","static":false,"name":"unmatchedCodeMarkers","comment":"","type_short":"ghidra.app.services.MarkerSet[]","constant_value":null},{"type_long":"ghidra.app.services.MarkerSet[]","javadoc":"","static":false,"name":"diffMarkers","comment":"","type_short":"ghidra.app.services.MarkerSet[]","constant_value":null},{"type_long":"ghidra.app.services.MarkerSet[]","javadoc":"","static":false,"name":"currentCursorMarkers","comment":"","type_short":"ghidra.app.services.MarkerSet[]","constant_value":null},{"type_long":"java.awt.Color","javadoc":"","static":true,"name":"CURSOR_LINE_COLOR","comment":"","type_short":"Color","constant_value":null},{"type_long":"javax.swing.ImageIcon","javadoc":"","static":false,"name":"CURSOR_LOC_ICON","comment":"","type_short":"ImageIcon","constant_value":null},{"type_long":"java.awt.Color","javadoc":"","static":false,"name":"cursorHighlightColor","comment":"","type_short":"Color","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isShowingEntireListing","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isSideBySide","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"fieldLocationChanging","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingCodeComparisonPanel.LeftLocationListener","javadoc":"","static":false,"name":"leftLocationListener","comment":"","type_short":"LeftLocationListener","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingCodeComparisonPanel.RightLocationListener","javadoc":"","static":false,"name":"rightLocationListener","comment":"","type_short":"RightLocationListener","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingCodeComparisonPanel.ToggleHeaderAction","javadoc":"","static":false,"name":"toggleHeaderAction","comment":"","type_short":"ToggleHeaderAction","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingCodeComparisonPanel.ToggleOrientationAction","javadoc":"","static":false,"name":"toggleOrientationAction","comment":"","type_short":"ToggleOrientationAction","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingCodeComparisonPanel.ToggleHoverAction","javadoc":"","static":false,"name":"toggleHoverAction","comment":"","type_short":"ToggleHoverAction","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingCodeComparisonPanel.NextPreviousAreaMarkerAction","javadoc":"","static":false,"name":"nextPreviousAreaMarkerAction","comment":"","type_short":"NextPreviousAreaMarkerAction","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingCodeComparisonPanel.NextDiffAction","javadoc":"","static":false,"name":"nextDiffAction","comment":"","type_short":"NextDiffAction","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingCodeComparisonPanel.PreviousDiffAction","javadoc":"","static":false,"name":"previousDiffAction","comment":"","type_short":"PreviousDiffAction","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingCodeComparisonPanel.ListingCodeComparisonOptionsAction","javadoc":"","static":false,"name":"optionsAction","comment":"","type_short":"ListingCodeComparisonOptionsAction","constant_value":null},{"type_long":"docking.action.DockingAction[]","javadoc":"","static":false,"name":"diffActions","comment":"","type_short":"docking.action.DockingAction[]","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ApplyFunctionSignatureAction","javadoc":"","static":false,"name":"applyFunctionSignatureAction","comment":"","type_short":"ApplyFunctionSignatureAction","constant_value":null},{"type_long":"javax.swing.JSplitPane","javadoc":"","static":false,"name":"splitPane","comment":"","type_short":"JSplitPane","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingDiffHighlightProvider","javadoc":"","static":false,"name":"leftDiffHighlightProvider","comment":"","type_short":"ListingDiffHighlightProvider","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingDiffHighlightProvider","javadoc":"","static":false,"name":"rightDiffHighlightProvider","comment":"","type_short":"ListingDiffHighlightProvider","constant_value":null},{"type_long":"ghidra.program.util.FunctionAddressCorrelation","javadoc":"","static":false,"name":"correlator","comment":"","type_short":"FunctionAddressCorrelation","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"adjustingLeftLocation","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"adjustingRightLocation","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.app.plugin.core.codebrowser.hover.ReferenceListingHover","javadoc":"","static":false,"name":"referenceHoverService","comment":"","type_short":"ReferenceListingHover","constant_value":null},{"type_long":"ghidra.app.plugin.core.codebrowser.hover.DataTypeListingHover","javadoc":"","static":false,"name":"dataTypeHoverService","comment":"","type_short":"DataTypeListingHover","constant_value":null},{"type_long":"ghidra.app.plugin.core.codebrowser.hover.TruncatedTextListingHover","javadoc":"","static":false,"name":"truncatedTextHoverService","comment":"","type_short":"TruncatedTextListingHover","constant_value":null},{"type_long":"ghidra.app.plugin.core.codebrowser.hover.FunctionNameListingHover","javadoc":"","static":false,"name":"functionNameHoverService","comment":"","type_short":"FunctionNameListingHover","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"leftTitle","comment":"","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"rightTitle","comment":"","type_short":"String","constant_value":null},{"type_long":"ghidra.app.util.viewer.listingpanel.ListingCodeComparisonOptions","javadoc":"","static":false,"name":"comparisonOptions","comment":"","type_short":"ListingCodeComparisonOptions","constant_value":null},{"type_long":"ghidra.program.model.address.Address[]","javadoc":"","static":false,"name":"coordinatorLockedAddresses","comment":"","type_short":"ghidra.program.model.address.Address[]","constant_value":null}]}
