{"implements":[],"javadoc":"A container class to hold a color and a style value.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.awt.Color","name":"color","comment":"","type_short":"Color"},{"type_long":"int","name":"style","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getStyle","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isBold","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isItalic","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Wraps the given text with HTML markup for each attribute and color defined by this \n class.  The returned result will <b>not<\/b> be prepended with <code>&lt;HTML&gt;<\/code>.\n@param text the text to wrap\n@return the wrapped text","static":false,"name":"toHtml","comment":"Wraps the given text with HTML markup for each attribute and color defined by this \n class.  The returned result will not be prepended with HTML.","params":[{"type_long":"java.lang.String","name":"text","comment":"the text to wrap","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the wrapped text","type_short":"String"}}],"name":"ColorAndStyle","comment":"A container class to hold a color and a style value.","fields":[{"type_long":"java.awt.Color","javadoc":"","static":false,"name":"color","comment":"","type_short":"Color","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"style","comment":"","type_short":"int","constant_value":null}]}
