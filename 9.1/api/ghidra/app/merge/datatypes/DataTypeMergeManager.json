{"implements":["ghidra.app.merge.MergeResolver"],"javadoc":"Manager for merging category and data type changes","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Manager for merging the data types using the four programs.\n@param mergeManager overall merge manager for domain object\n@param resultDomainObject the program to be updated with the result of the merge.\n This is the program that will actually get checked in.\n@param myDomainObject the program requesting to be checked in.\n@param originalDomainObject the program that was checked out.\n@param latestDomainObject the latest checked-in version of the program.\n@param latestChanges the address set of changes between original and latest versioned program.\n@param myChanges the address set of changes between original and my modified program.","static":false,"name":"<init>","comment":"Manager for merging the data types using the four programs.","params":[{"type_long":"ghidra.framework.data.DomainObjectMergeManager","name":"mergeManager","comment":"overall merge manager for domain object","type_short":"DomainObjectMergeManager"},{"type_long":"ghidra.program.model.data.DataTypeManagerDomainObject","name":"resultDomainObject","comment":"the program to be updated with the result of the merge.\n This is the program that will actually get checked in.","type_short":"DataTypeManagerDomainObject"},{"type_long":"ghidra.program.model.data.DataTypeManagerDomainObject","name":"myDomainObject","comment":"the program requesting to be checked in.","type_short":"DataTypeManagerDomainObject"},{"type_long":"ghidra.program.model.data.DataTypeManagerDomainObject","name":"originalDomainObject","comment":"the program that was checked out.","type_short":"DataTypeManagerDomainObject"},{"type_long":"ghidra.program.model.data.DataTypeManagerDomainObject","name":"latestDomainObject","comment":"the latest checked-in version of the program.","type_short":"DataTypeManagerDomainObject"},{"type_long":"ghidra.program.model.listing.DataTypeChangeSet","name":"latestChanges","comment":"the address set of changes between original and latest versioned program.","type_short":"DataTypeChangeSet"},{"type_long":"ghidra.program.model.listing.DataTypeChangeSet","name":"myChanges","comment":"the address set of changes between original and my modified program.","type_short":"DataTypeChangeSet"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"apply","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"cancel","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDescription","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Merge the data types using the four programs.\n@param monitor merge task monitor\n@see MergeConstants","static":false,"name":"merge","comment":"Merge the data types using the four programs.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"merge task monitor","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"For JUnit testing only, set the option for resolving a conflict.\n@param option forced conflict resolution option","static":false,"name":"setConflictResolution","comment":"For JUnit testing only, set the option for resolving a conflict.","params":[{"type_long":"int","name":"option","comment":"forced conflict resolution option","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processSourceArchiveChanges","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateSourceArchive","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateSourceName","comment":"","params":[{"type_long":"ghidra.app.plugin.core.datamgr.archive.SourceArchive","name":"resultSourceArchive","comment":"","type_short":"SourceArchive"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processSourceArchiveAdditions","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addSourceArchive","comment":"","params":[{"type_long":"ghidra.app.plugin.core.datamgr.archive.SourceArchive","name":"mySourceArchive","comment":"","type_short":"SourceArchive"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeSourceArchive","comment":"","params":[{"type_long":"ghidra.util.UniversalID","name":"universalID","comment":"","type_short":"UniversalID"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"adjustTime","comment":"","params":[{"type_long":"ghidra.app.plugin.core.datamgr.archive.SourceArchive","name":"resultSourceArchive","comment":"","type_short":"SourceArchive"},{"type_long":"ghidra.app.plugin.core.datamgr.archive.SourceArchive","name":"mySourceArchive","comment":"","type_short":"SourceArchive"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"fixupDirtyFlags","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processSourceArchiveConflicts","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"handleSourceArchiveConflict","comment":"","params":[{"type_long":"long","name":"sourceID","comment":"","type_short":"long"},{"type_long":"int","name":"conflictIndex","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add new categories.\n@throws CancelledException if task cancelled","static":false,"name":"processCategoriesAdded","comment":"Add new categories.","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if task cancelled","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Process conflicts for categories.\n@throws CancelledException task was cancelled","static":false,"name":"processCategoryConflicts","comment":"Process conflicts for categories.","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"task was cancelled","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"handleCategoryConflict","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"int","name":"conflictIndex","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processCategoryChanges","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processCategoriesDeleted","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processDataTypeConflicts","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"handleDataTypeConflict","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"int","name":"conflictIndex","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"applyDataTypeConflict","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setSourceDataType","comment":"","params":[{"type_long":"long","name":"myID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"changeSourceArchive","comment":"","params":[{"type_long":"long","name":"dtID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dataTypeChanged","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Process data type moved or renamed.\n@param id data type ID\n@return true if the data type was added because it was deleted\n in RESULT; false if the data type did not have to be added","static":false,"name":"dataTypeRenamedOrMoved","comment":"Process data type moved or renamed.","params":[{"type_long":"long","name":"id","comment":"data type ID","type_short":"long"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the data type was added because it was deleted\n in RESULT; false if the data type did not have to be added","type_short":"boolean"}},{"javadoc":"Update the data type name\/category path in RESULT if it exists. \n If it does not exist, add it to RESULT.\n@param id id of data type\n@param dt data type to use as the source name and category path\n@param resolvedDataTypes hashtable that has resolved data types\n@return the new data type if one had to be added to RESULT; null if\n the data type existed","static":false,"name":"updateDataTypeName","comment":"Update the data type name\/category path in RESULT if it exists. \n If it does not exist, add it to RESULT.","params":[{"type_long":"long","name":"id","comment":"id of data type","type_short":"long"},{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"data type to use as the source name and category path","type_short":"DataType"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"hashtable that has resolved data types","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"the new data type if one had to be added to RESULT; null if\n the data type existed","type_short":"DataType"}},{"javadoc":"","static":false,"name":"dataTypeDeleted","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set category path.  If name conflict occurs within new category\n the specified dt will remain within its' current category\n@param dt datatype whoose category is to changed\n@param newPath new category path","static":false,"name":"setCategoryPath","comment":"Set category path.  If name conflict occurs within new category\n the specified dt will remain within its' current category","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"datatype whoose category is to changed","type_short":"DataType"},{"type_long":"ghidra.program.model.data.CategoryPath","name":"newPath","comment":"new category path","type_short":"CategoryPath"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateDataType","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"},{"type_long":"boolean","name":"updatePath","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"updateDataTypeSource","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"@param dataTypeID the ID (key) of the data type to be added.\n@param dataType the data type to be added.\n@param resolvedDataTypes table which maps the dataTypeID to the resulting data type within \n this data type manager.\n@return the resulting data type in this data type manager.","static":false,"name":"addDataType","comment":"","params":[{"type_long":"long","name":"dataTypeID","comment":"the ID (key) of the data type to be added.","type_short":"long"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"the data type to be added.","type_short":"DataType"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"table which maps the dataTypeID to the resulting data type within \n this data type manager.","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"the resulting data type in this data type manager.","type_short":"DataType"}},{"javadoc":"Get the resolved data type from the given table; \n If the data type has not been resolved yet, then use the one from\n the results if the id was not added in MY program.\n@param id id of data type\n@param dt the data type\n@return resolved data type that corresponds to id","static":false,"name":"getResolvedBaseType","comment":"Get the resolved data type from the given table; \n If the data type has not been resolved yet, then use the one from\n the results if the id was not added in MY program.","params":[{"type_long":"long","name":"id","comment":"id of data type","type_short":"long"},{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"the data type","type_short":"DataType"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"resolved data type that corresponds to id","type_short":"DataType"}},{"javadoc":"","static":false,"name":"createPointer","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.Pointer","name":"pointerDt","comment":"","type_short":"Pointer"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"createTypeDef","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.TypeDef","name":"originalTypeDef","comment":"","type_short":"TypeDef"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"createArray","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.Array","name":"array","comment":"","type_short":"Array"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"addComposite","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.Composite","name":"myDt","comment":"","type_short":"Composite"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"addFunctionDef","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.FunctionDefinition","name":"myDt","comment":"","type_short":"FunctionDefinition"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"updateHashTables","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataType","name":"newDt","comment":"","type_short":"DataType"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getResolvedComponent","comment":"","params":[{"type_long":"long","name":"compID","comment":"","type_short":"long"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"updateStructure","comment":"","params":[{"type_long":"long","name":"sourceDtID","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.Structure","name":"sourceDt","comment":"","type_short":"Structure"},{"type_long":"ghidra.program.model.data.Structure","name":"destStruct","comment":"","type_short":"Structure"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"displayError","comment":"","params":[{"type_long":"ghidra.program.model.data.Composite","name":"destComposite","comment":"","type_short":"Composite"},{"type_long":"java.lang.IllegalArgumentException","name":"e","comment":"","type_short":"IllegalArgumentException"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateUnion","comment":"","params":[{"type_long":"long","name":"sourceDtID","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.Union","name":"sourceDt","comment":"","type_short":"Union"},{"type_long":"ghidra.program.model.data.Union","name":"destUnion","comment":"","type_short":"Union"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateAlignment","comment":"","params":[{"type_long":"ghidra.program.model.data.Composite","name":"sourceDt","comment":"","type_short":"Composite"},{"type_long":"ghidra.program.model.data.Composite","name":"destinationDt","comment":"","type_short":"Composite"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateComposite","comment":"","params":[{"type_long":"long","name":"sourceDtID","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.Composite","name":"sourceDt","comment":"","type_short":"Composite"},{"type_long":"ghidra.program.model.data.Composite","name":"destDt","comment":"","type_short":"Composite"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateFunctionDef","comment":"","params":[{"type_long":"long","name":"sourceFunctionDefDtID","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.FunctionDefinition","name":"sourceFunctionDefDt","comment":"","type_short":"FunctionDefinition"},{"type_long":"ghidra.program.model.data.FunctionDefinition","name":"destDt","comment":"","type_short":"FunctionDefinition"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the resolved data type for either the return type or a variable.\n@param id id of FunctionDefinition\n@param paramID ID of either the return type or a variable\n@param index >=0 is the index of the variable; <0 means the paramID is\n the return type\n@param resolvedDataTypes hashtable to use for resolving\n@return resolved data type or the default data type if the data type\n has not been resolved yet","static":false,"name":"getResolvedParam","comment":"Get the resolved data type for either the return type or a variable.","params":[{"type_long":"long","name":"id","comment":"id of FunctionDefinition","type_short":"long"},{"type_long":"long","name":"paramID","comment":"ID of either the return type or a variable","type_short":"long"},{"type_long":"int","name":"index","comment":"=0 is the index of the variable; 0 means the paramID is\n the return type","type_short":"int"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"hashtable to use for resolving","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"resolved data type or the default data type if the data type\n has not been resolved yet","type_short":"DataType"}},{"javadoc":"Process data types that were changed (renamed, moved, or edited) in\n MY program, but are not conflicts, i.e., not renamed, moved or edited\n in LATEST. The corresponding data type in RESULT program is updated.\n@throws CancelledException if task is cancelled","static":false,"name":"processDataTypeChanges","comment":"Process data types that were changed (renamed, moved, or edited) in\n MY program, but are not conflicts, i.e., not renamed, moved or edited\n in LATEST. The corresponding data type in RESULT program is updated.","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if task is cancelled","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Process categories that were renamed in MY program, but are not\n conflicts, i.e., not renamed, moved, or deleted in LATEST.\n@param id category ID","static":false,"name":"processCategoryRenamed","comment":"Process categories that were renamed in MY program, but are not\n conflicts, i.e., not renamed, moved, or deleted in LATEST.","params":[{"type_long":"long","name":"id","comment":"category ID","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Process categories that were moved in MY program, but are not \n conflicts, i.e., not renamed, moved, or deleted in LATEST.\n@param id category ID","static":false,"name":"processCategoryMoved","comment":"Process categories that were moved in MY program, but are not \n conflicts, i.e., not renamed, moved, or deleted in LATEST.","params":[{"type_long":"long","name":"id","comment":"category ID","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Process categories that were deleted in MY program, but are not \n conflicts, i.e., not renamed, moved, or deleted in LATEST.\n@param id category ID","static":false,"name":"processCategoryDeleted","comment":"Process categories that were deleted in MY program, but are not \n conflicts, i.e., not renamed, moved, or deleted in LATEST.","params":[{"type_long":"long","name":"id","comment":"category ID","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isParent","comment":"","params":[{"type_long":"ghidra.program.model.data.CategoryPath","name":"catPath","comment":"","type_short":"CategoryPath"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"moveCategory","comment":"","params":[{"type_long":"ghidra.program.model.data.Category","name":"newParent","comment":"","type_short":"Category"},{"type_long":"ghidra.program.model.data.Category","name":"category","comment":"","type_short":"Category"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setCategoryName","comment":"","params":[{"type_long":"ghidra.program.model.data.Category","name":"category","comment":"","type_short":"Category"},{"type_long":"java.lang.String","name":"newName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setDataTypeName","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"},{"type_long":"java.lang.String","name":"newName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"categoryWasMoved","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm1","comment":"","type_short":"DataTypeManager"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm2","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"categoryWasMoved","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"categoryWasRenamed","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm1","comment":"","type_short":"DataTypeManager"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm2","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"categoryWasRenamed","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dataTypeWasMoved","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dataTypeWasMoved","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm1","comment":"","type_short":"DataTypeManager"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm2","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dataTypeWasRenamed","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dataTypeWasRenamed","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm1","comment":"","type_short":"DataTypeManager"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm2","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dataTypeWasChanged","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dataTypeWasChanged","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm1","comment":"","type_short":"DataTypeManager"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm2","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"compositeDataTypeWasChanged","comment":"","params":[{"type_long":"ghidra.program.model.data.Composite","name":"c1","comment":"","type_short":"Composite"},{"type_long":"ghidra.program.model.data.Composite","name":"c2","comment":"","type_short":"Composite"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dataTypeSourceWasChanged","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dataTypeSourceWasChanged","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm1","comment":"","type_short":"DataTypeManager"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm2","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"dataTypeWasDeleted","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Handle conflicts with name changes; also determine whether the category\n was moved; if so, move the category according to the conflictOption\n selected. Moves are handled here because a rename and a move is\n considered to be a single conflict.\n@param id category ID\n@throws CancelledException if task is cancelled","static":false,"name":"categoryRenamedOrMoved","comment":"Handle conflicts with name changes; also determine whether the category\n was moved; if so, move the category according to the conflictOption\n selected. Moves are handled here because a rename and a move is\n considered to be a single conflict.","params":[{"type_long":"long","name":"id","comment":"category ID","type_short":"long"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if task is cancelled","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"useOriginalCategoryName","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"useMyCategoryName","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Handle conflicts on a category that was deleted in one program, and\n renamed or moved in another program.\n@param id category ID\n@throws CancelledException if operation is cancelled","static":false,"name":"categoryDeleted","comment":"Handle conflicts on a category that was deleted in one program, and\n renamed or moved in another program.","params":[{"type_long":"long","name":"id","comment":"category ID","type_short":"long"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if operation is cancelled","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"deleteLatestCategory","comment":"","params":[{"type_long":"ghidra.program.model.data.Category","name":"latestCat","comment":"","type_short":"Category"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"showArchiveMergePanel","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"int","name":"conflictIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"showCategoryMergePanel","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"int","name":"conflictIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"showDataTypeMergePanel","comment":"","params":[{"type_long":"int","name":"conflictIndex","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"latestDt","comment":"","type_short":"DataType"},{"type_long":"ghidra.program.model.data.DataType","name":"myDt","comment":"","type_short":"DataType"},{"type_long":"ghidra.program.model.data.DataType","name":"origDt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processDataTypesDeleted","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processDataTypesAdded","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"See if there is a data type in the result file that matches My data type based on\n name, path and contents. \n If there is a data type that is the same then return true.\n@param myDtID the database ID (key) for My data type.\n@param myDt My data type.\n@return true if the same named and equivalent data type is found in the result \n data type manager.","static":false,"name":"equivalentDataTypeFound","comment":"See if there is a data type in the result file that matches My data type based on\n name, path and contents. \n If there is a data type that is the same then return true.","params":[{"type_long":"long","name":"myDtID","comment":"the database ID (key) for My data type.","type_short":"long"},{"type_long":"ghidra.program.model.data.DataType","name":"myDt","comment":"My data type.","type_short":"DataType"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the same named and equivalent data type is found in the result \n data type manager.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"cleanUpDataTypes","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"fixUpDataTypes","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"fixUpFunctionDef","comment":"","params":[{"type_long":"ghidra.app.merge.datatypes.DataTypeMergeManager.FixUpInfo","name":"info","comment":"","type_short":"FixUpInfo"},{"type_long":"ghidra.program.model.data.FunctionDefinition","name":"fd","comment":"","type_short":"FunctionDefinition"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Fix up the structure using the fix up info for a component.","static":false,"name":"fixUpStructure","comment":"Fix up the structure using the fix up info for a component.","params":[{"type_long":"ghidra.app.merge.datatypes.DataTypeMergeManager.FixUpInfo","name":"info","comment":"","type_short":"FixUpInfo"},{"type_long":"ghidra.program.model.data.Structure","name":"struct","comment":"","type_short":"Structure"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determines the number of contiguous undefined bytes in this structure starting \n at the indicated component ordinal.\n@param struct the structure to check.\n@param ordinal the ordinal of the component where checking for undefined bytes should begin.\n@return the number of contiguous undefined bytes or 0.","static":false,"name":"getNumUndefinedBytes","comment":"Determines the number of contiguous undefined bytes in this structure starting \n at the indicated component ordinal.","params":[{"type_long":"ghidra.program.model.data.Structure","name":"struct","comment":"the structure to check.","type_short":"Structure"},{"type_long":"int","name":"ordinal","comment":"the ordinal of the component where checking for undefined bytes should begin.","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"the number of contiguous undefined bytes or 0.","type_short":"int"}},{"javadoc":"","static":false,"name":"addToCleanupList","comment":"","params":[{"type_long":"ghidra.app.merge.datatypes.DataTypeMergeManager.FixUpInfo","name":"info","comment":"","type_short":"FixUpInfo"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Fix up the Union by going through all of the fix up info objects that\n have the given ID.\n@param id id of the Union\n@param union union that is updated","static":false,"name":"fixUpUnion","comment":"Fix up the Union by going through all of the fix up info objects that\n have the given ID.","params":[{"type_long":"long","name":"id","comment":"id of the Union","type_short":"long"},{"type_long":"ghidra.program.model.data.Union","name":"union","comment":"union that is updated","type_short":"Union"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@param compID\n@param dataTypeManager\n@return ","static":false,"name":"resolve","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"resolvedDataTypes","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"findFixUpInfo","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"},{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.app.merge.datatypes.DataTypeMergeManager.FixUpInfo","comment":"","type_short":"FixUpInfo"}},{"javadoc":"","static":false,"name":"processDataTypeSourceChanged","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processDataTypeRenamed","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processDataTypeEdited","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processDataTypeDeleted","comment":"","params":[{"type_long":"long","name":"myDtID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processDataTypeMoved","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determines myDtChangeList, myDtAddedList, dtConflictList and number of data type conflicts\n <br>- myDtChangeList = My data types that changed and are not in conflict.\n <br>- myDtAddedList = My data types that were added and are not in conflict.\n <br>- dtConflictList = conflicting categories where My and Latest both changed the data type.\n@param latestChanges data type changes for the Latest domain object\n@param myChanges data type changes for My domain object","static":false,"name":"setupSourceArchiveChanges","comment":"Determines myDtChangeList, myDtAddedList, dtConflictList and number of data type conflicts\n - myDtChangeList = My data types that changed and are not in conflict.\n - myDtAddedList = My data types that were added and are not in conflict.\n - dtConflictList = conflicting categories where My and Latest both changed the data type.","params":[{"type_long":"ghidra.program.model.listing.DataTypeChangeSet","name":"latestChanges","comment":"data type changes for the Latest domain object","type_short":"DataTypeChangeSet"},{"type_long":"ghidra.program.model.listing.DataTypeChangeSet","name":"myChanges","comment":"data type changes for My domain object","type_short":"DataTypeChangeSet"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"determineSourceArchiveChangeConflicts","comment":"","params":[{"type_long":"long[]","name":"latestArchiveChanges","comment":"","type_short":"long[]"},{"type_long":"long[]","name":"myArchiveChanges","comment":"","type_short":"long[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"determineSourceArchiveAddConflicts","comment":"","params":[{"type_long":"long[]","name":"latestArchiveAdds","comment":"","type_short":"long[]"},{"type_long":"long[]","name":"myArchiveAdds","comment":"","type_short":"long[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"loadDirtyMap","comment":"","params":[{"type_long":"ghidra.util.UniversalID","name":"sourceID","comment":"","type_short":"UniversalID"},{"type_long":"ghidra.app.plugin.core.datamgr.archive.SourceArchive","name":"mySourceArchive","comment":"","type_short":"SourceArchive"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determines myDtChangeList, myDtAddedList, dtConflictList and number of data type conflicts\n <br>- myDtChangeList = My data types that changed and are not in conflict.\n <br>- myDtAddedList = My data types that were added and are not in conflict.\n <br>- dtConflictList = conflicting categories where My and Latest both changed the data type.\n@param latestChanges data type changes for the Latest domain object\n@param myChanges data type changes for My domain object","static":false,"name":"setupDataTypeChanges","comment":"Determines myDtChangeList, myDtAddedList, dtConflictList and number of data type conflicts\n - myDtChangeList = My data types that changed and are not in conflict.\n - myDtAddedList = My data types that were added and are not in conflict.\n - dtConflictList = conflicting categories where My and Latest both changed the data type.","params":[{"type_long":"ghidra.program.model.listing.DataTypeChangeSet","name":"latestChanges","comment":"data type changes for the Latest domain object","type_short":"DataTypeChangeSet"},{"type_long":"ghidra.program.model.listing.DataTypeChangeSet","name":"myChanges","comment":"data type changes for My domain object","type_short":"DataTypeChangeSet"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Processes my data types that were added and determines whether each is actually a \n conflict, an added data type, or a changed data type relative to the Latest check in.\n@param myDtAdds","static":false,"name":"processAddIDs","comment":"Processes my data types that were added and determines whether each is actually a \n conflict, an added data type, or a changed data type relative to the Latest check in.","params":[{"type_long":"long[]","name":"myDtAdds","comment":"","type_short":"long[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"eliminateFakeConflicts","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determines myCatChangeList, myCatAddedList, catConflictList and number of category conflicts\n <br>- myCatChangeList = My categories that changed and are not in conflict.\n <br>- myCatAddedList = Latest categories that changed and are not in conflict.\n <br>- catConflictList = conflicting categories where My and Latest both changed the category.\n@param latestChanges category changes for the Latest domain object\n@param myChanges category changes for My domain object","static":false,"name":"setupCategoryChanges","comment":"Determines myCatChangeList, myCatAddedList, catConflictList and number of category conflicts\n - myCatChangeList = My categories that changed and are not in conflict.\n - myCatAddedList = Latest categories that changed and are not in conflict.\n - catConflictList = conflicting categories where My and Latest both changed the category.","params":[{"type_long":"ghidra.program.model.listing.DataTypeChangeSet","name":"latestChanges","comment":"category changes for the Latest domain object","type_short":"DataTypeChangeSet"},{"type_long":"ghidra.program.model.listing.DataTypeChangeSet","name":"myChanges","comment":"category changes for My domain object","type_short":"DataTypeChangeSet"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the base data type of the specified data type.\n@param dt the data type whose base data type we want.\n@return the base data type","static":false,"name":"getBaseDataType","comment":"Gets the base data type of the specified data type.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"the data type whose base data type we want.","type_short":"DataType"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"the base data type","type_short":"DataType"}},{"javadoc":"","static":false,"name":"resetOption","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"showMessage","comment":"","params":[{"type_long":"java.lang.String","name":"title","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"msg","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPhases","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String[][]","comment":"","type_short":"java.lang.String[][]"}},{"javadoc":"","static":false,"name":"getDataTypeManager","comment":"","params":[{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","name":"dataTypeMap","comment":"","type_short":"LongObjectHashtable"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeManager","comment":"","type_short":"DataTypeManager"}}],"name":"DataTypeMergeManager","comment":"Manager for merging category and data type changes","fields":[{"type_long":"java.lang.String[]","javadoc":"","static":true,"name":"DATA_TYPES_PHASE","comment":"","type_short":"java.lang.String[]","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"RESULT","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"ORIGINAL","comment":"","type_short":"int","constant_value":"3"},{"type_long":"int","javadoc":"","static":true,"name":"LATEST","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"MY","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"CANCELED","comment":"","type_short":"int","constant_value":"-2"},{"type_long":"int","javadoc":"","static":true,"name":"ASK_USER","comment":"","type_short":"int","constant_value":"-1"},{"type_long":"int","javadoc":"","static":true,"name":"OPTION_LATEST","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"OPTION_MY","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"OPTION_ORIGINAL","comment":"","type_short":"int","constant_value":"2"},{"type_long":"ghidra.framework.data.DomainObjectMergeManager","javadoc":"","static":false,"name":"mergeManager","comment":"","type_short":"DomainObjectMergeManager","constant_value":null},{"type_long":"ghidra.program.model.data.DataTypeManagerDomainObject[]","javadoc":"","static":false,"name":"domainObjects","comment":"","type_short":"ghidra.program.model.data.DataTypeManagerDomainObject[]","constant_value":null},{"type_long":"ghidra.program.model.data.DataTypeManager[]","javadoc":"","static":false,"name":"dtms","comment":"","type_short":"ghidra.program.model.data.DataTypeManager[]","constant_value":null},{"type_long":"ghidra.util.task.TaskMonitor","javadoc":"","static":false,"name":"currentMonitor","comment":"","type_short":"TaskMonitor","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"originalConflictOption","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"conflictOption","comment":"","type_short":"int","constant_value":null},{"type_long":"java.util.HashMap<ghidra.util.UniversalID,java.lang.Boolean>","javadoc":"","static":false,"name":"dirtyMap","comment":"","type_short":"HashMap","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Long>","javadoc":"","static":false,"name":"myArchiveAddedList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Long>","javadoc":"","static":false,"name":"myArchiveChangeList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Long>","javadoc":"","static":false,"name":"archiveConflictList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"ghidra.app.merge.datatypes.SourceArchiveMergePanel","javadoc":"","static":false,"name":"archiveMergePanel","comment":"","type_short":"SourceArchiveMergePanel","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Long>","javadoc":"","static":false,"name":"myCatAddedList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Long>","javadoc":"","static":false,"name":"myCatChangeList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Long>","javadoc":"","static":false,"name":"catConflictList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"ghidra.app.merge.datatypes.CategoryMergePanel","javadoc":"","static":false,"name":"catMergePanel","comment":"","type_short":"CategoryMergePanel","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Long>","javadoc":"","static":false,"name":"myDtAddedList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Long>","javadoc":"","static":false,"name":"myDtChangeList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Long>","javadoc":"","static":false,"name":"dtConflictList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Long>","javadoc":"","static":false,"name":"dtSourceConflictList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"java.util.ArrayList<java.lang.Long>","javadoc":"","static":false,"name":"origDtConflictList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"ghidra.app.merge.datatypes.DataTypeMergePanel","javadoc":"","static":false,"name":"dtMergePanel","comment":"","type_short":"DataTypeMergePanel","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"totalConflictCount","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"currentConflictIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","javadoc":"","static":false,"name":"myResolvedDts","comment":"","type_short":"LongObjectHashtable","constant_value":null},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","javadoc":"","static":false,"name":"latestResolvedDts","comment":"","type_short":"LongObjectHashtable","constant_value":null},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.program.model.data.DataType>","javadoc":"","static":false,"name":"origResolvedDts","comment":"","type_short":"LongObjectHashtable","constant_value":null},{"type_long":"java.util.List<ghidra.app.merge.datatypes.DataTypeMergeManager.FixUpInfo>","javadoc":"","static":false,"name":"fixUpList","comment":"","type_short":"List","constant_value":null},{"type_long":"ghidra.util.datastruct.LongObjectHashtable<ghidra.app.merge.datatypes.DataTypeMergeManager.CleanUpInfo>","javadoc":"","static":false,"name":"cleanupPlaceHolderList","comment":"","type_short":"LongObjectHashtable","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"progressIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"categoryChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"dataTypeChoice","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"sourceArchiveChoice","comment":"","type_short":"int","constant_value":null}]}
