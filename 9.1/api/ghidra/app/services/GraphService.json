{"implements":[],"javadoc":"Service for getting a Graph display.","static":false,"methods":[{"javadoc":"Create Graph Data compatible with this graph service","static":false,"name":"createGraphContent","comment":"Create Graph Data compatible with this graph service","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.graph.GraphData","comment":"","type_short":"GraphData"}},{"javadoc":"Get a graph display.\n@param newDisplay a new graph window will be used if true.\n@throws GraphException if unable to obtain a graph window.","static":false,"name":"getGraphDisplay","comment":"Get a graph display.","params":[{"type_long":"boolean","name":"newDisplay","comment":"a new graph window will be used if true.","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.exception.GraphException","comment":"if unable to obtain a graph window.","type_short":"GraphException"}],"return":{"type_long":"ghidra.program.model.graph.GraphDisplay","comment":"","type_short":"GraphDisplay"}},{"javadoc":"Get a graph display.\n@throws GraphException if unable to obtain a graph window.","static":false,"name":"getGraphDisplay","comment":"Get a graph display.","params":[],"throws":[{"type_long":"ghidra.util.exception.GraphException","comment":"if unable to obtain a graph window.","type_short":"GraphException"}],"return":{"type_long":"ghidra.program.model.graph.GraphDisplay","comment":"","type_short":"GraphDisplay"}},{"javadoc":"Send specified selection object to all connected graphs\n that understand the concept of \"selection.\"\n@param selection selection object to interpret","static":false,"name":"setSelection","comment":"Send specified selection object to all connected graphs\n that understand the concept of \"selection.\"","params":[{"type_long":"java.lang.Object","name":"selection","comment":"selection object to interpret","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Send specified location object to all connected graphs that understand\n the concept of \"location.\"\n@param location location object to interpret","static":false,"name":"setLocation","comment":"Send specified location object to all connected graphs that understand\n the concept of \"location.\"","params":[{"type_long":"java.lang.Object","name":"location","comment":"location object to interpret","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the selection for all connected graphs and fire a selection event\n for Ghidra.\n@param selection selection object to interpret","static":false,"name":"fireSelectionEvent","comment":"Set the selection for all connected graphs and fire a selection event\n for Ghidra.","params":[{"type_long":"java.lang.Object","name":"selection","comment":"selection object to interpret","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the location for all connected graphs and fire a location event\n for Ghidra.\n@param location location object to interpret","static":false,"name":"fireLocationEvent","comment":"Set the location for all connected graphs and fire a location event\n for Ghidra.","params":[{"type_long":"java.lang.Object","name":"location","comment":"location object to interpret","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Handle notification from graph.\n@param notificationType command generated from graph\n@param handler associated graph handler\n@return true if notification was handled and there is no need for any other \n graph service provider to notified.","static":false,"name":"fireNotificationEvent","comment":"Handle notification from graph.","params":[{"type_long":"java.lang.String","name":"notificationType","comment":"command generated from graph","type_short":"String"},{"type_long":"ghidra.program.model.graph.GraphSelectionHandler","name":"handler","comment":"associated graph handler","type_short":"GraphSelectionHandler"}],"throws":[],"return":{"type_long":"boolean","comment":"true if notification was handled and there is no need for any other \n graph service provider to notified.","type_short":"boolean"}}],"name":"GraphService","comment":"Service for getting a Graph display.","fields":[]}
