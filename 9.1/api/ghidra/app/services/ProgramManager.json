{"implements":[],"javadoc":"Service for managing programs. Multiple programs may be open in a tool, \n but only one is active at any given time.","static":false,"methods":[{"javadoc":"Return the program that is currently active.\n@return may return null if no program is open","static":false,"name":"getCurrentProgram","comment":"Return the program that is currently active.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"may return null if no program is open","type_short":"Program"}},{"javadoc":"Returns true if the specified program is open and considiered visible to\n the user.\n@param program\n@return true if the specified program is open and considiered visible to\n the user","static":false,"name":"isVisible","comment":"Returns true if the specified program is open and considiered visible to\n the user.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the specified program is open and considiered visible to\n the user","type_short":"boolean"}},{"javadoc":"Closes the currently active program\n@return true if the close is successful.\n false if the close fails or if there is no program currently active.","static":false,"name":"closeProgram","comment":"Closes the currently active program","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the close is successful.\n false if the close fails or if there is no program currently active.","type_short":"boolean"}},{"javadoc":"Open the program corresponding to the given url.  Once open it will\n become\n@param ghidraURL valid server-based program URL\n@param state initial open state (OPEN_HIDDEN, OPEN_CURRENT, OPEN_VISIBLE).  \n The visibility states will be ignored if the program is already open.\n@return null if the user canceled the \"open\" for the new program or an error \n occurred and was displayed.\n@see GhidraURL","static":false,"name":"openProgram","comment":"Open the program corresponding to the given url.  Once open it will\n become","params":[{"type_long":"java.net.URL","name":"ghidraURL","comment":"valid server-based program URL","type_short":"URL"},{"type_long":"int","name":"state","comment":"initial open state (OPEN_HIDDEN, OPEN_CURRENT, OPEN_VISIBLE).  \n The visibility states will be ignored if the program is already open.","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"null if the user canceled the \"open\" for the new program or an error \n occurred and was displayed.","type_short":"Program"}},{"javadoc":"Open the program for the given domainFile.  Once open it will\n become the active program.\n@param domainFile domain file that has the program\n@return null if the user canceled the \"open\" for the new program","static":false,"name":"openProgram","comment":"Open the program for the given domainFile.  Once open it will\n become the active program.","params":[{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"domain file that has the program","type_short":"DomainFile"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"null if the user canceled the \"open\" for the new program","type_short":"Program"}},{"javadoc":"","static":false,"name":"openProgram","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"","type_short":"DomainFile"},{"type_long":"java.awt.Component","name":"dialogParent","comment":"","type_short":"Component"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"Opens the specified version of the program represented by the given DomainFile. This\n method should be used for shared DomainFiles. The newly opened file will be made the\n active program.\n@param df the DomainFile to open\n@param version the version of the Program to open\n@return the opened program or null if the given version does not exist.","static":false,"name":"openProgram","comment":"Opens the specified version of the program represented by the given DomainFile. This\n method should be used for shared DomainFiles. The newly opened file will be made the\n active program.","params":[{"type_long":"ghidra.framework.model.DomainFile","name":"df","comment":"the DomainFile to open","type_short":"DomainFile"},{"type_long":"int","name":"version","comment":"the version of the Program to open","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"the opened program or null if the given version does not exist.","type_short":"Program"}},{"javadoc":"Open the program for the given domainFile\n@param domainFile domain file that has the program\n@param version the version of the Program to open. Specify \n DomainFile.DEFAULT_VERSION for file update mode.\n@param state initial open state (OPEN_HIDDEN, OPEN_CURRENT, OPEN_VISIBLE).  \n The visibility states will be ignored if the program is already open.\n@return null if the user canceled the \"open\" for the new program or an error \n occurred and was displayed.","static":false,"name":"openProgram","comment":"Open the program for the given domainFile","params":[{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"domain file that has the program","type_short":"DomainFile"},{"type_long":"int","name":"version","comment":"the version of the Program to open. Specify \n DomainFile.DEFAULT_VERSION for file update mode.","type_short":"int"},{"type_long":"int","name":"state","comment":"initial open state (OPEN_HIDDEN, OPEN_CURRENT, OPEN_VISIBLE).  \n The visibility states will be ignored if the program is already open.","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"null if the user canceled the \"open\" for the new program or an error \n occurred and was displayed.","type_short":"Program"}},{"javadoc":"Opens the program to the tool.  In this case the program is already open, but this tool\n may not have it registered as open. The program is made the active program.\n@param program the program to register as open with the tool.","static":false,"name":"openProgram","comment":"Opens the program to the tool.  In this case the program is already open, but this tool\n may not have it registered as open. The program is made the active program.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to register as open with the tool.","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Opens the program to the tool.  In this case the program is already open, but this tool\n may not have it registered as open. The program is made the active program.\n@param program the program to register as open with the tool.\n@param current if true, the program is made the current active program. If false, then\n the program is made active only if it the first open program in the tool.\n@deprecated use openProgram(Program program, int state) instead.","static":false,"name":"openProgram","comment":"Opens the program to the tool.  In this case the program is already open, but this tool\n may not have it registered as open. The program is made the active program.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to register as open with the tool.","type_short":"Program"},{"type_long":"boolean","name":"current","comment":"if true, the program is made the current active program. If false, then\n the program is made active only if it the first open program in the tool.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Open the specified program in te tool.\n@param program\n@param state initial open state (OPEN_HIDDEN, OPEN_CURRENT, OPEN_VISIBLE).  \n The visibility states will be ignored if the program is already open.","static":false,"name":"openProgram","comment":"Open the specified program in te tool.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"int","name":"state","comment":"initial open state (OPEN_HIDDEN, OPEN_CURRENT, OPEN_VISIBLE).  \n The visibility states will be ignored if the program is already open.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Establish a persistent owner on an open program.\n This will cause the program manager to simply make a program \n hidden if it is closed.\n@param program\n@param owner\n@return true if program is open and another object is not already the owner,\n or the specified owner is already the owner.\n@see #releaseProgram(Program, Object)","static":false,"name":"setPersistentOwner","comment":"Establish a persistent owner on an open program.\n This will cause the program manager to simply make a program \n hidden if it is closed.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"java.lang.Object","name":"owner","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"true if program is open and another object is not already the owner,\n or the specified owner is already the owner.","type_short":"boolean"}},{"javadoc":"Release the persistent ownership of a program.\n The program will automatically be closed if it is hidden or was\n marked as temporary.  If any of these closures corresponds to a\n program with changes the user will be given an opportunity to\n save or keep the program open.\n If persistentOwner is not the correct owner, the method will\n have no affect.\n@param program\n@param persistentOwner","static":false,"name":"releaseProgram","comment":"Release the persistent ownership of a program.\n The program will automatically be closed if it is hidden or was\n marked as temporary.  If any of these closures corresponds to a\n program with changes the user will be given an opportunity to\n save or keep the program open.\n If persistentOwner is not the correct owner, the method will\n have no affect.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"java.lang.Object","name":"persistentOwner","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Closes the given program with the option of saving any changes.  The exact behavior of\n this method depends on several factors.  First of all, if any other tool has this program\n open, then the program is closed for this tool only and the user is not prompted to\n save the program regardless of the ignoreChanges flag.  Otherwise, if ignoreChanges is\n false and changes have been made, the user is prompted to save the program.\n@param program the program to close.\n@param ignoreChanges if true, the program is closed without saving any changes.\n@return true if the program was closed. Returns false if the user canceled the close\n while being prompted to save. Also returns false if the program passed in as a parameter \n is null.","static":false,"name":"closeProgram","comment":"Closes the given program with the option of saving any changes.  The exact behavior of\n this method depends on several factors.  First of all, if any other tool has this program\n open, then the program is closed for this tool only and the user is not prompted to\n save the program regardless of the ignoreChanges flag.  Otherwise, if ignoreChanges is\n false and changes have been made, the user is prompted to save the program.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to close.","type_short":"Program"},{"type_long":"boolean","name":"ignoreChanges","comment":"if true, the program is closed without saving any changes.","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the program was closed. Returns false if the user canceled the close\n while being prompted to save. Also returns false if the program passed in as a parameter \n is null.","type_short":"boolean"}},{"javadoc":"Closes all open programs in this tool except the current program.  \n If this tool is the only tool with a program open and that program has changes, \n then the user will be prompted to close each such file.\n (Providing the ignoreChanges flag is false)\n@param ignoreChanges if true, the programs will be closed without saving changes.\n@return true if all other programs were closed. Returns false if the user canceled the close\n while being prompted to save.","static":false,"name":"closeOtherPrograms","comment":"Closes all open programs in this tool except the current program.  \n If this tool is the only tool with a program open and that program has changes, \n then the user will be prompted to close each such file.\n (Providing the ignoreChanges flag is false)","params":[{"type_long":"boolean","name":"ignoreChanges","comment":"if true, the programs will be closed without saving changes.","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"true if all other programs were closed. Returns false if the user canceled the close\n while being prompted to save.","type_short":"boolean"}},{"javadoc":"Closes all open programs in this tool.  If this tool is the only tool with a program\n open and that program has changes, then the user will be prompted to close each such file.\n (Providing the ignoreChanges flag is false)\n@param ignoreChanges if true, the programs will be closed without saving changes.\n@return true if all programs were closed. Returns false if the user canceled the close\n while being prompted to save.","static":false,"name":"closeAllPrograms","comment":"Closes all open programs in this tool.  If this tool is the only tool with a program\n open and that program has changes, then the user will be prompted to close each such file.\n (Providing the ignoreChanges flag is false)","params":[{"type_long":"boolean","name":"ignoreChanges","comment":"if true, the programs will be closed without saving changes.","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"true if all programs were closed. Returns false if the user canceled the close\n while being prompted to save.","type_short":"boolean"}},{"javadoc":"Sets the given program to be the current active program in the tool.\n@param p the program to make active.","static":false,"name":"setCurrentProgram","comment":"Sets the given program to be the current active program in the tool.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"p","comment":"the program to make active.","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the first program in the list of open programs that contains the given address.\n Programs are searched in the order they were opened within a given priority.\n Program are initially opened with the PRIORITY_NORMAL priority, but can be set to have\n PRIORITY_HIGH or PRIORITY_LOW.\n@param addr the address for which to search.\n@return the first program that can be found to contain the given address.","static":false,"name":"getProgram","comment":"Returns the first program in the list of open programs that contains the given address.\n Programs are searched in the order they were opened within a given priority.\n Program are initially opened with the PRIORITY_NORMAL priority, but can be set to have\n PRIORITY_HIGH or PRIORITY_LOW.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address for which to search.","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"the first program that can be found to contain the given address.","type_short":"Program"}},{"javadoc":"Returns a list of all open program.s","static":false,"name":"getAllOpenPrograms","comment":"Returns a list of all open program.s","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program[]","comment":"","type_short":"ghidra.program.model.listing.Program[]"}},{"javadoc":"Allows program manager state to be locked\/unlocked.\n While locked, the program manager will not support opening\n additional programs.\n@param state locked if true, unlocked if false","static":false,"name":"lockDown","comment":"Allows program manager state to be locked\/unlocked.\n While locked, the program manager will not support opening\n additional programs.","params":[{"type_long":"boolean","name":"state","comment":"locked if true, unlocked if false","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if program manager\n@return ","static":false,"name":"isLocked","comment":"Returns true if program manager","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"ProgramManager","comment":"Service for managing programs. Multiple programs may be open in a tool, \n but only one is active at any given time.","fields":[{"type_long":"int","javadoc":"Program will be open in a Hidden state if not already open.\n This mode is generally used in conjunction with a persistent\n program owner.","static":true,"name":"OPEN_HIDDEN","comment":"Program will be open in a Hidden state if not already open.\n This mode is generally used in conjunction with a persistent\n program owner.","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"Program will be open as the currently active program within the tool.","static":true,"name":"OPEN_CURRENT","comment":"Program will be open as the currently active program within the tool.","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"Program will be open within the tool but no change will be made\n to the currently active program.  If this is the only program\n open, it will become the currently active program.","static":true,"name":"OPEN_VISIBLE","comment":"Program will be open within the tool but no change will be made\n to the currently active program.  If this is the only program\n open, it will become the currently active program.","type_short":"int","constant_value":"2"}]}
