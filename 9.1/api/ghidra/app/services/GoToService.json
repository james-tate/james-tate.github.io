{"implements":[],"javadoc":"The GoToService provides a general service for plugins to generate GoTo\n events.  The provider of this service will take care of interfacing with\n any history service that may be available.","static":false,"methods":[{"javadoc":"Generates a GoTo event and handles any history state that needs to be saved.  This method\n will attempt to find the program that contains the given ProgramLocation.\n@param loc location to go to\n@return true if the go to was successful\n@see #goTo(ProgramLocation, Program)","static":false,"name":"goTo","comment":"Generates a GoTo event and handles any history state that needs to be saved.  This method\n will attempt to find the program that contains the given ProgramLocation.","params":[{"type_long":"ghidra.program.util.ProgramLocation","name":"loc","comment":"location to go to","type_short":"ProgramLocation"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the go to was successful","type_short":"boolean"}},{"javadoc":"Generates a GoTo event and handles any history state that needs to be saved.  This \n overloaded version of {@link #goTo(Address)} uses the given program as the program \n within which to perform the GoTo.  If the given program does not contain the given \n address, then the GoTo will not be performed and false will be returned.  Passing \n <tt>null<\/tt> as the <tt>program<\/tt> parameter will cause this method to attempt to find\n a program that contains the given ProgramLocation.\n@param loc location to go to\n@param program the program within which to perform the GoTo\n@return true if the go to was successful\n@see #goTo(ProgramLocation)","static":false,"name":"goTo","comment":"Generates a GoTo event and handles any history state that needs to be saved.  This \n overloaded version of #goTo(Address) uses the given program as the program \n within which to perform the GoTo.  If the given program does not contain the given \n address, then the GoTo will not be performed and false will be returned.  Passing \n null as the program parameter will cause this method to attempt to find\n a program that contains the given ProgramLocation.","params":[{"type_long":"ghidra.program.util.ProgramLocation","name":"loc","comment":"location to go to","type_short":"ProgramLocation"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program within which to perform the GoTo","type_short":"Program"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the go to was successful","type_short":"boolean"}},{"javadoc":"","static":false,"name":"goTo","comment":"","params":[{"type_long":"ghidra.app.nav.Navigatable","name":"navigatable","comment":"","type_short":"Navigatable"},{"type_long":"ghidra.program.util.ProgramLocation","name":"loc","comment":"","type_short":"ProgramLocation"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"goTo","comment":"","params":[{"type_long":"ghidra.app.nav.Navigatable","name":"navigatable","comment":"","type_short":"Navigatable"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"refAddress","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Generates a GoTo event to the goToAddress or symbol.  The currentAddress is used to\n determine if there is a specific symbol reference from the current address.\n@param currentAddress the current address\n@param goToAddress the address to goto\n@return true if the go to was successful","static":false,"name":"goTo","comment":"Generates a GoTo event to the goToAddress or symbol.  The currentAddress is used to\n determine if there is a specific symbol reference from the current address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"currentAddress","comment":"the current address","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"goToAddress","comment":"the address to goto","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the go to was successful","type_short":"boolean"}},{"javadoc":"","static":false,"name":"goTo","comment":"","params":[{"type_long":"ghidra.app.nav.Navigatable","name":"navigatable","comment":"","type_short":"Navigatable"},{"type_long":"ghidra.program.model.address.Address","name":"goToAddress","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Generates a GoTo event to the gotoAddress.\n@param goToAddress the address to goto\n@return true if the go to was successful\n@see #goTo(Address, Program)","static":false,"name":"goTo","comment":"Generates a GoTo event to the gotoAddress.","params":[{"type_long":"ghidra.program.model.address.Address","name":"goToAddress","comment":"the address to goto","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the go to was successful","type_short":"boolean"}},{"javadoc":"Generates a GoTo event to the gotoAddress.   This overloaded version of\n {@link #goTo(Address)} uses the given program as the program within which to\n perform the GoTo.  If the given program does not contain the given address, then the \n GoTo will not be performed and false will be returned.  Passing <tt>null<\/tt> as the \n <tt>program<\/tt> parameter will cause this method to attempt to find\n a program that contains the given ProgramLocation.\n@param goToAddress the address to goto\n@param program the program within which to perform the GoTo\n@return true if the go to was successful\n@see #goTo(Address)","static":false,"name":"goTo","comment":"Generates a GoTo event to the gotoAddress.   This overloaded version of\n #goTo(Address) uses the given program as the program within which to\n perform the GoTo.  If the given program does not contain the given address, then the \n GoTo will not be performed and false will be returned.  Passing null as the \n program parameter will cause this method to attempt to find\n a program that contains the given ProgramLocation.","params":[{"type_long":"ghidra.program.model.address.Address","name":"goToAddress","comment":"the address to goto","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program within which to perform the GoTo","type_short":"Program"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the go to was successful","type_short":"boolean"}},{"javadoc":"Navigate to either the external program location or address linkage location.  \n Specific behavior may vary based upon implementation.\n@param externalLoc external location\n@param checkNavigationOption if true the service navigation \n option will be used to determine if navigation to the external program will be \n attempted, or if navigation to the external linkage location within the current\n program will be attempted.  If false, the implementations default behavior\n will be performed.\n@return true if either navigation to the external program or to a\n linkage location was completed successfully.","static":false,"name":"goToExternalLocation","comment":"Navigate to either the external program location or address linkage location.  \n Specific behavior may vary based upon implementation.","params":[{"type_long":"ghidra.program.model.symbol.ExternalLocation","name":"externalLoc","comment":"external location","type_short":"ExternalLocation"},{"type_long":"boolean","name":"checkNavigationOption","comment":"if true the service navigation \n option will be used to determine if navigation to the external program will be \n attempted, or if navigation to the external linkage location within the current\n program will be attempted.  If false, the implementations default behavior\n will be performed.","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"true if either navigation to the external program or to a\n linkage location was completed successfully.","type_short":"boolean"}},{"javadoc":"Navigate to either the external program location or address linkage location.  \n Specific behavior may vary based upon implementation.\n@param navigatable Navigatable\n@param externalLoc external location\n@param checkNavigationOption if true the service navigation \n option will be used to determine if navigation to the external program will be \n attempted, or if navigation to the external linkage location within the current\n program will be attempted.  If false, the implementations default behavior\n will be performed.\n@return true if either navigation to the external program or to a\n linkage location was completed successfully.","static":false,"name":"goToExternalLocation","comment":"Navigate to either the external program location or address linkage location.  \n Specific behavior may vary based upon implementation.","params":[{"type_long":"ghidra.app.nav.Navigatable","name":"navigatable","comment":"Navigatable","type_short":"Navigatable"},{"type_long":"ghidra.program.model.symbol.ExternalLocation","name":"externalLoc","comment":"external location","type_short":"ExternalLocation"},{"type_long":"boolean","name":"checkNavigationOption","comment":"if true the service navigation \n option will be used to determine if navigation to the external program will be \n attempted, or if navigation to the external linkage location within the current\n program will be attempted.  If false, the implementations default behavior\n will be performed.","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"true if either navigation to the external program or to a\n linkage location was completed successfully.","type_short":"boolean"}},{"javadoc":"Parses the input string as either: \n \tan address\/symbol expression (0x1000+5,  or LAB1000+5)  \n  a symbol wildcard expression (LAB*,  LAB?100)\n  a symbol lookup\n  an address lookup\n \n If the query results in more than one location, a list of locations will be displayed.\n If the query results in only one location, then a goto event will be fired(except for a \n wildcard query in which case a list will still be displayed.\n \n The listener will be notified after query and will indicate the query status.\n@param fromAddr The address used to determine the scope of the query\n@param queryData the query input data\n@param listener the listener that will be notified when the query completes.\n@param monitor the task monitor\n@return true if the queryInput is found or appears to be a wildcard search.","static":false,"name":"goToQuery","comment":"Parses the input string as either: \n \tan address\/symbol expression (0x1000+5,  or LAB1000+5)  \n  a symbol wildcard expression (LAB*,  LAB?100)\n  a symbol lookup\n  an address lookup\n \n If the query results in more than one location, a list of locations will be displayed.\n If the query results in only one location, then a goto event will be fired(except for a \n wildcard query in which case a list will still be displayed.\n \n The listener will be notified after query and will indicate the query status.","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"The address used to determine the scope of the query","type_short":"Address"},{"type_long":"ghidra.app.services.QueryData","name":"queryData","comment":"the query input data","type_short":"QueryData"},{"type_long":"ghidra.app.services.GoToServiceListener","name":"listener","comment":"the listener that will be notified when the query completes.","type_short":"GoToServiceListener"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the queryInput is found or appears to be a wildcard search.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"goToQuery","comment":"","params":[{"type_long":"ghidra.app.nav.Navigatable","name":"navigatable","comment":"","type_short":"Navigatable"},{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.app.services.QueryData","name":"queryData","comment":"","type_short":"QueryData"},{"type_long":"ghidra.app.services.GoToServiceListener","name":"listener","comment":"","type_short":"GoToServiceListener"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getOverrideService","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.services.GoToOverrideService","comment":"","type_short":"GoToOverrideService"}},{"javadoc":"","static":false,"name":"setOverrideService","comment":"","params":[{"type_long":"ghidra.app.services.GoToOverrideService","name":"override","comment":"","type_short":"GoToOverrideService"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDefaultNavigatable","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.nav.Navigatable","comment":"","type_short":"Navigatable"}}],"name":"GoToService","comment":"The GoToService provides a general service for plugins to generate GoTo\n events.  The provider of this service will take care of interfacing with\n any history service that may be available.","fields":[{"type_long":"char[]","javadoc":"Characters that are allowed in words that the GoToService can use. These\n typically represent library name delimiters.","static":true,"name":"VALID_GOTO_CHARS","comment":"Characters that are allowed in words that the GoToService can use. These\n typically represent library name delimiters.","type_short":"char[]","constant_value":null}]}
