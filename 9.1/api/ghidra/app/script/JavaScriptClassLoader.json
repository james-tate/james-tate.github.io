{"implements":[],"javadoc":"","static":false,"extends":"java.lang.ClassLoader","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"loadClass","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"boolean","name":"resolve","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.lang.ClassNotFoundException","comment":"","type_short":"ClassNotFoundException"},{"type_long":"ghidra.app.script.GhidraScriptUnsupportedClassVersionError","comment":"","type_short":"GhidraScriptUnsupportedClassVersionError"}],"return":{"type_long":"java.lang.Class<?>","comment":"","type_short":"Class"}},{"javadoc":"","static":false,"name":"saveClassModifiedTime","comment":"","params":[{"type_long":"generic.jar.ResourceFile","name":"classFile","comment":"","type_short":"ResourceFile"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"lastModified","comment":"","params":[{"type_long":"java.io.File","name":"file","comment":"","type_short":"File"}],"throws":[],"return":{"type_long":"java.lang.Long","comment":"","type_short":"Long"}},{"javadoc":"","static":false,"name":"getClassFile","comment":"","params":[{"type_long":"generic.jar.ResourceFile","name":"sourceFile","comment":"","type_short":"ResourceFile"},{"type_long":"java.lang.String","name":"rawName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"generic.jar.ResourceFile","comment":"","type_short":"ResourceFile"}},{"javadoc":"Attempt to find a source file for the given class.  If we find it, then we want to use\n the class that is relative to that file.  Sometimes there exists multiple classes for\n a given name in the classpath.  In that case, we want to use the one associated with the\n source file, as that gives us better debugging in our development environment.\n@param name The name of the class for which to find a source file\n@return a source file from which a class file can be located.","static":false,"name":"getScriptSourceFile","comment":"Attempt to find a source file for the given class.  If we find it, then we want to use\n the class that is relative to that file.  Sometimes there exists multiple classes for\n a given name in the classpath.  In that case, we want to use the one associated with the\n source file, as that gives us better debugging in our development environment.","params":[{"type_long":"java.lang.String","name":"name","comment":"The name of the class for which to find a source file","type_short":"String"}],"throws":[],"return":{"type_long":"generic.jar.ResourceFile","comment":"a source file from which a class file can be located.","type_short":"ResourceFile"}}],"name":"JavaScriptClassLoader","comment":"","fields":[{"type_long":"java.util.Map<java.io.File,java.lang.Long>","javadoc":"","static":false,"name":"lastModifiedMap","comment":"","type_short":"Map","constant_value":null}]}
