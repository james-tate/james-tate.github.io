{"implements":["ghidra.program.database.ManagerDB"],"javadoc":"Class to manage namespaces.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a new namespace manager.\n@param handle the database handle.\n@param errHandler the error handler.\n@param addrMap the address map\n@param openMode the open mode\n@param lock the program synchronization lock\n@param monitor the task monitor.\n@throws IOException if a database error occurs.\n@throws VersionException if the table version is different from this adapter.\n@throws CancelledException if the user cancels the upgrade.","static":false,"name":"<init>","comment":"Construct a new namespace manager.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"the database handle.","type_short":"DBHandle"},{"type_long":"db.util.ErrorHandler","name":"errHandler","comment":"the error handler.","type_short":"ErrorHandler"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"the address map","type_short":"AddressMap"},{"type_long":"int","name":"openMode","comment":"the open mode","type_short":"int"},{"type_long":"ghidra.util.Lock","name":"lock","comment":"the program synchronization lock","type_short":"Lock"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if the table version is different from this adapter.","type_short":"VersionException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.database.ManagerDB#deleteAddressRange(ghidra.program.model.address.Address, ghidra.program.model.address.Address, ghidra.util.task.TaskMonitor)","static":false,"name":"deleteAddressRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"endAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"clearCache","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.database.ManagerDB#invalidateCache(boolean)","static":false,"name":"invalidateCache","comment":"","params":[{"type_long":"boolean","name":"all","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.database.ManagerDB#setProgram(ghidra.program.database.ProgramDB)","static":false,"name":"setProgram","comment":"","params":[{"type_long":"ghidra.program.database.ProgramDB","name":"program","comment":"","type_short":"ProgramDB"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.database.ManagerDB#programReady(int, int, ghidra.util.task.TaskMonitor)","static":false,"name":"programReady","comment":"","params":[{"type_long":"int","name":"openMode","comment":"","type_short":"int"},{"type_long":"int","name":"currentRevision","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dbError","comment":"","params":[{"type_long":"java.io.IOException","name":"e","comment":"","type_short":"IOException"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the global namespace.","static":false,"name":"getGlobalNamespace","comment":"Get the global namespace.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Namespace","comment":"","type_short":"Namespace"}},{"javadoc":"Sets the body of a namespace.\n@param namespace the namespace whose body is to be modified.\n@param set the address set for the new body.","static":false,"name":"setBody","comment":"Sets the body of a namespace.","params":[{"type_long":"ghidra.program.model.symbol.Namespace","name":"namespace","comment":"the namespace whose body is to be modified.","type_short":"Namespace"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"the address set for the new body.","type_short":"AddressSetView"}],"throws":[{"type_long":"ghidra.program.database.symbol.OverlappingNamespaceException","comment":"","type_short":"OverlappingNamespaceException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doSetBody","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Namespace","name":"namespace","comment":"","type_short":"Namespace"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes any associated body with the given namespace.\n@param namespace the namespace whose body is to be cleared.","static":false,"name":"removeBody","comment":"Removes any associated body with the given namespace.","params":[{"type_long":"ghidra.program.model.symbol.Namespace","name":"namespace","comment":"the namespace whose body is to be cleared.","type_short":"Namespace"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"","type_short":"AddressSetView"}},{"javadoc":"Get the Namespace containing the given address. If the address is not\n in a defined namespace (e.g., Function), the global namespace is\n returned.\n@param addr the address for which to find a namespace.","static":false,"name":"getNamespaceContaining","comment":"Get the Namespace containing the given address. If the address is not\n in a defined namespace (e.g., Function), the global namespace is\n returned.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address for which to find a namespace.","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Namespace","comment":"","type_short":"Namespace"}},{"javadoc":"Checks if an existing namespace's address set intersects with\n the given set. If so, then it throws an OverlappingNamespaceException.\n@throws if the address set to test overlaps a namespace body.","static":false,"name":"overlapsNamespace","comment":"Checks if an existing namespace's address set intersects with\n the given set. If so, then it throws an OverlappingNamespaceException.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"","type_short":"AddressSetView"}],"throws":[{"type_long":"ghidra.program.database.symbol.OverlappingNamespaceException","comment":"","type_short":"OverlappingNamespaceException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get all Namespaces whose body overlaps the specified address set.\n@param set the address for which to find namespace's that intersect it.\n@return a LongField function key iterator.","static":false,"name":"getNamespacesOverlapping","comment":"Get all Namespaces whose body overlaps the specified address set.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"the address for which to find namespace's that intersect it.","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.symbol.Namespace>","comment":"a LongField function key iterator.","type_short":"Iterator"}},{"javadoc":"Gets the body for the given namespace.\n@param namespace the namespace for which to get its body.","static":false,"name":"getAddressSet","comment":"Gets the body for the given namespace.","params":[{"type_long":"ghidra.program.model.symbol.Namespace","name":"namespace","comment":"the namespace for which to get its body.","type_short":"Namespace"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"","type_short":"AddressSetView"}},{"javadoc":"","static":false,"name":"getAddressSet","comment":"","params":[{"type_long":"long","name":"namespaceID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"","type_short":"AddressSetView"}},{"javadoc":"@see ghidra.program.database.ManagerDB#moveAddressRange(ghidra.program.model.address.Address, ghidra.program.model.address.Address, long, ghidra.util.task.TaskMonitor)","static":false,"name":"moveAddressRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"},{"type_long":"long","name":"length","comment":"","type_short":"long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"","type_short":"AddressOverflowException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"NamespaceManager","comment":"Class to manage namespaces.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"NAMESPACE_MAP_NAME","comment":"","type_short":"String","constant_value":"\"SCOPE ADDRESSES\""},{"type_long":"ghidra.program.database.util.AddressRangeMapDB","javadoc":"","static":false,"name":"namespaceMap","comment":"","type_short":"AddressRangeMapDB","constant_value":null},{"type_long":"db.util.ErrorHandler","javadoc":"","static":false,"name":"errHandler","comment":"","type_short":"ErrorHandler","constant_value":null},{"type_long":"ghidra.program.database.map.AddressMap","javadoc":"","static":false,"name":"addrMap","comment":"","type_short":"AddressMap","constant_value":null},{"type_long":"ghidra.program.database.symbol.SymbolManager","javadoc":"","static":false,"name":"symbolMgr","comment":"","type_short":"SymbolManager","constant_value":null},{"type_long":"ghidra.program.model.symbol.Namespace","javadoc":"","static":false,"name":"globalNamespace","comment":"","type_short":"Namespace","constant_value":null},{"type_long":"ghidra.util.Lock","javadoc":"","static":false,"name":"lock","comment":"","type_short":"Lock","constant_value":null},{"type_long":"ghidra.program.model.symbol.Namespace","javadoc":"","static":false,"name":"lastBodyNamespace","comment":"","type_short":"Namespace","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"","static":false,"name":"lastBody","comment":"","type_short":"AddressSet","constant_value":null}]}
