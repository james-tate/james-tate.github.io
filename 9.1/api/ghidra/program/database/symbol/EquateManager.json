{"implements":["ghidra.program.model.symbol.EquateTable","db.util.ErrorHandler","ghidra.program.database.ManagerDB"],"javadoc":"Implementation for the Equate Table.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor\n@param handle database handle\n@param addrMap map that converts addresses to longs and longs to\n addresses\n@param openMode one of ProgramDB.CREATE, UPDATE, UPGRADE, or READ_ONLY\n@param lock the program synchronization lock\n@param monitor the progress monitor used when upgrading.\n@throws VersionException if the database version doesn't match the current version.\n@throws IOException if a database error occurs.\n@throws CancelledException if the user cancels the upgrade.","static":false,"name":"<init>","comment":"Constructor","params":[{"type_long":"db.DBHandle","name":"handle","comment":"database handle","type_short":"DBHandle"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"map that converts addresses to longs and longs to\n addresses","type_short":"AddressMap"},{"type_long":"int","name":"openMode","comment":"one of ProgramDB.CREATE, UPDATE, UPGRADE, or READ_ONLY","type_short":"int"},{"type_long":"ghidra.util.Lock","name":"lock","comment":"the program synchronization lock","type_short":"Lock"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the progress monitor used when upgrading.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if the database version doesn't match the current version.","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"if a database error occurs.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getProgram","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.ProgramDB","comment":"","type_short":"ProgramDB"}},{"javadoc":"","static":false,"name":"initializeAdapters","comment":"","params":[{"type_long":"db.DBHandle","name":"handle","comment":"","type_short":"DBHandle"},{"type_long":"int","name":"openMode","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.database.ManagerDB#setProgram(ghidra.program.database.ProgramDB)","static":false,"name":"setProgram","comment":"","params":[{"type_long":"ghidra.program.database.ProgramDB","name":"program","comment":"","type_short":"ProgramDB"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.database.ManagerDB#programReady(int, int, ghidra.util.task.TaskMonitor)","static":false,"name":"programReady","comment":"","params":[{"type_long":"int","name":"openMode","comment":"","type_short":"int"},{"type_long":"int","name":"currentRevision","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see db.util.ErrorHandler#dbError(java.io.IOException)","static":false,"name":"dbError","comment":"","params":[{"type_long":"java.io.IOException","name":"e","comment":"","type_short":"IOException"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"applyEnum","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addresses","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.data.Enum","name":"enoom","comment":"","type_short":"Enum"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"boolean","name":"shouldDoOnSubOps","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"maybeCreateEquateOnScalar","comment":"","params":[{"type_long":"ghidra.program.model.data.Enum","name":"enoom","comment":"","type_short":"Enum"},{"type_long":"ghidra.program.model.listing.Instruction","name":"instruction","comment":"","type_short":"Instruction"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"},{"type_long":"java.lang.Object","name":"operandRepresentation","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeUnusedEquates","comment":"","params":[{"type_long":"int","name":"opIndex","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.scalar.Scalar","name":"scalar","comment":"","type_short":"Scalar"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getOrCreateEquate","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"long","name":"value","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Equate","comment":"","type_short":"Equate"}},{"javadoc":"@see ghidra.program.model.symbol.EquateTable#createEquate(java.lang.String, long)","static":false,"name":"createEquate","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"long","name":"value","comment":"","type_short":"long"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.symbol.Equate","comment":"","type_short":"Equate"}},{"javadoc":"@see ghidra.program.model.symbol.EquateTable#getEquate(ghidra.program.model.address.Address, int, long)","static":false,"name":"getEquate","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"reference","comment":"","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"},{"type_long":"long","name":"scalarValue","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Equate","comment":"","type_short":"Equate"}},{"javadoc":"@see ghidra.program.model.symbol.EquateTable#getEquates(ghidra.program.model.address.Address, int)","static":false,"name":"getEquates","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"reference","comment":"","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.symbol.Equate>","comment":"","type_short":"List"}},{"javadoc":"@see ghidra.program.model.symbol.EquateTable#getEquates(ghidra.program.model.address.Address)","static":false,"name":"getEquates","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"reference","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.symbol.Equate>","comment":"","type_short":"List"}},{"javadoc":"@see ghidra.program.model.symbol.EquateTable#getEquate(java.lang.String)","static":false,"name":"getEquate","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Equate","comment":"","type_short":"Equate"}},{"javadoc":"@see ghidra.program.model.symbol.EquateTable#getEquateAddresses()","static":false,"name":"getEquateAddresses","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"@see ghidra.program.model.symbol.EquateTable#getEquateAddresses(ghidra.program.model.address.Address)","static":false,"name":"getEquateAddresses","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"","static":false,"name":"getEquateAddresses","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"endAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"@see ghidra.program.model.symbol.EquateTable#getEquateAddresses(ghidra.program.model.address.AddressSetView)","static":false,"name":"getEquateAddresses","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"@see ghidra.program.model.symbol.EquateTable#getEquates()","static":false,"name":"getEquates","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.symbol.Equate>","comment":"","type_short":"Iterator"}},{"javadoc":"@see ghidra.program.model.symbol.EquateTable#getEquates(long)","static":false,"name":"getEquates","comment":"","params":[{"type_long":"long","name":"value","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.symbol.Equate>","comment":"","type_short":"List"}},{"javadoc":"@see ghidra.program.database.ManagerDB#deleteAddressRange(ghidra.program.model.address.Address, ghidra.program.model.address.Address, ghidra.util.task.TaskMonitor)","static":false,"name":"deleteAddressRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"endAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.symbol.EquateTable#removeEquate(java.lang.String)","static":false,"name":"removeEquate","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"removeEquate","comment":"","params":[{"type_long":"ghidra.program.database.symbol.EquateDB","name":"equateDB","comment":"","type_short":"EquateDB"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return the address map.","static":false,"name":"getAddressMap","comment":"Return the address map.","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.map.AddressMap","comment":"","type_short":"AddressMap"}},{"javadoc":"Get the database adapter for equate table.","static":false,"name":"getEquateDatabaseAdapter","comment":"Get the database adapter for equate table.","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.symbol.EquateDBAdapter","comment":"","type_short":"EquateDBAdapter"}},{"javadoc":"Get the database adapter for the equate references table.","static":false,"name":"getRefDatabaseAdapter","comment":"Get the database adapter for the equate references table.","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.symbol.EquateRefDBAdapter","comment":"","type_short":"EquateRefDBAdapter"}},{"javadoc":"Add a reference for an equate at the given operand position.","static":false,"name":"addReference","comment":"Add a reference for an equate at the given operand position.","params":[{"type_long":"long","name":"equateID","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"},{"type_long":"long","name":"dynamicHash","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the references for the given equate ID.","static":false,"name":"getReferences","comment":"Get the references for the given equate ID.","params":[{"type_long":"long","name":"equateID","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.symbol.EquateRefDB[]","comment":"","type_short":"ghidra.program.database.symbol.EquateRefDB[]"}},{"javadoc":"Get the number of references for the given equate ID.","static":false,"name":"getReferenceCount","comment":"Get the number of references for the given equate ID.","params":[{"type_long":"long","name":"equateID","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Remove the reference.\n@param equateDB equate\n@param refAddr ref address to remove\n@param opIndex operand index","static":false,"name":"removeReference","comment":"Remove the reference.","params":[{"type_long":"ghidra.program.database.symbol.EquateDB","name":"equateDB","comment":"equate","type_short":"EquateDB"},{"type_long":"ghidra.program.model.address.Address","name":"refAddr","comment":"ref address to remove","type_short":"Address"},{"type_long":"short","name":"opIndex","comment":"operand index","type_short":"short"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove the reference.\n@param equateDB equate\n@param dynamicHash hash value\n@param refAddr ref address to remove\n@param opIndex operand index","static":false,"name":"removeReference","comment":"Remove the reference.","params":[{"type_long":"ghidra.program.database.symbol.EquateDB","name":"equateDB","comment":"equate","type_short":"EquateDB"},{"type_long":"long","name":"dynamicHash","comment":"hash value","type_short":"long"},{"type_long":"ghidra.program.model.address.Address","name":"refAddr","comment":"ref address to remove","type_short":"Address"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Verify that the name is not null and not the empty string.\n@throws InvalidInputException if the name is null or is empty","static":false,"name":"validateName","comment":"Verify that the name is not null and not the empty string.","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"if the name is null or is empty","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Send notification that the equate name changed.\n@param oldName old name\n@param newName new name","static":false,"name":"equateNameChanged","comment":"Send notification that the equate name changed.","params":[{"type_long":"java.lang.String","name":"oldName","comment":"old name","type_short":"String"},{"type_long":"java.lang.String","name":"newName","comment":"new name","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getEquateRecord","comment":"","params":[{"type_long":"long","name":"equateID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"","static":false,"name":"getEquateRefRecord","comment":"","params":[{"type_long":"long","name":"refID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"","static":false,"name":"removeRef","comment":"","params":[{"type_long":"ghidra.program.database.symbol.EquateDB","name":"equateDB","comment":"","type_short":"EquateDB"},{"type_long":"ghidra.program.database.symbol.EquateRefDB","name":"ref","comment":"","type_short":"EquateRefDB"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getEquateDB","comment":"","params":[{"type_long":"long","name":"equateID","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.symbol.EquateDB","comment":"","type_short":"EquateDB"}},{"javadoc":"","static":false,"name":"getEquateRefDB","comment":"","params":[{"type_long":"long","name":"key","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.symbol.EquateRefDB","comment":"","type_short":"EquateRefDB"}},{"javadoc":"","static":false,"name":"removeReferences","comment":"","params":[{"type_long":"long","name":"equateID","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"referenceRemoved","comment":"","params":[{"type_long":"ghidra.program.database.symbol.EquateDB","name":"equateDB","comment":"","type_short":"EquateDB"},{"type_long":"ghidra.program.model.address.Address","name":"refAddr","comment":"","type_short":"Address"},{"type_long":"short","name":"opIndex","comment":"","type_short":"short"},{"type_long":"long","name":"dynamichash","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getLock","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.util.Lock","comment":"","type_short":"Lock"}},{"javadoc":"@see ghidra.program.database.ManagerDB#invalidateCache(boolean)","static":false,"name":"invalidateCache","comment":"","params":[{"type_long":"boolean","name":"all","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.database.ManagerDB#moveAddressRange(ghidra.program.model.address.Address, ghidra.program.model.address.Address, long, ghidra.util.task.TaskMonitor)","static":false,"name":"moveAddressRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"},{"type_long":"long","name":"length","comment":"","type_short":"long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Formats a string to the equate format given the enum UUID and the value for the equate. The\n formatted strings are used when setting equates from datatypes so that information can be\n stored with an equate to point back to that datatype.\n@param dtID The enums data type UUID\n@param equateValue The value intended for the equate\n@return The formatted equate name","static":true,"name":"formatNameForEquate","comment":"Formats a string to the equate format given the enum UUID and the value for the equate. The\n formatted strings are used when setting equates from datatypes so that information can be\n stored with an equate to point back to that datatype.","params":[{"type_long":"ghidra.util.UniversalID","name":"dtID","comment":"The enums data type UUID","type_short":"UniversalID"},{"type_long":"long","name":"equateValue","comment":"The value intended for the equate","type_short":"long"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"The formatted equate name","type_short":"String"}},{"javadoc":"Formats a string to the equate error format given the value. Used for rendering formatted\n  equates that do not point back to a datatype.\n@param equateValue The value of the equate\n@return The error formatted equate name","static":true,"name":"formatNameForEquateError","comment":"Formats a string to the equate error format given the value. Used for rendering formatted\n  equates that do not point back to a datatype.","params":[{"type_long":"long","name":"equateValue","comment":"The value of the equate","type_short":"long"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"The error formatted equate name","type_short":"String"}},{"javadoc":"Pulls out the enum data type UUID given a formatted equate name. This UUID should point back\n to a datatype.\n@param formattedEquateName The formatted equate name to pull the UUID from\n@return The enum data type UUID or null if the given name is not formatted.","static":true,"name":"getDataTypeUUID","comment":"Pulls out the enum data type UUID given a formatted equate name. This UUID should point back\n to a datatype.","params":[{"type_long":"java.lang.String","name":"formattedEquateName","comment":"The formatted equate name to pull the UUID from","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.util.UniversalID","comment":"The enum data type UUID or null if the given name is not formatted.","type_short":"UniversalID"}},{"javadoc":"Pulls out the value of the equate given the formatted equate name. The value stored in the\n equate info is a decimal.\n@param formattedEquateName The formatted equate name to pull the value from\n@return The value of the equate, or -1 if the given name is not formatted.","static":true,"name":"getEquateValueFromFormattedName","comment":"Pulls out the value of the equate given the formatted equate name. The value stored in the\n equate info is a decimal.","params":[{"type_long":"java.lang.String","name":"formattedEquateName","comment":"The formatted equate name to pull the value from","type_short":"String"}],"throws":[],"return":{"type_long":"long","comment":"The value of the equate, or -1 if the given name is not formatted.","type_short":"long"}}],"name":"EquateManager","comment":"Implementation for the Equate Table.","fields":[{"type_long":"ghidra.program.database.map.AddressMap","javadoc":"","static":false,"name":"addrMap","comment":"","type_short":"AddressMap","constant_value":null},{"type_long":"ghidra.program.database.DBObjectCache<ghidra.program.database.symbol.EquateRefDB>","javadoc":"","static":false,"name":"refCache","comment":"","type_short":"DBObjectCache","constant_value":null},{"type_long":"ghidra.program.database.DBObjectCache<ghidra.program.database.symbol.EquateDB>","javadoc":"","static":false,"name":"equateCache","comment":"","type_short":"DBObjectCache","constant_value":null},{"type_long":"ghidra.program.database.symbol.EquateDBAdapter","javadoc":"","static":false,"name":"equateAdapter","comment":"","type_short":"EquateDBAdapter","constant_value":null},{"type_long":"ghidra.program.database.symbol.EquateRefDBAdapter","javadoc":"","static":false,"name":"refAdapter","comment":"","type_short":"EquateRefDBAdapter","constant_value":null},{"type_long":"ghidra.program.database.ProgramDB","javadoc":"","static":false,"name":"program","comment":"","type_short":"ProgramDB","constant_value":null},{"type_long":"ghidra.util.Lock","javadoc":"","static":false,"name":"lock","comment":"","type_short":"Lock","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"DATATYPE_TAG","comment":"","type_short":"String","constant_value":"\"dtID\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ERROR_TAG","comment":"","type_short":"String","constant_value":"\"<BAD EQUATE>\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"FORMAT_DELIMITER","comment":"","type_short":"String","constant_value":"\":\""}]}
