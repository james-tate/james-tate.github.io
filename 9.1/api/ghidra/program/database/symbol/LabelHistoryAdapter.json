{"implements":[],"javadoc":"Adapter for the Label History table.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getAdapter","comment":"","params":[{"type_long":"db.DBHandle","name":"dbHandle","comment":"","type_short":"DBHandle"},{"type_long":"int","name":"openMode","comment":"","type_short":"int"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"","type_short":"AddressMap"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.symbol.LabelHistoryAdapter","comment":"","type_short":"LabelHistoryAdapter"}},{"javadoc":"","static":true,"name":"findReadOnlyAdapter","comment":"","params":[{"type_long":"db.DBHandle","name":"handle","comment":"","type_short":"DBHandle"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.symbol.LabelHistoryAdapter","comment":"","type_short":"LabelHistoryAdapter"}},{"javadoc":"Create a label history record.\n@param addr address\n@param actionID either ADD, REMOVE, or RENAME\n@param labelStr current labels at the given address\n@throws IOException if there was a problem accessing the database","static":false,"name":"createRecord","comment":"Create a label history record.","params":[{"type_long":"long","name":"addr","comment":"address","type_short":"long"},{"type_long":"byte","name":"actionID","comment":"either ADD, REMOVE, or RENAME","type_short":"byte"},{"type_long":"java.lang.String","name":"labelStr","comment":"current labels at the given address","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get an iterator over records with the given address.\n@throws IOException if there was a problem accessing the database","static":false,"name":"getRecordsByAddress","comment":"Get an iterator over records with the given address.","params":[{"type_long":"long","name":"addr","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"db.RecordIterator","comment":"","type_short":"RecordIterator"}},{"javadoc":"Get an iterator over all records.\n@throws IOException if there was a problem accessing the database","static":false,"name":"getAllRecords","comment":"Get an iterator over all records.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"db.RecordIterator","comment":"","type_short":"RecordIterator"}},{"javadoc":"Returns number of history records","static":false,"name":"getRecordCount","comment":"Returns number of history records","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Update the address in all records to reflect the movement of a symbol address.\n@param oldAddr the original symbol address key\n@param newAddr the new symbol address key\n@throws IOException","static":false,"name":"moveAddress","comment":"Update the address in all records to reflect the movement of a symbol address.","params":[{"type_long":"long","name":"oldAddr","comment":"the original symbol address key","type_short":"long"},{"type_long":"long","name":"newAddr","comment":"the new symbol address key","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Update the addresses in all records to reflect the movement of a memory block.\n@param fromAddr minimum address of the original block to be moved\n@param toAddr the new minimum address after the block move\n@param length the number of bytes in the memory block being moved\n@param addrMap address map\n@param monitor progress monitor\n@throws CancelledException if the user cancels the operation.\n@throws IOException if there was a problem accessing the database","static":false,"name":"moveAddressRange","comment":"Update the addresses in all records to reflect the movement of a memory block.","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"minimum address of the original block to be moved","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"the new minimum address after the block move","type_short":"Address"},{"type_long":"long","name":"length","comment":"the number of bytes in the memory block being moved","type_short":"long"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"address map","type_short":"AddressMap"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"progress monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancels the operation.","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Delete all records which contain addresses within the specified range\n@param startAddr minimum address in range\n@param endAddr maximum address in range\n@param addrMap address map\n@param doNotDeleteSet the set of addresses where the label history should NOT be deleted.  Null\n indicates that all should be deleted.\n@param monitor progress monitor\n@throws CancelledException if the user cancels the operation.\n@throws IOException if there was a problem accessing the database","static":false,"name":"deleteAddressRange","comment":"Delete all records which contain addresses within the specified range","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"minimum address in range","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"endAddr","comment":"maximum address in range","type_short":"Address"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"address map","type_short":"AddressMap"},{"type_long":"java.util.Set<ghidra.program.model.address.Address>","name":"doNotDeleteSet","comment":"the set of addresses where the label history should NOT be deleted.  Null\n indicates that all should be deleted.","type_short":"Set"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"progress monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancels the operation.","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"LabelHistoryAdapter","comment":"Adapter for the Label History table.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"LABEL_HISTORY_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Label History\""},{"type_long":"db.Schema","javadoc":"","static":true,"name":"LABEL_HISTORY_SCHEMA","comment":"","type_short":"Schema","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"HISTORY_ADDR_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"HISTORY_ACTION_COL","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"HISTORY_LABEL_COL","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"HISTORY_USER_COL","comment":"","type_short":"int","constant_value":"3"},{"type_long":"int","javadoc":"","static":true,"name":"HISTORY_DATE_COL","comment":"","type_short":"int","constant_value":"4"}]}
