{"implements":[],"javadoc":"Adapter to access the Enumeration data type values tables.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets an adapter for working with the enumeration data type values database table. The adapter is based \n on the version of the database associated with the specified database handle and the openMode.\n@param handle handle to the database to be accessed.\n@param openMode the mode this adapter is to be opened for (CREATE, UPDATE, READ_ONLY, UPGRADE).\n@param monitor the monitor to use for displaying status or for canceling.\n@return the adapter for accessing the table of enumeration data type values.\n@throws VersionException if the database handle's version doesn't match the expected version.\n@throws IOException if there is trouble accessing the database.","static":true,"name":"getAdapter","comment":"Gets an adapter for working with the enumeration data type values database table. The adapter is based \n on the version of the database associated with the specified database handle and the openMode.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"handle to the database to be accessed.","type_short":"DBHandle"},{"type_long":"int","name":"openMode","comment":"the mode this adapter is to be opened for (CREATE, UPDATE, READ_ONLY, UPGRADE).","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the monitor to use for displaying status or for canceling.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if the database handle's version doesn't match the expected version.","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"if there is trouble accessing the database.","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.data.EnumValueDBAdapter","comment":"the adapter for accessing the table of enumeration data type values.","type_short":"EnumValueDBAdapter"}},{"javadoc":"Tries to get a read only adapter for the database whose handle is passed to this method.\n@param handle handle to prior version of the database.\n@return the read only Enumeration Data Type Values table adapter\n@throws VersionException if a read only adapter can't be obtained for the database handle's version.","static":true,"name":"findReadOnlyAdapter","comment":"Tries to get a read only adapter for the database whose handle is passed to this method.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"handle to prior version of the database.","type_short":"DBHandle"}],"throws":[],"return":{"type_long":"ghidra.program.database.data.EnumValueDBAdapter","comment":"the read only Enumeration Data Type Values table adapter","type_short":"EnumValueDBAdapter"}},{"javadoc":"Upgrades the Enumeration Data Type Values table from the oldAdapter's version to the current version.\n@param handle handle to the database whose table is to be upgraded to a newer version.\n@param oldAdapter the adapter for the existing table to be upgraded.\n@return the adapter for the new upgraded version of the table.\n@throws VersionException if the the table's version does not match the expected version\n for this adapter.\n@throws IOException if the database can't be read or written.","static":true,"name":"upgrade","comment":"Upgrades the Enumeration Data Type Values table from the oldAdapter's version to the current version.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"handle to the database whose table is to be upgraded to a newer version.","type_short":"DBHandle"},{"type_long":"ghidra.program.database.data.EnumValueDBAdapter","name":"oldAdapter","comment":"the adapter for the existing table to be upgraded.","type_short":"EnumValueDBAdapter"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if the the table's version does not match the expected version\n for this adapter.","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"if the database can't be read or written.","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.data.EnumValueDBAdapter","comment":"the adapter for the new upgraded version of the table.","type_short":"EnumValueDBAdapter"}},{"javadoc":"","static":false,"name":"createRecord","comment":"","params":[{"type_long":"long","name":"enumID","comment":"","type_short":"long"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"long","name":"value","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getRecord","comment":"","params":[{"type_long":"long","name":"valueID","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"Remove the record for the given enum Value ID.\n@param valueID ID of the value record to delete\n@throws IOException if there was a problem accessing the database","static":false,"name":"removeRecord","comment":"Remove the record for the given enum Value ID.","params":[{"type_long":"long","name":"valueID","comment":"ID of the value record to delete","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Updates the enum data type values table with the provided record.\n@param record the new record\n@throws IOException if the database can't be accessed.","static":false,"name":"updateRecord","comment":"Updates the enum data type values table with the provided record.","params":[{"type_long":"db.Record","name":"record","comment":"the new record","type_short":"Record"}],"throws":[{"type_long":"java.io.IOException","comment":"if the database can't be accessed.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getValueIdsInEnum","comment":"","params":[{"type_long":"long","name":"enumID","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"long[]","comment":"","type_short":"long[]"}}],"name":"EnumValueDBAdapter","comment":"Adapter to access the Enumeration data type values tables.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ENUM_VALUE_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Enumeration Values\""},{"type_long":"db.Schema","javadoc":"","static":true,"name":"ENUM_VALUE_SCHEMA","comment":"","type_short":"Schema","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"ENUMVAL_NAME_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"ENUMVAL_VALUE_COL","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"ENUMVAL_ID_COL","comment":"","type_short":"int","constant_value":"2"}]}
