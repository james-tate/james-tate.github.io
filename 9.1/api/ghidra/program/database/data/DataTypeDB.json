{"implements":["ghidra.program.model.data.DataType","javax.swing.event.ChangeListener"],"javadoc":"Base class for data types that are Database objects.","static":false,"extends":"ghidra.program.database.DatabaseObject","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.database.data.DataTypeManagerDB","name":"dataMgr","comment":"","type_short":"DataTypeManagerDB"},{"type_long":"ghidra.program.database.DBObjectCache<ghidra.program.database.data.DataTypeDB>","name":"cache","comment":"","type_short":"DBObjectCache"},{"type_long":"db.Record","name":"record","comment":"","type_short":"Record"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"refreshName","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Subclasses implement this to either read the name from the database record or compute\n if it is a derived name such as a pointer or array.  Implementers can assume that\n the database lock will be acquired when this method is called.","static":false,"name":"doGetName","comment":"Subclasses implement this to either read the name from the database record or compute\n if it is a derived name such as a pointer or array.  Implementers can assume that\n the database lock will be acquired when this method is called.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Subclasses implement this to read the category path from the database record.Implementers can assume that\n the database lock will be acquired when this method is called.","static":false,"name":"doGetCategoryID","comment":"Subclasses implement this to read the category path from the database record.Implementers can assume that\n the database lock will be acquired when this method is called.","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Subclasses implement this to update the category path ID to the database. Implementers can assume that\n the database lock will be acquired when this method is called.","static":false,"name":"doSetCategoryPathRecord","comment":"Subclasses implement this to update the category path ID to the database. Implementers can assume that\n the database lock will be acquired when this method is called.","params":[{"type_long":"long","name":"categoryID","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Subclasses implement this to update the  to the database. Implementers can assume that\n the database lock will be acquired when this method is called.\n@param newName new data type name","static":false,"name":"doSetNameRecord","comment":"Subclasses implement this to update the  to the database. Implementers can assume that\n the database lock will be acquired when this method is called.","params":[{"type_long":"java.lang.String","name":"newName","comment":"new data type name","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Subclasses implement this to read the source archive id from the record. Implementers can assume that\n the database lock will be acquired when this method is called.","static":false,"name":"getSourceArchiveID","comment":"Subclasses implement this to read the source archive id from the record. Implementers can assume that\n the database lock will be acquired when this method is called.","params":[],"throws":[],"return":{"type_long":"ghidra.util.UniversalID","comment":"","type_short":"UniversalID"}},{"javadoc":"Subclasses implement this to update the source archive id from the record. Implementers can assume that\n the database lock will be acquired when this method is called.","static":false,"name":"setSourceArchiveID","comment":"Subclasses implement this to update the source archive id from the record. Implementers can assume that\n the database lock will be acquired when this method is called.","params":[{"type_long":"ghidra.util.UniversalID","name":"id","comment":"","type_short":"UniversalID"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDataOrganization","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataOrganization","comment":"","type_short":"DataOrganization"}},{"javadoc":"","static":false,"name":"refresh","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isNotYetDefined","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.data.DataType#getDisplayName()","static":false,"name":"getDisplayName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getValueClass","comment":"","params":[{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"}],"throws":[],"return":{"type_long":"java.lang.Class<?>","comment":"","type_short":"Class"}},{"javadoc":"Get the current name without refresh.\n This is intended to be used for event generation when an old-name\n is needed.\n@return old name","static":false,"name":"getOldName","comment":"Get the current name without refresh.\n This is intended to be used for event generation when an old-name\n is needed.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"old name","type_short":"String"}},{"javadoc":"@see ghidra.program.model.data.DataType#getDefaultSettings()","static":false,"name":"getDefaultSettings","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.docking.settings.Settings","comment":"","type_short":"Settings"}},{"javadoc":"@see ghidra.program.model.data.DataType#getDocs()","static":false,"name":"getDocs","comment":"","params":[],"throws":[],"return":{"type_long":"java.net.URL","comment":"","type_short":"URL"}},{"javadoc":"Set the data in the form of the appropriate Object for\n this DataType.\n@param buf the data buffer.\n@param settings the display settings for the current value.\n@param length the number of bytes to set the value from.\n@param value the new value to set object","static":false,"name":"setValue","comment":"Set the data in the form of the appropriate Object for\n this DataType.","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"the data buffer.","type_short":"MemBuffer"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"the display settings for the current value.","type_short":"Settings"},{"type_long":"int","name":"length","comment":"the number of bytes to set the value from.","type_short":"int"},{"type_long":"java.lang.Object","name":"value","comment":"the new value to set object","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.data.DataType#getSettingsDefinitions()","static":false,"name":"getSettingsDefinitions","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.docking.settings.SettingsDefinition[]","comment":"","type_short":"ghidra.docking.settings.SettingsDefinition[]"}},{"javadoc":"@see ghidra.program.model.data.DataType#isDeleted()","static":false,"name":"isDeleted","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.data.DataType#update(ghidra.program.model.data.DataType)","static":false,"name":"dataTypeSizeChanged","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)","static":false,"name":"stateChanged","comment":"","params":[{"type_long":"javax.swing.event.ChangeEvent","name":"e","comment":"","type_short":"ChangeEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.data.DataType#getDataTypeManager()","static":false,"name":"getDataTypeManager","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeManager","comment":"","type_short":"DataTypeManager"}},{"javadoc":"@see ghidra.program.model.data.DataType#setDefaultSettings(ghidra.docking.settings.Settings)","static":false,"name":"setDefaultSettings","comment":"","params":[{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see ghidra.program.model.data.DataType#getPathName()","static":false,"name":"getPathName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"checkValidName","comment":"","params":[{"type_long":"java.lang.String","name":"newName","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"resolve","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"resolve","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"},{"type_long":"ghidra.program.model.data.DataTypeConflictHandler","name":"handler","comment":"","type_short":"DataTypeConflictHandler"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"@see ghidra.program.model.data.DataType#getCategoryPath()","static":false,"name":"getCategoryPath","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.CategoryPath","comment":"","type_short":"CategoryPath"}},{"javadoc":"","static":false,"name":"getDataTypePath","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypePath","comment":"","type_short":"DataTypePath"}},{"javadoc":"@see ghidra.program.model.data.DataType#setName(java.lang.String)","static":false,"name":"setName","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doSetName","comment":"","params":[{"type_long":"java.lang.String","name":"newName","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.data.DataType#setCategoryPath(ghidra.program.model.data.CategoryPath)","static":false,"name":"setCategoryPath","comment":"","params":[{"type_long":"ghidra.program.model.data.CategoryPath","name":"path","comment":"","type_short":"CategoryPath"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doSetCategoryPath","comment":"","params":[{"type_long":"ghidra.program.model.data.CategoryPath","name":"path","comment":"","type_short":"CategoryPath"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.data.DataType#setNameAndCategory(ghidra.program.model.data.CategoryPath, java.lang.String)","static":false,"name":"setNameAndCategory","comment":"","params":[{"type_long":"ghidra.program.model.data.CategoryPath","name":"path","comment":"","type_short":"CategoryPath"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Updates the path for this datatype\n@param dt the dataType whose path has changed.","static":false,"name":"updatePath","comment":"Updates the path for this datatype","params":[{"type_long":"ghidra.program.database.data.DataTypeDB","name":"dt","comment":"the dataType whose path has changed.","type_short":"DataTypeDB"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.data.DataType#addParent(ghidra.program.model.data.DataType)","static":false,"name":"addParent","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.data.DataType#removeParent(ghidra.program.model.data.DataType)","static":false,"name":"removeParent","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifySizeChanged","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyNameChanged","comment":"","params":[{"type_long":"java.lang.String","name":"oldName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"notifyDeleted","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.data.DataType#getParents()","static":false,"name":"getParents","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType[]","comment":"","type_short":"ghidra.program.model.data.DataType[]"}},{"javadoc":"@see ghidra.program.model.data.DataType#dependsOn(ghidra.program.model.data.DataType)","static":false,"name":"dependsOn","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getDefaultLabelPrefix","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getDefaultAbbreviatedLabelPrefix","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getDefaultLabelPrefix","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"},{"type_long":"int","name":"len","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataTypeDisplayOptions","name":"options","comment":"","type_short":"DataTypeDisplayOptions"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getDefaultOffcutLabelPrefix","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"},{"type_long":"int","name":"len","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataTypeDisplayOptions","name":"options","comment":"","type_short":"DataTypeDisplayOptions"},{"type_long":"int","name":"offcutLength","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setSourceArchive","comment":"","params":[{"type_long":"ghidra.app.plugin.core.datamgr.archive.SourceArchive","name":"archive","comment":"","type_short":"SourceArchive"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getSourceArchive","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.core.datamgr.archive.SourceArchive","comment":"","type_short":"SourceArchive"}},{"javadoc":"","static":false,"name":"replaceWith","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets a String briefly describing this DataType.\n <br>If a data type that extends this class wants to allow the description to be changed,\n then it must override this method.\n@param description a one-liner describing this DataType.","static":false,"name":"setDescription","comment":"Sets a String briefly describing this DataType.\n If a data type that extends this class wants to allow the description to be changed,\n then it must override this method.","params":[{"type_long":"java.lang.String","name":"description","comment":"a one-liner describing this DataType.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"setUniversalID is a package level method that allows you to change a data type's\n universal ID. This is only intended to be used when transforming a newly parsed data type\n archive so that it can be used as a replacement of the archive from a previous software release.\n@param oldUniversalID the old universal ID value that the user is already referencing\n with their data types. This is the universal ID that we want the new data type to be known by.","static":false,"name":"setUniversalID","comment":"setUniversalID is a package level method that allows you to change a data type's\n universal ID. This is only intended to be used when transforming a newly parsed data type\n archive so that it can be used as a replacement of the archive from a previous software release.","params":[{"type_long":"ghidra.util.UniversalID","name":"oldUniversalID","comment":"the old universal ID value that the user is already referencing\n with their data types. This is the universal ID that we want the new data type to be known by.","type_short":"UniversalID"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"DataTypeDB","comment":"Base class for data types that are Database objects.","fields":[{"type_long":"db.Record","javadoc":"","static":false,"name":"record","comment":"","type_short":"Record","constant_value":null},{"type_long":"ghidra.program.database.data.DataTypeManagerDB","javadoc":"","static":false,"name":"dataMgr","comment":"","type_short":"DataTypeManagerDB","constant_value":null},{"type_long":"ghidra.docking.settings.Settings","javadoc":"","static":false,"name":"defaultSettings","comment":"","type_short":"Settings","constant_value":null},{"type_long":"ghidra.docking.settings.SettingsDefinition[]","javadoc":"","static":true,"name":"EMPTY_DEFINITIONS","comment":"","type_short":"ghidra.docking.settings.SettingsDefinition[]","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"resolving","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.util.Lock","javadoc":"","static":false,"name":"lock","comment":"","type_short":"Lock","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"name","comment":"","type_short":"String","constant_value":null},{"type_long":"ghidra.program.model.data.Category","javadoc":"","static":false,"name":"category","comment":"","type_short":"Category","constant_value":null}]}
