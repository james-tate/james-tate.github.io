{"implements":[],"javadoc":"Adapter to access the Enumeration data types tables.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets an adapter for working with the enumeration data type database table. The adapter is based \n on the version of the database associated with the specified database handle and the openMode.\n@param handle handle to the database to be accessed.\n@param openMode the mode this adapter is to be opened for (CREATE, UPDATE, READ_ONLY, UPGRADE).\n@param monitor the monitor to use for displaying status or for canceling.\n@return the adapter for accessing the table of enumeration data types.\n@throws VersionException if the database handle's version doesn't match the expected version.\n@throws IOException if there is trouble accessing the database.","static":true,"name":"getAdapter","comment":"Gets an adapter for working with the enumeration data type database table. The adapter is based \n on the version of the database associated with the specified database handle and the openMode.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"handle to the database to be accessed.","type_short":"DBHandle"},{"type_long":"int","name":"openMode","comment":"the mode this adapter is to be opened for (CREATE, UPDATE, READ_ONLY, UPGRADE).","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the monitor to use for displaying status or for canceling.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if the database handle's version doesn't match the expected version.","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"if there is trouble accessing the database.","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.data.EnumDBAdapter","comment":"the adapter for accessing the table of enumeration data types.","type_short":"EnumDBAdapter"}},{"javadoc":"Tries to get a read only adapter for the database whose handle is passed to this method.\n@param handle handle to prior version of the database.\n@return the read only Enumeration data type table adapter\n@throws VersionException if a read only adapter can't be obtained for the database handle's version.","static":true,"name":"findReadOnlyAdapter","comment":"Tries to get a read only adapter for the database whose handle is passed to this method.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"handle to prior version of the database.","type_short":"DBHandle"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if a read only adapter can't be obtained for the database handle's version.","type_short":"VersionException"}],"return":{"type_long":"ghidra.program.database.data.EnumDBAdapter","comment":"the read only Enumeration data type table adapter","type_short":"EnumDBAdapter"}},{"javadoc":"Upgrades the Enumeration data type table from the oldAdapter's version to the current version.\n@param handle handle to the database whose table is to be upgraded to a newer version.\n@param oldAdapter the adapter for the existing table to be upgraded.\n@return the adapter for the new upgraded version of the table.\n@throws VersionException if the the table's version does not match the expected version\n for this adapter.\n@throws IOException if the database can't be read or written.","static":true,"name":"upgrade","comment":"Upgrades the Enumeration data type table from the oldAdapter's version to the current version.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"handle to the database whose table is to be upgraded to a newer version.","type_short":"DBHandle"},{"type_long":"ghidra.program.database.data.EnumDBAdapter","name":"oldAdapter","comment":"the adapter for the existing table to be upgraded.","type_short":"EnumDBAdapter"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if the the table's version does not match the expected version\n for this adapter.","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"if the database can't be read or written.","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.data.EnumDBAdapter","comment":"the adapter for the new upgraded version of the table.","type_short":"EnumDBAdapter"}},{"javadoc":"Creates a database record for an enumeration data type.\n@param name the unique name for this data type\n@param comments comments about this data type\n@param categoryID the ID for the category that contains this data type.\n@param size the total length or size of this data type.\n@param sourceArchiveID the ID for the source archive where this data type originated.\n@param sourceDataTypeID the ID of the associated data type in the source archive.\n@param lastChangeTime the time this data type was last changed.\n@return the database record for this data type.\n@throws IOException if the database can't be accessed.","static":false,"name":"createRecord","comment":"Creates a database record for an enumeration data type.","params":[{"type_long":"java.lang.String","name":"name","comment":"the unique name for this data type","type_short":"String"},{"type_long":"java.lang.String","name":"comments","comment":"comments about this data type","type_short":"String"},{"type_long":"long","name":"categoryID","comment":"the ID for the category that contains this data type.","type_short":"long"},{"type_long":"byte","name":"size","comment":"the total length or size of this data type.","type_short":"byte"},{"type_long":"long","name":"sourceArchiveID","comment":"the ID for the source archive where this data type originated.","type_short":"long"},{"type_long":"long","name":"sourceDataTypeID","comment":"the ID of the associated data type in the source archive.","type_short":"long"},{"type_long":"long","name":"lastChangeTime","comment":"the time this data type was last changed.","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if the database can't be accessed.","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"the database record for this data type.","type_short":"Record"}},{"javadoc":"Gets a enumeration data type record from the database based on its ID.\n@param enumID the data type's ID.\n@return the record for the enumeration data type.\n@throws IOException if the database can't be accessed.","static":false,"name":"getRecord","comment":"Gets a enumeration data type record from the database based on its ID.","params":[{"type_long":"long","name":"enumID","comment":"the data type's ID.","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if the database can't be accessed.","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"the record for the enumeration data type.","type_short":"Record"}},{"javadoc":"Gets an iterator over all enumeration data type records.\n@return the enumeration data type record iterator.\n@throws IOException if the database can't be accessed.","static":false,"name":"getRecords","comment":"Gets an iterator over all enumeration data type records.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if the database can't be accessed.","type_short":"IOException"}],"return":{"type_long":"db.RecordIterator","comment":"the enumeration data type record iterator.","type_short":"RecordIterator"}},{"javadoc":"Updates the enumeration data type table with the provided record.\n@param record the new record\n@param setLastChangedTime true means change the last change time in the record to the \n current time before putting the record in the database.\n@throws IOException if the database can't be accessed.","static":false,"name":"updateRecord","comment":"Updates the enumeration data type table with the provided record.","params":[{"type_long":"db.Record","name":"record","comment":"the new record","type_short":"Record"},{"type_long":"boolean","name":"setLastChangeTime","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if the database can't be accessed.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove the record for the given enumeration ID, and remove all of its \n associated value records.\n@param enumID ID of enumerated data type to delete\n@throws IOException if there was a problem accessing the database","static":false,"name":"removeRecord","comment":"Remove the record for the given enumeration ID, and remove all of its \n associated value records.","params":[{"type_long":"long","name":"enumID","comment":"ID of enumerated data type to delete","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem accessing the database","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Deletes the enumeration data type table from the database with the specified database handle.\n@param handle handle to the database where the table should get deleted.\n@throws IOException if the database can't be accessed.","static":false,"name":"deleteTable","comment":"Deletes the enumeration data type table from the database with the specified database handle.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"handle to the database where the table should get deleted.","type_short":"DBHandle"}],"throws":[{"type_long":"java.io.IOException","comment":"if the database can't be accessed.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets all the enumeration data types that are contained in the category that has the indicated ID.\n@param categoryID the category whose enumeration data types are wanted.\n@return an array of IDs for the enumeration data types in the category.\n@throws IOException if the database can't be accessed.","static":false,"name":"getRecordIdsInCategory","comment":"Gets all the enumeration data types that are contained in the category that has the indicated ID.","params":[{"type_long":"long","name":"categoryID","comment":"the category whose enumeration data types are wanted.","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if the database can't be accessed.","type_short":"IOException"}],"return":{"type_long":"long[]","comment":"an array of IDs for the enumeration data types in the category.","type_short":"long[]"}},{"javadoc":"Gets an array with the IDs of all data types in the enumeration table that were derived\n from the source data type archive indicated by the source archive ID.\n@param archiveID the ID of the source archive whose data types we want.\n@return the array data type IDs.\n@throws IOException if the database can't be accessed.","static":false,"name":"getRecordIdsForSourceArchive","comment":"Gets an array with the IDs of all data types in the enumeration table that were derived\n from the source data type archive indicated by the source archive ID.","params":[{"type_long":"long","name":"archiveID","comment":"the ID of the source archive whose data types we want.","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if the database can't be accessed.","type_short":"IOException"}],"return":{"type_long":"long[]","comment":"the array data type IDs.","type_short":"long[]"}},{"javadoc":"","static":false,"name":"getRecordWithIDs","comment":"","params":[{"type_long":"ghidra.util.UniversalID","name":"sourceID","comment":"","type_short":"UniversalID"},{"type_long":"ghidra.util.UniversalID","name":"datatypeID","comment":"","type_short":"UniversalID"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}}],"name":"EnumDBAdapter","comment":"Adapter to access the Enumeration data types tables.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ENUM_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Enumeration Data Types\""},{"type_long":"db.Schema","javadoc":"","static":true,"name":"ENUM_SCHEMA","comment":"","type_short":"Schema","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"ENUM_NAME_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"ENUM_COMMENT_COL","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"ENUM_CAT_COL","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"ENUM_SIZE_COL","comment":"","type_short":"int","constant_value":"3"},{"type_long":"int","javadoc":"","static":true,"name":"ENUM_SOURCE_ARCHIVE_ID_COL","comment":"","type_short":"int","constant_value":"4"},{"type_long":"int","javadoc":"","static":true,"name":"ENUM_UNIVERSAL_DT_ID_COL","comment":"","type_short":"int","constant_value":"5"},{"type_long":"int","javadoc":"","static":true,"name":"ENUM_SOURCE_SYNC_TIME_COL","comment":"","type_short":"int","constant_value":"6"},{"type_long":"int","javadoc":"","static":true,"name":"ENUM_LAST_CHANGE_TIME_COL","comment":"","type_short":"int","constant_value":"7"}]}
