{"implements":[],"javadoc":"Adapter to access the Function Signature Definition Parameters database table.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets an adapter for working with the function definition parameters database table. The adapter is based \n on the version of the database associated with the specified database handle and the openMode.\n@param handle handle to the database to be accessed.\n@param openMode the mode this adapter is to be opened for (CREATE, UPDATE, READ_ONLY, UPGRADE).\n@param monitor the monitor to use for displaying status or for canceling.\n@return the adapter for accessing the table of function definition parameters.\n@throws VersionException if the database handle's version doesn't match the expected version.\n@throws IOException if there is trouble accessing the database.","static":true,"name":"getAdapter","comment":"Gets an adapter for working with the function definition parameters database table. The adapter is based \n on the version of the database associated with the specified database handle and the openMode.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"handle to the database to be accessed.","type_short":"DBHandle"},{"type_long":"int","name":"openMode","comment":"the mode this adapter is to be opened for (CREATE, UPDATE, READ_ONLY, UPGRADE).","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the monitor to use for displaying status or for canceling.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if the database handle's version doesn't match the expected version.","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"if there is trouble accessing the database.","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.data.FunctionParameterAdapter","comment":"the adapter for accessing the table of function definition parameters.","type_short":"FunctionParameterAdapter"}},{"javadoc":"Tries to get a read only adapter for the database whose handle is passed to this method.\n@param handle handle to prior version of the database.\n@return the read only Function Definition Parameters table adapter\n@throws VersionException if a read only adapter can't be obtained for the database handle's version.","static":true,"name":"findReadOnlyAdapter","comment":"Tries to get a read only adapter for the database whose handle is passed to this method.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"handle to prior version of the database.","type_short":"DBHandle"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if a read only adapter can't be obtained for the database handle's version.","type_short":"VersionException"}],"return":{"type_long":"ghidra.program.database.data.FunctionParameterAdapter","comment":"the read only Function Definition Parameters table adapter","type_short":"FunctionParameterAdapter"}},{"javadoc":"Upgrades the Function Definition Parameters table from the oldAdapter's version to the \n current version.\n@param handle handle to the database whose table is to be upgraded to a newer version.\n@param oldAdapter the adapter for the existing table to be upgraded.\n@return the adapter for the new upgraded version of the table.\n@throws VersionException if the the table's version does not match the expected version\n for this adapter.\n@throws IOException if the database can't be read or written.","static":true,"name":"upgrade","comment":"Upgrades the Function Definition Parameters table from the oldAdapter's version to the \n current version.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"handle to the database whose table is to be upgraded to a newer version.","type_short":"DBHandle"},{"type_long":"ghidra.program.database.data.FunctionParameterAdapter","name":"oldAdapter","comment":"the adapter for the existing table to be upgraded.","type_short":"FunctionParameterAdapter"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if the the table's version does not match the expected version\n for this adapter.","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"if the database can't be read or written.","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.data.FunctionParameterAdapter","comment":"the adapter for the new upgraded version of the table.","type_short":"FunctionParameterAdapter"}},{"javadoc":"Gets an iterator over all function definition parameter data type records.\n@return the parameter data type record iterator.\n@throws IOException if the database can't be accessed.","static":false,"name":"getRecords","comment":"Gets an iterator over all function definition parameter data type records.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if the database can't be accessed.","type_short":"IOException"}],"return":{"type_long":"db.RecordIterator","comment":"the parameter data type record iterator.","type_short":"RecordIterator"}},{"javadoc":"@param handle\n@throws IOException","static":false,"name":"deleteTable","comment":"","params":[{"type_long":"db.DBHandle","name":"handle","comment":"","type_short":"DBHandle"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@param dataTypeID\n@param parentID\n@param ordinal\n@param name\n@param comment\n@param dtLength\n@return \n@throws IOException","static":false,"name":"createRecord","comment":"","params":[{"type_long":"long","name":"dataTypeID","comment":"","type_short":"long"},{"type_long":"long","name":"parentID","comment":"","type_short":"long"},{"type_long":"int","name":"ordinal","comment":"","type_short":"int"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"},{"type_long":"int","name":"dtLength","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"@param parameterID\n@return \n@throws IOException","static":false,"name":"getRecord","comment":"","params":[{"type_long":"long","name":"parameterID","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"Updates the function definition parameter data type table with the provided record.\n@param record the new record\n@throws IOException if the database can't be accessed.","static":false,"name":"updateRecord","comment":"Updates the function definition parameter data type table with the provided record.","params":[{"type_long":"db.Record","name":"record","comment":"the new record","type_short":"Record"}],"throws":[{"type_long":"java.io.IOException","comment":"if the database can't be accessed.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the function definition parameter data type record with the specified ID.\n@param parameterID the ID of the data type.\n@return true if the record is removed.\n@throws IOException if the database can't be accessed.","static":false,"name":"removeRecord","comment":"Removes the function definition parameter data type record with the specified ID.","params":[{"type_long":"long","name":"parameterID","comment":"the ID of the data type.","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"if the database can't be accessed.","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"true if the record is removed.","type_short":"boolean"}},{"javadoc":"@param functionDefID\n@return \n@throws IOException","static":false,"name":"getParameterIdsInFunctionDef","comment":"","params":[{"type_long":"long","name":"functionDefID","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"long[]","comment":"","type_short":"long[]"}}],"name":"FunctionParameterAdapter","comment":"Adapter to access the Function Signature Definition Parameters database table.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"PARAMETER_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Function Parameters\""},{"type_long":"db.Schema","javadoc":"","static":true,"name":"PARAMETER_SCHEMA","comment":"","type_short":"Schema","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"PARAMETER_PARENT_ID_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"PARAMETER_DT_ID_COL","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"PARAMETER_NAME_COL","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"PARAMETER_COMMENT_COL","comment":"","type_short":"int","constant_value":"3"},{"type_long":"int","javadoc":"","static":true,"name":"PARAMETER_ORDINAL_COL","comment":"","type_short":"int","constant_value":"4"},{"type_long":"int","javadoc":"","static":true,"name":"PARAMETER_DT_LENGTH_COL","comment":"","type_short":"int","constant_value":"5"}]}
