{"implements":[],"javadoc":"Database adapter for address map","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getAdapter","comment":"","params":[{"type_long":"db.DBHandle","name":"handle","comment":"","type_short":"DBHandle"},{"type_long":"int","name":"openMode","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.address.AddressFactory","name":"factory","comment":"","type_short":"AddressFactory"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.map.AddressMapDBAdapter","comment":"","type_short":"AddressMapDBAdapter"}},{"javadoc":"","static":true,"name":"findReadOnlyAdapter","comment":"","params":[{"type_long":"db.DBHandle","name":"handle","comment":"","type_short":"DBHandle"},{"type_long":"ghidra.program.model.address.AddressFactory","name":"factory","comment":"","type_short":"AddressFactory"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.map.AddressMapDBAdapter","comment":"","type_short":"AddressMapDBAdapter"}},{"javadoc":"","static":true,"name":"upgrade","comment":"","params":[{"type_long":"db.DBHandle","name":"handle","comment":"","type_short":"DBHandle"},{"type_long":"ghidra.program.database.map.AddressMapDBAdapter","name":"oldAdapter","comment":"","type_short":"AddressMapDBAdapter"},{"type_long":"ghidra.program.model.address.AddressFactory","name":"factory","comment":"","type_short":"AddressFactory"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.database.map.AddressMapDBAdapter","comment":"","type_short":"AddressMapDBAdapter"}},{"javadoc":"Deletes the table - used when upgrading;","static":false,"name":"deleteTable","comment":"Deletes the table - used when upgrading;","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a new base address\n@param addr the new base address to add.\n@param normalizedOffset the normalized offset (image base subtracted) for the address.\n@return the array of image bases.","static":false,"name":"addBaseAddress","comment":"Adds a new base address","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the new base address to add.","type_short":"Address"},{"type_long":"long","name":"normalizedOffset","comment":"the normalized offset (image base subtracted) for the address.","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address[]","comment":"the array of image bases.","type_short":"ghidra.program.model.address.Address[]"}},{"javadoc":"Returns an array of image bases.\n@param forceRead forces the adapter to reread the data from the database.\n@throws IOException if a database io error occurs.","static":false,"name":"getBaseAddresses","comment":"Returns an array of image bases.","params":[{"type_long":"boolean","name":"forceRead","comment":"forces the adapter to reread the data from the database.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.address.Address[]","comment":"","type_short":"ghidra.program.model.address.Address[]"}},{"javadoc":"Returns raw address map entries.\n@throws IOException","static":false,"name":"getEntries","comment":"Returns raw address map entries.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.util.List<ghidra.program.database.map.AddressMapDBAdapter.AddressMapEntry>","comment":"","type_short":"List"}},{"javadoc":"Initialize map with specified list of map entries (upgrade use only).\n@param entries map entries sorted by index (a missing index will cause an exception).\n@throws IOException","static":false,"name":"setEntries","comment":"Initialize map with specified list of map entries (upgrade use only).","params":[{"type_long":"java.util.List<ghidra.program.database.map.AddressMapDBAdapter.AddressMapEntry>","name":"entries","comment":"map entries sorted by index (a missing index will cause an exception).","type_short":"List"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clears all entries in the database table.\n@throws IOException if a database io error occurs.","static":false,"name":"clearAll","comment":"Clears all entries in the database table.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the addressFactory\n@param addrFactory the new factory to use.","static":false,"name":"setAddressFactory","comment":"Sets the addressFactory","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"addrFactory","comment":"the new factory to use.","type_short":"AddressFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"renameOverlaySpace","comment":"","params":[{"type_long":"java.lang.String","name":"oldName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"newName","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"deleteOverlaySpace","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"AddressMapDBAdapter","comment":"Database adapter for address map","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TABLE_NAME","comment":"","type_short":"String","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"CURRENT_VERSION","comment":"","type_short":"int","constant_value":"1"},{"type_long":"ghidra.program.database.map.AddressMap","javadoc":"","static":false,"name":"oldAddrMap","comment":"","type_short":"AddressMap","constant_value":null}]}
