{"implements":["db.DBLongIterator"],"javadoc":"Iterator of indexed fields that are addresses. The longs returned are the address longs.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Empty iterator.","static":false,"name":"<init>","comment":"Empty iterator.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new AddressIndexKeyIterator.\n Memory addresses encoded as Absolute are not included.\n@param table the database table containing indexed addresses.\n@param indexCol the column that contains indexed addresses.\n@param addrMap the address map\n@param atStart if true, iterates forward, otherwise iterates backwards.\n@throws IOException if a database io error occurs.","static":false,"name":"<init>","comment":"Constructs a new AddressIndexKeyIterator.\n Memory addresses encoded as Absolute are not included.","params":[{"type_long":"db.Table","name":"table","comment":"the database table containing indexed addresses.","type_short":"Table"},{"type_long":"int","name":"indexCol","comment":"the column that contains indexed addresses.","type_short":"int"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"the address map","type_short":"AddressMap"},{"type_long":"boolean","name":"atStart","comment":"if true, iterates forward, otherwise iterates backwards.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new AddressIndexKeyIterator for a range of addresses.\n Memory addresses encoded as Absolute are not included.\n@param table the database table containing indexed addresses.\n@param indexCol the column that contains indexed addresses.\n@param addrMap the address map\n@param minAddr the first address in the range to iterate over.\n@param maxAddr the last address in the range to iterator over.\n@param atStart if true, iterates forward, otherwise iterates backwards.\n@throws IOException if a database io error occurs.","static":false,"name":"<init>","comment":"Constructs a new AddressIndexKeyIterator for a range of addresses.\n Memory addresses encoded as Absolute are not included.","params":[{"type_long":"db.Table","name":"table","comment":"the database table containing indexed addresses.","type_short":"Table"},{"type_long":"int","name":"indexCol","comment":"the column that contains indexed addresses.","type_short":"int"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"the address map","type_short":"AddressMap"},{"type_long":"ghidra.program.model.address.Address","name":"minAddr","comment":"the first address in the range to iterate over.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"maxAddr","comment":"the last address in the range to iterator over.","type_short":"Address"},{"type_long":"boolean","name":"atStart","comment":"if true, iterates forward, otherwise iterates backwards.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new AddressIndexKeyIterator for a set of addresses.\n Memory addresses encoded as Absolute are not included.\n@param table the database table containing indexed addresses.\n@param indexCol the column that contains indexed addresses.\n@param addrMap the address map\n@param set the set of addresses to iterator over.\n@param atStart if true, iterates forward, otherwise iterates backwards.\n@throws IOException if a database io error occurs.","static":false,"name":"<init>","comment":"Constructs a new AddressIndexKeyIterator for a set of addresses.\n Memory addresses encoded as Absolute are not included.","params":[{"type_long":"db.Table","name":"table","comment":"the database table containing indexed addresses.","type_short":"Table"},{"type_long":"int","name":"indexCol","comment":"the column that contains indexed addresses.","type_short":"int"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"the address map","type_short":"AddressMap"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"the set of addresses to iterator over.","type_short":"AddressSetView"},{"type_long":"boolean","name":"atStart","comment":"if true, iterates forward, otherwise iterates backwards.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new AddressIndexKeyIterator for a set of addresses\n@param table the database table containing indexed addresses.\n@param indexCol the column that contains indexed addresses.\n@param addrMap the address map\n@param absolute if true, only absolute memory address encodings are considered, otherwise \n only standard\/relocatable address encodings are considered.\n@param set the set of addresses to iterator over.\n@param atStart if true, iterates forward, otherwise iterates backwards.\n@throws IOException if a database io error occurs.","static":false,"name":"<init>","comment":"Constructs a new AddressIndexKeyIterator for a set of addresses","params":[{"type_long":"db.Table","name":"table","comment":"the database table containing indexed addresses.","type_short":"Table"},{"type_long":"int","name":"indexCol","comment":"the column that contains indexed addresses.","type_short":"int"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"the address map","type_short":"AddressMap"},{"type_long":"boolean","name":"absolute","comment":"if true, only absolute memory address encodings are considered, otherwise \n only standard\/relocatable address encodings are considered.","type_short":"boolean"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"the set of addresses to iterator over.","type_short":"AddressSetView"},{"type_long":"boolean","name":"atStart","comment":"if true, iterates forward, otherwise iterates backwards.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new AddressIndexKeyIterator starting at a given address.\n Memory addresses encoded as Absolute are not included.\n@param table the database table containing indexed addresses.\n@param indexCol the column that contains indexed addresses.\n@param addrMap the address map\n@param start the starting address for the iterator.\n@param before if true, positions the iterator before start, otherwise positions it after start.\n@throws IOException if a database io error occurs.","static":false,"name":"<init>","comment":"Constructs a new AddressIndexKeyIterator starting at a given address.\n Memory addresses encoded as Absolute are not included.","params":[{"type_long":"db.Table","name":"table","comment":"the database table containing indexed addresses.","type_short":"Table"},{"type_long":"int","name":"indexCol","comment":"the column that contains indexed addresses.","type_short":"int"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"the address map","type_short":"AddressMap"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the starting address for the iterator.","type_short":"Address"},{"type_long":"boolean","name":"before","comment":"if true, positions the iterator before start, otherwise positions it after start.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new AddressIndexKeyIterator starting at a given address\n@param table the database table containing indexed addresses.\n@param indexCol the column that contains indexed addresses.\n@param addrMap the address map\n@param absolute if true, only absolute memory address encodings are considered, otherwise \n only standard\/relocatable address encodings are considered.\n@param start the starting address for the iterator.\n@param before if true, positions the iterator before start, otherwise positions it after start.\n@throws IOException if a database io error occurs.","static":false,"name":"<init>","comment":"Constructs a new AddressIndexKeyIterator starting at a given address","params":[{"type_long":"db.Table","name":"table","comment":"the database table containing indexed addresses.","type_short":"Table"},{"type_long":"int","name":"indexCol","comment":"the column that contains indexed addresses.","type_short":"int"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"the address map","type_short":"AddressMap"},{"type_long":"boolean","name":"absolute","comment":"if true, only absolute memory address encodings are considered, otherwise \n only standard\/relocatable address encodings are considered.","type_short":"boolean"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the starting address for the iterator.","type_short":"Address"},{"type_long":"boolean","name":"before","comment":"if true, positions the iterator before start, otherwise positions it after start.","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see db.DBLongIterator#hasNext()","static":false,"name":"hasNext","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see db.DBLongIterator#hasPrevious()","static":false,"name":"hasPrevious","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see db.DBLongIterator#next()","static":false,"name":"next","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"@see db.DBLongIterator#previous()","static":false,"name":"previous","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"@see db.DBLongIterator#delete()","static":false,"name":"delete","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"AddressIndexKeyIterator","comment":"Iterator of indexed fields that are addresses. The longs returned are the address longs.","fields":[{"type_long":"db.Table","javadoc":"","static":false,"name":"table","comment":"","type_short":"Table","constant_value":null},{"type_long":"java.util.List<ghidra.program.model.address.KeyRange>","javadoc":"","static":false,"name":"keyRangeList","comment":"","type_short":"List","constant_value":null},{"type_long":"db.DBFieldIterator","javadoc":"","static":false,"name":"it","comment":"","type_short":"DBFieldIterator","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"keyRangeIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"indexCol","comment":"","type_short":"int","constant_value":null}]}
