{"implements":["ghidra.program.model.listing.FunctionTagManager","db.util.ErrorHandler"],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor.\n@param handle handle to database\n@param openMode either READ_ONLY, UPDATE, or UPGRADE\n@param lock the program synchronization lock\n@param monitor the task monitor to use while upgrading.\n@throws VersionException if the database is incompatible with the current\n schema\n@throws IOException if there is a problem accessing the database.\n@throws CancelledException","static":false,"name":"<init>","comment":"Constructor.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"handle to database","type_short":"DBHandle"},{"type_long":"int","name":"openMode","comment":"either READ_ONLY, UPDATE, or UPGRADE","type_short":"int"},{"type_long":"ghidra.util.Lock","name":"lock","comment":"the program synchronization lock","type_short":"Lock"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor to use while upgrading.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if the database is incompatible with the current\n schema","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"if there is a problem accessing the database.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setProgram","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dbError","comment":"","params":[{"type_long":"java.io.IOException","name":"e","comment":"","type_short":"IOException"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFunctionTag","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionTag","comment":"","type_short":"FunctionTag"}},{"javadoc":"","static":false,"name":"getFunctionTag","comment":"","params":[{"type_long":"long","name":"id","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionTag","comment":"","type_short":"FunctionTag"}},{"javadoc":"","static":false,"name":"isTagAssigned","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"createFunctionTag","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionTag","comment":"","type_short":"FunctionTag"}},{"javadoc":"","static":false,"name":"updateFunctionTag","comment":"","params":[{"type_long":"ghidra.program.database.function.FunctionTagDB","name":"tag","comment":"","type_short":"FunctionTagDB"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"TODO: Be a bit smarter about this - if the cache contains all the tags in\n  \t the db we can just return the cache itself. If not, then go to the\n  \t db to get the remainder.\n@return \n@throws IOException","static":false,"name":"getAllFunctionTags","comment":"TODO: Be a bit smarter about this - if the cache contains all the tags in\n  \t the db we can just return the cache itself. If not, then go to the\n  \t db to get the remainder.","params":[],"throws":[],"return":{"type_long":"java.util.List<? extends ghidra.program.model.listing.FunctionTag>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getFunctionTagAdapter","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.function.FunctionTagAdapter","comment":"","type_short":"FunctionTagAdapter"}},{"javadoc":"","static":false,"name":"getFunctionTagMappingAdapter","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.function.FunctionTagMappingAdapter","comment":"","type_short":"FunctionTagMappingAdapter"}},{"javadoc":"Sends a notification when a tag has been changed (edited or deleted).\n@param type {@link ChangeManager} change type\n@param tag the tag that was changed\n@throws IOException","static":false,"name":"fireTagChangedNotification","comment":"Sends a notification when a tag has been changed (edited or deleted).","params":[{"type_long":"int","name":"type","comment":"ChangeManager change type","type_short":"int"},{"type_long":"ghidra.program.model.listing.FunctionTag","name":"tag","comment":"the tag that was changed","type_short":"FunctionTag"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Fires off a notification indicating that a new tag has been created.\n@param type {@link ChangeManager} change type\n@param tag the tag that was created\n@throws IOException","static":false,"name":"fireTagCreatedNotification","comment":"Fires off a notification indicating that a new tag has been created.","params":[{"type_long":"int","name":"type","comment":"ChangeManager change type","type_short":"int"},{"type_long":"ghidra.program.model.listing.FunctionTag","name":"tag","comment":"the tag that was created","type_short":"FunctionTag"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Fires off a notification indicating that the given tag has been deleted.\n@param type the type of change\n@param tag the tag that was deleted\n@throws IOException","static":false,"name":"fireTagDeletedNotification","comment":"Fires off a notification indicating that the given tag has been deleted.","params":[{"type_long":"int","name":"type","comment":"the type of change","type_short":"int"},{"type_long":"ghidra.program.model.listing.FunctionTag","name":"tag","comment":"the tag that was deleted","type_short":"FunctionTag"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the cache object for the given Record. If the object is not in\n the cache, a new cache object is created.\n@param tagRecord the tag record to retrieve\n@return tag new cached tag object","static":false,"name":"getFunctionTagFromCache","comment":"Returns the cache object for the given Record. If the object is not in\n the cache, a new cache object is created.","params":[{"type_long":"db.Record","name":"tagRecord","comment":"the tag record to retrieve","type_short":"Record"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionTag","comment":"tag new cached tag object","type_short":"FunctionTag"}},{"javadoc":"Deletes the given function tag.\n@param tag the tag to delete","static":false,"name":"doDeleteTag","comment":"Deletes the given function tag.","params":[{"type_long":"ghidra.program.model.listing.FunctionTag","name":"tag","comment":"the tag to delete","type_short":"FunctionTag"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Tells the function manager that its tags are out of date. This\n will cause functions to go to the database to retrieve tags next time they\n are requested, rather than using their internal cache.","static":false,"name":"invalidateFunctions","comment":"Tells the function manager that its tags are out of date. This\n will cause functions to go to the database to retrieve tags next time they\n are requested, rather than using their internal cache.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns all function tags associated with the given function id.\n@param functionId the function id\n@return \n@throws IOException","static":false,"name":"getFunctionTagsByFunctionID","comment":"Returns all function tags associated with the given function id.","params":[{"type_long":"long","name":"functionId","comment":"the function id","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.util.Set<ghidra.program.model.listing.FunctionTag>","comment":"","type_short":"Set"}}],"name":"FunctionTagManagerDB","comment":"","fields":[{"type_long":"ghidra.program.database.ProgramDB","javadoc":"","static":false,"name":"program","comment":"","type_short":"ProgramDB","constant_value":null},{"type_long":"ghidra.program.database.function.FunctionTagAdapter","javadoc":"","static":false,"name":"functionTagAdapter","comment":"","type_short":"FunctionTagAdapter","constant_value":null},{"type_long":"ghidra.program.database.function.FunctionTagMappingAdapter","javadoc":"","static":false,"name":"functionTagMappingAdapter","comment":"","type_short":"FunctionTagMappingAdapter","constant_value":null},{"type_long":"ghidra.program.database.DBObjectCache<ghidra.program.database.function.FunctionTagDB>","javadoc":"","static":false,"name":"cache","comment":"","type_short":"DBObjectCache","constant_value":null},{"type_long":"ghidra.util.Lock","javadoc":"","static":false,"name":"lock","comment":"","type_short":"Lock","constant_value":null}]}
