{"implements":[],"javadoc":"Version 0 implementation for the calling conventions tables adapter.","static":false,"extends":"ghidra.program.database.function.CallingConventionDBAdapter","methods":[{"javadoc":"Constructor","static":false,"name":"<init>","comment":"Constructor","params":[{"type_long":"db.DBHandle","name":"handle","comment":"","type_short":"DBHandle"},{"type_long":"boolean","name":"create","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createCallingConventionRecord","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"Get the first unused key value. Remember 0 is reserved for unknown and 1 for default.\n@return the first available key. This is a number for 2 to 255.\n@throws IOException if there are no more available keys.","static":false,"name":"getFirstAvailableKey","comment":"Get the first unused key value. Remember 0 is reserved for unknown and 1 for default.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if there are no more available keys.","type_short":"IOException"}],"return":{"type_long":"byte","comment":"the first available key. This is a number for 2 to 255.","type_short":"byte"}},{"javadoc":"","static":false,"name":"getCallingConventionRecord","comment":"","params":[{"type_long":"byte","name":"callingConventionID","comment":"","type_short":"byte"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"","static":false,"name":"getCallingConventionRecord","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}}],"name":"CallingConventionDBAdapterV0","comment":"Version 0 implementation for the calling conventions tables adapter.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"CALLING_CONVENTION_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Calling Conventions\""},{"type_long":"int","javadoc":"","static":true,"name":"V0_CALLING_CONVENTION_NAME_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"db.Schema","javadoc":"","static":true,"name":"V0_CALLING_CONVENTION_SCHEMA","comment":"","type_short":"Schema","constant_value":null},{"type_long":"db.Table","javadoc":"","static":false,"name":"callingConventionTable","comment":"","type_short":"Table","constant_value":null}]}
