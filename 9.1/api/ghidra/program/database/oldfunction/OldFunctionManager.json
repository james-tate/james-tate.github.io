{"implements":["db.util.ErrorHandler"],"javadoc":"This class only exists to support upgrading Ghidra Version 2.1 and earlier.\n <BR>\n <b>NOTE: Programmers should not use this class!<\/b>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new OldFunctionManager.\n@param dbHandle data base handle\n@param errHandler the error handler\n@param addrMap the address map\n@throws VersionException if function manager's version does not match its expected version\n@throws IOException if an i\/o error occurs","static":false,"name":"<init>","comment":"Constructs a new OldFunctionManager.","params":[{"type_long":"db.DBHandle","name":"dbHandle","comment":"data base handle","type_short":"DBHandle"},{"type_long":"db.util.ErrorHandler","name":"errHandler","comment":"the error handler","type_short":"ErrorHandler"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"the address map","type_short":"AddressMap"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if function manager's version does not match its expected version","type_short":"VersionException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Actually does the work of upgrading the old program function manager.\n@param upgradeProgram the program to upgrade\n@param monitor the task monitor to allow the user to cancel the upgrade\n@throws CancelledException if the user cancels the upgrade\n@throws IOException if an i\/o error occurs","static":false,"name":"upgrade","comment":"Actually does the work of upgrading the old program function manager.","params":[{"type_long":"ghidra.program.database.ProgramDB","name":"upgradeProgram","comment":"the program to upgrade","type_short":"ProgramDB"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor to allow the user to cancel the upgrade","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancels the upgrade","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"if an i\/o error occurs","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Copy old function into programs current function manager.\n@param function existing function","static":false,"name":"upgradeFunction","comment":"Copy old function into programs current function manager.","params":[{"type_long":"ghidra.program.database.oldfunction.OldFunctionDataDB","name":"oldFunc","comment":"","type_short":"OldFunctionDataDB"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"initializeAdapters","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getProgram","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.ProgramDB","comment":"","type_short":"ProgramDB"}},{"javadoc":"","static":false,"name":"getFunctionAdapter","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.oldfunction.OldFunctionDBAdapter","comment":"","type_short":"OldFunctionDBAdapter"}},{"javadoc":"","static":false,"name":"getRegisterVariableAdapter","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.oldfunction.OldRegisterVariableDBAdapter","comment":"","type_short":"OldRegisterVariableDBAdapter"}},{"javadoc":"","static":false,"name":"getStackVariableAdapter","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.oldfunction.OldStackVariableDBAdapter","comment":"","type_short":"OldStackVariableDBAdapter"}},{"javadoc":"","static":false,"name":"getDataType","comment":"","params":[{"type_long":"long","name":"dataTypeId","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"getDataTypeId","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getFunctionCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getFunctionBody","comment":"","params":[{"type_long":"long","name":"functionKey","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"","type_short":"AddressSetView"}},{"javadoc":"","static":false,"name":"getFunction","comment":"","params":[{"type_long":"db.Record","name":"rec","comment":"","type_short":"Record"}],"throws":[],"return":{"type_long":"ghidra.program.database.oldfunction.OldFunctionDataDB","comment":"","type_short":"OldFunctionDataDB"}},{"javadoc":"Get an iterator over functions\n@return an iterator over functions.","static":false,"name":"getFunctions","comment":"Get an iterator over functions","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.oldfunction.OldFunctionManager.OldFunctionIteratorDB","comment":"an iterator over functions.","type_short":"OldFunctionIteratorDB"}},{"javadoc":"@see db.util.ErrorHandler#dbError(java.io.IOException)","static":false,"name":"dbError","comment":"","params":[{"type_long":"java.io.IOException","name":"e","comment":"","type_short":"IOException"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Permanently discards all data resources associated with the old function manager.\n This should be invoked when an upgrade of all function data has been completed.\n@throws IOException","static":false,"name":"dispose","comment":"Permanently discards all data resources associated with the old function manager.\n This should be invoked when an upgrade of all function data has been completed.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"OldFunctionManager","comment":"This class only exists to support upgrading Ghidra Version 2.1 and earlier.\n \n NOTE: Programmers should not use this class!","fields":[{"type_long":"db.DBHandle","javadoc":"","static":false,"name":"dbHandle","comment":"","type_short":"DBHandle","constant_value":null},{"type_long":"db.util.ErrorHandler","javadoc":"","static":false,"name":"errHandler","comment":"","type_short":"ErrorHandler","constant_value":null},{"type_long":"ghidra.program.database.oldfunction.OldFunctionMapDB","javadoc":"","static":false,"name":"functionMap","comment":"","type_short":"OldFunctionMapDB","constant_value":null},{"type_long":"ghidra.program.database.oldfunction.OldFunctionDBAdapter","javadoc":"","static":false,"name":"functionAdapter","comment":"","type_short":"OldFunctionDBAdapter","constant_value":null},{"type_long":"ghidra.program.database.oldfunction.OldStackVariableDBAdapter","javadoc":"","static":false,"name":"stackVarAdapter","comment":"","type_short":"OldStackVariableDBAdapter","constant_value":null},{"type_long":"ghidra.program.database.oldfunction.OldRegisterVariableDBAdapter","javadoc":"","static":false,"name":"registerAdapter","comment":"","type_short":"OldRegisterVariableDBAdapter","constant_value":null},{"type_long":"ghidra.program.database.ProgramDB","javadoc":"","static":false,"name":"program","comment":"","type_short":"ProgramDB","constant_value":null},{"type_long":"ghidra.program.database.data.DataTypeManagerDB","javadoc":"","static":false,"name":"dataManager","comment":"","type_short":"DataTypeManagerDB","constant_value":null},{"type_long":"ghidra.program.database.map.AddressMap","javadoc":"","static":false,"name":"addrMap","comment":"","type_short":"AddressMap","constant_value":null}]}
