{"implements":["ghidra.program.database.ManagerDB"],"javadoc":"Manage the set of trees in the program.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createTreeSchema","comment":"","params":[],"throws":[],"return":{"type_long":"db.Schema","comment":"","type_short":"Schema"}},{"javadoc":"","static":true,"name":"createModuleSchema","comment":"","params":[],"throws":[],"return":{"type_long":"db.Schema","comment":"","type_short":"Schema"}},{"javadoc":"","static":true,"name":"createFragmentSchema","comment":"","params":[],"throws":[],"return":{"type_long":"db.Schema","comment":"","type_short":"Schema"}},{"javadoc":"","static":true,"name":"createParentChildSchema","comment":"","params":[],"throws":[],"return":{"type_long":"db.Schema","comment":"","type_short":"Schema"}},{"javadoc":"Construct a new TreeManager.\n@param handle database handle\n@param errHandler error handler\n@param addrMap map to convert addresses to longs and longs to addresses\n@param openMode the open mode for the program.\n@param lock the program synchronization lock\n@param monitor Task monitor for upgrading\n@throws IOException if a database io error occurs.\n@throws VersionException if the database version is different from the expected version","static":false,"name":"<init>","comment":"Construct a new TreeManager.","params":[{"type_long":"db.DBHandle","name":"handle","comment":"database handle","type_short":"DBHandle"},{"type_long":"db.util.ErrorHandler","name":"errHandler","comment":"error handler","type_short":"ErrorHandler"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"map to convert addresses to longs and longs to addresses","type_short":"AddressMap"},{"type_long":"int","name":"openMode","comment":"the open mode for the program.","type_short":"int"},{"type_long":"ghidra.util.Lock","name":"lock","comment":"the program synchronization lock","type_short":"Lock"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"Task monitor for upgrading","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"},{"type_long":"ghidra.util.exception.VersionException","comment":"if the database version is different from the expected version","type_short":"VersionException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the program.","static":false,"name":"setProgram","comment":"Set the program.","params":[{"type_long":"ghidra.program.database.ProgramDB","name":"program","comment":"","type_short":"ProgramDB"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.database.ManagerDB#programReady(int, int, ghidra.util.task.TaskMonitor)","static":false,"name":"programReady","comment":"","params":[{"type_long":"int","name":"openMode1","comment":"","type_short":"int"},{"type_long":"int","name":"currentRevision","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Upgrade the address maps associated with each program tree.\n@param monitor\n@throws CancelledException\n@throws IOException","static":false,"name":"addressUpgrade","comment":"Upgrade the address maps associated with each program tree.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"imageBaseChanged","comment":"","params":[{"type_long":"boolean","name":"commit","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a new tree with given name.\n@param treeName name of the tree (not the root module)\n@return root module for the new tree\n@throws DuplicateNameException if there is already tree named\n treeName","static":false,"name":"createRootModule","comment":"Create a new tree with given name.","params":[{"type_long":"java.lang.String","name":"treeName","comment":"name of the tree (not the root module)","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"if there is already tree named\n treeName","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.listing.ProgramModule","comment":"root module for the new tree","type_short":"ProgramModule"}},{"javadoc":"Get the root module of the tree with the given name.\n@return root module, or null if there is no tree with the\n given name","static":false,"name":"getRootModule","comment":"Get the root module of the tree with the given name.","params":[{"type_long":"java.lang.String","name":"treeName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.ProgramModule","comment":"root module, or null if there is no tree with the\n given name","type_short":"ProgramModule"}},{"javadoc":"Returns the root module for the default program tree. The default tree is the oldest tree.\n@return the root module for the default program tree. The default tree is the oldest tree.","static":false,"name":"getDefaultRootModule","comment":"Returns the root module for the default program tree. The default tree is the oldest tree.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.ProgramModule","comment":"the root module for the default program tree. The default tree is the oldest tree.","type_short":"ProgramModule"}},{"javadoc":"Get the names of all the trees in the program.\n@return sorted array of tree names","static":false,"name":"getTreeNames","comment":"Get the names of all the trees in the program.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"sorted array of tree names","type_short":"java.lang.String[]"}},{"javadoc":"Rename the tree to the new name. This method has no effect on the\n name of the root module.\n@param oldName old name of root module\n@param newName new name for root module\n@throws DuplicateNameException if newName exists as the name\n for another root","static":false,"name":"renameTree","comment":"Rename the tree to the new name. This method has no effect on the\n name of the root module.","params":[{"type_long":"java.lang.String","name":"oldName","comment":"old name of root module","type_short":"String"},{"type_long":"java.lang.String","name":"newName","comment":"new name for root module","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"if newName exists as the name\n for another root","type_short":"DuplicateNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove the tree with the given name.\n@return true if the tree was removed","static":false,"name":"removeTree","comment":"Remove the tree with the given name.","params":[{"type_long":"java.lang.String","name":"treeName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the tree was removed","type_short":"boolean"}},{"javadoc":"Get the module with the given name that is in the tree identified\n by the treeName.\n@param treeName name of the tree\n@param name module name to look for\n@return null if there is no module with the given name in the tree","static":false,"name":"getModule","comment":"Get the module with the given name that is in the tree identified\n by the treeName.","params":[{"type_long":"java.lang.String","name":"treeName","comment":"name of the tree","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"module name to look for","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.ProgramModule","comment":"null if there is no module with the given name in the tree","type_short":"ProgramModule"}},{"javadoc":"Get the fragment with the given name that is in the tree identified\n by the treeName.\n@param treeName name of the tree\n@param name name of fragment to look for\n@return null if there is no fragment with the given name in the tree","static":false,"name":"getFragment","comment":"Get the fragment with the given name that is in the tree identified\n by the treeName.","params":[{"type_long":"java.lang.String","name":"treeName","comment":"name of the tree","type_short":"String"},{"type_long":"java.lang.String","name":"name","comment":"name of fragment to look for","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.ProgramFragment","comment":"null if there is no fragment with the given name in the tree","type_short":"ProgramFragment"}},{"javadoc":"Get the fragment that contains the given address within the tree\n identified by the treeName.\n@param treeName name of the tree\n@param addr address contained within some fragment\n@return fragment containing addr, or null if addr does not\n exist in memory","static":false,"name":"getFragment","comment":"Get the fragment that contains the given address within the tree\n identified by the treeName.","params":[{"type_long":"java.lang.String","name":"treeName","comment":"name of the tree","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"address contained within some fragment","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.ProgramFragment","comment":"fragment containing addr, or null if addr does not\n exist in memory","type_short":"ProgramFragment"}},{"javadoc":"Add a memory block with the given range.","static":false,"name":"addMemoryBlock","comment":"Add a memory block with the given range.","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.AddressRange","name":"range","comment":"","type_short":"AddressRange"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove a memory block with the given range\n@throws CancelledException","static":false,"name":"deleteAddressRange","comment":"Remove a memory block with the given range","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"endAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Move a memory block to new place.\n@param fromRange old place\n@param toRange new place","static":false,"name":"moveAddressRange","comment":"Move a memory block to new place.","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"},{"type_long":"long","name":"length","comment":"","type_short":"long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"","type_short":"AddressOverflowException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getAddressMap","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.map.AddressMap","comment":"","type_short":"AddressMap"}},{"javadoc":"","static":false,"name":"getDatabaseHandle","comment":"","params":[],"throws":[],"return":{"type_long":"db.DBHandle","comment":"","type_short":"DBHandle"}},{"javadoc":"","static":false,"name":"getTreeName","comment":"","params":[{"type_long":"long","name":"treeID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getErrorHandler","comment":"","params":[],"throws":[],"return":{"type_long":"db.util.ErrorHandler","comment":"","type_short":"ErrorHandler"}},{"javadoc":"","static":true,"name":"getModuleTableName","comment":"","params":[{"type_long":"long","name":"treeID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"getFragmentTableName","comment":"","params":[{"type_long":"long","name":"treeID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"getParentChildTableName","comment":"","params":[{"type_long":"long","name":"treeID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"getFragAddressTableName","comment":"","params":[{"type_long":"long","name":"treeID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Method addMemoryBlocks; called when a new module manager is\n being created.","static":false,"name":"addMemoryBlocks","comment":"Method addMemoryBlocks; called when a new module manager is\n being created.","params":[{"type_long":"ghidra.program.database.module.ModuleManager","name":"mgr","comment":"","type_short":"ModuleManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Populate the map with existing tree views.","static":false,"name":"populateTreeMap","comment":"Populate the map with existing tree views.","params":[{"type_long":"boolean","name":"ignoreModificationNumber","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"findAdapters","comment":"","params":[{"type_long":"db.DBHandle","name":"dbHandle","comment":"","type_short":"DBHandle"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createDBTables","comment":"","params":[{"type_long":"db.DBHandle","name":"dbHandle","comment":"","type_short":"DBHandle"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"invalidateCache","comment":"","params":[{"type_long":"boolean","name":"all","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setProgramName","comment":"","params":[{"type_long":"java.lang.String","name":"oldName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"newName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateTreeRecord","comment":"","params":[{"type_long":"db.Record","name":"record","comment":"","type_short":"Record"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Update the record in the database.\n@param record record to update in the database\n@param updateModificationNumber true means to update the\n modification number","static":false,"name":"updateTreeRecord","comment":"Update the record in the database.","params":[{"type_long":"db.Record","name":"record","comment":"record to update in the database","type_short":"Record"},{"type_long":"boolean","name":"updateModificationNumber","comment":"true means to update the\n modification number","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getTreeRecord","comment":"","params":[{"type_long":"long","name":"treeID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"","static":false,"name":"createDefaultTree","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the root module for the tree that has the given ID.\n@param ID of the tree\n@return root module","static":false,"name":"getRootModule","comment":"Get the root module for the tree that has the given ID.","params":[{"type_long":"long","name":"treeID","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.ProgramModule","comment":"root module","type_short":"ProgramModule"}},{"javadoc":"","static":false,"name":"getLock","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.util.Lock","comment":"","type_short":"Lock"}}],"name":"TreeManager","comment":"Manage the set of trees in the program.","fields":[{"type_long":"java.lang.String","javadoc":"The name of the default tree that is created when a program is created.","static":true,"name":"DEFAULT_TREE_NAME","comment":"The name of the default tree that is created when a program is created.","type_short":"String","constant_value":"\"Program Tree\""},{"type_long":"ghidra.program.database.map.AddressMap","javadoc":"","static":false,"name":"addrMap","comment":"","type_short":"AddressMap","constant_value":null},{"type_long":"java.util.Map<java.lang.String,ghidra.program.database.module.ModuleManager>","javadoc":"","static":false,"name":"treeMap","comment":"","type_short":"Map","constant_value":null},{"type_long":"ghidra.program.database.module.TreeDBAdapter","javadoc":"","static":false,"name":"adapter","comment":"","type_short":"TreeDBAdapter","constant_value":null},{"type_long":"ghidra.program.database.ProgramDB","javadoc":"","static":false,"name":"program","comment":"","type_short":"ProgramDB","constant_value":null},{"type_long":"db.DBHandle","javadoc":"","static":false,"name":"handle","comment":"","type_short":"DBHandle","constant_value":null},{"type_long":"db.util.ErrorHandler","javadoc":"","static":false,"name":"errHandler","comment":"","type_short":"ErrorHandler","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"openMode","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.util.Lock","javadoc":"","static":false,"name":"lock","comment":"","type_short":"Lock","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"TREE_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Trees\""},{"type_long":"int","javadoc":"","static":true,"name":"TREE_NAME_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"MODIFICATION_NUM_COL","comment":"","type_short":"int","constant_value":"1"},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"MODULE_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Module Table\""},{"type_long":"int","javadoc":"","static":true,"name":"MODULE_NAME_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"MODULE_COMMENTS_COL","comment":"","type_short":"int","constant_value":"1"},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"FRAGMENT_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Fragment Table\""},{"type_long":"int","javadoc":"","static":true,"name":"FRAGMENT_NAME_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"FRAGMENT_COMMENTS_COL","comment":"","type_short":"int","constant_value":"1"},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"PARENT_CHILD_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Parent\/Child Relationships\""},{"type_long":"int","javadoc":"","static":true,"name":"PARENT_ID_COL","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"CHILD_ID_COL","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"ORDER_COL","comment":"","type_short":"int","constant_value":"2"},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"FRAGMENT_ADDRESS_TABLE_NAME","comment":"","type_short":"String","constant_value":"\"Fragment Addresses\""},{"type_long":"db.Schema","javadoc":"","static":true,"name":"TREE_SCHEMA","comment":"","type_short":"Schema","constant_value":null},{"type_long":"db.Schema","javadoc":"","static":true,"name":"MODULE_SCHEMA","comment":"","type_short":"Schema","constant_value":null},{"type_long":"db.Schema","javadoc":"","static":true,"name":"FRAGMENT_SCHEMA","comment":"","type_short":"Schema","constant_value":null},{"type_long":"db.Schema","javadoc":"","static":true,"name":"PARENT_CHILD_SCHEMA","comment":"","type_short":"Schema","constant_value":null}]}
