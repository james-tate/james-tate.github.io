{"implements":[],"javadoc":"Collection of static functions for upgrading various database tables.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Updates an indexed address field for when a block is moved.\n@param table the database table\n@param addrCol the address column in the table\n@param addrMap the address map\n@param fromAddr the from address of the block being moved\n@param toAddr the address to where the block is being moved.\n@param length the size of the block being moved.\n@param monitor the task monitor\n@throws IOException thrown if a database io error occurs.\n@throws CancelledException thrown if the user cancels the move operation.","static":true,"name":"updateIndexedAddressField","comment":"Updates an indexed address field for when a block is moved.","params":[{"type_long":"db.Table","name":"table","comment":"the database table","type_short":"Table"},{"type_long":"int","name":"addrCol","comment":"the address column in the table","type_short":"int"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"the address map","type_short":"AddressMap"},{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"the from address of the block being moved","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"the address to where the block is being moved.","type_short":"Address"},{"type_long":"long","name":"length","comment":"the size of the block being moved.","type_short":"long"},{"type_long":"ghidra.program.database.util.RecordFilter","name":"filter","comment":"","type_short":"RecordFilter"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"thrown if a database io error occurs.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"thrown if the user cancels the move operation.","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Handles redoing a table whose key is address based when a ranges of addresses is moved.\n@param table the database table.\n@param addrMap the address map.\n@param fromAddr the from address of the block being moved.\n@param toAddr the destination address of the block being moved.\n@param length the size of the block being moved.\n@param monitor the taskmonitor\n@throws IOException thrown if a database io error occurs.\n@throws CancelledException thrown if the user cancels the move operation.","static":true,"name":"updateAddressKey","comment":"Handles redoing a table whose key is address based when a ranges of addresses is moved.","params":[{"type_long":"db.Table","name":"table","comment":"the database table.","type_short":"Table"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"the address map.","type_short":"AddressMap"},{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"the from address of the block being moved.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"the destination address of the block being moved.","type_short":"Address"},{"type_long":"long","name":"length","comment":"the size of the block being moved.","type_short":"long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the taskmonitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"thrown if a database io error occurs.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"thrown if the user cancels the move operation.","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Handles redoing a table whose key is address based when a ranges of addresses is moved.\n@param table the database table.\n@param addrMap the address map.\n@param fromAddr the first address of the block being moved.\n@param endAddr the last address of the block being moved.\n@param toAddr the destination address of the block being moved.\n@param monitor the task monitor\n@throws IOException thrown if a database io error occurs.\n@throws CancelledException thrown if the user cancels the move operation.","static":true,"name":"updateAddressKey","comment":"Handles redoing a table whose key is address based when a ranges of addresses is moved.","params":[{"type_long":"db.Table","name":"table","comment":"the database table.","type_short":"Table"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"the address map.","type_short":"AddressMap"},{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"the first address of the block being moved.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"endAddr","comment":"the last address of the block being moved.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"the destination address of the block being moved.","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"thrown if a database io error occurs.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"thrown if the user cancels the move operation.","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DatabaseTableUtils","comment":"Collection of static functions for upgrading various database tables.","fields":[]}
