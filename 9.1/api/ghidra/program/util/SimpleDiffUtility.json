{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Convert a variable storage object from the specified program to a comparable variable storage\n object in the specified otherProgram.  Certain variable storage (UNIQUE\/HASH-based) will\n always produce a null return object.\n@param program program which contains the specified address instance\n@param storage variable storage in program\n@param otherProgram other program\n@return storage for otherProgram or null if storage can not be mapped to other program","static":true,"name":"getCompatibleVariableStorage","comment":"Convert a variable storage object from the specified program to a comparable variable storage\n object in the specified otherProgram.  Certain variable storage (UNIQUE\/HASH-based) will\n always produce a null return object.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program which contains the specified address instance","type_short":"Program"},{"type_long":"ghidra.program.model.listing.VariableStorage","name":"storage","comment":"variable storage in program","type_short":"VariableStorage"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"other program","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.VariableStorage","comment":"storage for otherProgram or null if storage can not be mapped to other program","type_short":"VariableStorage"}},{"javadoc":"Convert a varnode from the specified program to a comparable varnode in the\n specified otherProgram.  Certain varnode addresses spaces (UNIQUE, HASH) will\n always produce a null return varnode.\n@param program program which contains the specified address instance\n@param varnode varnode in program\n@param otherProgram other program\n@return varnode for otherProgram or null if varnode can not be mapped to other program","static":true,"name":"getCompatibleVarnode","comment":"Convert a varnode from the specified program to a comparable varnode in the\n specified otherProgram.  Certain varnode addresses spaces (UNIQUE, HASH) will\n always produce a null return varnode.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program which contains the specified address instance","type_short":"Program"},{"type_long":"ghidra.program.model.pcode.Varnode","name":"varnode","comment":"varnode in program","type_short":"Varnode"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"other program","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"varnode for otherProgram or null if varnode can not be mapped to other program","type_short":"Varnode"}},{"javadoc":"","static":true,"name":"getStartOfDelaySlots","comment":"","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"instr","comment":"","type_short":"Instruction"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"If the specified instruction is contained within a delay slot, or has delay slots,\n the maximum address of the last delay slot instruction will be returned.\n If a normal instruction is specified the instructions maximum address is returned.\n@param instr\n@return maximum address of instruction or its last delay slot","static":true,"name":"getEndOfDelaySlots","comment":"If the specified instruction is contained within a delay slot, or has delay slots,\n the maximum address of the last delay slot instruction will be returned.\n If a normal instruction is specified the instructions maximum address is returned.","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"instr","comment":"","type_short":"Instruction"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"maximum address of instruction or its last delay slot","type_short":"Address"}},{"javadoc":"Expand a specified address set to include complete delay slotted instructions\n which may be included at the start or end of each range within the specified\n address set.\n@param program program\n@param originalSet original address set\n@return expanded address set","static":true,"name":"expandAddressSetToIncludeFullDelaySlots","comment":"Expand a specified address set to include complete delay slotted instructions\n which may be included at the start or end of each range within the specified\n address set.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"originalSet","comment":"original address set","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"expanded address set","type_short":"AddressSetView"}},{"javadoc":"Convert an address from the specified program to a comparable address in the\n specified otherProgram.\n@param program program which contains the specified address instance\n@param addr address in program\n@param otherProgram other program\n@return address for otherProgram or null if no such address exists.","static":true,"name":"getCompatibleAddress","comment":"Convert an address from the specified program to a comparable address in the\n specified otherProgram.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program which contains the specified address instance","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"address in program","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"other program","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"address for otherProgram or null if no such address exists.","type_short":"Address"}},{"javadoc":"Convert an address from the specified program to a comparable address in the\n specified otherProgram.\n@param program program which contains the specified address instance\n@param addr address in program\n@param otherProgram other program\n@param exactMatchOnly if false and addr is an overlay address, a closest match will be returned\n if possible\n@return address for otherProgram or null if no such address exists.","static":true,"name":"translateMemoryAddress","comment":"Convert an address from the specified program to a comparable address in the\n specified otherProgram.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"address in program","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"other program","type_short":"Program"},{"type_long":"boolean","name":"exactMatchOnly","comment":"if false and addr is an overlay address, a closest match will be returned\n if possible","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"address for otherProgram or null if no such address exists.","type_short":"Address"}},{"javadoc":"","static":true,"name":"getCompatibleAddressSpace","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSpace","name":"addrSpace","comment":"","type_short":"AddressSpace"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSpace","comment":"","type_short":"AddressSpace"}},{"javadoc":"Given a symbol for a specified program, get the corresponding symbol from the\n specified otherProgram.\n@param symbol symbol to look for\n@param otherProgram other program\n@return corresponding symbol for otherProgram or null if no such symbol exists.","static":true,"name":"getSymbol","comment":"Given a symbol for a specified program, get the corresponding symbol from the\n specified otherProgram.","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"symbol","comment":"symbol to look for","type_short":"Symbol"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"other program","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"corresponding symbol for otherProgram or null if no such symbol exists.","type_short":"Symbol"}},{"javadoc":"","static":true,"name":"getOtherCodeSymbol","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"symbol","comment":"","type_short":"Symbol"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"namespace","comment":"","type_short":"Namespace"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"","type_short":"Symbol"}},{"javadoc":"","static":true,"name":"getOtherFunctionSymbol","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"symbol","comment":"","type_short":"Symbol"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"otherNamespace","comment":"","type_short":"Namespace"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"","type_short":"Symbol"}},{"javadoc":"","static":true,"name":"getOtherExternalLocationSymbol","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"symbol","comment":"","type_short":"Symbol"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"otherNamespace","comment":"","type_short":"Namespace"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"","type_short":"Symbol"}},{"javadoc":"","static":true,"name":"getExternalLocation","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"symbol","comment":"","type_short":"Symbol"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.ExternalLocation","comment":"","type_short":"ExternalLocation"}},{"javadoc":"Given an external symbol for a specified program, get the corresponding symbol,\n which has the same name and path,  from the specified otherProgram.<br>\n Note: The type of the returned symbol may be different than the type of the symbol\n@param program program which contains the specified symbol instance\n@param symbol symbol to look for\n@param otherProgram other program\n@param otherRestrictedSymbolIds an optional set of symbol ID's from the other program\n which will be treated as the exclusive set of candidate symbols to consider.\n@return corresponding external symbol for otherProgram or null if no such symbol exists.","static":true,"name":"getMatchingExternalSymbol","comment":"Given an external symbol for a specified program, get the corresponding symbol,\n which has the same name and path,  from the specified otherProgram.\n Note: The type of the returned symbol may be different than the type of the symbol","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program which contains the specified symbol instance","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.Symbol","name":"symbol","comment":"symbol to look for","type_short":"Symbol"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"other program","type_short":"Program"},{"type_long":"java.util.Set<java.lang.Long>","name":"otherRestrictedSymbolIds","comment":"an optional set of symbol ID's from the other program\n which will be treated as the exclusive set of candidate symbols to consider.","type_short":"Set"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"corresponding external symbol for otherProgram or null if no such symbol exists.","type_short":"Symbol"}},{"javadoc":"","static":true,"name":"originalNamesDontConflict","comment":"","params":[{"type_long":"ghidra.program.model.symbol.ExternalLocation","name":"extLoc","comment":"","type_short":"ExternalLocation"},{"type_long":"ghidra.program.model.symbol.ExternalLocation","name":"otherExtLoc","comment":"","type_short":"ExternalLocation"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Given an external location for a specified program, get the corresponding external location,\n which has the same name and path,  from the specified otherProgram.<br>\n Note: The type of the returned external location may be different than the type of the\n original external location.\n@param program program which contains the specified external location instance\n@param externalLocation external location to look for\n@param otherProgram other program\n@return corresponding external location for otherProgram or null if no such external location exists.","static":true,"name":"getMatchingExternalLocation","comment":"Given an external location for a specified program, get the corresponding external location,\n which has the same name and path,  from the specified otherProgram.\n Note: The type of the returned external location may be different than the type of the\n original external location.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program which contains the specified external location instance","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.ExternalLocation","name":"externalLocation","comment":"external location to look for","type_short":"ExternalLocation"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"other program","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.ExternalLocation","comment":"corresponding external location for otherProgram or null if no such external location exists.","type_short":"ExternalLocation"}},{"javadoc":"Find the variable symbol in otherProgram which corresponds to the specified varSym.\n@param varSym variable symbol\n@param otherProgram","static":true,"name":"getVariableSymbol","comment":"Find the variable symbol in otherProgram which corresponds to the specified varSym.","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"symbol","comment":"","type_short":"Symbol"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"","type_short":"Symbol"}},{"javadoc":"","static":true,"name":"getVariableSymbol","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"varSym","comment":"","type_short":"Symbol"},{"type_long":"ghidra.program.model.listing.Program","name":"otherProgram","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"otherNamespace","comment":"","type_short":"Namespace"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"","type_short":"Symbol"}},{"javadoc":"Find the variable symbol in otherProgram which corresponds to the specified varSym.\n@param varSym variable symbol\n@param otherProgram","static":true,"name":"getVariableSymbol","comment":"Find the variable symbol in otherProgram which corresponds to the specified varSym.","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"varSym","comment":"variable symbol","type_short":"Symbol"},{"type_long":"ghidra.program.model.listing.Function","name":"otherFunction","comment":"","type_short":"Function"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"","type_short":"Symbol"}},{"javadoc":"Find overlapping variable which meets the following conditions\n 1. First use offset matches\n 2. Ordinal matches (for parameters only)\n 3. Minimum or maximum address matches\n@param otherSymTable\n@param var\n@param otherStorage\n@param otherFunc\n@return ","static":true,"name":"getOverlappingVariable","comment":"Find overlapping variable which meets the following conditions\n 1. First use offset matches\n 2. Ordinal matches (for parameters only)\n 3. Minimum or maximum address matches","params":[{"type_long":"ghidra.program.model.symbol.SymbolTable","name":"otherSymTable","comment":"","type_short":"SymbolTable"},{"type_long":"ghidra.program.model.listing.Variable","name":"var","comment":"","type_short":"Variable"},{"type_long":"ghidra.program.model.listing.VariableStorage","name":"otherStorage","comment":"","type_short":"VariableStorage"},{"type_long":"ghidra.program.model.symbol.Symbol","name":"otherFunctionSymbol","comment":"","type_short":"Symbol"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Variable","comment":"","type_short":"Variable"}}],"name":"SimpleDiffUtility","comment":"","fields":[]}
