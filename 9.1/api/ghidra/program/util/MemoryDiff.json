{"implements":[],"javadoc":"<CODE>MemoryDiff<\/CODE> determines where the memory differs between two programs as well as the\n types of differences.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs an object for determining memory differences between two programs.\n@param p1 the first program\n@param p2 the second program\n@throws ProgramConflictException if the program memory can't be compared because the programs\n are based on different languages.","static":false,"name":"<init>","comment":"Constructs an object for determining memory differences between two programs.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"p1","comment":"the first program","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"p2","comment":"the second program","type_short":"Program"}],"throws":[{"type_long":"ghidra.program.util.ProgramConflictException","comment":"if the program memory can't be compared because the programs\n are based on different languages.","type_short":"ProgramConflictException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the first program that is part of this MemoryDiff.\n@return the first program","static":false,"name":"getProgram1","comment":"Gets the first program that is part of this MemoryDiff.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"the first program","type_short":"Program"}},{"javadoc":"Gets the second program that is part of this MemoryDiff.\n@return the second program","static":false,"name":"getProgram2","comment":"Gets the second program that is part of this MemoryDiff.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"the second program","type_short":"Program"}},{"javadoc":"Determines the address ranges that the two programs memories must be broken into for \n properly comparing the programs. Each of these address ranges will exist in the first\n program, the second program or both programs.\n@throws ProgramConflictException if the two programs can't be compared.","static":false,"name":"computeRanges","comment":"Determines the address ranges that the two programs memories must be broken into for \n properly comparing the programs. Each of these address ranges will exist in the first\n program, the second program or both programs.","params":[],"throws":[{"type_long":"ghidra.program.util.ProgramConflictException","comment":"if the two programs can't be compared.","type_short":"ProgramConflictException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the number of address ranges that the two programs memories are broken into for \n comparing the programs.\n@return the number of address ranges.","static":false,"name":"getNumRanges","comment":"Gets the number of address ranges that the two programs memories are broken into for \n comparing the programs.","params":[],"throws":[],"return":{"type_long":"int","comment":"the number of address ranges.","type_short":"int"}},{"javadoc":"Gets the address range as indicated by index. The index is zero based. Address ranges are\n in order from the minimum address to the maximum address range.\n@param index the index of the address range to get.\n@return the address range.","static":false,"name":"getRange","comment":"Gets the address range as indicated by index. The index is zero based. Address ranges are\n in order from the minimum address to the maximum address range.","params":[{"type_long":"int","name":"index","comment":"the index of the address range to get.","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRange","comment":"the address range.","type_short":"AddressRange"}},{"javadoc":"Gets the memory difference flags for the address range as indicated by index.\n@param index the index of the address range to get the difference flags for.\n@return the difference flags for the indicated address range.","static":false,"name":"getDifferenceInfo","comment":"Gets the memory difference flags for the address range as indicated by index.","params":[{"type_long":"int","name":"index","comment":"the index of the address range to get the difference flags for.","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.util.MemoryBlockDiff","comment":"the difference flags for the indicated address range.","type_short":"MemoryBlockDiff"}},{"javadoc":"Determines the memory differences and sets the flags for each associated address range.","static":false,"name":"computeDifferences","comment":"Determines the memory differences and sets the flags for each associated address range.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets a string representation of the types of memory differences that exist for the memory \n block that contains the indicated address.\n@param p1Address address that is obtained via the first program.\n@return a string indicating the types of memory differences.","static":false,"name":"getDifferences","comment":"Gets a string representation of the types of memory differences that exist for the memory \n block that contains the indicated address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"p1Address","comment":"address that is obtained via the first program.","type_short":"Address"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"a string indicating the types of memory differences.","type_short":"String"}},{"javadoc":"Gets the index of the address range containing the indicated address, \n if it is contained in the list;\n\t       otherwise, <tt>(-(<i>insertion point<\/i>) - 1)<\/tt>.\n@param address the address whose range we are interested in finding.\n@return the index of the address range.","static":false,"name":"getAddressRangeIndex","comment":"Gets the index of the address range containing the indicated address, \n if it is contained in the list;\n\t       otherwise, (-(insertion point) - 1).","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address whose range we are interested in finding.","type_short":"Address"}],"throws":[],"return":{"type_long":"int","comment":"the index of the address range.","type_short":"int"}},{"javadoc":"Returns an array of address ranges where there are memory differences.\n@return address ranges with differences.","static":false,"name":"getDifferentAddressRanges","comment":"Returns an array of address ranges where there are memory differences.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRange[]","comment":"address ranges with differences.","type_short":"ghidra.program.model.address.AddressRange[]"}},{"javadoc":"Determines whether the two memory blocks are the same.\n@param block1 the first program's memory block\n@param block2 the second program's memory block\n@return true if the memory blocks are the same.","static":false,"name":"sameMemoryBlock","comment":"Determines whether the two memory blocks are the same.","params":[{"type_long":"ghidra.program.model.mem.MemoryBlock","name":"block1","comment":"the first program's memory block","type_short":"MemoryBlock"},{"type_long":"ghidra.program.model.mem.MemoryBlock","name":"block2","comment":"the second program's memory block","type_short":"MemoryBlock"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the memory blocks are the same.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"merge","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"},{"type_long":"int","name":"mergeFields","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"shouldMerge","comment":"","params":[{"type_long":"int","name":"mergeFields","comment":"","type_short":"int"},{"type_long":"int","name":"memDiffType","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"MemoryDiff","comment":"MemoryDiff determines where the memory differs between two programs as well as the\n types of differences.","fields":[{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program1","comment":"","type_short":"Program","constant_value":null},{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program2","comment":"","type_short":"Program","constant_value":null},{"type_long":"ghidra.program.model.mem.Memory","javadoc":"","static":false,"name":"memory1","comment":"","type_short":"Memory","constant_value":null},{"type_long":"ghidra.program.model.mem.Memory","javadoc":"","static":false,"name":"memory2","comment":"","type_short":"Memory","constant_value":null},{"type_long":"ghidra.program.model.address.AddressRange[]","javadoc":"","static":false,"name":"ranges","comment":"","type_short":"ghidra.program.model.address.AddressRange[]","constant_value":null},{"type_long":"ghidra.program.util.MemoryBlockDiff[]","javadoc":"","static":false,"name":"diffs","comment":"","type_short":"ghidra.program.util.MemoryBlockDiff[]","constant_value":null}]}
