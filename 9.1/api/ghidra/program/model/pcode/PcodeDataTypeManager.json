{"implements":[],"javadoc":"Class for making Ghidra DataTypes suitable for use with pcode","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"prog","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getProgram","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"","static":false,"name":"findUndefined","comment":"","params":[{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"Find a data type with the given name.\n@param nm name of data type\n@return may return null if no data type exists with the given name","static":false,"name":"findBaseType","comment":"Find a data type with the given name.","params":[{"type_long":"java.lang.String","name":"nm","comment":"name of data type","type_short":"String"},{"type_long":"java.lang.String","name":"idstr","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"may return null if no data type exists with the given name","type_short":"DataType"}},{"javadoc":"Get the data type that corresponds to the given XML element.\n@param el element\n@return data type\n@throws PcodeXMLException if the data type could be resolved from the \n element","static":false,"name":"readXMLDataType","comment":"Get the data type that corresponds to the given XML element.","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"}],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"if the data type could be resolved from the \n element","type_short":"PcodeXMLException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"data type","type_short":"DataType"}},{"javadoc":"@param type to be converted\n@return either a typeref tag giving the name, or a full type tag","static":false,"name":"buildTypeRef","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"to be converted","type_short":"DataType"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.StringBuilder","comment":"either a typeref tag giving the name, or a full type tag","type_short":"StringBuilder"}},{"javadoc":"","static":false,"name":"getCharTypeRef","comment":"","params":[{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.StringBuilder","comment":"","type_short":"StringBuilder"}},{"javadoc":"","static":false,"name":"buildTypeInternal","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"","type_short":"DataType"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Build an XML document string representing the type information for a data type\n@param type data type to build XML for\n@param size size of the data type\n@return XML string document","static":false,"name":"buildType","comment":"Build an XML document string representing the type information for a data type","params":[{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"data type to build XML for","type_short":"DataType"},{"type_long":"int","name":"size","comment":"size of the data type","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.StringBuilder","comment":"XML string document","type_short":"StringBuilder"}},{"javadoc":"Build an XML document string representing the Structure or Typedef to Structure that has\n  its size reported as zero.\n@param type data type to build XML for\n@return XML string document","static":false,"name":"buildStructTypeZeroSizeOveride","comment":"Build an XML document string representing the Structure or Typedef to Structure that has\n  its size reported as zero.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"data type to build XML for","type_short":"DataType"}],"throws":[],"return":{"type_long":"java.lang.StringBuilder","comment":"XML string document","type_short":"StringBuilder"}},{"javadoc":"","static":false,"name":"generateCoreTypes","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"sortCoreTypes","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Search for a core-type by id\n@param id to search for\n@return the index of the matching TypeMap or -1","static":false,"name":"findTypeById","comment":"Search for a core-type by id","params":[{"type_long":"long","name":"id","comment":"to search for","type_short":"long"}],"throws":[],"return":{"type_long":"int","comment":"the index of the matching TypeMap or -1","type_short":"int"}},{"javadoc":"Build the coretypes xml element\n@return coretypes xml element","static":false,"name":"buildCoreTypes","comment":"Build the coretypes xml element","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"coretypes xml element","type_short":"String"}}],"name":"PcodeDataTypeManager","comment":"Class for making Ghidra DataTypes suitable for use with pcode","fields":[{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program","comment":"","type_short":"Program","constant_value":null},{"type_long":"ghidra.program.model.data.DataTypeManager","javadoc":"","static":false,"name":"progDataTypes","comment":"","type_short":"DataTypeManager","constant_value":null},{"type_long":"ghidra.program.model.data.DataTypeManager","javadoc":"","static":false,"name":"builtInDataTypes","comment":"","type_short":"DataTypeManager","constant_value":null},{"type_long":"ghidra.program.model.data.DataOrganization","javadoc":"","static":false,"name":"dataOrganization","comment":"","type_short":"DataOrganization","constant_value":null},{"type_long":"ghidra.program.model.lang.DecompilerLanguage","javadoc":"","static":false,"name":"displayLanguage","comment":"","type_short":"DecompilerLanguage","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"voidInputIsVarargs","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.program.model.pcode.PcodeDataTypeManager.TypeMap[]","javadoc":"","static":false,"name":"coreBuiltin","comment":"","type_short":"ghidra.program.model.pcode.PcodeDataTypeManager.TypeMap[]","constant_value":null},{"type_long":"ghidra.program.model.data.VoidDataType","javadoc":"","static":false,"name":"voidDt","comment":"","type_short":"VoidDataType","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"pointerWordSize","comment":"","type_short":"int","constant_value":null}]}
