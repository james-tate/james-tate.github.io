{"implements":["java.lang.Comparable"],"javadoc":"Basically a unique address for a PcodeOp\n It is unique, maintains original assembly instruction address, and is comparable\n within a basic block","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a sequence number for an instruction at an address and sequence of pcode op within\n that instructions set of pcode.\n@param instrAddr address of instruction\n@param sequenceNum sequence of pcode op with an instructions pcode ops","static":false,"name":"<init>","comment":"Construct a sequence number for an instruction at an address and sequence of pcode op within\n that instructions set of pcode.","params":[{"type_long":"ghidra.program.model.address.Address","name":"instrAddr","comment":"address of instruction","type_short":"Address"},{"type_long":"int","name":"sequenceNum","comment":"sequence of pcode op with an instructions pcode ops","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return get address of instruction this sequence belongs to","static":false,"name":"getTarget","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"get address of instruction this sequence belongs to","type_short":"Address"}},{"javadoc":"Get unique Sub-address for distinguishing multiple PcodeOps at one\n instruction address.\n Does not change over lifetime of PcodeOp\n@return unique id for a pcode op within a given instruction","static":false,"name":"getTime","comment":"Get unique Sub-address for distinguishing multiple PcodeOps at one\n instruction address.\n Does not change over lifetime of PcodeOp","params":[],"throws":[],"return":{"type_long":"int","comment":"unique id for a pcode op within a given instruction","type_short":"int"}},{"javadoc":"Set unique Sub-address for distinguishing multiple PcodeOps at one\n instruction address.\n Does not change over lifetime of PcodeOp\n@param t unique id","static":false,"name":"setTime","comment":"Set unique Sub-address for distinguishing multiple PcodeOps at one\n instruction address.\n Does not change over lifetime of PcodeOp","params":[{"type_long":"int","name":"t","comment":"unique id","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get relative position information of PcodeOps within\n a basic block, may change as basic block is edited.\n@return relative position of pcode in a basic block","static":false,"name":"getOrder","comment":"Get relative position information of PcodeOps within\n a basic block, may change as basic block is edited.","params":[],"throws":[],"return":{"type_long":"int","comment":"relative position of pcode in a basic block","type_short":"int"}},{"javadoc":"Set relative position information of PcodeOps within\n a basic block, may change as basic block is edited.\n@param o relative position of pcodeOp within a basic block","static":false,"name":"setOrder","comment":"Set relative position information of PcodeOps within\n a basic block, may change as basic block is edited.","params":[{"type_long":"int","name":"o","comment":"relative position of pcodeOp within a basic block","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"o","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"compareTo","comment":"","params":[{"type_long":"ghidra.program.model.pcode.SequenceNumber","name":"sq","comment":"","type_short":"SequenceNumber"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@return Build XML tag for SequenceNumber","static":false,"name":"buildXML","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.StringBuilder","comment":"Build XML tag for SequenceNumber","type_short":"StringBuilder"}},{"javadoc":"Create a new Sequence number from XML SAX tree element.\n@param el SAX tree element\n@param factory pcode factory used to create new pcode\n@return new sequence number","static":true,"name":"readXML","comment":"Create a new Sequence number from XML SAX tree element.","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"ghidra.program.model.address.AddressFactory","name":"factory","comment":"pcode factory used to create new pcode","type_short":"AddressFactory"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.SequenceNumber","comment":"new sequence number","type_short":"SequenceNumber"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"SequenceNumber","comment":"Basically a unique address for a PcodeOp\n It is unique, maintains original assembly instruction address, and is comparable\n within a basic block","fields":[{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"pc","comment":"","type_short":"Address","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"uniq","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"order","comment":"","type_short":"int","constant_value":null}]}
