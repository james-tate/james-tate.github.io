{"implements":[],"javadoc":"This type of Varnode is a node in an Abstract Syntax Tree\n It keeps track of its defining PcodeOp (in-edge) and PcodeOps which use it (out-edges)","static":false,"extends":"ghidra.program.model.pcode.Varnode","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"a","comment":"","type_short":"Address"},{"type_long":"int","name":"sz","comment":"","type_short":"int"},{"type_long":"int","name":"id","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isFree","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isInput","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isPersistant","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isAddrTied","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isUnaffected","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getDef","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeOp","comment":"","type_short":"PcodeOp"}},{"javadoc":"","static":false,"name":"getDescendants","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.pcode.PcodeOp>","comment":"","type_short":"Iterator"}},{"javadoc":"","static":false,"name":"getPCAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getHigh","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.HighVariable","comment":"","type_short":"HighVariable"}},{"javadoc":"","static":false,"name":"getUniqueId","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getMergeGroup","comment":"","params":[],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"","static":false,"name":"setAddrtied","comment":"","params":[{"type_long":"boolean","name":"val","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setInput","comment":"","params":[{"type_long":"boolean","name":"val","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setPersistant","comment":"","params":[{"type_long":"boolean","name":"val","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setUnaffected","comment":"","params":[{"type_long":"boolean","name":"val","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setFree","comment":"","params":[{"type_long":"boolean","name":"val","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setDef","comment":"","params":[{"type_long":"ghidra.program.model.pcode.PcodeOp","name":"op","comment":"","type_short":"PcodeOp"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setMergeGroup","comment":"","params":[{"type_long":"short","name":"val","comment":"","type_short":"short"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setHigh","comment":"","params":[{"type_long":"ghidra.program.model.pcode.HighVariable","name":"hi","comment":"","type_short":"HighVariable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addDescendant","comment":"","params":[{"type_long":"ghidra.program.model.pcode.PcodeOp","name":"op","comment":"","type_short":"PcodeOp"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeDescendant","comment":"","params":[{"type_long":"ghidra.program.model.pcode.PcodeOp","name":"op","comment":"","type_short":"PcodeOp"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Replace all of parameter vn's references with this\n@param vn Varnode whose references will get replaced","static":false,"name":"descendReplace","comment":"Replace all of parameter vn's references with this","params":[{"type_long":"ghidra.program.model.pcode.VarnodeAST","name":"vn","comment":"Varnode whose references will get replaced","type_short":"VarnodeAST"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"o","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"VarnodeAST","comment":"This type of Varnode is a node in an Abstract Syntax Tree\n It keeps track of its defining PcodeOp (in-edge) and PcodeOps which use it (out-edges)","fields":[{"type_long":"boolean","javadoc":"","static":false,"name":"bInput","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"bAddrTied","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"bPersistant","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"bUnaffected","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"bFree","comment":"","type_short":"boolean","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"uniqId","comment":"","type_short":"int","constant_value":null},{"type_long":"short","javadoc":"","static":false,"name":"mergegroup","comment":"","type_short":"short","constant_value":null},{"type_long":"ghidra.program.model.pcode.HighVariable","javadoc":"","static":false,"name":"high","comment":"","type_short":"HighVariable","constant_value":null},{"type_long":"ghidra.program.model.pcode.PcodeOp","javadoc":"","static":false,"name":"def","comment":"","type_short":"PcodeOp","constant_value":null},{"type_long":"java.util.LinkedList<ghidra.program.model.pcode.PcodeOp>","javadoc":"","static":false,"name":"descend","comment":"","type_short":"LinkedList","constant_value":null}]}
