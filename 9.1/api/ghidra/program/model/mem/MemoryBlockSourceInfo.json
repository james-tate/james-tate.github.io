{"implements":[],"javadoc":"Describes the source of bytes for a memory block.","static":false,"methods":[{"javadoc":"Returns the length of this block byte source.\n@return the length of this block byte source.","static":false,"name":"getLength","comment":"Returns the length of this block byte source.","params":[],"throws":[],"return":{"type_long":"long","comment":"the length of this block byte source.","type_short":"long"}},{"javadoc":"Returns the start address where this byte source is mapped.\n@return the start address where this byte source is mapped.","static":false,"name":"getMinAddress","comment":"Returns the start address where this byte source is mapped.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the start address where this byte source is mapped.","type_short":"Address"}},{"javadoc":"Returns the end address where this byte source is mapped.\n@return the end address where this byte source is mapped.","static":false,"name":"getMaxAddress","comment":"Returns the end address where this byte source is mapped.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the end address where this byte source is mapped.","type_short":"Address"}},{"javadoc":"Returns a description of this SourceInfo object.\n@return a description of this SourceInfo object.","static":false,"name":"getDescription","comment":"Returns a description of this SourceInfo object.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"a description of this SourceInfo object.","type_short":"String"}},{"javadoc":"Returns an {@link Optional} {@link FileBytes} object if a FileBytes object is the byte\n source for this SourceInfo.  Otherwise, the Optional will be empty.\n@return the {@link FileBytes} object if it is the byte source for this section","static":false,"name":"getFileBytes","comment":"Returns an Optional FileBytes object if a FileBytes object is the byte\n source for this SourceInfo.  Otherwise, the Optional will be empty.","params":[],"throws":[],"return":{"type_long":"java.util.Optional<ghidra.program.database.mem.FileBytes>","comment":"the FileBytes object if it is the byte source for this section","type_short":"Optional"}},{"javadoc":"Returns the offset into the {@link FileBytes} object where this section starts getting its bytes or\n -1 if this SourceInfo does not have an associated {@link FileBytes}\n@return the offset into the {@link FileBytes} object where this section starts getting its bytes.","static":false,"name":"getFileBytesOffset","comment":"Returns the offset into the FileBytes object where this section starts getting its bytes or\n -1 if this SourceInfo does not have an associated FileBytes","params":[],"throws":[],"return":{"type_long":"long","comment":"the offset into the FileBytes object where this section starts getting its bytes.","type_short":"long"}},{"javadoc":"Returns the offset into the {@link FileBytes} object for the given address or\n -1 if this MemoryBlockSourceInfo does not have an associated {@link FileBytes} or the address doesn't\n belong to this MemoryBlockSourceInfo.\n@param address the address for which to get an offset into the {@link FileBytes} object.\n@return the offset into the {@link FileBytes} object for the given address.","static":false,"name":"getFileBytesOffset","comment":"Returns the offset into the FileBytes object for the given address or\n -1 if this MemoryBlockSourceInfo does not have an associated FileBytes or the address doesn't\n belong to this MemoryBlockSourceInfo.","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address for which to get an offset into the FileBytes object.","type_short":"Address"}],"throws":[],"return":{"type_long":"long","comment":"the offset into the FileBytes object for the given address.","type_short":"long"}},{"javadoc":"Returns an {@link Optional} {@link AddressRange} for the mapped addresses if this is mapped\n memory block (bit mapped or byte mapped). Otherwise, the Optional is empty.\n@return an {@link Optional} {@link AddressRange} for the mapped addresses if this is mapped\n memory block","static":false,"name":"getMappedRange","comment":"Returns an Optional AddressRange for the mapped addresses if this is mapped\n memory block (bit mapped or byte mapped). Otherwise, the Optional is empty.","params":[],"throws":[],"return":{"type_long":"java.util.Optional<ghidra.program.model.address.AddressRange>","comment":"an Optional AddressRange for the mapped addresses if this is mapped\n memory block","type_short":"Optional"}},{"javadoc":"Returns the containing Memory Block\n@return the containing Memory Block","static":false,"name":"getMemoryBlock","comment":"Returns the containing Memory Block","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.mem.MemoryBlock","comment":"the containing Memory Block","type_short":"MemoryBlock"}},{"javadoc":"Returns true if this SourceInfo object applies to the given address;\n@param address the address to test if this is its SourceInfo\n@return true if this SourceInfo object applies to the given address;","static":false,"name":"contains","comment":"Returns true if this SourceInfo object applies to the given address;","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address to test if this is its SourceInfo","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if this SourceInfo object applies to the given address;","type_short":"boolean"}}],"name":"MemoryBlockSourceInfo","comment":"Describes the source of bytes for a memory block.","fields":[]}
