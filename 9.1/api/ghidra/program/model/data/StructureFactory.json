{"implements":[],"javadoc":"Creates and initializes {@link Structure} objects.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a {@link StructureDataType} instance based upon the information\n provided.  The instance will not be placed in memory.\n <p>\n This method is just a pass-through method for \n {@link #createStructureDataType(Program,Address,int,String,boolean)}\n equivalent to calling:\n <pre>\n      Structure newStructure = StructureFactory.createStructureDataType(\n          program, address, dataLength, DEFAULT_STRUCTURE_NAME, true );\n <\/pre>\n@param program The program to which the structure will belong.\n@param address The address of the structure.\n@param dataLength The number of components to add to the structure.\n@return A new structure not yet added to memory.\n@throws IllegalArgumentException for the following conditions:\n         <ul>\n              <li>if <tt>dataLength<\/tt> is not greater than zero\n              <li>if the number of components to add exceeds the available\n                  address space\n              <li>if there are any instructions in the provided \n                  address space\n              <li>if there are no data components to add to the structure\n         <\/ul>","static":true,"name":"createStructureDataType","comment":"Creates a StructureDataType instance based upon the information\n provided.  The instance will not be placed in memory.\n \n This method is just a pass-through method for \n #createStructureDataType(Program,Address,int,String,boolean)\n equivalent to calling:\n \n      Structure newStructure = StructureFactory.createStructureDataType(\n          program, address, dataLength, DEFAULT_STRUCTURE_NAME, true );\n ","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The program to which the structure will belong.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"The address of the structure.","type_short":"Address"},{"type_long":"int","name":"dataLength","comment":"The number of components to add to the structure.","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.Structure","comment":"A new structure not yet added to memory.","type_short":"Structure"}},{"javadoc":"Creates a {@link StructureDataType} instance based upon the information\n provided.  The instance will not be placed in memory.\n@param program The program to which the structure will belong.\n@param address The address of the structure.\n@param dataLength The number of components to add to the structure.\n@param structureName The name of the structure to create.\n@param makeUniqueName True indicates that the provided name should be\n         altered as necessary in order to make it unique in the program.\n@return A new structure not yet added to memory.\n@throws IllegalArgumentException for the following conditions:\n         <ul>\n              <li>if <tt>structureName<\/tt> is <tt>null<\/tt>\n              <li>if <tt>dataLength<\/tt> is not greater than zero\n              <li>if the number of components to add exceeds the available\n                  address space\n              <li>if there are any instructions in the provided \n                  address space\n              <li>if there are no data components to add to the structure\n         <\/ul>","static":true,"name":"createStructureDataType","comment":"Creates a StructureDataType instance based upon the information\n provided.  The instance will not be placed in memory.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The program to which the structure will belong.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"The address of the structure.","type_short":"Address"},{"type_long":"int","name":"dataLength","comment":"The number of components to add to the structure.","type_short":"int"},{"type_long":"java.lang.String","name":"structureName","comment":"The name of the structure to create.","type_short":"String"},{"type_long":"boolean","name":"makeUniqueName","comment":"True indicates that the provided name should be\n         altered as necessary in order to make it unique in the program.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.Structure","comment":"A new structure not yet added to memory.","type_short":"Structure"}},{"javadoc":"Creates a {@link StructureDataType} instance, which is inside of \n another structure, based upon the information provided.  The instance \n will not be placed in memory.\n <p>\n This method is just a pass-through method for \n {@link #createStructureDataTypeInStrucuture(Program,Address,int[],int[],String,boolean)}\n equivalent to calling:\n <pre>\n      Structure newStructure = StructureFactory.createStructureDataTypeInStrucuture(\n          program, address, fromPath, toPath, DEFAULT_STRUCTURE_NAME, true );\n <\/pre>\n@param program The program to which the structure will belong.\n@param address The address of the structure.\n@param fromPath The path to the first element in the parent structure\n         that will be in the new structure.\n@param toPath The path to the last element in the parent structure\n         that will be in the new structure.\n@return A new structure not yet added to memory.\n@throws IllegalArgumentException for the following conditions:\n         <ul>\n              <li>if the component at <tt>fromPath<\/tt> or the component\n                  at <tt>toPath<\/tt> are null\n              <li>if there is not data to add to the structure\n              <li>if the parent data type is not a structure\n         <\/ul>","static":true,"name":"createStructureDataTypeInStrucuture","comment":"Creates a StructureDataType instance, which is inside of \n another structure, based upon the information provided.  The instance \n will not be placed in memory.\n \n This method is just a pass-through method for \n #createStructureDataTypeInStrucuture(Program,Address,int[],int[],String,boolean)\n equivalent to calling:\n \n      Structure newStructure = StructureFactory.createStructureDataTypeInStrucuture(\n          program, address, fromPath, toPath, DEFAULT_STRUCTURE_NAME, true );\n ","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The program to which the structure will belong.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"The address of the structure.","type_short":"Address"},{"type_long":"int[]","name":"fromPath","comment":"The path to the first element in the parent structure\n         that will be in the new structure.","type_short":"int[]"},{"type_long":"int[]","name":"toPath","comment":"The path to the last element in the parent structure\n         that will be in the new structure.","type_short":"int[]"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.Structure","comment":"A new structure not yet added to memory.","type_short":"Structure"}},{"javadoc":"Creates a {@link StructureDataType} instance, which is inside of \n another structure, based upon the information provided.  The instance \n will not be placed in memory.\n@param program The program to which the structure will belong.\n@param address The address of the structure.\n@param fromPath The path to the first element in the parent structure\n         that will be in the new structure.\n@param toPath The path to the last element in the parent structure\n         that will be in the new structure.\n@param structureName the name of the structure to create\n@param makeUniqueName True indicates that the provided name should be\n         altered as necessary in order to make it unique in the program.\n@return A new structure not yet added to memory.\n@throws IllegalArgumentException for the following conditions:\n         <ul>\n              <li>if <tt>structureName<\/tt> is <tt>null<\/tt>\n              <li>if the component at <tt>fromPath<\/tt> or the component\n                  at <tt>toPath<\/tt> are null\n              <li>if there is not data to add to the structure\n              <li>if the parent data type is not a structure\n         <\/ul>","static":true,"name":"createStructureDataTypeInStrucuture","comment":"Creates a StructureDataType instance, which is inside of \n another structure, based upon the information provided.  The instance \n will not be placed in memory.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The program to which the structure will belong.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"The address of the structure.","type_short":"Address"},{"type_long":"int[]","name":"fromPath","comment":"The path to the first element in the parent structure\n         that will be in the new structure.","type_short":"int[]"},{"type_long":"int[]","name":"toPath","comment":"The path to the last element in the parent structure\n         that will be in the new structure.","type_short":"int[]"},{"type_long":"java.lang.String","name":"structureName","comment":"the name of the structure to create","type_short":"String"},{"type_long":"boolean","name":"makeUniqueName","comment":"True indicates that the provided name should be\n         altered as necessary in order to make it unique in the program.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.Structure","comment":"A new structure not yet added to memory.","type_short":"Structure"}},{"javadoc":"","static":true,"name":"initializeStructureFromContext","comment":"","params":[{"type_long":"ghidra.program.model.data.Structure","name":"structure","comment":"","type_short":"Structure"},{"type_long":"ghidra.program.model.lang.DataTypeProviderContext","name":"context","comment":"","type_short":"DataTypeProviderContext"},{"type_long":"int","name":"dataLength","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"StructureFactory","comment":"Creates and initializes Structure objects.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"DEFAULT_STRUCTURE_NAME","comment":"","type_short":"String","constant_value":"\"struct\""}]}
