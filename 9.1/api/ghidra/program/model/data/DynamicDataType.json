{"implements":["ghidra.program.model.data.Dynamic"],"javadoc":"Interface for dataTypes that don't get applied, but instead generate dataTypes\n on the fly based on the data.","static":false,"extends":"ghidra.program.model.data.BuiltIn","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.data.CategoryPath","name":"path","comment":"","type_short":"CategoryPath"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.data.CategoryPath","name":"path","comment":"","type_short":"CategoryPath"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"canSpecifyLength","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.data.DataType#isDynamicallySized()","static":false,"name":"isDynamicallySized","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Gets the number of component data types in this data type.\n@param buf a membuffer to be used by dataTypes that change depending on\n their data context.  A null value is acceptable to indicate that a memory\n context is not available.  DataTypes that need a context will return -1\n if the context is null.\n@return the number of components that make up this data prototype\n   - if this is an Array, return the number of elements in the array.\n   - if this datatype is a subcomponent of another datatype and it\n      won't fit in it's defined space, return -1.","static":false,"name":"getNumComponents","comment":"Gets the number of component data types in this data type.","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"a membuffer to be used by dataTypes that change depending on\n their data context.  A null value is acceptable to indicate that a memory\n context is not available.  DataTypes that need a context will return -1\n if the context is null.","type_short":"MemBuffer"}],"throws":[],"return":{"type_long":"int","comment":"the number of components that make up this data prototype\n   - if this is an Array, return the number of elements in the array.\n   - if this datatype is a subcomponent of another datatype and it\n      won't fit in it's defined space, return -1.","type_short":"int"}},{"javadoc":"","static":false,"name":"getComps","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent[]","comment":"","type_short":"ghidra.program.model.data.DataTypeComponent[]"}},{"javadoc":"Returns the immediate n'th component of this data type.\n@param index the components index (zero based).\n@param buf a membuffer to be used by dataTypes that change depending on\n their data context.  A null value is acceptable to indicate that a memory\n context is not available.  DataTypes that need a context will return -1\n if the context is null.\n@return the component data type or null if there is no component at the \n indicated index.","static":false,"name":"getComponent","comment":"Returns the immediate n'th component of this data type.","params":[{"type_long":"int","name":"index","comment":"the components index (zero based).","type_short":"int"},{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"a membuffer to be used by dataTypes that change depending on\n their data context.  A null value is acceptable to indicate that a memory\n context is not available.  DataTypes that need a context will return -1\n if the context is null.","type_short":"MemBuffer"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"the component data type or null if there is no component at the \n indicated index.","type_short":"DataTypeComponent"}},{"javadoc":"Returns an array of DataTypes that make up this data type.\n Could return null if there are no subcomponents.\n If this is an Array, then only one element will be returned\n which is the Data Prototype for the elements in the array.\n Will return null if this is a subcomponent that doesn't fit in it's\n alloted space.\n@param buf a membuffer to be used by dataTypes that change depending on\n their data context.  A null value is acceptable to indicate that a memory\n context is not available.  DataTypes that need a context will return -1\n if the context is null.","static":false,"name":"getComponents","comment":"Returns an array of DataTypes that make up this data type.\n Could return null if there are no subcomponents.\n If this is an Array, then only one element will be returned\n which is the Data Prototype for the elements in the array.\n Will return null if this is a subcomponent that doesn't fit in it's\n alloted space.","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"a membuffer to be used by dataTypes that change depending on\n their data context.  A null value is acceptable to indicate that a memory\n context is not available.  DataTypes that need a context will return -1\n if the context is null.","type_short":"MemBuffer"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent[]","comment":"","type_short":"ghidra.program.model.data.DataTypeComponent[]"}},{"javadoc":"Returns the component containing the byte at the given offset\n@param offset the offset into the dataType\n@param buf the memoryBuffer containing the bytes.\n@return the component containing the byte at the given offset","static":false,"name":"getComponentAt","comment":"Returns the component containing the byte at the given offset","params":[{"type_long":"int","name":"offset","comment":"the offset into the dataType","type_short":"int"},{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"the memoryBuffer containing the bytes.","type_short":"MemBuffer"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"the component containing the byte at the given offset","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"getAllComponents","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent[]","comment":"","type_short":"ghidra.program.model.data.DataTypeComponent[]"}},{"javadoc":"","static":false,"name":"getLength","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"int","name":"maxLength","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getLength","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"invalidateCache","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getReplacementBaseType","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}}],"name":"DynamicDataType","comment":"Interface for dataTypes that don't get applied, but instead generate dataTypes\n on the fly based on the data.","fields":[{"type_long":"ghidra.util.datastruct.SoftCacheMap<ghidra.program.model.address.Address,ghidra.program.model.data.DataTypeComponent[]>","javadoc":"","static":false,"name":"map","comment":"","type_short":"SoftCacheMap","constant_value":null}]}
