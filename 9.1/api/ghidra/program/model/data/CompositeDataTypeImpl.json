{"implements":["ghidra.program.model.data.Composite"],"javadoc":"Common implementation methods for structure and union","static":false,"extends":"ghidra.program.model.data.GenericDataType","methods":[{"javadoc":"Creates an empty CompositeDataType with the specified name.\n@param path the category path indicating where this data type is located.\n@param name the data type's name\n@param dataTypeManager the data type manager associated with this data type. This can be null. \n Also, the data type manager may not contain this actual data type.","static":false,"name":"<init>","comment":"Creates an empty CompositeDataType with the specified name.","params":[{"type_long":"ghidra.program.model.data.CategoryPath","name":"path","comment":"the category path indicating where this data type is located.","type_short":"CategoryPath"},{"type_long":"java.lang.String","name":"name","comment":"the data type's name","type_short":"String"},{"type_long":"ghidra.util.UniversalID","name":"universalID","comment":"","type_short":"UniversalID"},{"type_long":"ghidra.app.plugin.core.datamgr.archive.SourceArchive","name":"sourceArchive","comment":"","type_short":"SourceArchive"},{"type_long":"long","name":"lastChangeTime","comment":"","type_short":"long"},{"type_long":"long","name":"lastChangeTimeInSourceArchive","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.data.CategoryPath","name":"path","comment":"","type_short":"CategoryPath"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the preferred length for a new component.  For Unions and internally aligned\n structures the preferred component length for a fixed-length dataType will be the \n length of that dataType.  Otherwise the length returned will be no larger than the\n specified length.\n@param dataType new component datatype\n@param length constrained length or -1 to force use of dataType size.  Dynamic types\n such as string must have a positive length specified.\n@return preferred component length","static":false,"name":"getPreferredComponentLength","comment":"Get the preferred length for a new component.  For Unions and internally aligned\n structures the preferred component length for a fixed-length dataType will be the \n length of that dataType.  Otherwise the length returned will be no larger than the\n specified length.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"new component datatype","type_short":"DataType"},{"type_long":"int","name":"length","comment":"constrained length or -1 to force use of dataType size.  Dynamic types\n such as string must have a positive length specified.","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"preferred component length","type_short":"int"}},{"javadoc":"","static":false,"name":"isDynamicallySized","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isPartOf","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataTypeOfInterest","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"This method throws an exception if the indicated data type is an ancestor\n of this data type. In other words, the specified data type has a component\n or sub-component containing this data type.\n@param dataType the data type\n@throws IllegalArgumentException if the data type is an ancestor of this \n data type.","static":false,"name":"checkAncestry","comment":"This method throws an exception if the indicated data type is an ancestor\n of this data type. In other words, the specified data type has a component\n or sub-component containing this data type.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"the data type","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This method throws an exception if the indicated data type is not\n a valid data type for a component of this composite data type.\n@param dataType the data type to be checked.\n@throws IllegalArgumentException if the data type is invalid.","static":false,"name":"validateDataType","comment":"This method throws an exception if the indicated data type is not\n a valid data type for a component of this composite data type.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"the data type to be checked.","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Handle replacement of datatype which may impact bitfield datatype.\n@param bitfieldComponent bitfield component\n@param oldDt affected datatype which has been removed or replaced\n@param newDt replacement datatype\n@param true if bitfield component was modified\n@throws InvalidDataTypeException if new datatype is not","static":false,"name":"updateBitFieldDataType","comment":"Handle replacement of datatype which may impact bitfield datatype.","params":[{"type_long":"ghidra.program.model.data.DataTypeComponentImpl","name":"bitfieldComponent","comment":"bitfield component","type_short":"DataTypeComponentImpl"},{"type_long":"ghidra.program.model.data.DataType","name":"oldDt","comment":"affected datatype which has been removed or replaced","type_short":"DataType"},{"type_long":"ghidra.program.model.data.DataType","name":"newDt","comment":"replacement datatype","type_short":"DataType"}],"throws":[{"type_long":"ghidra.program.model.data.InvalidDataTypeException","comment":"if new datatype is not","type_short":"InvalidDataTypeException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setDescription","comment":"","params":[{"type_long":"java.lang.String","name":"desc","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDescription","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getValue","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.Object","comment":"","type_short":"Object"}},{"javadoc":"","static":false,"name":"setValue","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"},{"type_long":"int","name":"length","comment":"","type_short":"int"},{"type_long":"java.lang.Object","name":"value","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"add","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"add","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"add","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"java.lang.String","name":"fieldName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"insert","comment":"","params":[{"type_long":"int","name":"ordinal","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"insert","comment":"","params":[{"type_long":"int","name":"ordinal","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeComponent","comment":"","type_short":"DataTypeComponent"}},{"javadoc":"","static":false,"name":"getMnemonic","comment":"","params":[{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setName","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPackingValue","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"setPackingValue","comment":"","params":[{"type_long":"int","name":"packingValue","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getMinimumAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"setMinimumAlignment","comment":"","params":[{"type_long":"int","name":"externalAlignment","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getMachineAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isInternallyAligned","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isDefaultAligned","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isMachineAligned","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setInternallyAligned","comment":"","params":[{"type_long":"boolean","name":"aligned","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setToDefaultAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setToMachineAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notify any parent data types that this composite data type's alignment has changed.","static":false,"name":"notifyAlignmentChanged","comment":"Notify any parent data types that this composite data type's alignment has changed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adjusts the internal alignment of components within this composite based on the current\n settings of the internal alignment, packing, alignment type and minimum alignment value.\n This method should be called whenever any of the above settings are changed or whenever\n a components data type is changed or a component is added or removed.","static":false,"name":"adjustInternalAlignment","comment":"Adjusts the internal alignment of components within this composite based on the current\n settings of the internal alignment, packing, alignment type and minimum alignment value.\n This method should be called whenever any of the above settings are changed or whenever\n a components data type is changed or a component is added or removed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"setAlignment","comment":"","params":[{"type_long":"ghidra.program.model.data.Composite","name":"composite","comment":"","type_short":"Composite"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Dump all components for use in {@link #toString()} representation.\n@param buffer string buffer\n@param pad padding to be used with each component output line","static":false,"name":"dumpComponents","comment":"Dump all components for use in #toString() representation.","params":[{"type_long":"java.lang.StringBuilder","name":"buffer","comment":"string buffer","type_short":"StringBuilder"},{"type_long":"java.lang.String","name":"pad","comment":"padding to be used with each component output line","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getTypeName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getAlignmentSettingsString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getPackingString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"CompositeDataTypeImpl","comment":"Common implementation methods for structure and union","fields":[{"type_long":"long","javadoc":"","static":true,"name":"serialVersionUID","comment":"","type_short":"long","constant_value":"1"},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"description","comment":"","type_short":"String","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"aligned","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.program.model.data.Composite.AlignmentType","javadoc":"","static":false,"name":"alignmentType","comment":"","type_short":"AlignmentType","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"packingValue","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"externalAlignment","comment":"","type_short":"int","constant_value":null}]}
