{"implements":["ghidra.program.model.data.DataType","ghidra.util.classfinder.ExtensionPoint"],"javadoc":"NOTE:  ALL DATATYPE CLASSES MUST END IN \"DataType\".  If not,\n the ClassSearcher will not find them.\n \n Interface to mark classes as a built-in data type.","static":false,"methods":[{"javadoc":"Generate a suitable C-type declaration for this data-type as a #define or typedef.\n Since the length of a Dynamic datatype is unknown, such datatypes\n should only be referenced in C via a pointer.  FactoryDataTypes\n should never be referenced and will always return null.\n@param dataOrganization or null for default\n@return definition C-statement (e.g., #define or typedef) or null\n if type name is a standard C-primitive name or if type is FactoryDataType\n or Dynamic.","static":false,"name":"getCTypeDeclaration","comment":"Generate a suitable C-type declaration for this data-type as a #define or typedef.\n Since the length of a Dynamic datatype is unknown, such datatypes\n should only be referenced in C via a pointer.  FactoryDataTypes\n should never be referenced and will always return null.","params":[{"type_long":"ghidra.program.model.data.DataOrganization","name":"dataOrganization","comment":"or null for default","type_short":"DataOrganization"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"definition C-statement (e.g., #define or typedef) or null\n if type name is a standard C-primitive name or if type is FactoryDataType\n or Dynamic.","type_short":"String"}}],"name":"BuiltInDataType","comment":"NOTE:  ALL DATATYPE CLASSES MUST END IN \"DataType\".  If not,\n the ClassSearcher will not find them.\n \n Interface to mark classes as a built-in data type.","fields":[]}
