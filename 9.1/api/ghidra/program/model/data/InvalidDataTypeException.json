{"implements":[],"javadoc":"Exception thrown if a data type is not valid for the operation being performed.","static":false,"extends":"ghidra.util.exception.UsrException","methods":[{"javadoc":"Constructor.","static":false,"name":"<init>","comment":"Constructor.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor\n@param dt the data type that is invalid for the operation being performed.","static":false,"name":"<init>","comment":"Constructor","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"the data type that is invalid for the operation being performed.","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor\n@param message detailed message explaining exception","static":false,"name":"<init>","comment":"Constructor","params":[{"type_long":"java.lang.String","name":"message","comment":"detailed message explaining exception","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new InvalidDataTypeException with the given message and cause\n@param msg the exception message\n@param cause the exception cause","static":false,"name":"<init>","comment":"Construct a new InvalidDataTypeException with the given message and cause","params":[{"type_long":"java.lang.String","name":"msg","comment":"the exception message","type_short":"String"},{"type_long":"java.lang.Throwable","name":"cause","comment":"the exception cause","type_short":"Throwable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"InvalidDataTypeException","comment":"Exception thrown if a data type is not valid for the operation being performed.","fields":[]}
