{"implements":[],"javadoc":"Class to define a set of dataTypes that a single action can cycle through.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createCycleGroups","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.data.CycleGroup>","comment":"","type_short":"List"}},{"javadoc":"Constructs a new cycle group with the given dataTypes.\n@param name cycle group name which will be the suggested action name\n for those plugins which implement a cycle group action.\n@param dataTypes data types in the group\n@param keyStroke default key stroke for the action to cycle through the\n data types","static":false,"name":"<init>","comment":"Constructs a new cycle group with the given dataTypes.","params":[{"type_long":"java.lang.String","name":"name","comment":"cycle group name which will be the suggested action name\n for those plugins which implement a cycle group action.","type_short":"String"},{"type_long":"ghidra.program.model.data.DataType[]","name":"dataTypes","comment":"data types in the group","type_short":"ghidra.program.model.data.DataType[]"},{"type_long":"javax.swing.KeyStroke","name":"keyStroke","comment":"default key stroke for the action to cycle through the\n data types","type_short":"KeyStroke"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor cycle group with one data type.\n@param name cycle group name which will be the suggested action name\n for those plugins which implement a cycle group action.\n@param dt single data type for the group\n@param keyStroke default key stroke for the action to cycle through the\n data types","static":false,"name":"<init>","comment":"Constructor cycle group with one data type.","params":[{"type_long":"java.lang.String","name":"name","comment":"cycle group name which will be the suggested action name\n for those plugins which implement a cycle group action.","type_short":"String"},{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"single data type for the group","type_short":"DataType"},{"type_long":"javax.swing.KeyStroke","name":"keyStroke","comment":"default key stroke for the action to cycle through the\n data types","type_short":"KeyStroke"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct empty group no name, data types or keystroke.","static":false,"name":"<init>","comment":"Construct empty group no name, data types or keystroke.","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the data types in this group.","static":false,"name":"getDataTypes","comment":"Get the data types in this group.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType[]","comment":"","type_short":"ghidra.program.model.data.DataType[]"}},{"javadoc":"@return cycle group name.","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"cycle group name.","type_short":"String"}},{"javadoc":"Returns number of types in group","static":false,"name":"size","comment":"Returns number of types in group","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getDefaultKeyStroke","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.KeyStroke","comment":"","type_short":"KeyStroke"}},{"javadoc":"Add a data type to this group.\n@param dt the datatype to be added.","static":false,"name":"addDataType","comment":"Add a data type to this group.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"the datatype to be added.","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add the data type as the first in the list.\n@param dt the dataType to be added.","static":false,"name":"addFirst","comment":"Add the data type as the first in the list.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"the dataType to be added.","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove the data type from this group.\n@param dt the dataType to remove.","static":false,"name":"removeDataType","comment":"Remove the data type from this group.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"the dataType to remove.","type_short":"DataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove first data type in the list.","static":false,"name":"removeFirst","comment":"Remove first data type in the list.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove the last data type in the list.","static":false,"name":"removeLast","comment":"Remove the last data type in the list.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return true if the given data type is in this cycle group.","static":false,"name":"contains","comment":"Return true if the given data type is in this cycle group.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Return true if the given data type is the same type of any\n data types in the list.","static":false,"name":"exists","comment":"Return true if the given data type is the same type of any\n data types in the list.","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get next data-type which should be used\n@param currentDataType current data type to which this cycle group is to be applied\n@param stackPointers if true and currentDataType is a pointer, the pointer's \n base type will be cycled\n@return next data-type","static":false,"name":"getNextDataType","comment":"Get next data-type which should be used","params":[{"type_long":"ghidra.program.model.data.DataType","name":"currentDataType","comment":"current data type to which this cycle group is to be applied","type_short":"DataType"},{"type_long":"boolean","name":"stackPointers","comment":"if true and currentDataType is a pointer, the pointer's \n base type will be cycled","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"next data-type","type_short":"DataType"}}],"name":"CycleGroup","comment":"Class to define a set of dataTypes that a single action can cycle through.","fields":[{"type_long":"ghidra.program.model.data.CycleGroup","javadoc":"","static":true,"name":"BYTE_CYCLE_GROUP","comment":"","type_short":"CycleGroup","constant_value":null},{"type_long":"ghidra.program.model.data.CycleGroup","javadoc":"","static":true,"name":"FLOAT_CYCLE_GROUP","comment":"","type_short":"CycleGroup","constant_value":null},{"type_long":"ghidra.program.model.data.CycleGroup","javadoc":"","static":true,"name":"STRING_CYCLE_GROUP","comment":"","type_short":"CycleGroup","constant_value":null},{"type_long":"java.util.List<ghidra.program.model.data.CycleGroup>","javadoc":"","static":true,"name":"ALL_CYCLE_GROUPS","comment":"","type_short":"List","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"name","comment":"","type_short":"String","constant_value":null},{"type_long":"java.util.ArrayList<ghidra.program.model.data.DataType>","javadoc":"","static":false,"name":"dataList","comment":"","type_short":"ArrayList","constant_value":null},{"type_long":"javax.swing.KeyStroke","javadoc":"","static":false,"name":"defaultKeyStroke","comment":"","type_short":"KeyStroke","constant_value":null}]}
