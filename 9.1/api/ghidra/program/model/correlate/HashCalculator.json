{"implements":[],"javadoc":"Interface for hashing across sequences of Instructions in different ways","static":false,"methods":[{"javadoc":"Calculate a (partial) hash across a single instruction\n@param startHash is initial hash value\n@param inst is the instruction to fold into the hash\n@return the final hash value\n@throws MemoryAccessException","static":false,"name":"calcHash","comment":"Calculate a (partial) hash across a single instruction","params":[{"type_long":"int","name":"startHash","comment":"is initial hash value","type_short":"int"},{"type_long":"ghidra.program.model.listing.Instruction","name":"inst","comment":"is the instruction to fold into the hash","type_short":"Instruction"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"int","comment":"the final hash value","type_short":"int"}}],"name":"HashCalculator","comment":"Interface for hashing across sequences of Instructions in different ways","fields":[]}
