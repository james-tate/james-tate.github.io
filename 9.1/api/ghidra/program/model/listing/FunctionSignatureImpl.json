{"implements":[],"javadoc":"Implementation of a Function Signature.  All the information about\n a function that is portable from one program to another.\n@deprecated FunctionDefinitionDataType should be used for defining a function signature","static":false,"extends":"ghidra.program.model.data.FunctionDefinitionDataType","methods":[{"javadoc":"Creates new FunctionSignatureImpl with the given name, default return type\n and no parameters.\n@param name the name of the function","static":false,"name":"<init>","comment":"Creates new FunctionSignatureImpl with the given name, default return type\n and no parameters.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the function","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates new FunctionSignatureImpl based upon an existing function signature.\n@param name the name of the function","static":false,"name":"<init>","comment":"Creates new FunctionSignatureImpl based upon an existing function signature.","params":[{"type_long":"ghidra.program.model.listing.FunctionSignature","name":"signature","comment":"","type_short":"FunctionSignature"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a Function Definition based on a Function.\n The effective signature will be used where forced indirect and auto-params\n are reflected in the signature.\n@param function the function to use to create a Function Signature.","static":false,"name":"<init>","comment":"Create a Function Definition based on a Function.\n The effective signature will be used where forced indirect and auto-params\n are reflected in the signature.","params":[{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"the function to use to create a Function Signature.","type_short":"Function"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a Function Definition based on a Function\n@param function the function to use to create a Function Signature.\n@param formalSignature if true only original raw types will be retained and \n auto-params discarded (e.g., this, __return_storage_ptr__, etc.).  If false,\n the effective signature will be used where forced indirect and auto-params\n are reflected in the signature.  This option has no affect if the specified \n function has custom storage enabled.","static":false,"name":"<init>","comment":"Create a Function Definition based on a Function","params":[{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"the function to use to create a Function Signature.","type_short":"Function"},{"type_long":"boolean","name":"formalSignature","comment":"if true only original raw types will be retained and \n auto-params discarded (e.g., this, __return_storage_ptr__, etc.).  If false,\n the effective signature will be used where forced indirect and auto-params\n are reflected in the signature.  This option has no affect if the specified \n function has custom storage enabled.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"FunctionSignatureImpl","comment":"Implementation of a Function Signature.  All the information about\n a function that is portable from one program to another.","fields":[]}
