{"implements":["ghidra.program.model.data.DataTypeManagerDomainObject"],"javadoc":"This interface represents the main entry point into an object which\n stores all information relating to a single program.  This program\n model divides a program into four major parts: the memory, the symbol table,\n the equate table, and the listing.  Each of these parts has an extensive\n interface and can be retrieved via this program interface.  Although the\n components are divided into separate objects, they are not independent.  Any\n changes to one component may and probably will affect the other components.\n Also, the state of one component will restrict the actions of another\n component.\n For example, the createCodeUnit() method of listing will fail if memory is\n undefined at the address where the codeUnit is to be created.","static":false,"methods":[{"javadoc":"Get the listing object.\n@return the Listing interface to the listing object.","static":false,"name":"getListing","comment":"Get the listing object.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Listing","comment":"the Listing interface to the listing object.","type_short":"Listing"}},{"javadoc":"","static":false,"name":"getAddressMap","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.map.AddressMap","comment":"","type_short":"AddressMap"}},{"javadoc":"Returns the program's datatype manager.","static":false,"name":"getDataTypeManager","comment":"Returns the program's datatype manager.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeManager","comment":"","type_short":"DataTypeManager"}},{"javadoc":"Returns the programs function manager.","static":false,"name":"getFunctionManager","comment":"Returns the programs function manager.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.FunctionManager","comment":"","type_short":"FunctionManager"}},{"javadoc":"Returns the user-specific data manager for\n this program.","static":false,"name":"getProgramUserData","comment":"Returns the user-specific data manager for\n this program.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.ProgramUserData","comment":"","type_short":"ProgramUserData"}},{"javadoc":"Get the symbol table object.\n@return the symbol table object.","static":false,"name":"getSymbolTable","comment":"Get the symbol table object.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.SymbolTable","comment":"the symbol table object.","type_short":"SymbolTable"}},{"javadoc":"Returns the external manager.","static":false,"name":"getExternalManager","comment":"Returns the external manager.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.ExternalManager","comment":"","type_short":"ExternalManager"}},{"javadoc":"Get the equate table object.\n@return the equate table.","static":false,"name":"getEquateTable","comment":"Get the equate table object.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.EquateTable","comment":"the equate table.","type_short":"EquateTable"}},{"javadoc":"Get the memory object.\n@return the memory object.","static":false,"name":"getMemory","comment":"Get the memory object.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.mem.Memory","comment":"the memory object.","type_short":"Memory"}},{"javadoc":"Get the reference manager.","static":false,"name":"getReferenceManager","comment":"Get the reference manager.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.ReferenceManager","comment":"","type_short":"ReferenceManager"}},{"javadoc":"Get the bookmark manager.","static":false,"name":"getBookmarkManager","comment":"Get the bookmark manager.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.BookmarkManager","comment":"","type_short":"BookmarkManager"}},{"javadoc":"Gets the default pointer size in bytes as it may be stored within the program listing.\n@return default pointer size.\n@see DataOrganization#getPointerSize()","static":false,"name":"getDefaultPointerSize","comment":"Gets the default pointer size in bytes as it may be stored within the program listing.","params":[],"throws":[],"return":{"type_long":"int","comment":"default pointer size.","type_short":"int"}},{"javadoc":"Gets the name of the compiler believed to have been used to create this program.\n If the compiler hasn't been determined then \"unknown\" is returned.\n@return name of the compiler or \"unknown\".","static":false,"name":"getCompiler","comment":"Gets the name of the compiler believed to have been used to create this program.\n If the compiler hasn't been determined then \"unknown\" is returned.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"name of the compiler or \"unknown\".","type_short":"String"}},{"javadoc":"Sets the name of the compiler which created this program.\n@param compiler the name","static":false,"name":"setCompiler","comment":"Sets the name of the compiler which created this program.","params":[{"type_long":"java.lang.String","name":"compiler","comment":"the name","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the path to the program's executable file.\n For example, <code>C:\\Temp\\test.exe<\/code>.\n This will allow plugins to execute the program.\n@return String  path to program's exe file","static":false,"name":"getExecutablePath","comment":"Gets the path to the program's executable file.\n For example, C:\\Temp\\test.exe.\n This will allow plugins to execute the program.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"String  path to program's exe file","type_short":"String"}},{"javadoc":"Sets the path to the program's executable file.\n For example, <code>C:\\Temp\\test.exe<\/code>.\n@param path the path to the program's exe","static":false,"name":"setExecutablePath","comment":"Sets the path to the program's executable file.\n For example, C:\\Temp\\test.exe.","params":[{"type_long":"java.lang.String","name":"path","comment":"the path to the program's exe","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a value corresponding to the original file format.","static":false,"name":"getExecutableFormat","comment":"Returns a value corresponding to the original file format.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Sets the value corresponding to the original file format.\n@param format the format string to set.","static":false,"name":"setExecutableFormat","comment":"Sets the value corresponding to the original file format.","params":[{"type_long":"java.lang.String","name":"format","comment":"the format string to set.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a value corresponding to the original binary file MD5 hash.\n May be null if program source did not correspond to a binary file.","static":false,"name":"getExecutableMD5","comment":"Returns a value corresponding to the original binary file MD5 hash.\n May be null if program source did not correspond to a binary file.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Sets the value corresponding to the original binary file MD5 hash.\n@param md5 MD5 binary file hash","static":false,"name":"setExecutableMD5","comment":"Sets the value corresponding to the original binary file MD5 hash.","params":[{"type_long":"java.lang.String","name":"md5","comment":"MD5 binary file hash","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the value corresponding to the original binary file SHA256 hash.\n@param sha256 SHA256 binary file hash","static":false,"name":"setExecutableSHA256","comment":"Sets the value corresponding to the original binary file SHA256 hash.","params":[{"type_long":"java.lang.String","name":"sha256","comment":"SHA256 binary file hash","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a value corresponding to the original binary file SHA256 hash.\n May be null if program source did not correspond to a binary file.","static":false,"name":"getExecutableSHA256","comment":"Returns a value corresponding to the original binary file SHA256 hash.\n May be null if program source did not correspond to a binary file.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the creation date of this program.\n If the program was created before this property\n existed, then Jan 1, 1970 is returned.\n@param program the prorgam\n@return the creation date of this program","static":false,"name":"getCreationDate","comment":"Returns the creation date of this program.\n If the program was created before this property\n existed, then Jan 1, 1970 is returned.","params":[],"throws":[],"return":{"type_long":"java.util.Date","comment":"the creation date of this program","type_short":"Date"}},{"javadoc":"Gets the relocation table.","static":false,"name":"getRelocationTable","comment":"Gets the relocation table.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.reloc.RelocationTable","comment":"","type_short":"RelocationTable"}},{"javadoc":"Returns the language used by this program.\n@return the language used by this program.","static":false,"name":"getLanguage","comment":"Returns the language used by this program.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Language","comment":"the language used by this program.","type_short":"Language"}},{"javadoc":"Returns the CompilerSpec currently used by this program.\n@return the compilerSpec currently used by this program.","static":false,"name":"getCompilerSpec","comment":"Returns the CompilerSpec currently used by this program.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.CompilerSpec","comment":"the compilerSpec currently used by this program.","type_short":"CompilerSpec"}},{"javadoc":"Return the name of the language used by this program.\n@return the name of the language","static":false,"name":"getLanguageID","comment":"Return the name of the language used by this program.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.LanguageID","comment":"the name of the language","type_short":"LanguageID"}},{"javadoc":"Get the user propertyMangager stored with this program. The user property\n manager is used to store arbitrary address indexed information associated\n with the program.\n@return the user property manager.","static":false,"name":"getUsrPropertyManager","comment":"Get the user propertyMangager stored with this program. The user property\n manager is used to store arbitrary address indexed information associated\n with the program.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.util.PropertyMapManager","comment":"the user property manager.","type_short":"PropertyMapManager"}},{"javadoc":"Returns the program context.","static":false,"name":"getProgramContext","comment":"Returns the program context.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.ProgramContext","comment":"","type_short":"ProgramContext"}},{"javadoc":"get the program's minimum address.\n@return the program's minimum address or null if no memory blocks\n have been defined in the program.","static":false,"name":"getMinAddress","comment":"get the program's minimum address.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the program's minimum address or null if no memory blocks\n have been defined in the program.","type_short":"Address"}},{"javadoc":"Get the programs maximum address.\n@return the program's maximum address or null if no memory blocks\n have been defined in the program.","static":false,"name":"getMaxAddress","comment":"Get the programs maximum address.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the program's maximum address or null if no memory blocks\n have been defined in the program.","type_short":"Address"}},{"javadoc":"Get the program changes since the last save as a set of addresses.\n@return set of changed addresses within program.","static":false,"name":"getChanges","comment":"Get the program changes since the last save as a set of addresses.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.ProgramChangeSet","comment":"set of changed addresses within program.","type_short":"ProgramChangeSet"}},{"javadoc":"Returns the AddressFactory for this program.","static":false,"name":"getAddressFactory","comment":"Returns the AddressFactory for this program.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressFactory","comment":"","type_short":"AddressFactory"}},{"javadoc":"Return an array of Addresses that could represent the given\n string.\n@param addrStr the string to parse.\n@return zero length array if addrStr is properly formatted but\n no matching addresses were found or if the address is improperly formatted.","static":false,"name":"parseAddress","comment":"Return an array of Addresses that could represent the given\n string.","params":[{"type_long":"java.lang.String","name":"addrStr","comment":"the string to parse.","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address[]","comment":"zero length array if addrStr is properly formatted but\n no matching addresses were found or if the address is improperly formatted.","type_short":"ghidra.program.model.address.Address[]"}},{"javadoc":"Return an array of Addresses that could represent the given\n string.\n@param addrStr the string to parse.\n@param caseSensitive whether or not to process any addressSpace names as case sensitive.\n@return zero length array if addrStr is properly formatted but\n no matching addresses were found or if the address is improperly formatted.","static":false,"name":"parseAddress","comment":"Return an array of Addresses that could represent the given\n string.","params":[{"type_long":"java.lang.String","name":"addrStr","comment":"the string to parse.","type_short":"String"},{"type_long":"boolean","name":"caseSensitive","comment":"whether or not to process any addressSpace names as case sensitive.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address[]","comment":"zero length array if addrStr is properly formatted but\n no matching addresses were found or if the address is improperly formatted.","type_short":"ghidra.program.model.address.Address[]"}},{"javadoc":"Invalidates any caching in a program.\n NOTE: Over-using this method can adversely affect system performance.","static":false,"name":"invalidate","comment":"Invalidates any caching in a program.\n NOTE: Over-using this method can adversely affect system performance.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the register with the given name;\n@param name the name of the register to retrieve\n@return register or null","static":false,"name":"getRegister","comment":"Returns the register with the given name;","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the register to retrieve","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"register or null","type_short":"Register"}},{"javadoc":"Returns the largest register located at the specified address\n@param addr\n@return largest register or null","static":false,"name":"getRegister","comment":"Returns the largest register located at the specified address","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"largest register or null","type_short":"Register"}},{"javadoc":"Returns all registers located at the specified address\n@param addr\n@return largest register","static":false,"name":"getRegisters","comment":"Returns all registers located at the specified address","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register[]","comment":"largest register","type_short":"ghidra.program.model.lang.Register[]"}},{"javadoc":"Returns a specific register based upon its address and size\n@param addr register address\n@param size the size of the register (in bytes);\n@return register or null","static":false,"name":"getRegister","comment":"Returns a specific register based upon its address and size","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"register address","type_short":"Address"},{"type_long":"int","name":"size","comment":"the size of the register (in bytes);","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"register or null","type_short":"Register"}},{"javadoc":"Returns the register which corresponds to the specified varnode\n@param addr register address\n@param size the size of the register (in bytes);\n@return register or null","static":false,"name":"getRegister","comment":"Returns the register which corresponds to the specified varnode","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"varnode","comment":"","type_short":"Varnode"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"register or null","type_short":"Register"}},{"javadoc":"Returns the current program image base address;","static":false,"name":"getImageBase","comment":"Returns the current program image base address;","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Sets the program's image base address.\n@param base the new image base address;\n@param commit if false, then the image base change is temporary and does not really change\n the program and will be lost once the program is closed.  If true, the change is permanent\n and marks the program as \"changed\" (needs saving).\n@throws AddressOverflowException if the new image would cause a memory block to end past the\n the address space.\n@throws LockException if the program is shared and the user does not have an exclusive checkout.\n This will never be thrown if commit is false.\n@throws IllegalStateException if the program state is not suitable for setting the image base.","static":false,"name":"setImageBase","comment":"Sets the program's image base address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"base","comment":"the new image base address;","type_short":"Address"},{"type_long":"boolean","name":"commit","comment":"if false, then the image base change is temporary and does not really change\n the program and will be lost once the program is closed.  If true, the change is permanent\n and marks the program as \"changed\" (needs saving).","type_short":"boolean"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"if the new image would cause a memory block to end past the\n the address space.","type_short":"AddressOverflowException"},{"type_long":"ghidra.framework.store.LockException","comment":"if the program is shared and the user does not have an exclusive checkout.\n This will never be thrown if commit is false.","type_short":"LockException"},{"type_long":"java.lang.IllegalStateException","comment":"if the program state is not suitable for setting the image base.","type_short":"IllegalStateException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Restores the last committed image base.","static":false,"name":"restoreImageBase","comment":"Restores the last committed image base.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the language for the program. If the new language is \"compatible\" with the old language,\n the addressMap is adjusted then the program is \"re-disassembled\".\n@param language the new language to use.\n@param forceRedisassembly if true a redisassembly will be forced.  This should always be false.\n@param monitor the task monitor\n@throws IllegalStateException thrown if any error occurs, including a cancelled monitor, which leaves this \n program object in an unusable state.  The current transaction should be aborted and the program instance\n discarded.\n@throws IncompatibleLanguageException thrown if the new language is too different from the\n existing language.\n@throws LockException if the program is shared and not checked out exclusively.","static":false,"name":"setLanguage","comment":"Sets the language for the program. If the new language is \"compatible\" with the old language,\n the addressMap is adjusted then the program is \"re-disassembled\".","params":[{"type_long":"ghidra.program.model.lang.Language","name":"language","comment":"the new language to use.","type_short":"Language"},{"type_long":"ghidra.program.model.lang.CompilerSpecID","name":"compilerSpecID","comment":"","type_short":"CompilerSpecID"},{"type_long":"boolean","name":"forceRedisassembly","comment":"if true a redisassembly will be forced.  This should always be false.","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.lang.IllegalStateException","comment":"thrown if any error occurs, including a cancelled monitor, which leaves this \n program object in an unusable state.  The current transaction should be aborted and the program instance\n discarded.","type_short":"IllegalStateException"},{"type_long":"ghidra.program.model.listing.IncompatibleLanguageException","comment":"thrown if the new language is too different from the\n existing language.","type_short":"IncompatibleLanguageException"},{"type_long":"ghidra.framework.store.LockException","comment":"if the program is shared and not checked out exclusively.","type_short":"LockException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the global namespace for this program","static":false,"name":"getGlobalNamespace","comment":"Returns the global namespace for this program","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Namespace","comment":"","type_short":"Namespace"}},{"javadoc":"Create a new AddressSetPropertyMap with the specified name.\n@param name name of the property map.\n@return the newly created property map.\n@throws DuplicateNameException if a property map already exists with the given name.","static":false,"name":"createAddressSetPropertyMap","comment":"Create a new AddressSetPropertyMap with the specified name.","params":[{"type_long":"java.lang.String","name":"name","comment":"name of the property map.","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"if a property map already exists with the given name.","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.util.AddressSetPropertyMap","comment":"the newly created property map.","type_short":"AddressSetPropertyMap"}},{"javadoc":"Create a new IntRangeMap with the specified name.\n@param name name of the property map.\n@return the newly created property map.\n@throws DuplicateNameException if a property map already exists with the given name.","static":false,"name":"createIntRangeMap","comment":"Create a new IntRangeMap with the specified name.","params":[{"type_long":"java.lang.String","name":"name","comment":"name of the property map.","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"if a property map already exists with the given name.","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.database.IntRangeMap","comment":"the newly created property map.","type_short":"IntRangeMap"}},{"javadoc":"Get the property map with the given name.\n@param name name of the property map\n@return null if no property map exist with the given name","static":false,"name":"getAddressSetPropertyMap","comment":"Get the property map with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"name of the property map","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.util.AddressSetPropertyMap","comment":"null if no property map exist with the given name","type_short":"AddressSetPropertyMap"}},{"javadoc":"Get the property map with the given name.\n@param name name of the property map\n@return null if no property map exist with the given name","static":false,"name":"getIntRangeMap","comment":"Get the property map with the given name.","params":[{"type_long":"java.lang.String","name":"name","comment":"name of the property map","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.database.IntRangeMap","comment":"null if no property map exist with the given name","type_short":"IntRangeMap"}},{"javadoc":"Remove the property map from the program.\n@param name name of the property map to remove","static":false,"name":"deleteAddressSetPropertyMap","comment":"Remove the property map from the program.","params":[{"type_long":"java.lang.String","name":"name","comment":"name of the property map to remove","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove the property map from the program.\n@param name name of the property map to remove","static":false,"name":"deleteIntRangeMap","comment":"Remove the property map from the program.","params":[{"type_long":"java.lang.String","name":"name","comment":"name of the property map to remove","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns an ID that is unique for this program.  This provides an easy way to store\n references to a program across client persistence.","static":false,"name":"getUniqueProgramID","comment":"Returns an ID that is unique for this program.  This provides an easy way to store\n references to a program across client persistence.","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}}],"name":"Program","comment":"This interface represents the main entry point into an object which\n stores all information relating to a single program.  This program\n model divides a program into four major parts: the memory, the symbol table,\n the equate table, and the listing.  Each of these parts has an extensive\n interface and can be retrieved via this program interface.  Although the\n components are divided into separate objects, they are not independent.  Any\n changes to one component may and probably will affect the other components.\n Also, the state of one component will restrict the actions of another\n component.\n For example, the createCodeUnit() method of listing will fail if memory is\n undefined at the address where the codeUnit is to be created.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ANALYSIS_PROPERTIES","comment":"","type_short":"String","constant_value":"\"Analyzers\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"DISASSEMBLER_PROPERTIES","comment":"","type_short":"String","constant_value":"\"Disassembler\""},{"type_long":"java.lang.String","javadoc":"Name of program information property list","static":true,"name":"PROGRAM_INFO","comment":"Name of program information property list","type_short":"String","constant_value":"\"Program Information\""},{"type_long":"java.lang.String","javadoc":"Name of program settings property list","static":true,"name":"PROGRAM_SETTINGS","comment":"Name of program settings property list","type_short":"String","constant_value":"\"Program Settings\""},{"type_long":"java.lang.String","javadoc":"Name of boolean analyzed property","static":true,"name":"ANALYZED","comment":"Name of boolean analyzed property","type_short":"String","constant_value":"\"Analyzed\""},{"type_long":"java.lang.String","javadoc":"Name of date created property","static":true,"name":"DATE_CREATED","comment":"Name of date created property","type_short":"String","constant_value":"\"Date Created\""},{"type_long":"java.lang.String","javadoc":"Name of ghidra version property","static":true,"name":"CREATED_WITH_GHIDRA_VERSION","comment":"Name of ghidra version property","type_short":"String","constant_value":"\"Created With Ghidra Version\""},{"type_long":"java.lang.String","javadoc":"Creation date to ask for analysis","static":true,"name":"ANALYSIS_START_DATE","comment":"Creation date to ask for analysis","type_short":"String","constant_value":"\"2007-Jan-01\""},{"type_long":"java.lang.String","javadoc":"Format string of analysis date","static":true,"name":"ANALYSIS_START_DATE_FORMAT","comment":"Format string of analysis date","type_short":"String","constant_value":"\"yyyy-MMM-dd\""},{"type_long":"java.util.Date","javadoc":"A date from January 1, 1970","static":true,"name":"JANUARY_1_1970","comment":"A date from January 1, 1970","type_short":"Date","constant_value":null},{"type_long":"int","javadoc":"The maximum number of operands for any assembly language","static":true,"name":"MAX_OPERANDS","comment":"The maximum number of operands for any assembly language","type_short":"int","constant_value":"16"}]}
