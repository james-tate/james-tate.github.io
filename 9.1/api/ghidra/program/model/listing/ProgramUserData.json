{"implements":["ghidra.framework.model.UserData"],"javadoc":"","static":false,"methods":[{"javadoc":"Start a transaction prior to changing any properties\n@return transaction ID needed for endTransaction","static":false,"name":"startTransaction","comment":"Start a transaction prior to changing any properties","params":[],"throws":[],"return":{"type_long":"int","comment":"transaction ID needed for endTransaction","type_short":"int"}},{"javadoc":"End a previously started transaction\n@param transactionID","static":false,"name":"endTransaction","comment":"End a previously started transaction","params":[{"type_long":"int","name":"transactionID","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get a address-based String property map\n@param owner name of property owner (e.g., plugin name)\n@param propertyName\n@param create creates the property map if it does not exist\n@return property map\n@throws PropertyTypeMismatchException if a conflicting map definition was found","static":false,"name":"getStringPropery","comment":"Get a address-based String property map","params":[{"type_long":"java.lang.String","name":"owner","comment":"name of property owner (e.g., plugin name)","type_short":"String"},{"type_long":"java.lang.String","name":"propertyName","comment":"","type_short":"String"},{"type_long":"boolean","name":"create","comment":"creates the property map if it does not exist","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.exception.PropertyTypeMismatchException","comment":"if a conflicting map definition was found","type_short":"PropertyTypeMismatchException"}],"return":{"type_long":"ghidra.program.model.util.StringPropertyMap","comment":"property map","type_short":"StringPropertyMap"}},{"javadoc":"Get a address-based Long property map\n@param owner name of property owner (e.g., plugin name)\n@param propertyName\n@param create creates the property map if it does not exist\n@return property map\n@throws PropertyTypeMismatchException if a conflicting map definition was found","static":false,"name":"getLongProperty","comment":"Get a address-based Long property map","params":[{"type_long":"java.lang.String","name":"owner","comment":"name of property owner (e.g., plugin name)","type_short":"String"},{"type_long":"java.lang.String","name":"propertyName","comment":"","type_short":"String"},{"type_long":"boolean","name":"create","comment":"creates the property map if it does not exist","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.exception.PropertyTypeMismatchException","comment":"if a conflicting map definition was found","type_short":"PropertyTypeMismatchException"}],"return":{"type_long":"ghidra.program.model.util.LongPropertyMap","comment":"property map","type_short":"LongPropertyMap"}},{"javadoc":"Get a address-based Integer property map\n@param owner name of property owner (e.g., plugin name)\n@param propertyName\n@param create creates the property map if it does not exist\n@return property map\n@throws PropertyTypeMismatchException if a conflicting map definition was found","static":false,"name":"getIntProperty","comment":"Get a address-based Integer property map","params":[{"type_long":"java.lang.String","name":"owner","comment":"name of property owner (e.g., plugin name)","type_short":"String"},{"type_long":"java.lang.String","name":"propertyName","comment":"","type_short":"String"},{"type_long":"boolean","name":"create","comment":"creates the property map if it does not exist","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.exception.PropertyTypeMismatchException","comment":"if a conflicting map definition was found","type_short":"PropertyTypeMismatchException"}],"return":{"type_long":"ghidra.program.model.util.IntPropertyMap","comment":"property map","type_short":"IntPropertyMap"}},{"javadoc":"Get a address-based Boolean property map\n@param owner name of property owner (e.g., plugin name)\n@param propertyName\n@param create creates the property map if it does not exist\n@return property map\n@throws PropertyTypeMismatchException if a conflicting map definition was found","static":false,"name":"getBooleanProperty","comment":"Get a address-based Boolean property map","params":[{"type_long":"java.lang.String","name":"owner","comment":"name of property owner (e.g., plugin name)","type_short":"String"},{"type_long":"java.lang.String","name":"propertyName","comment":"","type_short":"String"},{"type_long":"boolean","name":"create","comment":"creates the property map if it does not exist","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.exception.PropertyTypeMismatchException","comment":"if a conflicting map definition was found","type_short":"PropertyTypeMismatchException"}],"return":{"type_long":"ghidra.program.model.util.VoidPropertyMap","comment":"property map","type_short":"VoidPropertyMap"}},{"javadoc":"Get a address-based Saveable-object property map\n@param owner name of property owner (e.g., plugin name)\n@param propertyName\n@param create creates the property map if it does not exist\n@return property map\n@throws PropertyTypeMismatchException if a conflicting map definition was found","static":false,"name":"getObjectProperty","comment":"Get a address-based Saveable-object property map","params":[{"type_long":"java.lang.String","name":"owner","comment":"name of property owner (e.g., plugin name)","type_short":"String"},{"type_long":"java.lang.String","name":"propertyName","comment":"","type_short":"String"},{"type_long":"java.lang.Class<? extends ghidra.util.Saveable>","name":"saveableObjectClass","comment":"","type_short":"Class"},{"type_long":"boolean","name":"create","comment":"creates the property map if it does not exist","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.util.ObjectPropertyMap","comment":"property map","type_short":"ObjectPropertyMap"}},{"javadoc":"Get all property maps associated with a specific owner.\n@param owner name of property owner (e.g., plugin name)\n@return list of property maps","static":false,"name":"getProperties","comment":"Get all property maps associated with a specific owner.","params":[{"type_long":"java.lang.String","name":"owner","comment":"name of property owner (e.g., plugin name)","type_short":"String"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.util.PropertyMap>","comment":"list of property maps","type_short":"List"}},{"javadoc":"Returns list of all property owners for which property maps have been defined.","static":false,"name":"getPropertyOwners","comment":"Returns list of all property owners for which property maps have been defined.","params":[],"throws":[],"return":{"type_long":"java.util.List<java.lang.String>","comment":"","type_short":"List"}},{"javadoc":"Returns all properties lists contained by this domain object.\n@return all property lists contained by this domain object.","static":false,"name":"getOptionsNames","comment":"Returns all properties lists contained by this domain object.","params":[],"throws":[],"return":{"type_long":"java.util.List<java.lang.String>","comment":"all property lists contained by this domain object.","type_short":"List"}},{"javadoc":"Get the property list for the given name.\n@param propertyListName name of property list","static":false,"name":"getOptions","comment":"Get the property list for the given name.","params":[{"type_long":"java.lang.String","name":"propertyListName","comment":"name of property list","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.framework.options.Options","comment":"","type_short":"Options"}}],"name":"ProgramUserData","comment":"","fields":[]}
