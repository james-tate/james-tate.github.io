{"implements":["ghidra.program.model.listing.Variable"],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a variable which has no specific storage specified.  This can be used for\n function parameters which will assign storage based upon calling convention\n@param name variable name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param program target program\n@param sourceType source type\n@throws InvalidInputException if dataType restrictions are violated","static":false,"name":"<init>","comment":"Construct a variable which has no specific storage specified.  This can be used for\n function parameters which will assign storage based upon calling convention","params":[{"type_long":"java.lang.String","name":"name","comment":"variable name","type_short":"String"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)","type_short":"DataType"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"target program","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"source type","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"if dataType restrictions are violated","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a stack variable at the specified stack offset.\n@param name variable name or null for default naming\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param stackOffset signed stack offset\n@param program target program\n@param sourceType source type\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype\n@throws AddressOutOfBoundsException if invalid stack offset specified","static":false,"name":"<init>","comment":"Construct a stack variable at the specified stack offset.","params":[{"type_long":"java.lang.String","name":"name","comment":"variable name or null for default naming","type_short":"String"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)","type_short":"DataType"},{"type_long":"int","name":"stackOffset","comment":"signed stack offset","type_short":"int"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"target program","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"source type","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a variable with a single storage element at the specified address.  If address \n is contained within a register it may get realigned to the register based upon the resolved \n datatype length.  Variable storage will be aligned to the least-significant portion of the \n register.\n@param name variable name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param storageAddr storage address or null if no storage has been identified\n@param program target program\n@param sourceType source type\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype","static":false,"name":"<init>","comment":"Construct a variable with a single storage element at the specified address.  If address \n is contained within a register it may get realigned to the register based upon the resolved \n datatype length.  Variable storage will be aligned to the least-significant portion of the \n register.","params":[{"type_long":"java.lang.String","name":"name","comment":"variable name","type_short":"String"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)","type_short":"DataType"},{"type_long":"ghidra.program.model.address.Address","name":"storageAddr","comment":"storage address or null if no storage has been identified","type_short":"Address"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"target program","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"source type","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a variable with a single storage register.  Variable storage will be \n aligned to the least-significant portion of the register.\n@param name variable name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param register register storage\n@param program target program\n@param sourceType source type\n@throws InvalidInputException if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype","static":false,"name":"<init>","comment":"Construct a variable with a single storage register.  Variable storage will be \n aligned to the least-significant portion of the register.","params":[{"type_long":"java.lang.String","name":"name","comment":"variable name","type_short":"String"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)","type_short":"DataType"},{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"register storage","type_short":"Register"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"target program","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"source type","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"if dataType restrictions are violated, an invalid storage \n address is specified, or unable to resolve storage element for specified datatype","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a variable with one or more associated storage elements.  Storage elements\n may get slightly modified to adjust for the resolved datatype size.\n@param name variable name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param storage variable storage or null for unassigned storage\n@param force if true storage will be forced even if incorrect size\n@param program target program\n@param sourceType source type\n@throws InvalidInputException if dataType restrictions are violated or an error occurs while \n resolving storage for specified datatype","static":false,"name":"<init>","comment":"Construct a variable with one or more associated storage elements.  Storage elements\n may get slightly modified to adjust for the resolved datatype size.","params":[{"type_long":"java.lang.String","name":"name","comment":"variable name","type_short":"String"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)","type_short":"DataType"},{"type_long":"ghidra.program.model.listing.VariableStorage","name":"storage","comment":"variable storage or null for unassigned storage","type_short":"VariableStorage"},{"type_long":"boolean","name":"force","comment":"if true storage will be forced even if incorrect size","type_short":"boolean"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"target program","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"source type","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"if dataType restrictions are violated or an error occurs while \n resolving storage for specified datatype","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a variable.  Only one storage\/location may be specified (storage, storageAddr,\n stackOffset, register) - all others should be null.  If no storage\/location is specified\n or is UNASSIGNED, a Void data type may be specified and will be assumed if this type returns\n true for {@link #isVoidAllowed()}.\n@param name variable name\n@param dataType a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)\n@param storage variable storage or null for unassigned storage (may be null)\n@param storageAddr storage address or null if no storage has been identified (may be null)\n@param stackOffset signed stack offset (may be null)\n@param register register storage (may be null)\n@param force if true storage will be forced even if mismatch with datatype size\n@param program target program\n@param sourceType source type\n@throws InvalidInputException if dataType restrictions are violated or an error occurs while \n resolving storage for specified datatype\n@throws AddressOutOfBoundsException if invalid stack offset specified","static":false,"name":"<init>","comment":"Construct a variable.  Only one storage\/location may be specified (storage, storageAddr,\n stackOffset, register) - all others should be null.  If no storage\/location is specified\n or is UNASSIGNED, a Void data type may be specified and will be assumed if this type returns\n true for #isVoidAllowed().","params":[{"type_long":"java.lang.String","name":"name","comment":"variable name","type_short":"String"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"a fixed-length datatype.  (NOTE: Should be cloned to program datatype manager\n prior to determining storage elements since their length may change)","type_short":"DataType"},{"type_long":"ghidra.program.model.listing.VariableStorage","name":"storage","comment":"variable storage or null for unassigned storage (may be null)","type_short":"VariableStorage"},{"type_long":"ghidra.program.model.address.Address","name":"storageAddr","comment":"storage address or null if no storage has been identified (may be null)","type_short":"Address"},{"type_long":"java.lang.Integer","name":"stackOffset","comment":"signed stack offset (may be null)","type_short":"Integer"},{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"register storage (may be null)","type_short":"Register"},{"type_long":"boolean","name":"force","comment":"if true storage will be forced even if mismatch with datatype size","type_short":"boolean"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"target program","type_short":"Program"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"source type","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"if dataType restrictions are violated or an error occurs while \n resolving storage for specified datatype","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determine if current name is a default name.  This is more important for parameters\n so always returning false for locals is OK.\n@return true if name is reserved as a default name","static":false,"name":"hasDefaultName","comment":"Determine if current name is a default name.  This is more important for parameters\n so always returning false for locals is OK.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if name is reserved as a default name","type_short":"boolean"}},{"javadoc":"","static":true,"name":"checkUsage","comment":"","params":[{"type_long":"ghidra.program.model.listing.VariableStorage","name":"storage","comment":"","type_short":"VariableStorage"},{"type_long":"ghidra.program.model.address.Address","name":"storageAddr","comment":"","type_short":"Address"},{"type_long":"java.lang.Integer","name":"stackOffset","comment":"","type_short":"Integer"},{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"checkProgram","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"computeStorage","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"storageAddr","comment":"","type_short":"Address"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.listing.VariableStorage","comment":"","type_short":"VariableStorage"}},{"javadoc":"@return true if a zero-sized void type is permitted","static":false,"name":"isVoidAllowed","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if a zero-sized void type is permitted","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isValid","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getComment","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getDataType","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"","static":false,"name":"setDataType","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"","type_short":"DataType"},{"type_long":"ghidra.program.model.listing.VariableStorage","name":"storage","comment":"","type_short":"VariableStorage"},{"type_long":"boolean","name":"force","comment":"","type_short":"boolean"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setDataType","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"","type_short":"DataType"},{"type_long":"boolean","name":"align","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"force","comment":"","type_short":"boolean"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setDataType","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"","type_short":"DataType"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFunction","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"","static":false,"name":"getProgram","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"","type_short":"Program"}},{"javadoc":"","static":false,"name":"getLength","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getSource","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.SourceType","comment":"","type_short":"SourceType"}},{"javadoc":"","static":false,"name":"getSymbol","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Symbol","comment":"","type_short":"Symbol"}},{"javadoc":"","static":false,"name":"setComment","comment":"","params":[{"type_long":"java.lang.String","name":"comment","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setName","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hasAssignedStorage","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getVariableStorage","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.VariableStorage","comment":"","type_short":"VariableStorage"}},{"javadoc":"","static":false,"name":"getFirstStorageVarnode","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"getLastStorageVarnode","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"isStackVariable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hasStackStorage","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isRegisterVariable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getRegister","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"","type_short":"Register"}},{"javadoc":"","static":false,"name":"getRegisters","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.lang.Register>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getMinAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getStackOffset","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isMemoryVariable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isUniqueVariable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isCompoundVariable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"compareTo","comment":"","params":[{"type_long":"ghidra.program.model.listing.Variable","name":"otherVar","comment":"","type_short":"Variable"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isEquivalent","comment":"","params":[{"type_long":"ghidra.program.model.listing.Variable","name":"otherVar","comment":"","type_short":"Variable"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Perform resize variable storage to desired newSize.  This method has limited ability to grow\n storage if current storage does not have a stack component or if other space constraints\n are exceeded.\n@param curStorage\n@param newSize\n@param type\n@param function\n@return resize storage\n@throws InvalidInputException if unable to resize storage to specified size.","static":false,"name":"resizeStorage","comment":"Perform resize variable storage to desired newSize.  This method has limited ability to grow\n storage if current storage does not have a stack component or if other space constraints\n are exceeded.","params":[{"type_long":"ghidra.program.model.listing.VariableStorage","name":"curStorage","comment":"","type_short":"VariableStorage"},{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"","type_short":"DataType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"if unable to resize storage to specified size.","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.listing.VariableStorage","comment":"resize storage","type_short":"VariableStorage"}},{"javadoc":"","static":false,"name":"shrinkStorage","comment":"","params":[{"type_long":"ghidra.program.model.listing.VariableStorage","name":"curStorage","comment":"","type_short":"VariableStorage"},{"type_long":"int","name":"newSize","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"","type_short":"DataType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.listing.VariableStorage","comment":"","type_short":"VariableStorage"}},{"javadoc":"","static":false,"name":"expandStorage","comment":"","params":[{"type_long":"ghidra.program.model.listing.VariableStorage","name":"curStorage","comment":"","type_short":"VariableStorage"},{"type_long":"int","name":"newSize","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"","type_short":"DataType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.listing.VariableStorage","comment":"","type_short":"VariableStorage"}},{"javadoc":"","static":false,"name":"shrinkVarnode","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"varnode","comment":"","type_short":"Varnode"},{"type_long":"int","name":"sizeReduction","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.listing.VariableStorage","name":"curStorage","comment":"","type_short":"VariableStorage"},{"type_long":"int","name":"newSize","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"","type_short":"DataType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"expandVarnode","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"varnode","comment":"","type_short":"Varnode"},{"type_long":"int","name":"sizeIncrease","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.listing.VariableStorage","name":"curStorage","comment":"","type_short":"VariableStorage"},{"type_long":"int","name":"newSize","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"","type_short":"DataType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"resizeStackVarnode","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"varnode","comment":"","type_short":"Varnode"},{"type_long":"int","name":"newVarnodeSize","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.listing.VariableStorage","name":"curStorage","comment":"","type_short":"VariableStorage"},{"type_long":"int","name":"newSize","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataType","name":"type","comment":"","type_short":"DataType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}}],"name":"VariableImpl","comment":"","fields":[{"type_long":"java.lang.String","javadoc":"","static":false,"name":"name","comment":"","type_short":"String","constant_value":null},{"type_long":"ghidra.program.model.data.DataType","javadoc":"","static":false,"name":"dataType","comment":"","type_short":"DataType","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"comment","comment":"","type_short":"String","constant_value":null},{"type_long":"ghidra.program.model.symbol.SourceType","javadoc":"","static":false,"name":"sourceType","comment":"","type_short":"SourceType","constant_value":null},{"type_long":"ghidra.program.model.listing.VariableStorage","javadoc":"","static":false,"name":"variableStorage","comment":"","type_short":"VariableStorage","constant_value":null},{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program","comment":"","type_short":"Program","constant_value":null}]}
