{"implements":["ghidra.program.model.listing.CodeUnit","ghidra.docking.settings.Settings"],"javadoc":"Interface for interacting with data at an address in a program.","static":false,"methods":[{"javadoc":"Returns the value of the data item.  The value may be an address, a scalar,\n register or null if no value.","static":false,"name":"getValue","comment":"Returns the value of the data item.  The value may be an address, a scalar,\n register or null if no value.","params":[],"throws":[],"return":{"type_long":"java.lang.Object","comment":"","type_short":"Object"}},{"javadoc":"Get the class used to express the value of this data.\n NOTE: This determination is made based upon data type\n and settings only and does not examine memory bytes\n which are used to construct the data value object.\n@return value class or null if a consistent class is not\n utilized.","static":false,"name":"getValueClass","comment":"Get the class used to express the value of this data.\n NOTE: This determination is made based upon data type\n and settings only and does not examine memory bytes\n which are used to construct the data value object.","params":[],"throws":[],"return":{"type_long":"java.lang.Class<?>","comment":"value class or null if a consistent class is not\n utilized.","type_short":"Class"}},{"javadoc":"Returns true if this data corresponds to string data.  This is determined\n by the corresponding data type producing a String value.\n@return true if this data returns a String value and can be treated as string data.","static":false,"name":"hasStringValue","comment":"Returns true if this data corresponds to string data.  This is determined\n by the corresponding data type producing a String value.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this data returns a String value and can be treated as string data.","type_short":"boolean"}},{"javadoc":"@return true if data is constant.\n If true, isConstant will always be false","static":false,"name":"isConstant","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if data is constant.\n If true, isConstant will always be false","type_short":"boolean"}},{"javadoc":"@return true if data is volatile.\n If true, isVolatile will always be false","static":false,"name":"isVolatile","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if data is volatile.\n If true, isVolatile will always be false","type_short":"boolean"}},{"javadoc":"Returns true if the data type is defined.  Any address that has not been\n defined to be code or data is treated as undefined data.","static":false,"name":"isDefined","comment":"Returns true if the data type is defined.  Any address that has not been\n defined to be code or data is treated as undefined data.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get the Data type for the data.","static":false,"name":"getDataType","comment":"Get the Data type for the data.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"If the dataType is a typeDef, then the typeDef's base type is returned,\n otherwise, the datatType is returned.","static":false,"name":"getBaseDataType","comment":"If the dataType is a typeDef, then the typeDef's base type is returned,\n otherwise, the datatType is returned.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}},{"javadoc":"Get the references for the value.","static":false,"name":"getValueReferences","comment":"Get the references for the value.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference[]","comment":"","type_short":"ghidra.program.model.symbol.Reference[]"}},{"javadoc":"Add a memory reference to the value.\n@param refAddr address referenced.\n@param type the type of reference to be added.","static":false,"name":"addValueReference","comment":"Add a memory reference to the value.","params":[{"type_long":"ghidra.program.model.address.Address","name":"refAddr","comment":"address referenced.","type_short":"Address"},{"type_long":"ghidra.program.model.symbol.RefType","name":"type","comment":"the type of reference to be added.","type_short":"RefType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove a reference to the value.\n@param refAddr address of reference to be removed.","static":false,"name":"removeValueReference","comment":"Remove a reference to the value.","params":[{"type_long":"ghidra.program.model.address.Address","name":"refAddr","comment":"address of reference to be removed.","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the field name of this data item if it is \"inside\" another data item,\n otherwise return null.\n@return the name of this data as known from some parent data item or\n         null if this data item is not a component of another data item.","static":false,"name":"getFieldName","comment":"Get the field name of this data item if it is \"inside\" another data item,\n otherwise return null.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the name of this data as known from some parent data item or\n         null if this data item is not a component of another data item.","type_short":"String"}},{"javadoc":"Returns the full path name (dot notation) for this field.  This includes\n         the symbol name at this address.","static":false,"name":"getPathName","comment":"Returns the full path name (dot notation) for this field.  This includes\n         the symbol name at this address.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the component path name (dot notation) for this field","static":false,"name":"getComponentPathName","comment":"Returns the component path name (dot notation) for this field","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns true if this is a pointer, implies getValue() will\n    will return an Object that is an Address.","static":false,"name":"isPointer","comment":"Returns true if this is a pointer, implies getValue() will\n    will return an Object that is an Address.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns true if this data item is a Union.","static":false,"name":"isUnion","comment":"Returns true if this data item is a Union.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns true if this data item is a Structure.","static":false,"name":"isStructure","comment":"Returns true if this data item is a Structure.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns true if this data item is an Array of DataTypes","static":false,"name":"isArray","comment":"Returns true if this data item is an Array of DataTypes","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns true if this data item is a dynamic DataType.","static":false,"name":"isDynamic","comment":"Returns true if this data item is a dynamic DataType.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get the immediate parent data item of this data item or null if this data\n item is not contained in another data item.","static":false,"name":"getParent","comment":"Get the immediate parent data item of this data item or null if this data\n item is not contained in another data item.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"","type_short":"Data"}},{"javadoc":"Get the highest level Data item in a hierarchy of structures\n containing this component.","static":false,"name":"getRoot","comment":"Get the highest level Data item in a hierarchy of structures\n containing this component.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"","type_short":"Data"}},{"javadoc":"Get the offset of this Data item from the start of the root data item of\n  some hierarchy of structures.","static":false,"name":"getRootOffset","comment":"Get the offset of this Data item from the start of the root data item of\n  some hierarchy of structures.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Get the offset of this Data item from the start of its immediate\n parent.","static":false,"name":"getParentOffset","comment":"Get the offset of this Data item from the start of its immediate\n parent.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the immediate n'th component or null if none exists.\n@param index the index of the component to get.","static":false,"name":"getComponent","comment":"Returns the immediate n'th component or null if none exists.","params":[{"type_long":"int","name":"index","comment":"the index of the component to get.","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"","type_short":"Data"}},{"javadoc":"Get a data item given the index path. Each integer in the array represents\n an index into the data item at that level.\n@param componentPath the array of indexes to use to find the requested data item.","static":false,"name":"getComponent","comment":"Get a data item given the index path. Each integer in the array represents\n an index into the data item at that level.","params":[{"type_long":"int[]","name":"componentPath","comment":"the array of indexes to use to find the requested data item.","type_short":"int[]"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"","type_short":"Data"}},{"javadoc":"Get the component path if this is a component. The component path is an\n array of integers that represent each index in the tree of data items. Top\n level data items have an empty array for thier component path.","static":false,"name":"getComponentPath","comment":"Get the component path if this is a component. The component path is an\n array of integers that represent each index in the tree of data items. Top\n level data items have an empty array for thier component path.","params":[],"throws":[],"return":{"type_long":"int[]","comment":"","type_short":"int[]"}},{"javadoc":"Return the number of components that make up this data item.\n if this is an Array, return the number of elements in the array.","static":false,"name":"getNumComponents","comment":"Return the number of components that make up this data item.\n if this is an Array, return the number of elements in the array.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Return the immediate child component that contains the byte\n         at the given offset.\n@param offset the amount to add to this data items address to get the\n address of the requested data item.","static":false,"name":"getComponentAt","comment":"Return the immediate child component that contains the byte\n         at the given offset.","params":[{"type_long":"int","name":"offset","comment":"the amount to add to this data items address to get the\n address of the requested data item.","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"","type_short":"Data"}},{"javadoc":"Returns a list of all the immediate child components that contain the byte at the\n given offset.\n <P>\n For a union, this will return all the components (if the offset is 0).  For a structure,\n this will be either a single non bit field element or a list of bit field elements.\n@param offset the amount to add to this data items address to get the\n address of the requested data item.\n@return a list of all the immediate child components that contain the byte at the\n given offset.","static":false,"name":"getComponentsContaining","comment":"Returns a list of all the immediate child components that contain the byte at the\n given offset.\n \n For a union, this will return all the components (if the offset is 0).  For a structure,\n this will be either a single non bit field element or a list of bit field elements.","params":[{"type_long":"int","name":"offset","comment":"the amount to add to this data items address to get the\n address of the requested data item.","type_short":"int"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.listing.Data>","comment":"a list of all the immediate child components that contain the byte at the\n given offset.","type_short":"List"}},{"javadoc":"Returns the primitive component that is at this offset.  This is useful\n for data items are made up of multiple layers of other data items. This\n method immediately goes to the lowest level data item.","static":false,"name":"getPrimitiveAt","comment":"Returns the primitive component that is at this offset.  This is useful\n for data items are made up of multiple layers of other data items. This\n method immediately goes to the lowest level data item.","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Data","comment":"","type_short":"Data"}},{"javadoc":"Get the index of this component in its parent\n@return -1 if this data item is not a component of another data item.","static":false,"name":"getComponentIndex","comment":"Get the index of this component in its parent","params":[],"throws":[],"return":{"type_long":"int","comment":"-1 if this data item is not a component of another data item.","type_short":"int"}},{"javadoc":"Get this data's component level in its hierarchy of components.\n@return the level of this data item with 0 being the level of top data items.","static":false,"name":"getComponentLevel","comment":"Get this data's component level in its hierarchy of components.","params":[],"throws":[],"return":{"type_long":"int","comment":"the level of this data item with 0 being the level of top data items.","type_short":"int"}},{"javadoc":"Returns a string that represents the data value without markup.","static":false,"name":"getDefaultValueRepresentation","comment":"Returns a string that represents the data value without markup.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the appropriate string to use as the default label prefix or null if it has no\n prefered default label prefix;\n@param options","static":false,"name":"getDefaultLabelPrefix","comment":"Returns the appropriate string to use as the default label prefix or null if it has no\n prefered default label prefix;","params":[{"type_long":"ghidra.program.model.data.DataTypeDisplayOptions","name":"options","comment":"","type_short":"DataTypeDisplayOptions"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"Data","comment":"Interface for interacting with data at an address in a program.","fields":[]}
