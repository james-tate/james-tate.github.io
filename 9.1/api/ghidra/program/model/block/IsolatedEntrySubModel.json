{"implements":[],"javadoc":"<CODE>IsolatedEntryCodeSubModel<\/CODE> (S-model) defines subroutines with a\n unique entry point, which may share code with other subroutines. Each entry-\n point may either be a source or called entry-point and is identified using\n the MultEntSubModel. This model extends the OverlapCodeSubModel, redefining\n the set of addresses contained within each subroutine. Unlike the\n OverlapCodeSubModel, the address set of a IsolatedEntryCodeSubModel\n subroutine is permitted to span entry-points of other subroutines based upon\n the possible flows from its' entry- point.\n@see ghidra.program.model.block.CodeBlockModel\n@see ghidra.program.model.block.OverlapCodeSubModel\n@see ghidra.program.model.block.MultEntSubModel","static":false,"extends":"ghidra.program.model.block.OverlapCodeSubModel","methods":[{"javadoc":"Construct a <CODE>IsolatedEntrySubModel<\/CODE> subroutine on a program.\n@param program program to create blocks from.","static":false,"name":"<init>","comment":"Construct a IsolatedEntrySubModel subroutine on a program.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program to create blocks from.","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a <CODE>IsolatedEntrySubModel<\/CODE> subroutine on a program.\n@param program program to create blocks from.\n@param includeExternals externals are included if true","static":false,"name":"<init>","comment":"Construct a IsolatedEntrySubModel subroutine on a program.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program to create blocks from.","type_short":"Program"},{"type_long":"boolean","name":"includeExternals","comment":"externals are included if true","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the subroutine code block which starts at the specified address which\n is an entry point of a Model-M subroutine.\n \n Classes which extend this class should implement this method.\n@param mStartAddr = a Model-M subroutine entry point.\n@param monitor task monitor which allows user to cancel operation.\n@return a subroutine code block\n@throws CancelledException if the monitor cancels the operation.","static":false,"name":"getSubroutine","comment":"Get the subroutine code block which starts at the specified address which\n is an entry point of a Model-M subroutine.\n \n Classes which extend this class should implement this method.","params":[{"type_long":"ghidra.program.model.address.Address","name":"mStartAddr","comment":"= a Model-M subroutine entry point.","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor which allows user to cancel operation.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the monitor cancels the operation.","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.model.block.CodeBlock","comment":"a subroutine code block","type_short":"CodeBlock"}},{"javadoc":"@see ghidra.program.model.block.CodeBlockModel#getName()","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"IsolatedEntrySubModel","comment":"IsolatedEntryCodeSubModel (S-model) defines subroutines with a\n unique entry point, which may share code with other subroutines. Each entry-\n point may either be a source or called entry-point and is identified using\n the MultEntSubModel. This model extends the OverlapCodeSubModel, redefining\n the set of addresses contained within each subroutine. Unlike the\n OverlapCodeSubModel, the address set of a IsolatedEntryCodeSubModel\n subroutine is permitted to span entry-points of other subroutines based upon\n the possible flows from its' entry- point.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ISOLATED_MODEL_NAME","comment":"","type_short":"String","constant_value":"\"Isolated Entry\""}]}
