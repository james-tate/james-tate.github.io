{"implements":[],"javadoc":"A CodeBlockReference represents the flow from one CodeBlock to another. Flow\n consists of: \n <ul>\n <li>The source and destination CodeBlocks<\/li>\n <li>The Type of flow (JMP, CALL, Fallthrough, etc...<\/li>\n <li>The referent - the instruction's address in the source block that causes\n the flow <\/li>\n <li>The reference - the address in the destination block that is flowed to.\n <\/li>\n <\/ul>","static":false,"methods":[{"javadoc":"Returns the Source Block address.\n The source address should only occur in one block.\n@return the Source Block address","static":false,"name":"getSourceAddress","comment":"Returns the Source Block address.\n The source address should only occur in one block.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the Source Block address","type_short":"Address"}},{"javadoc":"Returns the Destination Block address.\n The destination address should only occur in one block.\n@return the Destination Block address","static":false,"name":"getDestinationAddress","comment":"Returns the Destination Block address.\n The destination address should only occur in one block.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the Destination Block address","type_short":"Address"}},{"javadoc":"Returns the type of flow from the Source to the Destination CodeBlock.\n@return the type of flow","static":false,"name":"getFlowType","comment":"Returns the type of flow from the Source to the Destination CodeBlock.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.FlowType","comment":"the type of flow","type_short":"FlowType"}},{"javadoc":"Returns the address in the Destination block that is referenced by the Source block.\n@return the address in the Destination block that is referenced by the Source block","static":false,"name":"getReference","comment":"Returns the address in the Destination block that is referenced by the Source block.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the address in the Destination block that is referenced by the Source block","type_short":"Address"}},{"javadoc":"Returns the address of the instruction in the Source Block that refers to the Destination block.\n@return the address of the instruction in the Source Block that refers to the Destination block","static":false,"name":"getReferent","comment":"Returns the address of the instruction in the Source Block that refers to the Destination block.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the address of the instruction in the Source Block that refers to the Destination block","type_short":"Address"}},{"javadoc":"Returns the Destination CodeBlock.\n@return the Destination CodeBlock","static":false,"name":"getDestinationBlock","comment":"Returns the Destination CodeBlock.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.block.CodeBlock","comment":"the Destination CodeBlock","type_short":"CodeBlock"}},{"javadoc":"Returns the Source CodeBlock.\n@return the Source CodeBlock","static":false,"name":"getSourceBlock","comment":"Returns the Source CodeBlock.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.block.CodeBlock","comment":"the Source CodeBlock","type_short":"CodeBlock"}}],"name":"CodeBlockReference","comment":"A CodeBlockReference represents the flow from one CodeBlock to another. Flow\n consists of: \n \n The source and destination CodeBlocks\n The Type of flow (JMP, CALL, Fallthrough, etc...\n The referent - the instruction's address in the source block that causes\n the flow \n The reference - the address in the destination block that is flowed to.\n \n ","fields":[]}
