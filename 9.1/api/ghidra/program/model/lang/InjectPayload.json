{"implements":[],"javadoc":"<code>InjectPayload<\/code> encapsulates a semantic (p-code) override which can be injected\n into analyses that work with p-code (Decompiler, SymbolicPropagator)\n The payload typically replaces either a subroutine call or a userop","static":false,"methods":[{"javadoc":"@return formal name for this injection","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"formal name for this injection","type_short":"String"}},{"javadoc":"@return the type of this injection:  CALLFIXUP_TYPE, CALLMECHANISM_TYPE, etc.","static":false,"name":"getType","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"the type of this injection:  CALLFIXUP_TYPE, CALLMECHANISM_TYPE, etc.","type_short":"int"}},{"javadoc":"@return a String describing the source of this payload","static":false,"name":"getSource","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"a String describing the source of this payload","type_short":"String"}},{"javadoc":"@return number of parameters from the original call which should be truncated","static":false,"name":"getParamShift","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"number of parameters from the original call which should be truncated","type_short":"int"}},{"javadoc":"@return array of any input parameters for this inject","static":false,"name":"getInput","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.InjectPayload.InjectParameter[]","comment":"array of any input parameters for this inject","type_short":"ghidra.program.model.lang.InjectPayload.InjectParameter[]"}},{"javadoc":"@return array of any output parameters for this inject","static":false,"name":"getOutput","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.InjectPayload.InjectParameter[]","comment":"array of any output parameters for this inject","type_short":"ghidra.program.model.lang.InjectPayload.InjectParameter[]"}},{"javadoc":"Given a context, send the p-code payload to the emitter\n@param context is the context for injection\n@param emit is the object accumulating the final p-code","static":false,"name":"inject","comment":"Given a context, send the p-code payload to the emitter","params":[{"type_long":"ghidra.program.model.lang.InjectContext","name":"context","comment":"is the context for injection","type_short":"InjectContext"},{"type_long":"ghidra.app.plugin.processors.sleigh.PcodeEmit","name":"emit","comment":"is the object accumulating the final p-code","type_short":"PcodeEmit"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"A convenience function wrapping the inject method, to produce the final set\n of PcodeOp objects in an array\n@param program is the Program for which injection is happening\n@param con is the context for injection\n@return the array of PcodeOps","static":false,"name":"getPcode","comment":"A convenience function wrapping the inject method, to produce the final set\n of PcodeOp objects in an array","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"is the Program for which injection is happening","type_short":"Program"},{"type_long":"ghidra.program.model.lang.InjectContext","name":"con","comment":"is the context for injection","type_short":"InjectContext"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.PcodeOp[]","comment":"the array of PcodeOps","type_short":"ghidra.program.model.pcode.PcodeOp[]"}},{"javadoc":"@return true if the injected p-code falls thru","static":false,"name":"isFallThru","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the injected p-code falls thru","type_short":"boolean"}}],"name":"InjectPayload","comment":"InjectPayload encapsulates a semantic (p-code) override which can be injected\n into analyses that work with p-code (Decompiler, SymbolicPropagator)\n The payload typically replaces either a subroutine call or a userop","fields":[{"type_long":"int","javadoc":"","static":true,"name":"CALLFIXUP_TYPE","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"CALLOTHERFIXUP_TYPE","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"CALLMECHANISM_TYPE","comment":"","type_short":"int","constant_value":"3"},{"type_long":"int","javadoc":"","static":true,"name":"EXECUTABLEPCODE_TYPE","comment":"","type_short":"int","constant_value":"4"}]}
