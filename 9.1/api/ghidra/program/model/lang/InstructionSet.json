{"implements":["java.lang.Iterable"],"javadoc":"A set of instructions organized as a graph of basic blocks.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"addrFactory","comment":"","type_short":"AddressFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add an Instruction block to this Instruction Set. \n If the block is empty it will only be added to the empty-list and will not\n be added to the maps or block iterator\n@param block the block to add.","static":false,"name":"addBlock","comment":"Add an Instruction block to this Instruction Set. \n If the block is empty it will only be added to the empty-list and will not\n be added to the maps or block iterator","params":[{"type_long":"ghidra.program.model.lang.InstructionBlock","name":"block","comment":"the block to add.","type_short":"InstructionBlock"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the non-empty InstructionBlock containing the specified address\n@param address\n@return the InstructionBlock containing the specified address or null if not found","static":false,"name":"getInstructionBlockContaining","comment":"Returns the non-empty InstructionBlock containing the specified address","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.InstructionBlock","comment":"the InstructionBlock containing the specified address or null if not found","type_short":"InstructionBlock"}},{"javadoc":"Find the first block within this InstructionSet which intersects the specified range.\n This method should be used sparingly since it uses a brute-force search.\n@param address\n@return block within this InstructionSet which intersects the specified range or null\n if not found","static":false,"name":"findFirstIntersectingBlock","comment":"Find the first block within this InstructionSet which intersects the specified range.\n This method should be used sparingly since it uses a brute-force search.","params":[{"type_long":"ghidra.program.model.address.Address","name":"min","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"max","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.InstructionBlock","comment":"block within this InstructionSet which intersects the specified range or null\n if not found","type_short":"InstructionBlock"}},{"javadoc":"Returns the instruction at the specified address within this instruction set\n@param address\n@return instruction at the specified address within this instruction set or null if not found","static":false,"name":"getInstructionAt","comment":"Returns the instruction at the specified address within this instruction set","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Instruction","comment":"instruction at the specified address within this instruction set or null if not found","type_short":"Instruction"}},{"javadoc":"Returns the minimum address for this Instruction set;\n@return the minimum address for this Instruction set;","static":false,"name":"getMinAddress","comment":"Returns the minimum address for this Instruction set;","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"the minimum address for this Instruction set;","type_short":"Address"}},{"javadoc":"Returns the address set that makes up all the instructions contained in this set.\n@return the address set that makes up all the instructions contained in this set.","static":false,"name":"getAddressSet","comment":"Returns the address set that makes up all the instructions contained in this set.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"the address set that makes up all the instructions contained in this set.","type_short":"AddressSetView"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the number of instructions in this instruction set.\n@return the number of instructions in this instruction set.","static":false,"name":"getInstructionCount","comment":"Returns the number of instructions in this instruction set.","params":[],"throws":[],"return":{"type_long":"int","comment":"the number of instructions in this instruction set.","type_short":"int"}},{"javadoc":"","static":false,"name":"containsBlockAt","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"blockAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns true if this instruction set intersects the specified range\n@param minAddress\n@param maxAddress\n@return true if this instruction set intersects the specified range","static":false,"name":"intersects","comment":"Returns true if this instruction set intersects the specified range","params":[{"type_long":"ghidra.program.model.address.Address","name":"minAddress","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"maxAddress","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if this instruction set intersects the specified range","type_short":"boolean"}},{"javadoc":"Returns an iterator over the blocks in this Instruction set, giving preference to fall\n through flows.  This iterator will not follow any flows from a block that has a conflict.\n If the last block returned from the iterator is marked as a conflict before the next() or\n hasNext() methods are called, then this iterator will respect the conflict.  In other words,\n this iterator follows block flows on the fly and doesn't pre-compute the blocks to return.  \n Also, if any blocks in this set don't have a flow to path from the start block, it will\n not be included in this iterator.","static":false,"name":"iterator","comment":"Returns an iterator over the blocks in this Instruction set, giving preference to fall\n through flows.  This iterator will not follow any flows from a block that has a conflict.\n If the last block returned from the iterator is marked as a conflict before the next() or\n hasNext() methods are called, then this iterator will respect the conflict.  In other words,\n this iterator follows block flows on the fly and doesn't pre-compute the blocks to return.  \n Also, if any blocks in this set don't have a flow to path from the start block, it will\n not be included in this iterator.","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.lang.InstructionBlock>","comment":"","type_short":"Iterator"}},{"javadoc":"Returns an iterator over all empty blocks which likely contain a conflict error.\n@return empty block iterator","static":false,"name":"emptyBlockIterator","comment":"Returns an iterator over all empty blocks which likely contain a conflict error.","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.lang.InstructionBlock>","comment":"empty block iterator","type_short":"Iterator"}},{"javadoc":"Returns a list of conflicts for this set.  If a block is not reachable from a non-conflicted\n block, it's conflicts(if any) will not be included.\n@return the list of conflicts for this set.","static":false,"name":"getConflicts","comment":"Returns a list of conflicts for this set.  If a block is not reachable from a non-conflicted\n block, it's conflicts(if any) will not be included.","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.lang.InstructionError>","comment":"the list of conflicts for this set.","type_short":"List"}}],"name":"InstructionSet","comment":"A set of instructions organized as a graph of basic blocks.","fields":[{"type_long":"java.util.Map<ghidra.program.model.address.Address,ghidra.program.model.lang.InstructionBlock>","javadoc":"","static":false,"name":"blockMap","comment":"","type_short":"Map","constant_value":null},{"type_long":"ghidra.program.database.register.AddressRangeObjectMap<ghidra.program.model.lang.InstructionBlock>","javadoc":"","static":false,"name":"blockRangeMap","comment":"","type_short":"AddressRangeObjectMap","constant_value":null},{"type_long":"java.util.Set<ghidra.program.model.address.Address>","javadoc":"","static":false,"name":"startAddresses","comment":"","type_short":"Set","constant_value":null},{"type_long":"java.util.List<ghidra.program.model.lang.InstructionBlock>","javadoc":"","static":false,"name":"emptyBlocks","comment":"","type_short":"List","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSet","javadoc":"","static":false,"name":"addressSet","comment":"","type_short":"AddressSet","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"instructionCount","comment":"","type_short":"int","constant_value":null}]}
