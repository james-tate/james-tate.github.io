{"implements":[],"javadoc":"A function calling convention model.\n Formal specification of how a compiler passes\n arguments between functions.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.lang.PrototypeModel","name":"model","comment":"","type_short":"PrototypeModel"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getGenericCallingConvention","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.GenericCallingConvention","comment":"","type_short":"GenericCallingConvention"}},{"javadoc":"","static":false,"name":"isMerged","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getExtrapop","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getStackshift","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"hasThisPointer","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isConstructor","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getInputListType","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.InputListType","comment":"","type_short":"InputListType"}},{"javadoc":"@deprecated Get the preferred return location given the specified dataType.\n In truth, there is no one location.  The routines that use this method tend\n to want the default storage location for integer or pointer return values.\n@param dataType first parameter dataType or null for a default\n undefined type.\n@param program\n@return return location or {@link VariableStorage.UNASSIGNED_STORAGE} if\n unable to determine suitable location","static":false,"name":"getReturnLocation","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"first parameter dataType or null for a default\n undefined type.","type_short":"DataType"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.VariableStorage","comment":"return location or VariableStorage.UNASSIGNED_STORAGE if\n unable to determine suitable location","type_short":"VariableStorage"}},{"javadoc":"Get the preferred parameter location for a new parameter which will appended\n to the end of an existing set of params.  If existing parameters use custom\n storage, this method should not be used.\n@param params existing set parameters to which the next parameter will\n be appended. (may be null)\n@param dataType dataType associated with next parameter location or null\n for a default undefined type.\n@param program\n@return next parameter location or {@link VariableStorage.UNASSIGNED_STORAGE} if\n unable to determine suitable location","static":false,"name":"getNextArgLocation","comment":"Get the preferred parameter location for a new parameter which will appended\n to the end of an existing set of params.  If existing parameters use custom\n storage, this method should not be used.","params":[{"type_long":"ghidra.program.model.listing.Parameter[]","name":"params","comment":"existing set parameters to which the next parameter will\n be appended. (may be null)","type_short":"ghidra.program.model.listing.Parameter[]"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"dataType associated with next parameter location or null\n for a default undefined type.","type_short":"DataType"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.VariableStorage","comment":"next parameter location or VariableStorage.UNASSIGNED_STORAGE if\n unable to determine suitable location","type_short":"VariableStorage"}},{"javadoc":"Get the preferred parameter location for a specified parameter specified by argIndex\n which will be added\/inserted within the set of existing function params.\n If existing parameters use custom storage, this method should not be used.\n@param params existing set parameters to which the parameter specified by\n argIndex will be added\/inserted be appended (may be null).\n@param dataType dataType associated with next parameter location or null\n for a default undefined type.\n@param program\n@return parameter location or {@link VariableStorage.UNASSIGNED_STORAGE} if\n unable to determine suitable location","static":false,"name":"getArgLocation","comment":"Get the preferred parameter location for a specified parameter specified by argIndex\n which will be added\/inserted within the set of existing function params.\n If existing parameters use custom storage, this method should not be used.","params":[{"type_long":"int","name":"argIndex","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.listing.Parameter[]","name":"params","comment":"existing set parameters to which the parameter specified by\n argIndex will be added\/inserted be appended (may be null).","type_short":"ghidra.program.model.listing.Parameter[]"},{"type_long":"ghidra.program.model.data.DataType","name":"dataType","comment":"dataType associated with next parameter location or null\n for a default undefined type.","type_short":"DataType"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.VariableStorage","comment":"parameter location or VariableStorage.UNASSIGNED_STORAGE if\n unable to determine suitable location","type_short":"VariableStorage"}},{"javadoc":"Compute the variable storage for a given function and set of return\/parameter datatypes \n defined by an array of data types.\n@param program\n@param dataTypes return\/parameter datatypes (first element is always the return datatype, \n i.e., minimum array length is 1)\n@param addAutoParams TODO\n@return dynamic storage locations orders by ordinal where first element corresponds to\n return storage. The returned array may also include additional auto-parameter storage \n locations.","static":false,"name":"getStorageLocations","comment":"Compute the variable storage for a given function and set of return\/parameter datatypes \n defined by an array of data types.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.data.DataType[]","name":"dataTypes","comment":"return\/parameter datatypes (first element is always the return datatype, \n i.e., minimum array length is 1)","type_short":"ghidra.program.model.data.DataType[]"},{"type_long":"boolean","name":"addAutoParams","comment":"TODO","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.VariableStorage[]","comment":"dynamic storage locations orders by ordinal where first element corresponds to\n return storage. The returned array may also include additional auto-parameter storage \n locations.","type_short":"ghidra.program.model.listing.VariableStorage[]"}},{"javadoc":"","static":false,"name":"buildParamList","comment":"","params":[{"type_long":"java.lang.String","name":"strategy","comment":"","type_short":"String"}],"throws":[{"type_long":"ghidra.xml.XmlParseException","comment":"","type_short":"XmlParseException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"restoreXml","comment":"","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"ghidra.program.model.lang.CompilerSpec","name":"cspec","comment":"","type_short":"CompilerSpec"},{"type_long":"boolean","name":"normalstack","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.xml.XmlParseException","comment":"","type_short":"XmlParseException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"possibleInputParamWithSlot","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"loc","comment":"","type_short":"Address"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.lang.ParamList.WithSlotRec","name":"res","comment":"","type_short":"WithSlotRec"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"possibleOutputParamWithSlot","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"loc","comment":"","type_short":"Address"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.lang.ParamList.WithSlotRec","name":"res","comment":"","type_short":"WithSlotRec"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getStackParameterAlignment","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getStackParameterOffset","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Long","comment":"","type_short":"Long"}},{"javadoc":"","static":false,"name":"getPotentialInputRegisterStorage","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"prog","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.VariableStorage[]","comment":"","type_short":"ghidra.program.model.listing.VariableStorage[]"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"PrototypeModel","comment":"A function calling convention model.\n Formal specification of how a compiler passes\n arguments between functions.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"UNKNOWN_EXTRAPOP","comment":"","type_short":"int","constant_value":"32768"},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"name","comment":"","type_short":"String","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"extrapop","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"stackshift","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.program.model.lang.ParamList","javadoc":"","static":false,"name":"inputParams","comment":"","type_short":"ParamList","constant_value":null},{"type_long":"ghidra.program.model.lang.ParamList","javadoc":"","static":false,"name":"outputParams","comment":"","type_short":"ParamList","constant_value":null},{"type_long":"ghidra.program.model.lang.InputListType","javadoc":"","static":false,"name":"inputListType","comment":"","type_short":"InputListType","constant_value":null},{"type_long":"ghidra.program.model.data.GenericCallingConvention","javadoc":"","static":false,"name":"genericCallingConvention","comment":"","type_short":"GenericCallingConvention","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"hasThis","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isConstruct","comment":"","type_short":"boolean","constant_value":null}]}
