{"implements":[],"javadoc":"The Mask class is used to perform some basic bit tests on an\n array of bits.","static":false,"methods":[{"javadoc":"Test if the given object is equal to this object. Two masks are\n   equal if they have exactly the same values in thier byte arrays.\n@param obj the object to be tested for equals\n@return true if the object is equal to this mask, false otherwise.","static":false,"name":"equals","comment":"Test if the given object is equal to this object. Two masks are\n   equal if they have exactly the same values in thier byte arrays.","params":[{"type_long":"java.lang.Object","name":"obj","comment":"the object to be tested for equals","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the object is equal to this mask, false otherwise.","type_short":"boolean"}},{"javadoc":"Check if the mask represented by the byte array is equal to this one.\n@param mask mask represented as byte array\n@return true if the masks are the same, false otherwise","static":false,"name":"equals","comment":"Check if the mask represented by the byte array is equal to this one.","params":[{"type_long":"byte[]","name":"mask","comment":"mask represented as byte array","type_short":"byte[]"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the masks are the same, false otherwise","type_short":"boolean"}},{"javadoc":"Apply the mask to a byte array.\n@param cde the array that contains the values to be masked\n@param results the array to contain the results.\n@return the resulting byte array.\n@exception IncompatibleMaskException thrown if byte\n arrays are not of the correct size","static":false,"name":"applyMask","comment":"Apply the mask to a byte array.","params":[{"type_long":"byte[]","name":"cde","comment":"the array that contains the values to be masked","type_short":"byte[]"},{"type_long":"byte[]","name":"results","comment":"the array to contain the results.","type_short":"byte[]"}],"throws":[{"type_long":"ghidra.program.model.lang.IncompatibleMaskException","comment":"","type_short":"IncompatibleMaskException"}],"return":{"type_long":"byte[]","comment":"the resulting byte array.","type_short":"byte[]"}},{"javadoc":"Apply the mask to a byte array.\n@param cde the array that contains the values to be masked\n@param cdeOffset the offset into the array that contains the values to be masked\n@param results the array to contain the results.\n@param resultsOffset the offset into the array that contains the results\n@exception IncompatibleMaskException thrown if byte\n arrays are not of the correct size","static":false,"name":"applyMask","comment":"Apply the mask to a byte array.","params":[{"type_long":"byte[]","name":"cde","comment":"the array that contains the values to be masked","type_short":"byte[]"},{"type_long":"int","name":"cdeOffset","comment":"the offset into the array that contains the values to be masked","type_short":"int"},{"type_long":"byte[]","name":"results","comment":"the array to contain the results.","type_short":"byte[]"},{"type_long":"int","name":"resultsOffset","comment":"the offset into the array that contains the results","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.lang.IncompatibleMaskException","comment":"","type_short":"IncompatibleMaskException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Apply the mask to a memory buffer.\n@param buffer the memory buffer that contains the values to be masked\n@return the resulting masked byte array.\n@exception MemoryAccessException thrown if mask exceeds the available data \n within buffer","static":false,"name":"applyMask","comment":"Apply the mask to a memory buffer.","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buffer","comment":"the memory buffer that contains the values to be masked","type_short":"MemBuffer"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"byte[]","comment":"the resulting masked byte array.","type_short":"byte[]"}},{"javadoc":"Tests if the results of apply the mask to the given array matches a\n   target array.\n@param cde the source bytes.\n@param target the result bytes to be tested.\n@return true if the target array is equal to the source array with\n   the mask applied.\n@exception IncompatibleMaskException thrown if byte\n arrays are not of the correct size","static":false,"name":"equalMaskedValue","comment":"Tests if the results of apply the mask to the given array matches a\n   target array.","params":[{"type_long":"byte[]","name":"cde","comment":"the source bytes.","type_short":"byte[]"},{"type_long":"byte[]","name":"target","comment":"the result bytes to be tested.","type_short":"byte[]"}],"throws":[{"type_long":"ghidra.program.model.lang.IncompatibleMaskException","comment":"","type_short":"IncompatibleMaskException"}],"return":{"type_long":"boolean","comment":"true if the target array is equal to the source array with\n   the mask applied.","type_short":"boolean"}},{"javadoc":"applies the complement of the mask to the given byte array.\n@param msk the bytes to apply the inverted mask.\n@param results the array for storing the results.\n@return the results array.\n@exception IncompatibleMaskException thrown if byte\n arrays are not of the correct size","static":false,"name":"complementMask","comment":"applies the complement of the mask to the given byte array.","params":[{"type_long":"byte[]","name":"msk","comment":"the bytes to apply the inverted mask.","type_short":"byte[]"},{"type_long":"byte[]","name":"results","comment":"the array for storing the results.","type_short":"byte[]"}],"throws":[{"type_long":"ghidra.program.model.lang.IncompatibleMaskException","comment":"","type_short":"IncompatibleMaskException"}],"return":{"type_long":"byte[]","comment":"the results array.","type_short":"byte[]"}},{"javadoc":"Tests if the given mask matches the this mask for the first n\n   bytes, where n is the size of the given mask.\n@param msk the bytes to be tested to see if they match the first\n   bytes of this mask.\n@return true if the bytes match up to the length of the passed in\n   byte array.\n@exception IncompatibleMaskException thrown if byte\n arrays are not of the correct size","static":false,"name":"subMask","comment":"Tests if the given mask matches the this mask for the first n\n   bytes, where n is the size of the given mask.","params":[{"type_long":"byte[]","name":"msk","comment":"the bytes to be tested to see if they match the first\n   bytes of this mask.","type_short":"byte[]"}],"throws":[{"type_long":"ghidra.program.model.lang.IncompatibleMaskException","comment":"","type_short":"IncompatibleMaskException"}],"return":{"type_long":"boolean","comment":"true if the bytes match up to the length of the passed in\n   byte array.","type_short":"boolean"}},{"javadoc":"Returns the bytes that make up this mask.","static":false,"name":"getBytes","comment":"Returns the bytes that make up this mask.","params":[],"throws":[],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}}],"name":"Mask","comment":"The Mask class is used to perform some basic bit tests on an\n array of bits.","fields":[]}
