{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Check for a mapping of an old language-name magicString to a LanguageID\/CompilerSpec pair.\n If returnLanguageReplacement is false, the returned LanguageID\/CompilerSpec pair may no \n longer exist and may require use of an OldLanguage and translation process.\n@param magicString old language name magic string\n@param languageReplacementOK if true the LanguageID\/CompilerSpec pair corresponding to the\n latest language implementation will be returned if found, otherwise the a deprecated LanguageID\/CompilerSpec pair\n may be returned.  This parameter should be false if there is a sensitivity to the language implementation \n (e.g., instruction prototypes, etc.)\n@return LanguageID\/CompilerSpec pair or null if entry not found.","static":true,"name":"lookupMagicString","comment":"Check for a mapping of an old language-name magicString to a LanguageID\/CompilerSpec pair.\n If returnLanguageReplacement is false, the returned LanguageID\/CompilerSpec pair may no \n longer exist and may require use of an OldLanguage and translation process.","params":[{"type_long":"java.lang.String","name":"magicString","comment":"old language name magic string","type_short":"String"},{"type_long":"boolean","name":"languageReplacementOK","comment":"if true the LanguageID\/CompilerSpec pair corresponding to the\n latest language implementation will be returned if found, otherwise the a deprecated LanguageID\/CompilerSpec pair\n may be returned.  This parameter should be false if there is a sensitivity to the language implementation \n (e.g., instruction prototypes, etc.)","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.LanguageCompilerSpecPair","comment":"LanguageID\/CompilerSpec pair or null if entry not found.","type_short":"LanguageCompilerSpecPair"}},{"javadoc":"","static":false,"name":"doLookupMagicString","comment":"","params":[{"type_long":"java.lang.String","name":"magicString","comment":"","type_short":"String"},{"type_long":"boolean","name":"languageReplacementOK","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.LanguageCompilerSpecPair","comment":"","type_short":"LanguageCompilerSpecPair"}},{"javadoc":"","static":true,"name":"validatePair","comment":"","params":[{"type_long":"ghidra.program.model.lang.LanguageCompilerSpecPair","name":"pair","comment":"","type_short":"LanguageCompilerSpecPair"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.LanguageCompilerSpecPair","comment":"","type_short":"LanguageCompilerSpecPair"}},{"javadoc":"Parse the language string from an XML language name into the most appropriate LanguageID\/CompilerSpec pair.\n The language name may either be an old name (i.e., magicString) or a new <language-id>:<compiler-spec-id> string.\n If an old language name magic-string is provided, its replacement language will be returned if known.\n The returned pair may or may not be available based upon available language implementations.\n@param languageString old or new language string\n@return LanguageID\/CompilerSpec pair or null if no old name mapping could be found.","static":true,"name":"processXmlLanguageString","comment":"Parse the language string from an XML language name into the most appropriate LanguageID\/CompilerSpec pair.\n The language name may either be an old name (i.e., magicString) or a new language-id:compiler-spec-id string.\n If an old language name magic-string is provided, its replacement language will be returned if known.\n The returned pair may or may not be available based upon available language implementations.","params":[{"type_long":"java.lang.String","name":"languageString","comment":"old or new language string","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.LanguageCompilerSpecPair","comment":"LanguageID\/CompilerSpec pair or null if no old name mapping could be found.","type_short":"LanguageCompilerSpecPair"}}],"name":"OldLanguageMappingService","comment":"","fields":[]}
