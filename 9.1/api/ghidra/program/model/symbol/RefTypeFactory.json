{"implements":[],"javadoc":"Factory class to create RefType objects.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getMemoryRefTypes","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.RefType[]","comment":"","type_short":"ghidra.program.model.symbol.RefType[]"}},{"javadoc":"","static":true,"name":"getStackRefTypes","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.RefType[]","comment":"","type_short":"ghidra.program.model.symbol.RefType[]"}},{"javadoc":"","static":true,"name":"getDataRefTypes","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.RefType[]","comment":"","type_short":"ghidra.program.model.symbol.RefType[]"}},{"javadoc":"","static":true,"name":"getExternalRefTypes","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.RefType[]","comment":"","type_short":"ghidra.program.model.symbol.RefType[]"}},{"javadoc":"Get static instance of the specified RefType\/FlowType\n@param type ref-type value\n@return ref-type instance\n@throws NoSuchElementException if ref-type is not defined","static":true,"name":"get","comment":"Get static instance of the specified RefType\/FlowType","params":[{"type_long":"byte","name":"type","comment":"ref-type value","type_short":"byte"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.RefType","comment":"ref-type instance","type_short":"RefType"}},{"javadoc":"Get the default statck data RefType for the specified code-unit\/opIndex and register\n@param cu\n@param reg\n@param opIndex\n@return default RefType","static":true,"name":"getDefaultRegisterRefType","comment":"Get the default statck data RefType for the specified code-unit\/opIndex and register","params":[{"type_long":"ghidra.program.model.listing.CodeUnit","name":"cu","comment":"","type_short":"CodeUnit"},{"type_long":"ghidra.program.model.lang.Register","name":"reg","comment":"","type_short":"Register"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.RefType","comment":"default RefType","type_short":"RefType"}},{"javadoc":"Get the default register data RefType for the specified code-unit\/opIndex and register\n@param cu the code unit to get the default stack ref type.\n@param opIndex the operand index.\n@return the default register datat refType.","static":true,"name":"getDefaultStackRefType","comment":"Get the default register data RefType for the specified code-unit\/opIndex and register","params":[{"type_long":"ghidra.program.model.listing.CodeUnit","name":"cu","comment":"the code unit to get the default stack ref type.","type_short":"CodeUnit"},{"type_long":"int","name":"opIndex","comment":"the operand index.","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.RefType","comment":"the default register datat refType.","type_short":"RefType"}},{"javadoc":"Determine default FlowType for a specified instruction and flow destination toAddr.\n@param instr instruction\n@param toAddr flow destination address\n@param allowComputedFlowType if true and an absolute flow type is not found\n a computed flow type will be returned if only one exists.\n@return FlowType or null if unable to determine","static":true,"name":"getDefaultFlowType","comment":"Determine default FlowType for a specified instruction and flow destination toAddr.","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"instr","comment":"instruction","type_short":"Instruction"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"flow destination address","type_short":"Address"},{"type_long":"boolean","name":"allowComputedFlowType","comment":"if true and an absolute flow type is not found\n a computed flow type will be returned if only one exists.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.FlowType","comment":"FlowType or null if unable to determine","type_short":"FlowType"}},{"javadoc":"Determine default computed FlowType for a specified instruction.  It is assumed \n that all computed flows utilize a register in its destination specification\/computation.\n@param instr instruction\n@return FlowType or null if unable to determine","static":true,"name":"getDefaultComputedFlowType","comment":"Determine default computed FlowType for a specified instruction.  It is assumed \n that all computed flows utilize a register in its destination specification\/computation.","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"instr","comment":"instruction","type_short":"Instruction"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.FlowType","comment":"FlowType or null if unable to determine","type_short":"FlowType"}},{"javadoc":"Get the default memory flow\/data RefType for the specified code unit and opIndex.\n@param cu\n@param opIndex\n@param toAddr reference destination\n@param ignoreExistingReferences if true existing references will not influence default\n reference type returned.\n@return default RefType","static":true,"name":"getDefaultMemoryRefType","comment":"Get the default memory flow\/data RefType for the specified code unit and opIndex.","params":[{"type_long":"ghidra.program.model.listing.CodeUnit","name":"cu","comment":"","type_short":"CodeUnit"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"reference destination","type_short":"Address"},{"type_long":"boolean","name":"ignoreExistingReferences","comment":"if true existing references will not influence default\n reference type returned.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.RefType","comment":"default RefType","type_short":"RefType"}},{"javadoc":"Return default flow-type without terminator\n@param inst\n@return call\/jump flow type or null","static":true,"name":"getDefaultJumpOrCallFlowType","comment":"Return default flow-type without terminator","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"inst","comment":"","type_short":"Instruction"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.FlowType","comment":"call\/jump flow type or null","type_short":"FlowType"}},{"javadoc":"","static":true,"name":"getMemRefType","comment":"","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"instr","comment":"","type_short":"Instruction"},{"type_long":"ghidra.program.model.address.Address","name":"memAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.RefType","comment":"","type_short":"RefType"}},{"javadoc":"","static":true,"name":"isFlowOp","comment":"","params":[{"type_long":"ghidra.program.model.pcode.PcodeOp","name":"op","comment":"","type_short":"PcodeOp"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":true,"name":"getLoadStoreRefType","comment":"","params":[{"type_long":"ghidra.program.model.pcode.PcodeOp[]","name":"ops","comment":"","type_short":"ghidra.program.model.pcode.PcodeOp[]"},{"type_long":"int","name":"startOpSeq","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.address.Address","name":"offsetAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.symbol.RefType","name":"refType","comment":"","type_short":"RefType"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.RefType","comment":"","type_short":"RefType"}}],"name":"RefTypeFactory","comment":"Factory class to create RefType objects.","fields":[{"type_long":"ghidra.util.datastruct.IntObjectHashtable<ghidra.program.model.symbol.RefType>","javadoc":"","static":true,"name":"REFTYPE_LOOKUP_BY_TYPE_MAP","comment":"","type_short":"IntObjectHashtable","constant_value":null},{"type_long":"ghidra.program.model.symbol.RefType[]","javadoc":"","static":true,"name":"memoryRefTypes","comment":"","type_short":"ghidra.program.model.symbol.RefType[]","constant_value":null},{"type_long":"java.util.HashSet<ghidra.program.model.symbol.RefType>","javadoc":"","static":true,"name":"validMemRefTypes","comment":"","type_short":"HashSet","constant_value":null},{"type_long":"ghidra.program.model.symbol.RefType[]","javadoc":"","static":true,"name":"stackRefTypes","comment":"","type_short":"ghidra.program.model.symbol.RefType[]","constant_value":null},{"type_long":"ghidra.program.model.symbol.RefType[]","javadoc":"","static":true,"name":"dataRefTypes","comment":"","type_short":"ghidra.program.model.symbol.RefType[]","constant_value":null},{"type_long":"ghidra.program.model.symbol.RefType[]","javadoc":"","static":true,"name":"extRefTypes","comment":"","type_short":"ghidra.program.model.symbol.RefType[]","constant_value":null},{"type_long":"long[]","javadoc":"","static":true,"name":"MASKS","comment":"","type_short":"long[]","constant_value":null}]}
