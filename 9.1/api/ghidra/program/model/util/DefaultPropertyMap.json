{"implements":["ghidra.program.model.util.PropertyMap"],"javadoc":"PropertyMap is used to store values for a fixed property at\n   address locations given as longs. The values for the property\n   must be homogeneous, i.e. all have the same type, and are\n   determined by which subclass of PropertyMap is instantiated.\n   For any long the property\n   manager can be used to tell if the property exists there and\n   what its value is. It also maintains information that allows it\n   to efficiently search for the next and previous occurence of the\n   property relative to a given address.\n   The subclass provides the createPage() method that dictates\n  the type of PropertyPage that will be managed.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a PropertyMap\n@param propertyMgr property manager that manages storage of\n properties","static":false,"name":"<init>","comment":"Construct a PropertyMap","params":[{"type_long":"ghidra.util.prop.PropertySet","name":"propertyMgr","comment":"property manager that manages storage of\n properties","type_short":"PropertySet"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the name for this property manager.","static":false,"name":"getName","comment":"Get the name for this property manager.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Set the description for this property.\n@param description property description","static":false,"name":"setDescription","comment":"Set the description for this property.","params":[{"type_long":"java.lang.String","name":"description","comment":"property description","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return the property description.\n@return the property description","static":false,"name":"getDescription","comment":"Return the property description.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the property description","type_short":"String"}},{"javadoc":"Given two addresses, indicate whether there is an address in\n that range (inclusive) having the property.<p>\n@param start the start of the range.\n@param end the end of the range.\n@return boolean true if at least one address in the range\n has the property, false otherwise.","static":false,"name":"intersects","comment":"Given two addresses, indicate whether there is an address in\n that range (inclusive) having the property.","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the start of the range.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"the end of the range.","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if at least one address in the range\n has the property, false otherwise.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"intersects","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Removes all property values within a given range.\n@param start begin range\n@param end end range, inclusive\n@return true if any property value was removed; return\n \t\tfalse otherwise.","static":false,"name":"removeRange","comment":"Removes all property values within a given range.","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"begin range","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"end range, inclusive","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if any property value was removed; return\n \t\tfalse otherwise.","type_short":"boolean"}},{"javadoc":"Remove the property value at the given address.\n@return true if the property value was removed, false\n   otherwise.\n@param addr the address where the property should be removed","static":false,"name":"remove","comment":"Remove the property value at the given address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address where the property should be removed","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the property value was removed, false\n   otherwise.","type_short":"boolean"}},{"javadoc":"returns whether there is a property value at addr.\n@param addr the address in question","static":false,"name":"hasProperty","comment":"returns whether there is a property value at addr.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address in question","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get the next address where the property value exists.\n@param addr the address from which to begin the search (exclusive).\n@throws NoSuchIndexException thrown if there is no address with\n   a property value after the given address.","static":false,"name":"getNextPropertyAddress","comment":"Get the next address where the property value exists.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address from which to begin the search (exclusive).","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Get the previous Address where a property value exists.\n@param addr the address from which\n \t\tto begin the search (exclusive).\n@throws NoSuchIndexException when there is no address\n \t\twith a property value before the given address.","static":false,"name":"getPreviousPropertyAddress","comment":"Get the previous Address where a property value exists.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address from which\n \t\tto begin the search (exclusive).","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Get the first Address where a property value exists.","static":false,"name":"getFirstPropertyAddress","comment":"Get the first Address where a property value exists.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Get the last Address where a property value exists.\n@exception NoSuchIndexException thrown if there is no address having the property value.","static":false,"name":"getLastPropertyAddress","comment":"Get the last Address where a property value exists.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Get the number of properties in the map.","static":false,"name":"getSize","comment":"Get the number of properties in the map.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns an iterator over addresses that have a property value within the\n given address range.\n@param start the first address in the range.\n@param end the last address in the range.\n@exception TypeMismatchException thrown if the property does not\n have values of type <CODE>Object<\/CODE>.","static":false,"name":"getPropertyIterator","comment":"Returns an iterator over addresses that have a property value within the\n given address range.","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the first address in the range.","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"the last address in the range.","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"@see ghidra.program.model.util.PropertyMap#getPropertyIterator(ghidra.program.model.address.Address, ghidra.program.model.address.Address, boolean)","static":false,"name":"getPropertyIterator","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"Returns an iterator over addresses that have a property value within the\n property map.\n@exception TypeMismatchException thrown if the property does not\n have values of type <CODE>Object<\/CODE>.","static":false,"name":"getPropertyIterator","comment":"Returns an iterator over addresses that have a property value within the\n property map.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"Returns an iterator over the addresses that have a property value and\n are in the given address set.","static":false,"name":"getPropertyIterator","comment":"Returns an iterator over the addresses that have a property value and\n are in the given address set.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"asv","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"@see ghidra.program.model.util.PropertyMap#getPropertyIterator(ghidra.program.model.address.AddressSetView, boolean)","static":false,"name":"getPropertyIterator","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"asv","comment":"","type_short":"AddressSetView"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"@see ghidra.program.model.util.PropertyMap#getPropertyIterator(ghidra.program.model.address.Address, boolean)","static":false,"name":"getPropertyIterator","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"@see ghidra.program.model.util.PropertyMap#applyValue(ghidra.util.prop.PropertyVisitor, ghidra.program.model.address.Address)","static":false,"name":"applyValue","comment":"","params":[{"type_long":"ghidra.util.prop.PropertyVisitor","name":"visitor","comment":"","type_short":"PropertyVisitor"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.util.PropertyMap#moveRange(ghidra.program.model.address.Address, ghidra.program.model.address.Address, ghidra.program.model.address.Address)","static":false,"name":"moveRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"newStart","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Save the properties in the given range to output stream.\n@param oos output stream to write to\n@param start start address in the range\n@param end end address in the range\n@throws IOException if there a problem doing the write","static":false,"name":"saveProperties","comment":"Save the properties in the given range to output stream.","params":[{"type_long":"java.io.ObjectOutputStream","name":"oos","comment":"output stream to write to","type_short":"ObjectOutputStream"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"start address in the range","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"end address in the range","type_short":"Address"}],"throws":[{"type_long":"java.io.IOException","comment":"if there a problem doing the write","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Restore properties from the given input stream.\n@param ois input stream\n@throws IOException if there is a problem reading from the stream\n@throws ClassNotFoundException if the class for the object being\n read is not in the class path","static":false,"name":"restoreProperties","comment":"Restore properties from the given input stream.","params":[{"type_long":"java.io.ObjectInputStream","name":"ois","comment":"input stream","type_short":"ObjectInputStream"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is a problem reading from the stream","type_short":"IOException"},{"type_long":"java.lang.ClassNotFoundException","comment":"if the class for the object being\n read is not in the class path","type_short":"ClassNotFoundException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Write all properties in the map to the given output stream.\n@throws IOException if there is a problem writing to the stream","static":false,"name":"saveAll","comment":"Write all properties in the map to the given output stream.","params":[{"type_long":"java.io.ObjectOutputStream","name":"out","comment":"","type_short":"ObjectOutputStream"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is a problem writing to the stream","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Restore properties read from the given input stream.\n@param in input stream\n@throws IOException if there is a problem reading from the stream\n@throws ClassNotFoundException if the class for the object being\n read is not in the class path","static":false,"name":"restoreAll","comment":"Restore properties read from the given input stream.","params":[{"type_long":"java.io.ObjectInputStream","name":"in","comment":"input stream","type_short":"ObjectInputStream"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is a problem reading from the stream","type_short":"IOException"},{"type_long":"java.lang.ClassNotFoundException","comment":"if the class for the object being\n read is not in the class path","type_short":"ClassNotFoundException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DefaultPropertyMap","comment":"PropertyMap is used to store values for a fixed property at\n   address locations given as longs. The values for the property\n   must be homogeneous, i.e. all have the same type, and are\n   determined by which subclass of PropertyMap is instantiated.\n   For any long the property\n   manager can be used to tell if the property exists there and\n   what its value is. It also maintains information that allows it\n   to efficiently search for the next and previous occurence of the\n   property relative to a given address.\n   The subclass provides the createPage() method that dictates\n  the type of PropertyPage that will be managed.","fields":[{"type_long":"ghidra.util.prop.PropertySet","javadoc":"","static":false,"name":"propertyMgr","comment":"","type_short":"PropertySet","constant_value":null},{"type_long":"ghidra.program.model.address.AddressMapImpl","javadoc":"","static":false,"name":"addrMap","comment":"","type_short":"AddressMapImpl","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"description","comment":"","type_short":"String","constant_value":null}]}
