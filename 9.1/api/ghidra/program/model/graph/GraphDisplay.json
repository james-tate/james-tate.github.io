{"implements":[],"javadoc":"Handle object to a graph display.","static":false,"methods":[{"javadoc":"Pop the graph display to the front.\n@throws GraphException thrown if an error occurs while communicating with the graph service.","static":false,"name":"popup","comment":"Pop the graph display to the front.","params":[],"throws":[{"type_long":"ghidra.util.exception.GraphException","comment":"thrown if an error occurs while communicating with the graph service.","type_short":"GraphException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clear the graph data in the graph display\n@throws GraphException thrown if an error occurs while communicating with the graph service.","static":false,"name":"clear","comment":"Clear the graph data in the graph display","params":[],"throws":[{"type_long":"ghidra.util.exception.GraphException","comment":"thrown if an error occurs while communicating with the graph service.","type_short":"GraphException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Close the graph.  This destroys the graph display.","static":false,"name":"close","comment":"Close the graph.  This destroys the graph display.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Check if the graph display is still valid.","static":false,"name":"isValid","comment":"Check if the graph display is still valid.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Set the graph data.  This will append the data to the graph.\n Call the clear method if this data is to replace the exising\n data on this display.\n@param graph the graph data to apply to the graph display.\n@throws GraphException thrown if an error occurs while communicating with the graph service.","static":false,"name":"setGraphData","comment":"Set the graph data.  This will append the data to the graph.\n Call the clear method if this data is to replace the exising\n data on this display.","params":[{"type_long":"ghidra.program.model.graph.GraphData","name":"graph","comment":"the graph data to apply to the graph display.","type_short":"GraphData"}],"throws":[{"type_long":"ghidra.util.exception.GraphException","comment":"thrown if an error occurs while communicating with the graph service.","type_short":"GraphException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Define the name of an attribute on edges in the graph displayed.\n@param attributeName the name of the attribute to define on an edge.\n@throws GraphException thrown if an error occurs while communicating with the graph service.","static":false,"name":"defineEdgeAttribute","comment":"Define the name of an attribute on edges in the graph displayed.","params":[{"type_long":"java.lang.String","name":"attributeName","comment":"the name of the attribute to define on an edge.","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.GraphException","comment":"thrown if an error occurs while communicating with the graph service.","type_short":"GraphException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Define the name of an attribute on vertices in the graph displayed.\n@param attributeName the name of the attribute to define on a vertex.\n@throws GraphException thrown if an error occurs while communicating with the graph service.","static":false,"name":"defineVertexAttribute","comment":"Define the name of an attribute on vertices in the graph displayed.","params":[{"type_long":"java.lang.String","name":"attributeName","comment":"the name of the attribute to define on a vertex.","type_short":"String"}],"throws":[{"type_long":"ghidra.util.exception.GraphException","comment":"thrown if an error occurs while communicating with the graph service.","type_short":"GraphException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Indicate that the specified vertex attribute should be displayed as the vertex label.\n@param attributeName the name of the vertex attribute\n@param alignment ALIGN_LEFT, ALIGN_CENTER or ALIGN_RIGHT\n@param size font size (8, 10, 12, etc.)\n@param monospace if true a monospace font will be used.\n@param maxLines indicate the maximum number of lines to be displayed for the label.  A value <= 1 will\n result in a single line display and the preferred geometric shapes.  A value >1 will force the use of\n rectangualr nodes.\n@throws GraphException thrown if an error occurs while communicating with the graph service.","static":false,"name":"setVertexLabel","comment":"Indicate that the specified vertex attribute should be displayed as the vertex label.","params":[{"type_long":"java.lang.String","name":"attributeName","comment":"the name of the vertex attribute","type_short":"String"},{"type_long":"int","name":"alignment","comment":"ALIGN_LEFT, ALIGN_CENTER or ALIGN_RIGHT","type_short":"int"},{"type_long":"int","name":"size","comment":"font size (8, 10, 12, etc.)","type_short":"int"},{"type_long":"boolean","name":"monospace","comment":"if true a monospace font will be used.","type_short":"boolean"},{"type_long":"int","name":"maxLines","comment":"indicate the maximum number of lines to be displayed for the label.  A value = 1 will\n result in a single line display and the preferred geometric shapes.  A value 1 will force the use of\n rectangualr nodes.","type_short":"int"}],"throws":[{"type_long":"ghidra.util.exception.GraphException","comment":"thrown if an error occurs while communicating with the graph service.","type_short":"GraphException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the handler that will map addresses strings on vertices and edges\n to\/from objects that make sense to the generator of the graph.\n@param handler the GraphSelectionHandler to set on this GraphDisplay.\n@throws GraphException thrown if an error occurs while communicating with the graph service.","static":false,"name":"setSelectionHandler","comment":"Set the handler that will map addresses strings on vertices and edges\n to\/from objects that make sense to the generator of the graph.","params":[{"type_long":"ghidra.program.model.graph.GraphSelectionHandler","name":"handler","comment":"the GraphSelectionHandler to set on this GraphDisplay.","type_short":"GraphSelectionHandler"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Tell the display to set the selection set on the graph based on some\n object that will be passed to the GraphSelectionHandler to map into\n address strings.\n@param selectionObject opaque object to be passed to the selection handler.\n@param global true if the selection is to be set on all known graph windows.\n@throws GraphException thrown if an error occurs while communicating with the graph service.","static":false,"name":"select","comment":"Tell the display to set the selection set on the graph based on some\n object that will be passed to the GraphSelectionHandler to map into\n address strings.","params":[{"type_long":"java.lang.Object","name":"selectionObject","comment":"opaque object to be passed to the selection handler.","type_short":"Object"},{"type_long":"boolean","name":"global","comment":"true if the selection is to be set on all known graph windows.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Tell the display to set the location cursor on the graph based on some\n object that will be passed to the GraphSelectionHandler to map into\n and address string.\n@param locationObject opaque object to be passed to the selection handler.\n@param global true if the selection is to be set on all known graph windows.\n@throws GraphException thrown if an error occurs while communicating with the graph service.","static":false,"name":"locate","comment":"Tell the display to set the location cursor on the graph based on some\n object that will be passed to the GraphSelectionHandler to map into\n and address string.","params":[{"type_long":"java.lang.Object","name":"locationObject","comment":"opaque object to be passed to the selection handler.","type_short":"Object"},{"type_long":"boolean","name":"global","comment":"true if the selection is to be set on all known graph windows.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"GraphDisplay","comment":"Handle object to a graph display.","fields":[{"type_long":"int","javadoc":"Aligns the graph text to the left","static":true,"name":"ALIGN_LEFT","comment":"Aligns the graph text to the left","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"Aligns the graph text to the center","static":true,"name":"ALIGN_CENTER","comment":"Aligns the graph text to the center","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"Aligns the graph text to the right","static":true,"name":"ALIGN_RIGHT","comment":"Aligns the graph text to the right","type_short":"int","constant_value":"2"}]}
