{"implements":["ghidra.program.model.address.AddressSetView"],"javadoc":"Class for storing sets of addresses.  This implementation uses a red-black tree where each\n entry node in the tree stores an address range.  The key for an entry node is the minimum address\n of the range and the value is the maximum address of the range.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Create a new empty Address Set.","static":false,"name":"<init>","comment":"Create a new empty Address Set.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a new empty Address Set.\n@param factory NOT USED.\n@deprecated use {@link #AddressSet()}  (will be kept until at least Ghidra 6.2)","static":false,"name":"<init>","comment":"Create a new empty Address Set.","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"factory","comment":"NOT USED.","type_short":"AddressFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a new Address Set from an address range.\n@param range the range of addresses to include in this set.","static":false,"name":"<init>","comment":"Create a new Address Set from an address range.","params":[{"type_long":"ghidra.program.model.address.AddressRange","name":"range","comment":"the range of addresses to include in this set.","type_short":"AddressRange"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a new Address Set from an address range.\n@param factory NOT USED.\n@param range the range of addresses to include in this set.\n@deprecated use {@link #AddressSet(AddressRange)}  (will be kept until at least Ghidra 6.2)","static":false,"name":"<init>","comment":"Create a new Address Set from an address range.","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"factory","comment":"NOT USED.","type_short":"AddressFactory"},{"type_long":"ghidra.program.model.address.AddressRange","name":"range","comment":"the range of addresses to include in this set.","type_short":"AddressRange"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new Address set containing a single range\n@param start the start address of the range\n@param end the end address of the range\n@throws IllegalArgumentException if the start and end addresses are in different spaces.  To\n avoid this, use the constructor  {@link #AddressSet(Program, Address, Address)}","static":false,"name":"<init>","comment":"Creates a new Address set containing a single range","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the start address of the range","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"the end address of the range","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new Address set containing a single range\n@param start the start address of the range\n@param end the end address of the range\n@param addressFactory NOT USED.\n@deprecated use {@link #AddressSet(Address, Address)}  (will be kept until at least Ghidra 6.2)","static":false,"name":"<init>","comment":"Creates a new Address set containing a single range","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"factory","comment":"","type_short":"AddressFactory"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the start address of the range","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"the end address of the range","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new Address set containing a single range\n@param start the start address of the range\n@param end the end address of the range\n@param program the program whose AddressFactory is used to resolve address ranges where the\n start and end are in different address spaces. If you use the constructor with just the\n start and end address and the addresses are in different spaces, you would get an\n IllegalArgumentException.","static":false,"name":"<init>","comment":"Creates a new Address set containing a single range","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program whose AddressFactory is used to resolve address ranges where the\n start and end are in different address spaces. If you use the constructor with just the\n start and end address and the addresses are in different spaces, you would get an\n IllegalArgumentException.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the start address of the range","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"the end address of the range","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a new Address Set from an existing Address Set.\n@param addrSet Existing Address Set to clone.\n@param addressFactory NOT USED.\n@deprecated use {@link #AddressSet(AddressSetView)}  (will be kept until at least Ghidra 6.2)","static":false,"name":"<init>","comment":"Create a new Address Set from an existing Address Set.","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"factory","comment":"","type_short":"AddressFactory"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a new Address Set from an existing Address Set.\n@param addrSet Existing Address Set to clone.","static":false,"name":"<init>","comment":"Create a new Address Set from an existing Address Set.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a new Address containing a single address.\n@param addr the address to be included in this address set.\n@param addressFactory NOT USED.\n@deprecated use {@link #AddressSet(Address)}  (will be kept until at least Ghidra 6.2)","static":false,"name":"<init>","comment":"Create a new Address containing a single address.","params":[{"type_long":"ghidra.program.model.address.AddressFactory","name":"factory","comment":"","type_short":"AddressFactory"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address to be included in this address set.","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a new Address containing a single address.\n@param addr the address to be included in this address set.","static":false,"name":"<init>","comment":"Create a new Address containing a single address.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"the address to be included in this address set.","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds the given address to this set.\n@param address the address to add","static":false,"name":"add","comment":"Adds the given address to this set.","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"the address to add","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add an address range to this set.\n@param range the range to add.","static":false,"name":"add","comment":"Add an address range to this set.","params":[{"type_long":"ghidra.program.model.address.AddressRange","name":"range","comment":"the range to add.","type_short":"AddressRange"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds the range to this set\n@param start the start address of the range to add\n@param end the end address of the range to add","static":false,"name":"add","comment":"Adds the range to this set","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the start address of the range to add","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"the end address of the range to add","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds the range to this set\n@param start the start address of the range to add\n@param end the end address of the range to add\n@throws IllegalArgumentException if the start and end addresses are in different spaces.  To\n avoid this, use the constructor  {@link #addRange(Program, Address, Address)}","static":false,"name":"addRange","comment":"Adds the range to this set","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the start address of the range to add","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"the end address of the range to add","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a range of addresses to this set.\n@param program program whose AddressFactory is used to resolve address ranges that span\n multiple address spaces.\n@param start the start address of the range to add\n@param end the end address of the range to add","static":false,"name":"addRange","comment":"Adds a range of addresses to this set.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program whose AddressFactory is used to resolve address ranges that span\n multiple address spaces.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the start address of the range to add","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"the end address of the range to add","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add all addresses of the given AddressSet to this set.\n@param addressSet set of addresses to add.","static":false,"name":"add","comment":"Add all addresses of the given AddressSet to this set.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addressSet","comment":"set of addresses to add.","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Deletes an address range from this set.\n@param range AddressRange to remove from this set","static":false,"name":"delete","comment":"Deletes an address range from this set.","params":[{"type_long":"ghidra.program.model.address.AddressRange","name":"range","comment":"AddressRange to remove from this set","type_short":"AddressRange"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Deletes a range of addresses from this set\n@param start the starting address of the range to be removed\n@param end the ending address of the range to be removed (inclusive)","static":false,"name":"delete","comment":"Deletes a range of addresses from this set","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the starting address of the range to be removed","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"the ending address of the range to be removed (inclusive)","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Deletes a range of addresses from this set\n@param start the starting address of the range to be removed\n@param end the ending address of the range to be removed","static":false,"name":"deleteRange","comment":"Deletes a range of addresses from this set","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"the starting address of the range to be removed","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"the ending address of the range to be removed","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Delete all addresses in the given AddressSet from this set.\n@param addressSet set of addresses to remove from this set.","static":false,"name":"delete","comment":"Delete all addresses in the given AddressSet from this set.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addressSet","comment":"set of addresses to remove from this set.","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes all addresses from the set.","static":false,"name":"clear","comment":"Removes all addresses from the set.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a string displaying the ranges in this set.\n@return a string displaying the ranges in this set.","static":false,"name":"printRanges","comment":"Returns a string displaying the ranges in this set.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"a string displaying the ranges in this set.","type_short":"String"}},{"javadoc":"Returns a list of the AddressRanges in this set.\n@return a list of the AddressRanges in this set.","static":false,"name":"toList","comment":"Returns a list of the AddressRanges in this set.","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.address.AddressRange>","comment":"a list of the AddressRanges in this set.","type_short":"List"}},{"javadoc":"","static":false,"name":"contains","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"contains","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"contains","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hasSameAddresses","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"intersects","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"intersectRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"intersect","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"union","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"subtract","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"isEmpty","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getMinAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getMaxAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getNumAddressRanges","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"iterator","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.address.AddressRange>","comment":"","type_short":"Iterator"}},{"javadoc":"","static":false,"name":"iterator","comment":"","params":[{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.address.AddressRange>","comment":"","type_short":"Iterator"}},{"javadoc":"","static":false,"name":"iterator","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.address.AddressRange>","comment":"","type_short":"Iterator"}},{"javadoc":"","static":false,"name":"getAddressRanges","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRangeIterator","comment":"","type_short":"AddressRangeIterator"}},{"javadoc":"","static":false,"name":"getAddressRanges","comment":"","params":[{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRangeIterator","comment":"","type_short":"AddressRangeIterator"}},{"javadoc":"","static":false,"name":"getAddressRanges","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRangeIterator","comment":"","type_short":"AddressRangeIterator"}},{"javadoc":"","static":false,"name":"getNumAddresses","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getAddresses","comment":"","params":[{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"","static":false,"name":"getAddresses","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"","static":false,"name":"intersects","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"xor","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getRangeContaining","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRange","comment":"","type_short":"AddressRange"}},{"javadoc":"","static":false,"name":"getFirstRange","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRange","comment":"","type_short":"AddressRange"}},{"javadoc":"","static":false,"name":"getLastRange","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRange","comment":"","type_short":"AddressRange"}},{"javadoc":"","static":false,"name":"intersectsBinary","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"intersectsLinear","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"containsLinear","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Determines if the optimal algorithm for an operation.  Generally set operations can be done\n either by applying each range of the given address set to this set OR by linearly visiting\n each range in both this set and the other set.  The first approach involves doing a\n binary search in this set for each range in the given set costing Nlog(M) operations where\n N is the size of this set and M is the size of the other set.  The second approach involves\n visiting every range in both sets in order so the cost is N + M.  Therefor, if N+M is less\n than Nlog(M), we should use a linear algorithm.\n@param set the other address set to operate against.\n@return true if a linear algorithm will likely be faster that a series of binary searches.","static":false,"name":"useLinearAlgorithm","comment":"Determines if the optimal algorithm for an operation.  Generally set operations can be done\n either by applying each range of the given address set to this set OR by linearly visiting\n each range in both this set and the other set.  The first approach involves doing a\n binary search in this set for each range in the given set costing Nlog(M) operations where\n N is the size of this set and M is the size of the other set.  The second approach involves\n visiting every range in both sets in order so the cost is N + M.  Therefor, if N+M is less\n than Nlog(M), we should use a linear algorithm.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"the other address set to operate against.","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"boolean","comment":"true if a linear algorithm will likely be faster that a series of binary searches.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"containsBinary","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"intersectRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSet","name":"set","comment":"","type_short":"AddressSet"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"intersectLinear","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"intersectBinary","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"min","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr1","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"addr2","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"compareRange","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressRange","name":"range1","comment":"","type_short":"AddressRange"},{"type_long":"ghidra.program.model.address.AddressRange","name":"range2","comment":"","type_short":"AddressRange"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet.RangeCompare","comment":"","type_short":"RangeCompare"}},{"javadoc":"","static":false,"name":"compareRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"minAddr1","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"maxAddr1","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"minAddr2","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"maxAddr2","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet.RangeCompare","comment":"","type_short":"RangeCompare"}},{"javadoc":"","static":false,"name":"deleteSets","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"xorSets","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"getRange","comment":"","params":[{"type_long":"ghidra.util.datastruct.RedBlackEntry<ghidra.program.model.address.Address,ghidra.program.model.address.Address>","name":"entry","comment":"","type_short":"RedBlackEntry"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRange","comment":"","type_short":"AddressRange"}},{"javadoc":"","static":false,"name":"contains","comment":"","params":[{"type_long":"ghidra.util.datastruct.RedBlackEntry<ghidra.program.model.address.Address,ghidra.program.model.address.Address>","name":"entry","comment":"","type_short":"RedBlackEntry"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"mergeSets","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"consumeFollowOnNodes","comment":"","params":[{"type_long":"ghidra.util.datastruct.RedBlackEntry<ghidra.program.model.address.Address,ghidra.program.model.address.Address>","name":"node","comment":"","type_short":"RedBlackEntry"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"checkValidRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createRangeNode","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.util.datastruct.RedBlackEntry<ghidra.program.model.address.Address,ghidra.program.model.address.Address>","comment":"","type_short":"RedBlackEntry"}},{"javadoc":"","static":false,"name":"updateRangeEndAddress","comment":"","params":[{"type_long":"ghidra.util.datastruct.RedBlackEntry<ghidra.program.model.address.Address,ghidra.program.model.address.Address>","name":"entry","comment":"","type_short":"RedBlackEntry"},{"type_long":"ghidra.program.model.address.Address","name":"newEnd","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"deleteRangeNode","comment":"","params":[{"type_long":"ghidra.util.datastruct.RedBlackEntry<ghidra.program.model.address.Address,ghidra.program.model.address.Address>","name":"entry","comment":"","type_short":"RedBlackEntry"}],"throws":[],"return":{"type_long":"ghidra.util.datastruct.RedBlackEntry<ghidra.program.model.address.Address,ghidra.program.model.address.Address>","comment":"","type_short":"RedBlackEntry"}},{"javadoc":"","static":false,"name":"findFirstAddressInCommon","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}}],"name":"AddressSet","comment":"Class for storing sets of addresses.  This implementation uses a red-black tree where each\n entry node in the tree stores an address range.  The key for an entry node is the minimum address\n of the range and the value is the maximum address of the range.","fields":[{"type_long":"double","javadoc":"","static":true,"name":"LOGBASE2","comment":"","type_short":"double","constant_value":null},{"type_long":"ghidra.util.datastruct.RedBlackTree<ghidra.program.model.address.Address,ghidra.program.model.address.Address>","javadoc":"","static":false,"name":"rbTree","comment":"","type_short":"RedBlackTree","constant_value":null},{"type_long":"ghidra.util.datastruct.RedBlackEntry<ghidra.program.model.address.Address,ghidra.program.model.address.Address>","javadoc":"","static":false,"name":"lastNode","comment":"","type_short":"RedBlackEntry","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"addressCount","comment":"","type_short":"long","constant_value":null}]}
