{"implements":[],"javadoc":"<code>AddressMapImpl<\/code> provides a stand-alone AddressMap.\n An AddressMapimpl instance should only be used to decode keys which it has generated.\n If this map is used for a specific program instance, the map should be discard if any changes \n are made to that programs address map (e.g., removing or renaming overlay spaces).","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a new AddressMapImpl with a mapID of 0.","static":false,"name":"<init>","comment":"Creates a new AddressMapImpl with a mapID of 0.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new AddressMapImpl with the specified mapID\n@param mapID the 8-bit value is placed in the upper 8 bits of every address encoding.","static":false,"name":"<init>","comment":"Creates a new AddressMapImpl with the specified mapID","params":[{"type_long":"byte","name":"mapID","comment":"the 8-bit value is placed in the upper 8 bits of every address encoding.","type_short":"byte"},{"type_long":"ghidra.program.model.address.AddressFactory","name":"addrFactory","comment":"","type_short":"AddressFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"init","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getBaseAddressIndex","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"checkAddressSpace","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSpace","name":"addrSpace","comment":"","type_short":"AddressSpace"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.address.AddressMap#decodeAddress(long)","static":false,"name":"decodeAddress","comment":"","params":[{"type_long":"long","name":"value","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Generate a unique key for the specified addr.  Only addresses from a single address space or \n single program should be passed to this method. Only limited checking is not performed in order to \n improve performance.\n@param addr address\n@see ghidra.program.model.address.AddressMap#getKey(ghidra.program.model.address.Address)","static":false,"name":"getKey","comment":"Generate a unique key for the specified addr.  Only addresses from a single address space or \n single program should be passed to this method. Only limited checking is not performed in order to \n improve performance.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"address","type_short":"Address"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"@see ghidra.program.model.address.AddressMap#findKeyRange(java.util.List, ghidra.program.model.address.Address)","static":false,"name":"findKeyRange","comment":"","params":[{"type_long":"java.util.List<ghidra.program.model.address.KeyRange>","name":"keyRangeList","comment":"","type_short":"List"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see ghidra.program.model.address.AddressMap#getKeyRanges(ghidra.program.model.address.Address, ghidra.program.model.address.Address)","static":false,"name":"getKeyRanges","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.address.KeyRange>","comment":"","type_short":"List"}},{"javadoc":"@see ghidra.program.model.address.AddressMap#getKeyRanges(ghidra.program.model.address.AddressSetView)","static":false,"name":"getKeyRanges","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.address.KeyRange>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"addKeyRanges","comment":"","params":[{"type_long":"java.util.List<ghidra.program.model.address.KeyRange>","name":"keyRangeList","comment":"","type_short":"List"},{"type_long":"ghidra.program.model.address.Address","name":"start","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"end","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"min","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"a1","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"a2","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"max","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"a1","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"a2","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Reconcile address space changes using associated address factory.\n This method should be invoked following an undo\/redo (if the\n associated address factory may have changed) or removal of an\n overlay memory block.","static":false,"name":"reconcile","comment":"Reconcile address space changes using associated address factory.\n This method should be invoked following an undo\/redo (if the\n associated address factory may have changed) or removal of an\n overlay memory block.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"AddressMapImpl","comment":"AddressMapImpl provides a stand-alone AddressMap.\n An AddressMapimpl instance should only be used to decode keys which it has generated.\n If this map is used for a specific program instance, the map should be discard if any changes \n are made to that programs address map (e.g., removing or renaming overlay spaces).","fields":[{"type_long":"int","javadoc":"","static":true,"name":"ADDR_OFFSET_SIZE","comment":"","type_short":"int","constant_value":"32"},{"type_long":"int","javadoc":"","static":true,"name":"MAP_ID_SIZE","comment":"","type_short":"int","constant_value":"8"},{"type_long":"long","javadoc":"","static":true,"name":"MAX_OFFSET","comment":"","type_short":"long","constant_value":"4294967295"},{"type_long":"long","javadoc":"","static":true,"name":"ADDR_OFFSET_MASK","comment":"","type_short":"long","constant_value":"4294967295"},{"type_long":"long","javadoc":"","static":true,"name":"MAP_ID_MASK","comment":"","type_short":"long","constant_value":"-72057594037927936"},{"type_long":"long","javadoc":"","static":true,"name":"BASE_MASK","comment":"","type_short":"long","constant_value":"-4294967296"},{"type_long":"int","javadoc":"","static":true,"name":"BASE_ID_SIZE","comment":"","type_short":"int","constant_value":"24"},{"type_long":"int","javadoc":"","static":true,"name":"BASE_ID_MASK","comment":"","type_short":"int","constant_value":"16777215"},{"type_long":"int","javadoc":"","static":true,"name":"STACK_SPACE_ID","comment":"","type_short":"int","constant_value":"16777215"},{"type_long":"java.util.HashMap<java.lang.String,ghidra.program.model.address.AddressSpace>","javadoc":"","static":false,"name":"spaceMap","comment":"","type_short":"HashMap","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSpace","javadoc":"","static":false,"name":"stackSpace","comment":"","type_short":"AddressSpace","constant_value":null},{"type_long":"ghidra.program.model.address.AddressFactory","javadoc":"","static":false,"name":"addrFactory","comment":"","type_short":"AddressFactory","constant_value":null},{"type_long":"ghidra.program.model.address.Address[]","javadoc":"","static":false,"name":"baseAddrs","comment":"","type_short":"ghidra.program.model.address.Address[]","constant_value":null},{"type_long":"ghidra.program.model.address.Address[]","javadoc":"","static":false,"name":"sortedBaseStartAddrs","comment":"","type_short":"ghidra.program.model.address.Address[]","constant_value":null},{"type_long":"ghidra.program.model.address.Address[]","javadoc":"","static":false,"name":"sortedBaseEndAddrs","comment":"","type_short":"ghidra.program.model.address.Address[]","constant_value":null},{"type_long":"java.util.HashMap<ghidra.program.model.address.Address,java.lang.Integer>","javadoc":"","static":false,"name":"addrToIndexMap","comment":"","type_short":"HashMap","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"lastBaseIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"mapIdBits","comment":"","type_short":"long","constant_value":null},{"type_long":"java.util.Comparator<java.lang.Object>","javadoc":"Comparator used to identify if an addr occurs before or after the \n start of a key range.","static":false,"name":"addressInsertionKeyRangeComparator","comment":"Comparator used to identify if an addr occurs before or after the \n start of a key range.","type_short":"Comparator","constant_value":null}]}
