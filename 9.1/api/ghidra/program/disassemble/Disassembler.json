{"implements":["ghidra.program.disassemble.DisassemblerConflictHandler"],"javadoc":"Class to perform disassembly.  Contains the logic to follow instruction\n flows to continue the disassembly.\n 17-Nov-2008: moved to ghidra.program.disassemble package since this is now used during \n \t\t\t\t\t      language upgrades which may occur during construction of ProgramDB.\n 12-Dec-2012: major refactor of disassembly to perform bulk add of instructions to \n program to avoid context related conflicts","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Get a suitable disassembler instance. \n Marking of bad instructions honors \"Mark Bad Disassembly\" \n program Disassembler option.\n@param program the program to be disassembled.\n@param monitor progress monitor\n@param listener object to notify of disassembly messages.","static":true,"name":"getDisassembler","comment":"Get a suitable disassembler instance. \n Marking of bad instructions honors \"Mark Bad Disassembly\" \n program Disassembler option.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to be disassembled.","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"progress monitor","type_short":"TaskMonitor"},{"type_long":"ghidra.program.disassemble.DisassemblerMessageListener","name":"listener","comment":"object to notify of disassembly messages.","type_short":"DisassemblerMessageListener"}],"throws":[],"return":{"type_long":"ghidra.program.disassemble.Disassembler","comment":"","type_short":"Disassembler"}},{"javadoc":"Get a suitable disassembler instance.\n Intended for block pseudo-disassembly use only when the method \n {@link Disassembler#pseudoDisassembleBlock(MemBuffer, RegisterValue, int)}\n is used.\n@param language processor language\n@param addrFactory address factory\n@param monitor progress monitor\n@param listener object to notify of disassembly messages.","static":true,"name":"getDisassembler","comment":"Get a suitable disassembler instance.\n Intended for block pseudo-disassembly use only when the method \n Disassembler#pseudoDisassembleBlock(MemBuffer, RegisterValue, int)\n is used.","params":[{"type_long":"ghidra.program.model.lang.Language","name":"language","comment":"processor language","type_short":"Language"},{"type_long":"ghidra.program.model.address.AddressFactory","name":"addrFactory","comment":"address factory","type_short":"AddressFactory"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"progress monitor","type_short":"TaskMonitor"},{"type_long":"ghidra.program.disassemble.DisassemblerMessageListener","name":"listener","comment":"object to notify of disassembly messages.","type_short":"DisassemblerMessageListener"}],"throws":[],"return":{"type_long":"ghidra.program.disassemble.Disassembler","comment":"","type_short":"Disassembler"}},{"javadoc":"Get a suitable disassembler instance.\n@param program the program to be disassembled.\n@param language the language module that \"understands\" the bytes.\n@param markBadInstructions if true bad instructions will be marked\n@param markUnimplementedPcode if true instructions with unimplemented pcode will be marked\n@param restrictToExecuteMemory if true disassembly will only be permitted with executable memory blocks\n@param monitor progress monitor\n@param listener object to notify of disassembly messages.","static":true,"name":"getDisassembler","comment":"Get a suitable disassembler instance.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to be disassembled.","type_short":"Program"},{"type_long":"boolean","name":"markBadInstructions","comment":"if true bad instructions will be marked","type_short":"boolean"},{"type_long":"boolean","name":"markUnimplementedPcode","comment":"if true instructions with unimplemented pcode will be marked","type_short":"boolean"},{"type_long":"boolean","name":"restrictToExecuteMemory","comment":"if true disassembly will only be permitted with executable memory blocks","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"progress monitor","type_short":"TaskMonitor"},{"type_long":"ghidra.program.disassemble.DisassemblerMessageListener","name":"listener","comment":"object to notify of disassembly messages.","type_short":"DisassemblerMessageListener"}],"throws":[],"return":{"type_long":"ghidra.program.disassemble.Disassembler","comment":"","type_short":"Disassembler"}},{"javadoc":"Disassembler constructor.  Marking of bad instructions honors \"Mark Bad Disassembly\" \n program Disassembler option.\n@param program the program to be disassembled.\n@param monitor progress monitor\n@param listener object to notify of disassembly messages.","static":false,"name":"<init>","comment":"Disassembler constructor.  Marking of bad instructions honors \"Mark Bad Disassembly\" \n program Disassembler option.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to be disassembled.","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"progress monitor","type_short":"TaskMonitor"},{"type_long":"ghidra.program.disassemble.DisassemblerMessageListener","name":"listener","comment":"object to notify of disassembly messages.","type_short":"DisassemblerMessageListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Disassembler constructor.  Intended for block pseudo-disassembly use only.\n@param language processor language\n@param addrFactory address factory\n@param monitor progress monitor\n@param listener object to notify of disassembly messages.","static":false,"name":"<init>","comment":"Disassembler constructor.  Intended for block pseudo-disassembly use only.","params":[{"type_long":"ghidra.program.model.lang.Language","name":"language","comment":"processor language","type_short":"Language"},{"type_long":"ghidra.program.model.address.AddressFactory","name":"addrFactory","comment":"address factory","type_short":"AddressFactory"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"progress monitor","type_short":"TaskMonitor"},{"type_long":"ghidra.program.disassemble.DisassemblerMessageListener","name":"listener","comment":"object to notify of disassembly messages.","type_short":"DisassemblerMessageListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Disassembler constructor\n@param program the program to be disassembled.\n@param language the language module that \"understands\" the bytes.\n@param markBadInstructions if true bad instructions will be marked\n@param markUnimplementedPcode if true instructions with unimplemented pcode will be marked\n@param restrictToExecuteMemory if true disassembly will only be permitted with executable memory blocks\n@param monitor progress monitor\n@param listener object to notify of disassembly messages.","static":false,"name":"<init>","comment":"Disassembler constructor","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to be disassembled.","type_short":"Program"},{"type_long":"boolean","name":"markBadInstructions","comment":"if true bad instructions will be marked","type_short":"boolean"},{"type_long":"boolean","name":"markUnimplementedPcode","comment":"if true instructions with unimplemented pcode will be marked","type_short":"boolean"},{"type_long":"boolean","name":"restrictToExecuteMemory","comment":"if true disassembly will only be permitted with executable memory blocks","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"progress monitor","type_short":"TaskMonitor"},{"type_long":"ghidra.program.disassemble.DisassemblerMessageListener","name":"listener","comment":"object to notify of disassembly messages.","type_short":"DisassemblerMessageListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.lang.Language","name":"language","comment":"","type_short":"Language"},{"type_long":"ghidra.program.model.address.AddressFactory","name":"addrFactory","comment":"","type_short":"AddressFactory"},{"type_long":"boolean","name":"markBadInstructions","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"markUnimplementedPcode","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"restrictToExecuteMemory","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.program.disassemble.DisassemblerMessageListener","name":"listener","comment":"","type_short":"DisassemblerMessageListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set seed context which will be used to establish initial context at starting points\n which are not arrived at via a natural disassembly flow.  A null value will disable\n use of any previously set seed context\n@param seedContext","static":false,"name":"setSeedContext","comment":"Set seed context which will be used to establish initial context at starting points\n which are not arrived at via a natural disassembly flow.  A null value will disable\n use of any previously set seed context","params":[{"type_long":"ghidra.program.disassemble.DisassemblerContextImpl","name":"seedContext","comment":"","type_short":"DisassemblerContextImpl"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setInstructionSetSizeLimit","comment":"","params":[{"type_long":"int","name":"limit","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the maximum number of instructions in a single run which contain the same byte values.\n Disassembly flow will stop and be flagged when this threshold is encountered.\n This check is set to MAX_REPEAT_PATTERN_LENGTH by default, and can be disabled by setting a value of -1\n NOTE: This restriction will only work for those cases where a given repeated byte \n results in an instruction which has a fall-through.\n@param maxInstructions limit on the number of consecutive instructions with the same \n byte values","static":false,"name":"setRepeatPatternLimit","comment":"Set the maximum number of instructions in a single run which contain the same byte values.\n Disassembly flow will stop and be flagged when this threshold is encountered.\n This check is set to MAX_REPEAT_PATTERN_LENGTH by default, and can be disabled by setting a value of -1\n NOTE: This restriction will only work for those cases where a given repeated byte \n results in an instruction which has a fall-through.","params":[{"type_long":"int","name":"maxInstructions","comment":"limit on the number of consecutive instructions with the same \n byte values","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the region over which the repeat pattern limit will be ignored.\n This allows areas which have been explicitly disassembled to be \n free of bad bookmarks caused by the repeat pattern limit being exceeded.\n@param set region over which the repeat pattern limit will be ignored","static":false,"name":"setRepeatPatternLimitIgnored","comment":"Set the region over which the repeat pattern limit will be ignored.\n This allows areas which have been explicitly disassembled to be \n free of bad bookmarks caused by the repeat pattern limit being exceeded.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"set","comment":"region over which the repeat pattern limit will be ignored","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@param program\n@return true if program MARK_BAD_INSTRUCTION_PROPERTY has been enabled","static":true,"name":"isMarkBadDisassemblyOptionEnabled","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"boolean","comment":"true if program MARK_BAD_INSTRUCTION_PROPERTY has been enabled","type_short":"boolean"}},{"javadoc":"@param program\n@return true if program MARK_UNIMPL_PCODE_PROPERTY has been enabled","static":true,"name":"isMarkUnimplementedPcodeOptionEnabled","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"boolean","comment":"true if program MARK_UNIMPL_PCODE_PROPERTY has been enabled","type_short":"boolean"}},{"javadoc":"@param program\n@return true if program RESTRICT_DISASSEMBLY_TO_EXECUTE_MEMORY_PROPERTY has been enabled","static":true,"name":"isRestrictToExecuteMemory","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"boolean","comment":"true if program RESTRICT_DISASSEMBLY_TO_EXECUTE_MEMORY_PROPERTY has been enabled","type_short":"boolean"}},{"javadoc":"","static":true,"name":"getInitializedMemory","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"boolean","name":"exectuableMemoryOnly","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"","type_short":"AddressSetView"}},{"javadoc":"Attempt disassembly of all undefined code units within the specified set of addresses.\n NOTE: A single instance of this Disassembler does not support concurrent\n invocations of the various disassemble methods.\n Disassembler must be instantiated with a Program object.\n@param startSet the minimum set of addresses to disassemble\n@param restrictedSet the set of addresses that disassembling is restricted to (may be null)\n@param doFollowFlow flag to follow references while disassembling.\n@return the set of addresses that were disassembled.","static":false,"name":"disassemble","comment":"Attempt disassembly of all undefined code units within the specified set of addresses.\n NOTE: A single instance of this Disassembler does not support concurrent\n invocations of the various disassemble methods.\n Disassembler must be instantiated with a Program object.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"startSet","comment":"the minimum set of addresses to disassemble","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"restrictedSet","comment":"the set of addresses that disassembling is restricted to (may be null)","type_short":"AddressSetView"},{"type_long":"boolean","name":"doFollowFlow","comment":"flag to follow references while disassembling.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"the set of addresses that were disassembled.","type_short":"AddressSet"}},{"javadoc":"Attempt disassembly of all undefined code units within the specified set of addresses.\n NOTE: A single instance of this Disassembler does not support concurrent\n invocations of the various disassemble methods.\n Disassembler must be instantiated with a Program object.\n@param startSet the minimum set of addresses to disassemble\n@param restrictedSet the set of addresses that disassembling is restricted to (may be null)\n@param initialContextValue initial context value to be applied at the\n startAddr.  If not null this value will take precedence when combined with\n any seed value or program context.\n@param doFollowFlow flag to follow references while disassembling.\n@return the set of addresses that were disassembled.","static":false,"name":"disassemble","comment":"Attempt disassembly of all undefined code units within the specified set of addresses.\n NOTE: A single instance of this Disassembler does not support concurrent\n invocations of the various disassemble methods.\n Disassembler must be instantiated with a Program object.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"startSet","comment":"the minimum set of addresses to disassemble","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"restrictedSet","comment":"the set of addresses that disassembling is restricted to (may be null)","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.lang.RegisterValue","name":"initialContextValue","comment":"initial context value to be applied at the\n startAddr.  If not null this value will take precedence when combined with\n any seed value or program context.","type_short":"RegisterValue"},{"type_long":"boolean","name":"doFollowFlow","comment":"flag to follow references while disassembling.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"the set of addresses that were disassembled.","type_short":"AddressSet"}},{"javadoc":"Disassembles code starting at startAddr and restricted to addrSet.\n NOTE: A single instance of this Disassembler does not support concurrent\n invocations of the various disassemble methods.\n Disassembler must be instantiated with a Program object.\n@param startAddr the address to begin disassembling.\n@param restrictedSet the set of addresses that disassembling is restricted to.\n@return AddressSet the set of addresses that were disassembled.","static":false,"name":"disassemble","comment":"Disassembles code starting at startAddr and restricted to addrSet.\n NOTE: A single instance of this Disassembler does not support concurrent\n invocations of the various disassemble methods.\n Disassembler must be instantiated with a Program object.","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"the address to begin disassembling.","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"restrictedSet","comment":"the set of addresses that disassembling is restricted to.","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"AddressSet the set of addresses that were disassembled.","type_short":"AddressSet"}},{"javadoc":"Disassembles code starting at startAddr and restricted to addrSet.\n NOTE: A single instance of this Disassembler does not support concurrent\n invocations of the various disassemble methods. \n Disassembler must be instantiated with a Program object.\n@param startAddr the address to begin disassembling.\n@param restrictedSet the set of addresses that disassembling is restricted to.\n@param doFollowFlow flag to follow references while disassembling.\n@return AddressSet the set of addresses that were disassembled.","static":false,"name":"disassemble","comment":"Disassembles code starting at startAddr and restricted to addrSet.\n NOTE: A single instance of this Disassembler does not support concurrent\n invocations of the various disassemble methods. \n Disassembler must be instantiated with a Program object.","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"the address to begin disassembling.","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"restrictedSet","comment":"the set of addresses that disassembling is restricted to.","type_short":"AddressSetView"},{"type_long":"boolean","name":"doFollowFlow","comment":"flag to follow references while disassembling.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"AddressSet the set of addresses that were disassembled.","type_short":"AddressSet"}},{"javadoc":"Disassembles code starting at startAddr and restricted to addrSet.\n NOTE: A single instance of this Disassembler does not support concurrent\n invocations of the various disassemble methods.  \n Disassembler must be instantiated with a Program object.\n@param startAddr the address to begin disassembling.\n@param restrictedSet the set of addresses that disassembling is restricted to.\n@param initialContextValue initial context value to be applied at the\n startAddr.  If not null this value will take precedence when combined with\n any seed value or program context.\n@param doFollowFlow flag to follow references while disassembling.\n@return AddressSet the set of addresses that were disassembled.","static":false,"name":"disassemble","comment":"Disassembles code starting at startAddr and restricted to addrSet.\n NOTE: A single instance of this Disassembler does not support concurrent\n invocations of the various disassemble methods.  \n Disassembler must be instantiated with a Program object.","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"the address to begin disassembling.","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"restrictedSet","comment":"the set of addresses that disassembling is restricted to.","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.lang.RegisterValue","name":"initialContextValue","comment":"initial context value to be applied at the\n startAddr.  If not null this value will take precedence when combined with\n any seed value or program context.","type_short":"RegisterValue"},{"type_long":"boolean","name":"doFollowFlow","comment":"flag to follow references while disassembling.","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"AddressSet the set of addresses that were disassembled.","type_short":"AddressSet"}},{"javadoc":"","static":false,"name":"disassembleNextInstructionSet","comment":"","params":[{"type_long":"ghidra.program.model.lang.InstructionBlock","name":"firstBlock","comment":"","type_short":"InstructionBlock"},{"type_long":"ghidra.program.model.mem.DumbMemBufferImpl","name":"programMemBuffer","comment":"","type_short":"DumbMemBufferImpl"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"previouslyDisassembled","comment":"","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.InstructionSet","comment":"","type_short":"InstructionSet"}},{"javadoc":"Clear any retained context state which may have been accumulated.\n Use of this method is only needed when using the pseudoDisassembleBlock \n method over an extended code range to avoid excessive in-memory state accumulation.","static":false,"name":"resetDisassemblerContext","comment":"Clear any retained context state which may have been accumulated.\n Use of this method is only needed when using the pseudoDisassembleBlock \n method over an extended code range to avoid excessive in-memory state accumulation.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Perform a psuedo-disassembly of an single instruction block only following fall-throughs.\n WARNING! This method should not be used in conjunction with other disassembly methods\n on the this Disassembler instance.  Disassembler must be instantiated with a Program object.\n@param addr start of block\n@param defaultContextValue starting context to use if no context has previously been established\n for the specified startAddr\n@param limit maximum number of instructions to disassemble\n@return instruction block of pseudo-instructions","static":false,"name":"pseudoDisassembleBlock","comment":"Perform a psuedo-disassembly of an single instruction block only following fall-throughs.\n WARNING! This method should not be used in conjunction with other disassembly methods\n on the this Disassembler instance.  Disassembler must be instantiated with a Program object.","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"start of block","type_short":"Address"},{"type_long":"ghidra.program.model.lang.RegisterValue","name":"defaultContextValue","comment":"starting context to use if no context has previously been established\n for the specified startAddr","type_short":"RegisterValue"},{"type_long":"int","name":"limit","comment":"maximum number of instructions to disassemble","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.InstructionBlock","comment":"instruction block of pseudo-instructions","type_short":"InstructionBlock"}},{"javadoc":"Perform a psuedo-disassembly of an single instruction block only following fall-throughs.\n WARNING! This method should not be used in conjunction with other disassembly methods\n on the this Disassembler instance.\n@param blockMemBuffer block memory buffer\n@param defaultContextValue starting context to use if no context has previously been established\n for the specified startAddr\n@param limit maximum number of instructions to disassemble\n@return instruction block of pseudo-instructions or null if minimum address of blockMemBuffer \n is not properly aligned for instruction parsing.","static":false,"name":"pseudoDisassembleBlock","comment":"Perform a psuedo-disassembly of an single instruction block only following fall-throughs.\n WARNING! This method should not be used in conjunction with other disassembly methods\n on the this Disassembler instance.","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"blockMemBuffer","comment":"block memory buffer","type_short":"MemBuffer"},{"type_long":"ghidra.program.model.lang.RegisterValue","name":"defaultContextValue","comment":"starting context to use if no context has previously been established\n for the specified startAddr","type_short":"RegisterValue"},{"type_long":"int","name":"limit","comment":"maximum number of instructions to disassemble","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.InstructionBlock","comment":"instruction block of pseudo-instructions or null if minimum address of blockMemBuffer \n is not properly aligned for instruction parsing.","type_short":"InstructionBlock"}},{"javadoc":"Examine delay-slotted instruction to determine if it has a fall-through\n@param dsInstr pseudo-instruction within existingBlock\n@param existingBlock InstructionBlock containing dsInstr\n@return true if fallthrough exists","static":false,"name":"delaySlottedInstructionHasFallthrough","comment":"Examine delay-slotted instruction to determine if it has a fall-through","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"dsInstr","comment":"pseudo-instruction within existingBlock","type_short":"Instruction"},{"type_long":"ghidra.program.model.lang.InstructionBlock","name":"existingBlock","comment":"InstructionBlock containing dsInstr","type_short":"InstructionBlock"}],"throws":[],"return":{"type_long":"boolean","comment":"true if fallthrough exists","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setMemoryConstraintError","comment":"","params":[{"type_long":"ghidra.program.model.lang.InstructionBlock","name":"block","comment":"","type_short":"InstructionBlock"},{"type_long":"ghidra.program.model.address.Address","name":"flowFrom","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"disassembleInstructionBlock","comment":"","params":[{"type_long":"ghidra.program.model.lang.InstructionBlock","name":"block","comment":"","type_short":"InstructionBlock"},{"type_long":"ghidra.program.model.mem.MemBuffer","name":"blockMemBuffer","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.program.model.address.Address","name":"flowFrom","comment":"","type_short":"Address"},{"type_long":"int","name":"limit","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.lang.InstructionSet","name":"instructionSet","comment":"","type_short":"InstructionSet"},{"type_long":"boolean","name":"skipIfBlockAlreadyDisassembled","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"endBlockEarly","comment":"","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"inst","comment":"","type_short":"Instruction"},{"type_long":"ghidra.program.model.address.Address","name":"fallThruAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"limit","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.lang.InstructionBlock","name":"block","comment":"","type_short":"InstructionBlock"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"endBlockOnCall","comment":"","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"inst","comment":"","type_short":"Instruction"},{"type_long":"ghidra.program.model.address.Address","name":"fallThruAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.lang.InstructionBlock","name":"block","comment":"","type_short":"InstructionBlock"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Adjust disassembler context prior to disassembly of a new instruction.\n@param instrMemBuffer\n@throws UnknownInstructionException if instruction is invalid","static":false,"name":"adjustPreParseContext","comment":"Adjust disassembler context prior to disassembly of a new instruction.","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"instrMemBuffer","comment":"","type_short":"MemBuffer"}],"throws":[{"type_long":"ghidra.program.model.lang.UnknownInstructionException","comment":"if instruction is invalid","type_short":"UnknownInstructionException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPseudoInstruction","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.lang.InstructionPrototype","name":"prototype","comment":"","type_short":"InstructionPrototype"},{"type_long":"ghidra.program.model.mem.MemBuffer","name":"memBuffer","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.program.model.lang.RegisterValue","name":"contextValue","comment":"","type_short":"RegisterValue"},{"type_long":"ghidra.program.model.lang.InstructionBlock","name":"block","comment":"","type_short":"InstructionBlock"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"","type_short":"AddressOverflowException"}],"return":{"type_long":"ghidra.app.util.PseudoInstruction","comment":"","type_short":"PseudoInstruction"}},{"javadoc":"","static":false,"name":"isBlockTerminationOK","comment":"","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"instr","comment":"","type_short":"Instruction"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Process a new instruction which has just been parsed.  This method is responsible for\n adding the instruction to the current block as well as any delay-slotted instructions.\n This method may be overridden and the instruction re-parsed if necessary.\n@param inst\n@param blockMemBuffer\n@param block\n@param instructionSet\n@return instruction fallthrough address or null if no fallthrough\n@throws InsufficientBytesException if a memory error occurs during instruction processing\n@throws UnknownInstructionException if an error occurs during a modified re-parse of\n the instruction.\n@throws AddressOverflowException\n@throws NestedDelaySlotException","static":false,"name":"processInstruction","comment":"Process a new instruction which has just been parsed.  This method is responsible for\n adding the instruction to the current block as well as any delay-slotted instructions.\n This method may be overridden and the instruction re-parsed if necessary.","params":[{"type_long":"ghidra.app.util.PseudoInstruction","name":"inst","comment":"","type_short":"PseudoInstruction"},{"type_long":"ghidra.program.model.mem.MemBuffer","name":"blockMemBuffer","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.program.model.lang.InstructionBlock","name":"block","comment":"","type_short":"InstructionBlock"},{"type_long":"ghidra.program.model.lang.InstructionSet","name":"instructionSet","comment":"","type_short":"InstructionSet"}],"throws":[{"type_long":"ghidra.program.model.lang.InsufficientBytesException","comment":"if a memory error occurs during instruction processing","type_short":"InsufficientBytesException"},{"type_long":"ghidra.program.model.lang.UnknownInstructionException","comment":"if an error occurs during a modified re-parse of\n the instruction.","type_short":"UnknownInstructionException"},{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"","type_short":"AddressOverflowException"},{"type_long":"ghidra.program.model.lang.NestedDelaySlotException","comment":"","type_short":"NestedDelaySlotException"}],"return":{"type_long":"ghidra.program.model.address.Address","comment":"instruction fallthrough address or null if no fallthrough","type_short":"Address"}},{"javadoc":"","static":false,"name":"processInstructionFlows","comment":"","params":[{"type_long":"ghidra.app.util.PseudoInstruction","name":"inst","comment":"","type_short":"PseudoInstruction"},{"type_long":"ghidra.program.model.lang.InstructionBlock","name":"block","comment":"","type_short":"InstructionBlock"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"checkForIndirectCallFlow","comment":"","params":[{"type_long":"ghidra.app.util.PseudoInstruction","name":"inst","comment":"","type_short":"PseudoInstruction"},{"type_long":"ghidra.program.model.symbol.FlowType","name":"flowType","comment":"","type_short":"FlowType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"parseDelaySlots","comment":"","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"inst","comment":"","type_short":"Instruction"},{"type_long":"ghidra.program.model.mem.MemBuffer","name":"blockMemBuffer","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.program.model.lang.InstructionBlock","name":"block","comment":"","type_short":"InstructionBlock"}],"throws":[{"type_long":"ghidra.program.model.lang.NestedDelaySlotException","comment":"","type_short":"NestedDelaySlotException"}],"return":{"type_long":"java.util.List<ghidra.app.util.PseudoInstruction>","comment":"","type_short":"List"}},{"javadoc":"Check if the called function doesn't return\n@return true if the call also falls through to this instruction","static":false,"name":"isNoReturnCall","comment":"Check if the called function doesn't return","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"instr","comment":"","type_short":"Instruction"},{"type_long":"ghidra.program.model.address.Address","name":"target","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the call also falls through to this instruction","type_short":"boolean"}},{"javadoc":"","static":false,"name":"markInstructionError","comment":"","params":[{"type_long":"ghidra.program.model.lang.InstructionError","name":"conflict","comment":"","type_short":"InstructionError"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isBookmarkAllowed","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"markCallConflict","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"flowFrom","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.listing.CodeUnit","name":"conflictCodeUnit","comment":"","type_short":"CodeUnit"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"markUnimplementedPcode","comment":"","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"instr","comment":"","type_short":"Instruction"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Mark all instructions with unimplemented pcode over the specified address set\n@param program\n@param addressSet restricted address set or null for entire program\n@param monitor\n@throws CancelledException","static":true,"name":"markUnimplementedPcode","comment":"Mark all instructions with unimplemented pcode over the specified address set","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"addressSet","comment":"restricted address set or null for entire program","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clear all bookmarks which indicate unimplemented pcode within the specified address set.\n@param program\n@param addressSet restricted address set or null for entire program\n@param monitor\n@throws CancelledException","static":true,"name":"clearUnimplementedPcodeWarnings","comment":"Clear all bookmarks which indicate unimplemented pcode within the specified address set.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"addressSet","comment":"restricted address set or null for entire program","type_short":"AddressSetView"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"reportMessage","comment":"","params":[{"type_long":"java.lang.String","name":"msg","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getContextRegisters","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"baseContextRegister","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register[]","comment":"","type_short":"ghidra.program.model.lang.Register[]"}},{"javadoc":"","static":true,"name":"getLanguageSpecificDisassembler","comment":"","params":[{"type_long":"ghidra.program.model.lang.Language","name":"parser","comment":"","type_short":"Language"}],"throws":[],"return":{"type_long":"java.lang.Class<? extends ghidra.program.disassemble.Disassembler>","comment":"","type_short":"Class"}}],"name":"Disassembler","comment":"Class to perform disassembly.  Contains the logic to follow instruction\n flows to continue the disassembly.\n 17-Nov-2008: moved to ghidra.program.disassemble package since this is now used during \n \t\t\t\t\t      language upgrades which may occur during construction of ProgramDB.\n 12-Dec-2012: major refactor of disassembly to perform bulk add of instructions to \n program to avoid context related conflicts","fields":[{"type_long":"java.lang.String","javadoc":"<code>MARK_BAD_INSTRUCTION_PROPERTY<\/code> Program Disassembler property \n enables marking of instruction disassembly errors.  Boolean property is defined\n within the Disassembler property list, see {@link Program#DISASSEMBLER_PROPERTIES}.","static":true,"name":"MARK_BAD_INSTRUCTION_PROPERTY","comment":"MARK_BAD_INSTRUCTION_PROPERTY Program Disassembler property \n enables marking of instruction disassembly errors.  Boolean property is defined\n within the Disassembler property list, see Program#DISASSEMBLER_PROPERTIES.","type_short":"String","constant_value":"\"Mark Bad Disassembly\""},{"type_long":"java.lang.String","javadoc":"<code>MARK_UNIMPL_PCODE_PROPERTY<\/code> Program Disassembler property \n enables marking of instructions which are missing their pcode implementation.  \n Boolean property is defined within the Disassembler property list, see \n {@link Program#DISASSEMBLER_PROPERTIES}.","static":true,"name":"MARK_UNIMPL_PCODE_PROPERTY","comment":"MARK_UNIMPL_PCODE_PROPERTY Program Disassembler property \n enables marking of instructions which are missing their pcode implementation.  \n Boolean property is defined within the Disassembler property list, see \n Program#DISASSEMBLER_PROPERTIES.","type_short":"String","constant_value":"\"Mark Unimplemented Pcode\""},{"type_long":"java.lang.String","javadoc":"<code>RESTRICT_DISASSEMBLY_TO_EXECUTE_MEMORY_PROPERTY<\/code> Program Disassembler property \n restricts disassembly to executable memory only.  \n Boolean property is defined within the Disassembler property list, see \n {@link Program#DISASSEMBLER_PROPERTIES}.","static":true,"name":"RESTRICT_DISASSEMBLY_TO_EXECUTE_MEMORY_PROPERTY","comment":"RESTRICT_DISASSEMBLY_TO_EXECUTE_MEMORY_PROPERTY Program Disassembler property \n restricts disassembly to executable memory only.  \n Boolean property is defined within the Disassembler property list, see \n Program#DISASSEMBLER_PROPERTIES.","type_short":"String","constant_value":"\"Restrict Disassembly to Executable Memory\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"ERROR_BOOKMARK_CATEGORY","comment":"","type_short":"String","constant_value":"\"Bad Instruction\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"UNIMPL_BOOKMARK_CATEGORY","comment":"","type_short":"String","constant_value":"\"Unimplemented Pcode\""},{"type_long":"int","javadoc":"","static":true,"name":"MAX_REPEAT_PATTERN_LENGTH","comment":"","type_short":"int","constant_value":"16"},{"type_long":"int","javadoc":"","static":true,"name":"NUM_ADDRS_FOR_NOTIFICATION","comment":"","type_short":"int","constant_value":"1024"},{"type_long":"int","javadoc":"","static":true,"name":"INSTRUCTION_SET_SIZE_LIMIT","comment":"","type_short":"int","constant_value":"2048"},{"type_long":"ghidra.program.model.lang.Language","javadoc":"","static":false,"name":"language","comment":"","type_short":"Language","constant_value":null},{"type_long":"ghidra.program.model.address.AddressFactory","javadoc":"","static":false,"name":"addrFactory","comment":"","type_short":"AddressFactory","constant_value":null},{"type_long":"ghidra.program.model.lang.Register","javadoc":"","static":false,"name":"baseContextRegister","comment":"","type_short":"Register","constant_value":null},{"type_long":"ghidra.program.model.lang.ParallelInstructionLanguageHelper","javadoc":"","static":false,"name":"parallelHelper","comment":"","type_short":"ParallelInstructionLanguageHelper","constant_value":null},{"type_long":"ghidra.program.model.listing.Program","javadoc":"","static":false,"name":"program","comment":"","type_short":"Program","constant_value":null},{"type_long":"ghidra.program.disassemble.DisassemblerContextImpl","javadoc":"","static":false,"name":"seedContext","comment":"","type_short":"DisassemblerContextImpl","constant_value":null},{"type_long":"ghidra.program.disassemble.DisassemblerMessageListener","javadoc":"","static":false,"name":"listener","comment":"","type_short":"DisassemblerMessageListener","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSetView","javadoc":"","static":false,"name":"restrictedAddressSet","comment":"","type_short":"AddressSetView","constant_value":null},{"type_long":"ghidra.program.model.address.AddressSetView","javadoc":"","static":false,"name":"initializedAddressSet","comment":"","type_short":"AddressSetView","constant_value":null},{"type_long":"ghidra.util.task.TaskMonitor","javadoc":"","static":false,"name":"monitor","comment":"","type_short":"TaskMonitor","constant_value":null},{"type_long":"ghidra.program.model.listing.ProgramContext","javadoc":"","static":false,"name":"realProgramContext","comment":"","type_short":"ProgramContext","constant_value":null},{"type_long":"ghidra.program.util.ProgramContextImpl","javadoc":"","static":false,"name":"defaultLanguageContext","comment":"","type_short":"ProgramContextImpl","constant_value":null},{"type_long":"ghidra.program.disassemble.Disassembler.DisassemblerProgramContext","javadoc":"","static":false,"name":"disassemblerProgramContext","comment":"","type_short":"DisassemblerProgramContext","constant_value":null},{"type_long":"ghidra.program.disassemble.DisassemblerContextImpl","javadoc":"","static":false,"name":"disassemblerContext","comment":"","type_short":"DisassemblerContextImpl","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"instAlignment","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.program.disassemble.DisassemblerQueue","javadoc":"","static":false,"name":"disassemblerQueue","comment":"","type_short":"DisassemblerQueue","constant_value":null},{"type_long":"ghidra.program.model.listing.Listing","javadoc":"","static":false,"name":"listing","comment":"","type_short":"Listing","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"disassembleCount","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"totalCount","comment":"","type_short":"int","constant_value":null},{"type_long":"ghidra.app.util.RepeatInstructionByteTracker","javadoc":"","static":false,"name":"repeatInstructionByteTracker","comment":"","type_short":"RepeatInstructionByteTracker","constant_value":null},{"type_long":"ghidra.program.model.listing.BookmarkManager","javadoc":"","static":false,"name":"bmMgr","comment":"","type_short":"BookmarkManager","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"doMarkBadInstructions","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"doMarkUnimplPcode","comment":"","type_short":"boolean","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"instructionSetSizeLimit","comment":"","type_short":"int","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"followFlow","comment":"","type_short":"boolean","constant_value":null}]}
