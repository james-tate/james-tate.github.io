{"implements":["ghidra.util.filechooser.GhidraFileFilter"],"javadoc":"A convenience implementation of FileFilter that filters out\n all files except for those type extensions that it knows about.\n\n Extensions are of the type \".foo\", which is typically found on\n Windows and Unix boxes, but not on Mac. Case is ignored.\n\n Example - create a new filter that filters out all files\n but gif and jpg image files:\n <pre>\n     GhidraFileChooser chooser = new GhidraFileChooser();\n     ExtensionFileFilter filter = new ExtensionFileFilter(\n                   new String{\"gif\", \"jpg\"}, \"JPEG & GIF Images\")\n     chooser.addFileFilter(filter);\n<\/pre>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a {@link ExtensionFileFilter} in a varargs friendly way.\n@param description String description of this set of file extensions.\n@param exts variable length list of file extensions, without leading dot.\n@return new {@link ExtensionFileFilter} instance.","static":true,"name":"forExtensions","comment":"Creates a ExtensionFileFilter in a varargs friendly way.","params":[{"type_long":"java.lang.String","name":"description","comment":"String description of this set of file extensions.","type_short":"String"},{"type_long":"java.lang.String[]","name":"exts","comment":"variable length list of file extensions, without leading dot.","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"ghidra.util.filechooser.ExtensionFileFilter","comment":"new ExtensionFileFilter instance.","type_short":"ExtensionFileFilter"}},{"javadoc":"Creates a file filter that accepts the given file type.\n Example: new ExtensionFileFilter(\"jpg\", \"JPEG Image Images\");\n\n Note that the \".\" before the extension is not needed. If\n provided, it will be ignored.\n@see #addExtension","static":false,"name":"<init>","comment":"Creates a file filter that accepts the given file type.\n Example: new ExtensionFileFilter(\"jpg\", \"JPEG Image Images\");\n\n Note that the \".\" before the extension is not needed. If\n provided, it will be ignored.","params":[{"type_long":"java.lang.String","name":"extension","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"description","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a file filter from the given string array and description.\n Example: new ExtensionFileFilter(String {\"gif\", \"jpg\"}, \"Gif and JPG Images\");\n\n Note that the \".\" before the extension is not needed and will be ignored.\n@see #addExtension","static":false,"name":"<init>","comment":"Creates a file filter from the given string array and description.\n Example: new ExtensionFileFilter(String {\"gif\", \"jpg\"}, \"Gif and JPG Images\");\n\n Note that the \".\" before the extension is not needed and will be ignored.","params":[{"type_long":"java.lang.String[]","name":"filters","comment":"","type_short":"java.lang.String[]"},{"type_long":"java.lang.String","name":"description","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return true if this file should be shown in the directory pane,\n false if it shouldn't.\n\n Files that begin with \".\" are ignored.\n@see #getExtension\n@see FileFilter#accept","static":false,"name":"accept","comment":"Return true if this file should be shown in the directory pane,\n false if it shouldn't.\n\n Files that begin with \".\" are ignored.","params":[{"type_long":"java.io.File","name":"f","comment":"","type_short":"File"},{"type_long":"ghidra.util.filechooser.GhidraFileChooserModel","name":"model","comment":"","type_short":"GhidraFileChooserModel"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Return the extension portion of the file's name .\n@see #getExtension\n@see FileFilter#accept","static":false,"name":"getExtension","comment":"Return the extension portion of the file's name .","params":[{"type_long":"java.io.File","name":"f","comment":"","type_short":"File"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Adds a filetype \"dot\" extension to filter against.\n\n For example: the following code will create a filter that filters\n out all files except those that end in \".jpg\" and \".tif\":\n\n   ExtensionFileFilter filter = new ExtensionFileFilter();\n   filter.addExtension(\"jpg\");\n   filter.addExtension(\"tif\");\n\n Note that the \".\" before the extension is not needed and will be ignored.","static":false,"name":"addExtension","comment":"Adds a filetype \"dot\" extension to filter against.\n\n For example: the following code will create a filter that filters\n out all files except those that end in \".jpg\" and \".tif\":\n\n   ExtensionFileFilter filter = new ExtensionFileFilter();\n   filter.addExtension(\"jpg\");\n   filter.addExtension(\"tif\");\n\n Note that the \".\" before the extension is not needed and will be ignored.","params":[{"type_long":"java.lang.String","name":"extension","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the human readable description of this filter. For\n example: \"JPEG and GIF Image Files (*.jpg, *.gif)\"","static":false,"name":"getDescription","comment":"Returns the human readable description of this filter. For\n example: \"JPEG and GIF Image Files (*.jpg, *.gif)\"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Sets the human readable description of this filter. For\n example: filter.setDescription(\"Gif and JPG Images\");\n@see #setDescription\n@see #setExtensionListInDescription\n@see #isExtensionListInDescription","static":false,"name":"setDescription","comment":"Sets the human readable description of this filter. For\n example: filter.setDescription(\"Gif and JPG Images\");","params":[{"type_long":"java.lang.String","name":"description","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determines whether the extension list (.jpg, .gif, etc) should\n show up in the human readable description.\n\n Only relevent if a description was provided in the constructor\n or using setDescription();\n@see #getDescription\n@see #setDescription\n@see #isExtensionListInDescription","static":false,"name":"setExtensionListInDescription","comment":"Determines whether the extension list (.jpg, .gif, etc) should\n show up in the human readable description.\n\n Only relevent if a description was provided in the constructor\n or using setDescription();","params":[{"type_long":"boolean","name":"b","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns whether the extension list (.jpg, .gif, etc) should\n show up in the human readable description.\n\n Only relevent if a description was provided in the constructor\n or using setDescription();\n@see #getDescription\n@see #setDescription\n@see #setExtensionListInDescription","static":false,"name":"isExtensionListInDescription","comment":"Returns whether the extension list (.jpg, .gif, etc) should\n show up in the human readable description.\n\n Only relevent if a description was provided in the constructor\n or using setDescription();","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"ExtensionFileFilter","comment":"A convenience implementation of FileFilter that filters out\n all files except for those type extensions that it knows about.\n\n Extensions are of the type \".foo\", which is typically found on\n Windows and Unix boxes, but not on Mac. Case is ignored.\n\n Example - create a new filter that filters out all files\n but gif and jpg image files:\n \n     GhidraFileChooser chooser = new GhidraFileChooser();\n     ExtensionFileFilter filter = new ExtensionFileFilter(\n                   new String{\"gif\", \"jpg\"}, \"JPEG  GIF Images\")\n     chooser.addFileFilter(filter);\n","fields":[{"type_long":"java.util.Hashtable<java.lang.String,ghidra.util.filechooser.ExtensionFileFilter>","javadoc":"","static":false,"name":"filters","comment":"","type_short":"Hashtable","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"description","comment":"","type_short":"String","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"fullDescription","comment":"","type_short":"String","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"useExtensionsInDescription","comment":"","type_short":"boolean","constant_value":null}]}
