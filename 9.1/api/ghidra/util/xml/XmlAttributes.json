{"implements":[],"javadoc":"A container class for creating XML attribute strings.\n For example, given the following code:\n <pre>\n XmlAttributes attrs = new XmlAttributes();\n attrs.add(\"FIVE\", 32, true);\n attrs.add(\"BAR\", \"foo\");\n attrs.add(\"PI\", 3.14159);\n <\/pre><br>\n The output would be: <code>FIVE=\"0x20\" BAR=\"foo\" PI=\"3.14159\".","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new empty XML attributes.","static":false,"name":"<init>","comment":"Constructs a new empty XML attributes.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see java.lang.Object#toString()","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Add a new string attribute.\n@param name the name of the new attribute\n@param value the string value","static":false,"name":"addAttribute","comment":"Add a new string attribute.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"java.lang.String","name":"value","comment":"the string value","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a new boolean attribute.\n@param name the name of the new attribute\n@param value the boolean value","static":false,"name":"addAttribute","comment":"Add a new boolean attribute.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"boolean","name":"value","comment":"the boolean value","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a new float attribute.\n@param name the name of the new attribute\n@param value the float value","static":false,"name":"addAttribute","comment":"Add a new float attribute.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"float","name":"value","comment":"the float value","type_short":"float"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a new double attribute.\n@param name the name of the new attribute\n@param value the double value","static":false,"name":"addAttribute","comment":"Add a new double attribute.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"double","name":"value","comment":"the double value","type_short":"double"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a new byte attribute as decimal.\n@param name the name of the new attribute\n@param value the byte value","static":false,"name":"addAttribute","comment":"Add a new byte attribute as decimal.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"byte","name":"value","comment":"the byte value","type_short":"byte"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a new byte attribute.\n@param name the name of the new attribute\n@param value the byte value\n@param hex true if value should be written in hex","static":false,"name":"addAttribute","comment":"Add a new byte attribute.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"byte","name":"value","comment":"the byte value","type_short":"byte"},{"type_long":"boolean","name":"hex","comment":"true if value should be written in hex","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a new short attribute as decimal.\n@param name the name of the new attribute\n@param value the short value","static":false,"name":"addAttribute","comment":"Add a new short attribute as decimal.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"short","name":"value","comment":"the short value","type_short":"short"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a new short attribute.\n@param name the name of the new attribute\n@param value the short value\n@param hex true if value should be written in hex","static":false,"name":"addAttribute","comment":"Add a new short attribute.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"short","name":"value","comment":"the short value","type_short":"short"},{"type_long":"boolean","name":"hex","comment":"true if value should be written in hex","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a new int attribute as decimal.\n@param name the name of the new attribute\n@param value the int value","static":false,"name":"addAttribute","comment":"Add a new int attribute as decimal.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"int","name":"value","comment":"the int value","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a new int attribute.\n@param name the name of the new attribute\n@param value the int value\n@param hex true if value should be written in hex","static":false,"name":"addAttribute","comment":"Add a new int attribute.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"int","name":"value","comment":"the int value","type_short":"int"},{"type_long":"boolean","name":"hex","comment":"true if value should be written in hex","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a new long attribute as decimal.\n@param name the name of the new attribute\n@param value the long value","static":false,"name":"addAttribute","comment":"Add a new long attribute as decimal.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"long","name":"value","comment":"the long value","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a new long attribute.\n@param name the name of the new attribute\n@param value the long value\n@param hex true if value should be written in hex","static":false,"name":"addAttribute","comment":"Add a new long attribute.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"long","name":"value","comment":"the long value","type_short":"long"},{"type_long":"boolean","name":"hex","comment":"true if value should be written in hex","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a new big integer attribute.\n@param name the name of the new attribute\n@param value the big integer value","static":false,"name":"addAttribute","comment":"Add a new big integer attribute.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the new attribute","type_short":"String"},{"type_long":"java.math.BigInteger","name":"value","comment":"the big integer value","type_short":"BigInteger"},{"type_long":"boolean","name":"hex","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return the number of attributes in this","static":false,"name":"isEmpty","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"the number of attributes in this","type_short":"boolean"}}],"name":"XmlAttributes","comment":"A container class for creating XML attribute strings.\n For example, given the following code:\n \n XmlAttributes attrs = new XmlAttributes();\n attrs.add(\"FIVE\", 32, true);\n attrs.add(\"BAR\", \"foo\");\n attrs.add(\"PI\", 3.14159);\n \n The output would be: FIVE=\"0x20\" BAR=\"foo\" PI=\"3.14159\".","fields":[{"type_long":"java.lang.StringBuffer","javadoc":"","static":false,"name":"buffer","comment":"","type_short":"StringBuffer","constant_value":null}]}
