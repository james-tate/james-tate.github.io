{"implements":["java.io.Closeable"],"javadoc":"A reusable watchdog that will execute a callback if the watchdog is not disarmed before\n it expires.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a watchdog (initially disarmed) that will poll for expiration every\n defaultTimeoutMS milliseconds, calling {@code timeoutMethod} when triggered.\n <p>\n@param defaultTimeoutMS number of milliseconds that the watchdog will wait after\n being armed before calling the timeout method.\n@param timeoutMethod {@link Runnable} functional callback.","static":false,"name":"<init>","comment":"Creates a watchdog (initially disarmed) that will poll for expiration every\n defaultTimeoutMS milliseconds, calling  when triggered.\n ","params":[{"type_long":"long","name":"defaultTimeoutMS","comment":"number of milliseconds that the watchdog will wait after\n being armed before calling the timeout method.","type_short":"long"},{"type_long":"java.lang.Runnable","name":"timeoutMethod","comment":"Runnable functional callback.","type_short":"Runnable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"finalize","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Releases the background timer that this watchdog uses.","static":false,"name":"close","comment":"Releases the background timer that this watchdog uses.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Called from a timer, checks to see if the watchdog is armed, and if it has expired.\n <p>\n Disarms itself before calling the timeoutMethod if the timeout period expired.","static":false,"name":"watchdogWorker","comment":"Called from a timer, checks to see if the watchdog is armed, and if it has expired.\n \n Disarms itself before calling the timeoutMethod if the timeout period expired.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setEnabled","comment":"","params":[{"type_long":"boolean","name":"b","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the status of the watchdog.\n@return true if the watchdog is armed, false if the watchdog is disarmed","static":false,"name":"isEnabled","comment":"Returns the status of the watchdog.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the watchdog is armed, false if the watchdog is disarmed","type_short":"boolean"}},{"javadoc":"Enables this watchdog so that at {@link #defaultWatchdogTimeoutMS} milliseconds in the\n future the {@link #timeoutMethod} will be called.","static":false,"name":"arm","comment":"Enables this watchdog so that at #defaultWatchdogTimeoutMS milliseconds in the\n future the #timeoutMethod will be called.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Disables this watchdog.","static":false,"name":"disarm","comment":"Disables this watchdog.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"Watchdog","comment":"A reusable watchdog that will execute a callback if the watchdog is not disarmed before\n it expires.","fields":[{"type_long":"long","javadoc":"","static":false,"name":"defaultWatchdogTimeoutMS","comment":"","type_short":"long","constant_value":null},{"type_long":"java.util.concurrent.atomic.AtomicLong","javadoc":"","static":false,"name":"watchdogExpiresAt","comment":"","type_short":"AtomicLong","constant_value":null},{"type_long":"java.lang.Runnable","javadoc":"","static":false,"name":"timeoutMethod","comment":"","type_short":"Runnable","constant_value":null},{"type_long":"ghidra.util.timer.GTimerMonitor","javadoc":"","static":false,"name":"watchdogTimer","comment":"","type_short":"GTimerMonitor","constant_value":null}]}
