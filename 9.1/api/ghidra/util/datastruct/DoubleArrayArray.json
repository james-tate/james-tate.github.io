{"implements":["ghidra.util.datastruct.Array","java.io.Serializable"],"javadoc":"Array of double[] that grows as needed.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates new doubleArrayArray","static":false,"name":"<init>","comment":"Creates new doubleArrayArray","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Puts the given double value in the double array at\n the given index\n@param index Index into the array.\n@param value value to store\n@throws IndexOutOfBoundsException if the index is negative","static":false,"name":"put","comment":"Puts the given double value in the double array at\n the given index","params":[{"type_long":"int","name":"index","comment":"Index into the array.","type_short":"int"},{"type_long":"double[]","name":"value","comment":"value to store","type_short":"double[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the double at the given index\n@param index index into the array\n@return The double array at the given index. An empty array will\n be returned for any index not initialized to\n another value.\n@exception throws IndexOutOfBoundsException if the index is negative","static":false,"name":"get","comment":"Returns the double at the given index","params":[{"type_long":"int","name":"index","comment":"index into the array","type_short":"int"}],"throws":[],"return":{"type_long":"double[]","comment":"The double array at the given index. An empty array will\n be returned for any index not initialized to\n another value.","type_short":"double[]"}},{"javadoc":"Removes the array at the given index\n@param index index of the array to be removed\n@exception throws IndexOutOfBoundsException if the index is negative","static":false,"name":"remove","comment":"Removes the array at the given index","params":[{"type_long":"int","name":"index","comment":"index of the array to be removed","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Finds the last array index","static":false,"name":"findLastStart","comment":"Finds the last array index","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Grows the array.  The new array capacity will be\n the maximum of minCapacity and twice the current\n capacity.\n@param minCapacity The minimum size to grow the array.","static":false,"name":"adjustArraySizes","comment":"Grows the array.  The new array capacity will be\n the maximum of minCapacity and twice the current\n capacity.","params":[{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Shrinks the starts and lengths array as items at the end of the list\n are removed.\n@param capacity the new size to make the arrays","static":false,"name":"shrinkArrays","comment":"Shrinks the starts and lengths array as items at the end of the list\n are removed.","params":[{"type_long":"int","name":"capacity","comment":"the new size to make the arrays","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Allocates space for storing the array\n@param size number of elements to allocate space for\n@return Returns the start position in the buffer for the\n storage for the array","static":false,"name":"allocSpace","comment":"Allocates space for storing the array","params":[{"type_long":"int","name":"size","comment":"number of elements to allocate space for","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"Returns the start position in the buffer for the\n storage for the array","type_short":"int"}},{"javadoc":"Adjusts the buffer size as the storage requirements change.\n Every time the buffer is resized, arrays are compacted.\n@param newSize the new size to adjust the buffer to","static":false,"name":"adjustSpace","comment":"Adjusts the buffer size as the storage requirements change.\n Every time the buffer is resized, arrays are compacted.","params":[{"type_long":"int","name":"newSize","comment":"the new size to adjust the buffer to","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the index of the last non-null or non-zero element in the array.","static":false,"name":"getLastNonEmptyIndex","comment":"Returns the index of the last non-null or non-zero element in the array.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see ghidra.util.datastruct.Array#copyDataTo(int, DataTable, int, int)","static":false,"name":"copyDataTo","comment":"","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"},{"type_long":"ghidra.util.datastruct.DataTable","name":"table","comment":"","type_short":"DataTable"},{"type_long":"int","name":"toIndex","comment":"","type_short":"int"},{"type_long":"int","name":"toCol","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DoubleArrayArray","comment":"Array of double[] that grows as needed.","fields":[{"type_long":"long","javadoc":"","static":true,"name":"serialVersionUID","comment":"","type_short":"long","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"MIN_SIZE","comment":"","type_short":"int","constant_value":"4"},{"type_long":"double[]","javadoc":"","static":false,"name":"doubles","comment":"","type_short":"double[]","constant_value":null},{"type_long":"int[]","javadoc":"","static":false,"name":"starts","comment":"","type_short":"int[]","constant_value":null},{"type_long":"short[]","javadoc":"","static":false,"name":"lengths","comment":"","type_short":"short[]","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"totalSpaceAllocated","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"nextFree","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"lastStart","comment":"","type_short":"int","constant_value":null}]}
