{"implements":["java.lang.Iterable"],"javadoc":"<p>\n The Stack class represents a last-in-first-out (LIFO) stack of objects.\n It extends class ArrayList with five operations that allow an array list\n to be treated as a stack. The usual push and pop operations are provided,\n as well as a method to peek at the top item on the stack, a\n method to test for whether the stack is empty, and a method to search\n the stack for an item and discover how far it is from the top.\n <\/p>\n <p>\n When a stack is first created, it contains no items.\n <\/p>\n <p>\n <b>Note: This implementation is not synchronized!<\/b>\n <\/p>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates an empty Stack.","static":false,"name":"<init>","comment":"Creates an empty Stack.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates an empty Stack with specified capacity.\n@param initialCapacity the initial capacity.","static":false,"name":"<init>","comment":"Creates an empty Stack with specified capacity.","params":[{"type_long":"int","name":"initialCapacity","comment":"the initial capacity.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Copy Constructor.\n Creates a new stack using the items of the given stack.\n Only a shallow copy is performed.\n@param stack the stack to copy","static":false,"name":"<init>","comment":"Copy Constructor.\n Creates a new stack using the items of the given stack.\n Only a shallow copy is performed.","params":[{"type_long":"ghidra.util.datastruct.Stack<E>","name":"stack","comment":"the stack to copy","type_short":"Stack"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Tests if this stack is empty.","static":false,"name":"isEmpty","comment":"Tests if this stack is empty.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Looks at the object at the top of this stack without removing it from the stack.","static":false,"name":"peek","comment":"Looks at the object at the top of this stack without removing it from the stack.","params":[],"throws":[],"return":{"type_long":"E","comment":"","type_short":"E"}},{"javadoc":"Removes the object at the top of this stack and returns that object as the value of this function.","static":false,"name":"pop","comment":"Removes the object at the top of this stack and returns that object as the value of this function.","params":[],"throws":[],"return":{"type_long":"E","comment":"","type_short":"E"}},{"javadoc":"Pushes an item onto the top of this stack.\n@param item the object to push onto the stack.","static":false,"name":"push","comment":"Pushes an item onto the top of this stack.","params":[{"type_long":"E","name":"item","comment":"the object to push onto the stack.","type_short":"E"}],"throws":[],"return":{"type_long":"E","comment":"","type_short":"E"}},{"javadoc":"Returns the position where an object is on this stack.\n@param o the object to search for.","static":false,"name":"search","comment":"Returns the position where an object is on this stack.","params":[{"type_long":"E","name":"o","comment":"the object to search for.","type_short":"E"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the number of elements in this stack.\n@return the number of elements in this stack","static":false,"name":"size","comment":"Returns the number of elements in this stack.","params":[],"throws":[],"return":{"type_long":"int","comment":"the number of elements in this stack","type_short":"int"}},{"javadoc":"Returns the element at the specified depth in this stack.\n 0 indicates the bottom of the stack.\n size()-1 indicates the top of the stack.\n@param index the depth in the stack.\n@return the element at the specified depth in this stack","static":false,"name":"get","comment":"Returns the element at the specified depth in this stack.\n 0 indicates the bottom of the stack.\n size()-1 indicates the top of the stack.","params":[{"type_long":"int","name":"depth","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"E","comment":"the element at the specified depth in this stack","type_short":"E"}},{"javadoc":"Appends the given item to the top of the stack.\n@param item the new top of the stack","static":false,"name":"add","comment":"Appends the given item to the top of the stack.","params":[{"type_long":"E","name":"item","comment":"the new top of the stack","type_short":"E"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clears the stack. All items will be removed.","static":false,"name":"clear","comment":"Clears the stack. All items will be removed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns an iterator over the items of the stack.\n The iterator starts from the bottom of the stack.\n@return an iterator over the items of the stack","static":false,"name":"iterator","comment":"Returns an iterator over the items of the stack.\n The iterator starts from the bottom of the stack.","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<E>","comment":"an iterator over the items of the stack","type_short":"Iterator"}},{"javadoc":"Returns a stream over this collection.\n@return a stream over this collection.","static":false,"name":"stream","comment":"Returns a stream over this collection.","params":[],"throws":[],"return":{"type_long":"java.util.stream.Stream<E>","comment":"a stream over this collection.","type_short":"Stream"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"Stack","comment":"\n The Stack class represents a last-in-first-out (LIFO) stack of objects.\n It extends class ArrayList with five operations that allow an array list\n to be treated as a stack. The usual push and pop operations are provided,\n as well as a method to peek at the top item on the stack, a\n method to test for whether the stack is empty, and a method to search\n the stack for an item and discover how far it is from the top.\n \n \n When a stack is first created, it contains no items.\n \n \n Note: This implementation is not synchronized!\n ","fields":[{"type_long":"java.util.List<E>","javadoc":"","static":false,"name":"list","comment":"","type_short":"List","constant_value":null}]}
