{"implements":["ghidra.util.DataConverter"],"javadoc":"","static":false,"methods":[{"javadoc":"Generate a little-endian short value by invoking buf.getBytes at the specified offset.\n@param buf\n@param offset\n@return little-endian short value\n@throws MemoryAccessException if failed to read 2-bytes at the specified offset","static":false,"name":"getShort","comment":"Generate a little-endian short value by invoking buf.getBytes at the specified offset.","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"if failed to read 2-bytes at the specified offset","type_short":"MemoryAccessException"}],"return":{"type_long":"short","comment":"little-endian short value","type_short":"short"}},{"javadoc":"Generate a little-endian int value by invoking buf.getBytes at the specified offset.\n@param buf\n@param offset\n@return little-endian int value\n@throws MemoryAccessException if failed to read 4-bytes at the specified offset","static":false,"name":"getInt","comment":"Generate a little-endian int value by invoking buf.getBytes at the specified offset.","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"if failed to read 4-bytes at the specified offset","type_short":"MemoryAccessException"}],"return":{"type_long":"int","comment":"little-endian int value","type_short":"int"}},{"javadoc":"Generate a little-endian long value by invoking buf.getBytes at the specified offset.\n@param buf\n@param offset\n@return little-endian long value\n@throws MemoryAccessException if failed to read 8-bytes at the specified offset","static":false,"name":"getLong","comment":"Generate a little-endian long value by invoking buf.getBytes at the specified offset.","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"if failed to read 8-bytes at the specified offset","type_short":"MemoryAccessException"}],"return":{"type_long":"long","comment":"little-endian long value","type_short":"long"}},{"javadoc":"Generate a little-endian BigInteger value by invoking buf.getBytes at the specified offset.\n@param buf\n@param offset\n@return little-endian BigInteger value\n@throws MemoryAccessException if failed to read specified number of bytes\n at the specified offset","static":false,"name":"getBigInteger","comment":"Generate a little-endian BigInteger value by invoking buf.getBytes at the specified offset.","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"boolean","name":"signed","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"if failed to read specified number of bytes\n at the specified offset","type_short":"MemoryAccessException"}],"return":{"type_long":"java.math.BigInteger","comment":"little-endian BigInteger value","type_short":"BigInteger"}}],"name":"GhidraDataConverter","comment":"","fields":[]}
