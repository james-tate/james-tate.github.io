{"implements":[],"javadoc":"Helper methods for converting between\n number data types without negative\n promotion.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Converts a byte to a short.\n@param b the byte\n@return the short equivalent of the byte","static":true,"name":"byteToShort","comment":"Converts a byte to a short.","params":[{"type_long":"byte","name":"b","comment":"the byte","type_short":"byte"}],"throws":[],"return":{"type_long":"short","comment":"the short equivalent of the byte","type_short":"short"}},{"javadoc":"Converts a byte to an integer.\n@param b the byte\n@return the integer equivalent of the byte","static":true,"name":"byteToInt","comment":"Converts a byte to an integer.","params":[{"type_long":"byte","name":"b","comment":"the byte","type_short":"byte"}],"throws":[],"return":{"type_long":"int","comment":"the integer equivalent of the byte","type_short":"int"}},{"javadoc":"Converts a byte to a long.\n@param b the byte\n@return the long equivalent of the byte","static":true,"name":"byteToLong","comment":"Converts a byte to a long.","params":[{"type_long":"byte","name":"b","comment":"the byte","type_short":"byte"}],"throws":[],"return":{"type_long":"long","comment":"the long equivalent of the byte","type_short":"long"}},{"javadoc":"Converts a short to an integer.\n@param s the short\n@return the integer equivalent of the short","static":true,"name":"shortToInt","comment":"Converts a short to an integer.","params":[{"type_long":"short","name":"s","comment":"the short","type_short":"short"}],"throws":[],"return":{"type_long":"int","comment":"the integer equivalent of the short","type_short":"int"}},{"javadoc":"Converts a short to a long.\n@param s the short\n@return the long eqivalent of the short","static":true,"name":"shortToLong","comment":"Converts a short to a long.","params":[{"type_long":"short","name":"s","comment":"the short","type_short":"short"}],"throws":[],"return":{"type_long":"long","comment":"the long eqivalent of the short","type_short":"long"}},{"javadoc":"Converts an integer to a long.\n@param i the integer\n@return the long equivalent of the long","static":true,"name":"intToLong","comment":"Converts an integer to a long.","params":[{"type_long":"int","name":"i","comment":"the integer","type_short":"int"}],"throws":[],"return":{"type_long":"long","comment":"the long equivalent of the long","type_short":"long"}},{"javadoc":"","static":true,"name":"toString","comment":"","params":[{"type_long":"byte[]","name":"array","comment":"","type_short":"byte[]"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Converts a byte into a padded hex string.\n@param b the byte\n@return the padded hex string","static":true,"name":"toHexString","comment":"Converts a byte into a padded hex string.","params":[{"type_long":"byte","name":"b","comment":"the byte","type_short":"byte"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the padded hex string","type_short":"String"}},{"javadoc":"Converts a short into a padded hex string.\n@param s the short\n@return the padded hex string","static":true,"name":"toHexString","comment":"Converts a short into a padded hex string.","params":[{"type_long":"short","name":"s","comment":"the short","type_short":"short"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the padded hex string","type_short":"String"}},{"javadoc":"Converts an integer into a padded hex string.\n@param i the integer\n@return the padded hex string","static":true,"name":"toHexString","comment":"Converts an integer into a padded hex string.","params":[{"type_long":"int","name":"i","comment":"the integer","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the padded hex string","type_short":"String"}},{"javadoc":"Converts a long into a padded hex string.\n@param l the long\n@return the padded hex string","static":true,"name":"toHexString","comment":"Converts a long into a padded hex string.","params":[{"type_long":"long","name":"l","comment":"the long","type_short":"long"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the padded hex string","type_short":"String"}},{"javadoc":"Returns a string that is extended to \n length len with zeroes.\n@param s The string to pad\n@param len The length of the return string\n@return A string that has been padded to be of legnth len","static":true,"name":"zeropad","comment":"Returns a string that is extended to \n length len with zeroes.","params":[{"type_long":"java.lang.String","name":"s","comment":"The string to pad","type_short":"String"},{"type_long":"int","name":"len","comment":"The length of the return string","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"A string that has been padded to be of legnth len","type_short":"String"}},{"javadoc":"","static":true,"name":"main","comment":"","params":[{"type_long":"java.lang.String[]","name":"args","comment":"","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"Conv","comment":"Helper methods for converting between\n number data types without negative\n promotion.","fields":[{"type_long":"int","javadoc":"A byte mask.","static":true,"name":"BYTE_MASK","comment":"A byte mask.","type_short":"int","constant_value":"255"},{"type_long":"int","javadoc":"A short mask.","static":true,"name":"SHORT_MASK","comment":"A short mask.","type_short":"int","constant_value":"65535"},{"type_long":"long","javadoc":"An integer mask.","static":true,"name":"INT_MASK","comment":"An integer mask.","type_short":"long","constant_value":"4294967295"}]}
