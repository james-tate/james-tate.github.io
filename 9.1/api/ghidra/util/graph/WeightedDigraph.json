{"implements":[],"javadoc":"DirectedGraph with edge weights. Weights are assumed to be 0.0 by default.","static":false,"extends":"ghidra.util.graph.DirectedGraph","methods":[{"javadoc":"Create weighted directed graph with default edge weight of 0.0\n and room for vertexCapicity vertices and edgeCapacity edges.","static":false,"name":"<init>","comment":"Create weighted directed graph with default edge weight of 0.0\n and room for vertexCapicity vertices and edgeCapacity edges.","params":[{"type_long":"int","name":"vertexCapacity","comment":"","type_short":"int"},{"type_long":"int","name":"edgeCapacity","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"weights","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.util.graph.attributes.DoubleAttribute<ghidra.util.graph.Edge>","comment":"","type_short":"DoubleAttribute"}},{"javadoc":"Create a weighted directed graph. Use the defaultEdgeWeight for any edges whose\n  weights have not been set.","static":false,"name":"<init>","comment":"Create a weighted directed graph. Use the defaultEdgeWeight for any edges whose\n  weights have not been set.","params":[{"type_long":"int","name":"vertexCapacity","comment":"","type_short":"int"},{"type_long":"int","name":"edgeCapacity","comment":"","type_short":"int"},{"type_long":"double","name":"defaultEdgeWeight","comment":"","type_short":"double"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Default constructor","static":false,"name":"<init>","comment":"Default constructor","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the weighted in-degree of this vertex. The in-degree is the\n sum of weights of all enges entering this vertex.","static":false,"name":"inDegree","comment":"Returns the weighted in-degree of this vertex. The in-degree is the\n sum of weights of all enges entering this vertex.","params":[{"type_long":"ghidra.util.graph.Vertex","name":"v","comment":"","type_short":"Vertex"}],"throws":[],"return":{"type_long":"double","comment":"","type_short":"double"}},{"javadoc":"Returns the weighted out-degree of this vertex. The out-degree is the\n sum of weights of all enges entering this vertex.","static":false,"name":"outDegree","comment":"Returns the weighted out-degree of this vertex. The out-degree is the\n sum of weights of all enges entering this vertex.","params":[{"type_long":"ghidra.util.graph.Vertex","name":"v","comment":"","type_short":"Vertex"}],"throws":[],"return":{"type_long":"double","comment":"","type_short":"double"}},{"javadoc":"Returns the weighted self-degree of this vertex. The self-degree is the\n sum of weights of all loops at this vertex.","static":false,"name":"selfDegree","comment":"Returns the weighted self-degree of this vertex. The self-degree is the\n sum of weights of all loops at this vertex.","params":[{"type_long":"ghidra.util.graph.Vertex","name":"v","comment":"","type_short":"Vertex"}],"throws":[],"return":{"type_long":"double","comment":"","type_short":"double"}},{"javadoc":"Returns the weighted degree of this vertex. The degree is the\n sum of weights of all edges entering and leaving this vertex.","static":false,"name":"degree","comment":"Returns the weighted degree of this vertex. The degree is the\n sum of weights of all edges entering and leaving this vertex.","params":[{"type_long":"ghidra.util.graph.Vertex","name":"v","comment":"","type_short":"Vertex"}],"throws":[],"return":{"type_long":"double","comment":"","type_short":"double"}},{"javadoc":"Returns the weight of the specified edge.","static":false,"name":"getWeight","comment":"Returns the weight of the specified edge.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"double","comment":"","type_short":"double"}},{"javadoc":"Sets the weight of the specified edge.","static":false,"name":"setWeight","comment":"Sets the weight of the specified edge.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"},{"type_long":"double","name":"value","comment":"","type_short":"double"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Gets the defaultEdgeWeight of this graph specified at creation\n time.","static":false,"name":"getDefaultEdgeWeight","comment":"Gets the defaultEdgeWeight of this graph specified at creation\n time.","params":[],"throws":[],"return":{"type_long":"double","comment":"","type_short":"double"}},{"javadoc":"Add an edge. If successful (i.e. that edge does not already appear\n in the graph), set the weight to the default value\n@return true if edge added succesfuly.","static":false,"name":"add","comment":"Add an edge. If successful (i.e. that edge does not already appear\n in the graph), set the weight to the default value","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"}],"throws":[],"return":{"type_long":"boolean","comment":"true if edge added succesfuly.","type_short":"boolean"}},{"javadoc":"Add an edge. If successful (i.e. that edge does not appear in the graph),\n then set the weight to the specified value.\n@return true if edge added succesfuly.","static":false,"name":"add","comment":"Add an edge. If successful (i.e. that edge does not appear in the graph),\n then set the weight to the specified value.","params":[{"type_long":"ghidra.util.graph.Edge","name":"e","comment":"","type_short":"Edge"},{"type_long":"double","name":"weight","comment":"","type_short":"double"}],"throws":[],"return":{"type_long":"boolean","comment":"true if edge added succesfuly.","type_short":"boolean"}},{"javadoc":"Get the edge weights for this graph.","static":false,"name":"getEdgeWeights","comment":"Get the edge weights for this graph.","params":[],"throws":[],"return":{"type_long":"ghidra.util.graph.attributes.DoubleAttribute<ghidra.util.graph.Edge>","comment":"","type_short":"DoubleAttribute"}},{"javadoc":"","static":false,"name":"copy","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.util.graph.DirectedGraph","comment":"","type_short":"DirectedGraph"}},{"javadoc":"Creates intersection of graphs in place by adding all vertices and edges of\n other graph to this graph. This method used to return a different graph\n as the intersection but now does not.","static":false,"name":"intersectionWith","comment":"Creates intersection of graphs in place by adding all vertices and edges of\n other graph to this graph. This method used to return a different graph\n as the intersection but now does not.","params":[{"type_long":"ghidra.util.graph.DirectedGraph","name":"otherGraph","comment":"","type_short":"DirectedGraph"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates union of graphs in place by adding all vertices and edges of\n other graph to this graph. This method used to return a different graph\n as the union but now does not.","static":false,"name":"unionWith","comment":"Creates union of graphs in place by adding all vertices and edges of\n other graph to this graph. This method used to return a different graph\n as the union but now does not.","params":[{"type_long":"ghidra.util.graph.DirectedGraph","name":"otherGraph","comment":"","type_short":"DirectedGraph"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"WeightedDigraph","comment":"DirectedGraph with edge weights. Weights are assumed to be 0.0 by default.","fields":[{"type_long":"double","javadoc":"","static":false,"name":"defaultValue","comment":"","type_short":"double","constant_value":null}]}
