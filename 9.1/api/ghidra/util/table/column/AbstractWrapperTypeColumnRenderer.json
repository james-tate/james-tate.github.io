{"implements":["ghidra.util.table.column.GColumnRenderer"],"javadoc":"A convenience interface of {@link GColumnRenderer} for primitive-based\/wrapper-based \n renderers.   This class implements {@link #getFilterString(Object, Settings)} to \n throw an exception, as it should not be called for primitive types.\n \n <P>The basic wrapper types, like Number, and some others, like {@link Date}, have special\n built-in filtering capabilities.  Columns whose column type is one of the wrapper classes\n will not have their {@link #getFilterString(Object, Settings)} methods called.  They can\n stub out those methods by throwing the exception returned by this method.\n@param <T> the column type","static":false,"methods":[{"javadoc":"","static":false,"name":"getColumnConstraintFilterMode","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.util.table.column.GColumnRenderer.ColumnConstraintFilterMode","comment":"","type_short":"ColumnConstraintFilterMode"}},{"javadoc":"","static":false,"name":"getFilterString","comment":"","params":[{"type_long":"T","name":"t","comment":"","type_short":"T"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"AbstractWrapperTypeColumnRenderer","comment":"A convenience interface of GColumnRenderer for primitive-based\/wrapper-based \n renderers.   This class implements #getFilterString(Object, Settings) to \n throw an exception, as it should not be called for primitive types.\n \n The basic wrapper types, like Number, and some others, like Date, have special\n built-in filtering capabilities.  Columns whose column type is one of the wrapper classes\n will not have their #getFilterString(Object, Settings) methods called.  They can\n stub out those methods by throwing the exception returned by this method.","fields":[]}
