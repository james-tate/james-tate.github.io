{"implements":[],"javadoc":"An {@link Address} based table model that allows clients to load their data via \n the {@link TableModelLoader} callback provided at construction time.\n <p>\n Why?  Well, this allows clients to use the existing table model framework without\n having to create a new table model.  In other words, some of the boilerplate code\n of creating a model is removed--clients need only implement one method in order to\n get full thread table functionality, which is a lot.","static":false,"extends":"ghidra.util.table.AddressPreviewTableModel","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"modelName","comment":"","type_short":"String"},{"type_long":"ghidra.framework.plugintool.ServiceProvider","name":"serviceProvider","comment":"","type_short":"ServiceProvider"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.util.table.TableModelLoader<ghidra.program.model.address.Address>","name":"loader","comment":"","type_short":"TableModelLoader"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"modelName","comment":"","type_short":"String"},{"type_long":"ghidra.framework.plugintool.ServiceProvider","name":"serviceProvider","comment":"","type_short":"ServiceProvider"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.util.table.TableModelLoader<ghidra.program.model.address.Address>","name":"loader","comment":"","type_short":"TableModelLoader"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"boolean","name":"loadIncrementally","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doLoad","comment":"","params":[{"type_long":"ghidra.util.datastruct.Accumulator<ghidra.program.model.address.Address>","name":"accumulator","comment":"","type_short":"Accumulator"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"CustomLoadingAddressTableModel","comment":"An Address based table model that allows clients to load their data via \n the TableModelLoader callback provided at construction time.\n \n Why?  Well, this allows clients to use the existing table model framework without\n having to create a new table model.  In other words, some of the boilerplate code\n of creating a model is removed--clients need only implement one method in order to\n get full thread table functionality, which is a lot.","fields":[{"type_long":"ghidra.util.table.TableModelLoader<ghidra.program.model.address.Address>","javadoc":"","static":false,"name":"loader","comment":"","type_short":"TableModelLoader","constant_value":null}]}
