{"implements":[],"javadoc":"<code>ClassTranslator<\/code> provides a way to map an old Ghidra class to\n a current Ghidra class. It can be used whenever a class is moved or renamed\n and Ghidra needs to know.\n <p><strong>Important<\/strong>: Any class that is indicated by the currentClassPath\n passed to the <code>put<\/code> method should implement <code>ExtensionPoint<\/code>.\n <p>Whenever a class whose name gets stored in the data base is moved to \n another package or renamed, the map of the old class path name to the \n new one should get put into the ClassTranslator.\n <br>Example:  The class <code>ghidra.app.plugin.core.MyPlugin.MyInfo<\/code> is in Ghidra version 1.\n In Ghidra version 2, it is moved and renamed to <code>ghidra.app.plugin.core.RenamedPlugin.SubPackage.SaveInfo<\/code>.\n Put the following static initializer in the version 2 SaveInfo class.\n <br><code>\n   static {\n       ClassTranslator.put(\"ghidra.app.plugin.core.MyPlugin.MyInfo\", SaveInfo.class.getName());\n   }\n <\/code>\n <p>Warning: If the class gets moved or renamed again in a subsequent version \n of Ghidra, a new translation (put call) should get added to the static initializer block \n and any old translations should have their current path name changed to the new\n class path.\n <br>Example: The class <code>ghidra.app.plugin.core.MyPlugin.MyInfo<\/code> is in Ghidra version 1.\n In Ghidra version 2, it is moved and renamed to <code>ghidra.app.plugin.core.RenamedPlugin.SubPackage.SaveInfo<\/code>.\n In Ghidra version 3, it is renamed to <code>ghidra.app.plugin.core.RenamedPlugin.SubPackage.SaveInfo<\/code>.\n Put the following static initializer in the version 3 SaveInfo class.\n <code>\n   static {\n       ClassTranslator.put(\"ghidra.app.plugin.core.MyPlugin.MyInfo\", SaveInfo.class.getName());\n       ClassTranslator.put(\"ghidra.app.plugin.core.RenamedPlugin.SubPackage.SaveInfo\", SaveInfo.class.getName());\n   }\n <\/code>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if this ClassTranslator has a mapping for the indicated old class path name.\n@param oldClassPath the old class path name of the class.\n@return true if the old class path is mapped to a new class path name in\n the current Ghidra version.","static":true,"name":"contains","comment":"Returns true if this ClassTranslator has a mapping for the indicated old class path name.","params":[{"type_long":"java.lang.String","name":"oldClassPath","comment":"the old class path name of the class.","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the old class path is mapped to a new class path name in\n the current Ghidra version.","type_short":"boolean"}},{"javadoc":"Returns the current class path name that is mapped for the indicated old class path name.\n@param oldClassPath the old class path name of the class.\n@return the class path name of the current Ghidra version's class file. Otherwise, null if the old class path name isn't mapped.","static":true,"name":"get","comment":"Returns the current class path name that is mapped for the indicated old class path name.","params":[{"type_long":"java.lang.String","name":"oldClassPath","comment":"the old class path name of the class.","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"the class path name of the current Ghidra version's class file. Otherwise, null if the old class path name isn't mapped.","type_short":"String"}},{"javadoc":"Defines a mapping indicating the class path name of the current Ghidra class \n that is the same class as the indicated old class path name from a previous Ghidra version.\n@param oldClassPath the old class path name of the class.\n@param currentClassPath the current class path name of the class.\n <p><strong>Important<\/strong>: Any class that is indicated by the currentClassPath\n passed to the <code>put<\/code> method should implement <code>ExtensionPoint<\/code>.","static":true,"name":"put","comment":"Defines a mapping indicating the class path name of the current Ghidra class \n that is the same class as the indicated old class path name from a previous Ghidra version.","params":[{"type_long":"java.lang.String","name":"oldClassPath","comment":"the old class path name of the class.","type_short":"String"},{"type_long":"java.lang.String","name":"currentClassPath","comment":"the current class path name of the class.\n Important: Any class that is indicated by the currentClassPath\n passed to the put method should implement ExtensionPoint.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ClassTranslator","comment":"ClassTranslator provides a way to map an old Ghidra class to\n a current Ghidra class. It can be used whenever a class is moved or renamed\n and Ghidra needs to know.\n Important: Any class that is indicated by the currentClassPath\n passed to the put method should implement ExtensionPoint.\n Whenever a class whose name gets stored in the data base is moved to \n another package or renamed, the map of the old class path name to the \n new one should get put into the ClassTranslator.\n Example:  The class ghidra.app.plugin.core.MyPlugin.MyInfo is in Ghidra version 1.\n In Ghidra version 2, it is moved and renamed to ghidra.app.plugin.core.RenamedPlugin.SubPackage.SaveInfo.\n Put the following static initializer in the version 2 SaveInfo class.\n \n   static {\n       ClassTranslator.put(\"ghidra.app.plugin.core.MyPlugin.MyInfo\", SaveInfo.class.getName());\n   }\n \n Warning: If the class gets moved or renamed again in a subsequent version \n of Ghidra, a new translation (put call) should get added to the static initializer block \n and any old translations should have their current path name changed to the new\n class path.\n Example: The class ghidra.app.plugin.core.MyPlugin.MyInfo is in Ghidra version 1.\n In Ghidra version 2, it is moved and renamed to ghidra.app.plugin.core.RenamedPlugin.SubPackage.SaveInfo.\n In Ghidra version 3, it is renamed to ghidra.app.plugin.core.RenamedPlugin.SubPackage.SaveInfo.\n Put the following static initializer in the version 3 SaveInfo class.\n \n   static {\n       ClassTranslator.put(\"ghidra.app.plugin.core.MyPlugin.MyInfo\", SaveInfo.class.getName());\n       ClassTranslator.put(\"ghidra.app.plugin.core.RenamedPlugin.SubPackage.SaveInfo\", SaveInfo.class.getName());\n   }\n ","fields":[{"type_long":"java.util.Hashtable<java.lang.String,java.lang.String>","javadoc":"","static":true,"name":"classPathMap","comment":"","type_short":"Hashtable","constant_value":null}]}
