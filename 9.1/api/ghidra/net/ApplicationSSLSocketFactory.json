{"implements":[],"javadoc":"<code>ApplicationSSLSocketFactory<\/code> provides a replacement for the default\n <code>SSLSocketFactory<\/code> which utilizes the default SSLContext established\n by {@link SSLContextInitializer}.","static":false,"extends":"javax.net.ssl.SSLSocketFactory","methods":[{"javadoc":"ApplicationSSLSocketFactory constructor.  \n SSLContext initialization will be performed using {@link SSLContextInitializer}.","static":false,"name":"<init>","comment":"ApplicationSSLSocketFactory constructor.  \n SSLContext initialization will be performed using SSLContextInitializer.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"createSocket","comment":"","params":[{"type_long":"java.net.Socket","name":"s","comment":"","type_short":"Socket"},{"type_long":"java.lang.String","name":"host","comment":"","type_short":"String"},{"type_long":"int","name":"port","comment":"","type_short":"int"},{"type_long":"boolean","name":"autoClose","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.net.Socket","comment":"","type_short":"Socket"}},{"javadoc":"","static":false,"name":"getDefaultCipherSuites","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"","static":false,"name":"getSupportedCipherSuites","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"","static":false,"name":"createSocket","comment":"","params":[{"type_long":"java.lang.String","name":"host","comment":"","type_short":"String"},{"type_long":"int","name":"port","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"java.net.UnknownHostException","comment":"","type_short":"UnknownHostException"}],"return":{"type_long":"java.net.Socket","comment":"","type_short":"Socket"}},{"javadoc":"","static":false,"name":"createSocket","comment":"","params":[{"type_long":"java.net.InetAddress","name":"host","comment":"","type_short":"InetAddress"},{"type_long":"int","name":"port","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.net.Socket","comment":"","type_short":"Socket"}},{"javadoc":"","static":false,"name":"createSocket","comment":"","params":[{"type_long":"java.lang.String","name":"host","comment":"","type_short":"String"},{"type_long":"int","name":"port","comment":"","type_short":"int"},{"type_long":"java.net.InetAddress","name":"localHost","comment":"","type_short":"InetAddress"},{"type_long":"int","name":"localPort","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"java.net.UnknownHostException","comment":"","type_short":"UnknownHostException"}],"return":{"type_long":"java.net.Socket","comment":"","type_short":"Socket"}},{"javadoc":"","static":false,"name":"createSocket","comment":"","params":[{"type_long":"java.net.InetAddress","name":"address","comment":"","type_short":"InetAddress"},{"type_long":"int","name":"port","comment":"","type_short":"int"},{"type_long":"java.net.InetAddress","name":"localAddress","comment":"","type_short":"InetAddress"},{"type_long":"int","name":"localPort","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.net.Socket","comment":"","type_short":"Socket"}}],"name":"ApplicationSSLSocketFactory","comment":"ApplicationSSLSocketFactory provides a replacement for the default\n SSLSocketFactory which utilizes the default SSLContext established\n by SSLContextInitializer.","fields":[{"type_long":"javax.net.ssl.SSLSocketFactory","javadoc":"","static":false,"name":"socketFactory","comment":"","type_short":"SSLSocketFactory","constant_value":null}]}
