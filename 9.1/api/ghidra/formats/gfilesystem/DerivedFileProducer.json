{"implements":[],"javadoc":"Used by {@link FileSystemService#getDerivedFile(FSRL, String, DerivedFileProducer, TaskMonitor)}\n to produce a derived file from a source file.\n <p>\n The {@link InputStream} returned from the method will be closed by the caller.","static":false,"methods":[{"javadoc":"Callback method intended to be implemented by the caller to\n {@link FileSystemService#getDerivedFile(FSRL, String, DerivedFileProducer, TaskMonitor)}.\n <p>\n The implementation needs to return an {@link InputStream} that contains the bytes\n of the derived file.\n <p>\n@param srcFile {@link File} location of the source file (usually in the file cache)\n@return a new {@link InputStream} that will produce all the bytes of the derived file.\n@throws IOException if there is a problem while producing the InputStream.\n@throws CancelledException if the user canceled.","static":false,"name":"produceDerivedStream","comment":"Callback method intended to be implemented by the caller to\n FileSystemService#getDerivedFile(FSRL, String, DerivedFileProducer, TaskMonitor).\n \n The implementation needs to return an InputStream that contains the bytes\n of the derived file.\n ","params":[{"type_long":"java.io.File","name":"srcFile","comment":"File location of the source file (usually in the file cache)","type_short":"File"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is a problem while producing the InputStream.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user canceled.","type_short":"CancelledException"}],"return":{"type_long":"java.io.InputStream","comment":"a new InputStream that will produce all the bytes of the derived file.","type_short":"InputStream"}}],"name":"DerivedFileProducer","comment":"Used by FileSystemService#getDerivedFile(FSRL, String, DerivedFileProducer, TaskMonitor)\n to produce a derived file from a source file.\n \n The InputStream returned from the method will be closed by the caller.","fields":[]}
