{"implements":["ghidra.formats.gfilesystem.GFileSystem"],"javadoc":"A {@link GFileSystem} implementation giving access to the user's operating system's\n local file system.\n <p>\n This implementation does not have a {@link GFileSystemFactory} as\n this class will be used as the single root filesystem.\n <p>\n Closing() this filesystem does nothing.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Create a new instance\n@return new {@link LocalFileSystem} instance using {@link #FSTYPE} as its FSRL type.","static":true,"name":"makeGlobalRootFS","comment":"Create a new instance","params":[],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.LocalFileSystem","comment":"new LocalFileSystem instance using #FSTYPE as its FSRL type.","type_short":"LocalFileSystem"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.formats.gfilesystem.FSRLRoot","name":"fsrl","comment":"","type_short":"FSRLRoot"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isSameFS","comment":"","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"","type_short":"FSRL"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns true if the {@link FSRL} is a local filesystem subdirectory.\n@param fsrl {@link FSRL} to test.\n@return boolean true if local filesystem directory.","static":false,"name":"isLocalSubdir","comment":"Returns true if the FSRL is a local filesystem subdirectory.","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL to test.","type_short":"FSRL"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if local filesystem directory.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getLocalFile","comment":"","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"","type_short":"FSRL"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.io.File","comment":"","type_short":"File"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"close","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isStatic","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getListing","comment":"","params":[{"type_long":"ghidra.formats.gfilesystem.GFile","name":"directory","comment":"","type_short":"GFile"}],"throws":[],"return":{"type_long":"java.util.List<ghidra.formats.gfilesystem.GFile>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getInfo","comment":"","params":[{"type_long":"ghidra.formats.gfilesystem.GFile","name":"file","comment":"","type_short":"GFile"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getFSRL","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.FSRLRoot","comment":"","type_short":"FSRLRoot"}},{"javadoc":"","static":false,"name":"lookup","comment":"","params":[{"type_long":"java.lang.String","name":"path","comment":"","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.formats.gfilesystem.GFileImpl","comment":"","type_short":"GFileImpl"}},{"javadoc":"","static":false,"name":"getInputStream","comment":"","params":[{"type_long":"ghidra.formats.gfilesystem.GFile","name":"file","comment":"","type_short":"GFile"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.io.InputStream","comment":"","type_short":"InputStream"}},{"javadoc":"","static":false,"name":"isClosed","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getRefManager","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.FileSystemRefManager","comment":"","type_short":"FileSystemRefManager"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"LocalFileSystem","comment":"A GFileSystem implementation giving access to the user's operating system's\n local file system.\n \n This implementation does not have a GFileSystemFactory as\n this class will be used as the single root filesystem.\n \n Closing() this filesystem does nothing.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"FSTYPE","comment":"","type_short":"String","constant_value":"\"file\""},{"type_long":"java.util.List<ghidra.formats.gfilesystem.GFile>","javadoc":"","static":false,"name":"emptyDir","comment":"","type_short":"List","constant_value":null},{"type_long":"ghidra.formats.gfilesystem.FSRLRoot","javadoc":"","static":false,"name":"fsFSRL","comment":"","type_short":"FSRLRoot","constant_value":null},{"type_long":"ghidra.formats.gfilesystem.FileSystemRefManager","javadoc":"","static":false,"name":"refManager","comment":"","type_short":"FileSystemRefManager","constant_value":null}]}
