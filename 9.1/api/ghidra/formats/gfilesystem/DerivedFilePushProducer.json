{"implements":[],"javadoc":"Used by {@link FileSystemService#getDerivedFilePushInfo(FSRL, String, DerivedFilePushProducer, TaskMonitor)}\n to produce a derived file from a source file.","static":false,"methods":[{"javadoc":"Callback method intended to be implemented by the caller to\n {@link FileSystemService#getDerivedFilePushInfo(FSRL, String, DerivedFileProducer, TaskMonitor)}.\n <p>\n The implementation needs to write bytes to the supplied {@link OutputStream}.\n <p>\n@param os {@link OutputStream} that the implementor should write the bytes to.  Do\n not close the stream when done.\n@throws IOException if there is a problem while writing to the OutputStream.\n@throws CancelledException if the user canceled.","static":false,"name":"push","comment":"Callback method intended to be implemented by the caller to\n FileSystemService#getDerivedFilePushInfo(FSRL, String, DerivedFileProducer, TaskMonitor).\n \n The implementation needs to write bytes to the supplied OutputStream.\n ","params":[{"type_long":"java.io.OutputStream","name":"os","comment":"OutputStream that the implementor should write the bytes to.  Do\n not close the stream when done.","type_short":"OutputStream"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is a problem while writing to the OutputStream.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user canceled.","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DerivedFilePushProducer","comment":"Used by FileSystemService#getDerivedFilePushInfo(FSRL, String, DerivedFilePushProducer, TaskMonitor)\n to produce a derived file from a source file.","fields":[]}
