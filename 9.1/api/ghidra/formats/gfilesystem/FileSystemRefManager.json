{"implements":[],"javadoc":"A threadsafe helper class that manages creating and releasing {@link FileSystemRef} instances\n and broadcasting events to {@link FileSystemEventListener} listeners.\n <p>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a new {@link FileSystemRefManager} pointing at the specified {@link GFileSystem}.\n@param fs {@link GFileSystem} to manage.","static":false,"name":"<init>","comment":"Creates a new FileSystemRefManager pointing at the specified GFileSystem.","params":[{"type_long":"ghidra.formats.gfilesystem.GFileSystem","name":"fs","comment":"GFileSystem to manage.","type_short":"GFileSystem"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"touch","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a {@link FileSystemEventListener listener} that will be called when\n this filesystem is {@link FileSystemEventListener#onFilesystemClose(GFileSystem) closed}\n or when {@link FileSystemEventListener#onFilesystemRefChange(GFileSystem, FileSystemRefManager) refs change}.\n@param listener {@link FileSystemEventListener} to receive callbacks, weakly refd and\n automagically removed if a reference isn't held to the listener somewhere else.","static":false,"name":"addListener","comment":"Adds a FileSystemEventListener that will be called when\n this filesystem is FileSystemEventListener#onFilesystemClose(GFileSystem)\n or when FileSystemEventListener#onFilesystemRefChange(GFileSystem, FileSystemRefManager).","params":[{"type_long":"ghidra.formats.gfilesystem.FileSystemEventListener","name":"listener","comment":"FileSystemEventListener to receive callbacks, weakly refd and\n automagically removed if a reference isn't held to the listener somewhere else.","type_short":"FileSystemEventListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes a previously added {@link FileSystemEventListener listener}.\n@param listener {@link FileSystemEventListener} to remove.","static":false,"name":"removeListener","comment":"Removes a previously added FileSystemEventListener.","params":[{"type_long":"ghidra.formats.gfilesystem.FileSystemEventListener","name":"listener","comment":"FileSystemEventListener to remove.","type_short":"FileSystemEventListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new {@link FileSystemRef} that points at the owning {@link GFileSystem filesystem}.\n <p>\n@return new {@link FileSystemRef} pointing at the filesystem, never null.","static":false,"name":"create","comment":"Creates a new FileSystemRef that points at the owning GFileSystem.\n ","params":[],"throws":[],"return":{"type_long":"ghidra.formats.gfilesystem.FileSystemRef","comment":"new FileSystemRef pointing at the filesystem, never null.","type_short":"FileSystemRef"}},{"javadoc":"Releases an existing {@link FileSystemRef} and broadcasts\n {@link FileSystemEventListener#onFilesystemRefChange(GFileSystem, FileSystemRefManager)}\n to listeners.\n <p>\n@param ref the {@link FileSystemRef} to release.","static":false,"name":"release","comment":"Releases an existing FileSystemRef and broadcasts\n FileSystemEventListener#onFilesystemRefChange(GFileSystem, FileSystemRefManager)\n to listeners.\n ","params":[{"type_long":"ghidra.formats.gfilesystem.FileSystemRef","name":"ref","comment":"the FileSystemRef to release.","type_short":"FileSystemRef"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if the only {@link FileSystemRef} pinning this filesystem is the\n caller's ref.\n@param callersRef {@link FileSystemRef} to test\n@return boolean true if the tested {@link FileSystemRef} is the only ref pinning\n the filesystem.","static":false,"name":"canClose","comment":"Returns true if the only FileSystemRef pinning this filesystem is the\n caller's ref.","params":[{"type_long":"ghidra.formats.gfilesystem.FileSystemRef","name":"callersRef","comment":"FileSystemRef to test","type_short":"FileSystemRef"}],"throws":[],"return":{"type_long":"boolean","comment":"boolean true if the tested FileSystemRef is the only ref pinning\n the filesystem.","type_short":"boolean"}},{"javadoc":"Called from the {@link GFileSystem#close()} before any destructive changes have\n been made to gracefully shutdown the ref manager.\n <p>\n Broadcasts {@link FileSystemEventListener#onFilesystemClose(GFileSystem)}.","static":false,"name":"onClose","comment":"Called from the GFileSystem#close() before any destructive changes have\n been made to gracefully shutdown the ref manager.\n \n Broadcasts FileSystemEventListener#onFilesystemClose(GFileSystem).","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"finalize","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getLastUsedTimestamp","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}}],"name":"FileSystemRefManager","comment":"A threadsafe helper class that manages creating and releasing FileSystemRef instances\n and broadcasting events to FileSystemEventListener listeners.\n ","fields":[{"type_long":"ghidra.formats.gfilesystem.GFileSystem","javadoc":"","static":false,"name":"fs","comment":"","type_short":"GFileSystem","constant_value":null},{"type_long":"java.util.List<ghidra.formats.gfilesystem.FileSystemRef>","javadoc":"","static":false,"name":"refs","comment":"","type_short":"List","constant_value":null},{"type_long":"ghidra.util.datastruct.WeakSet<ghidra.formats.gfilesystem.FileSystemEventListener>","javadoc":"","static":false,"name":"listeners","comment":"","type_short":"WeakSet","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"lastUsedTS","comment":"","type_short":"long","constant_value":null}]}
