{"implements":[],"javadoc":"A builder to allow for easier creation of an icon that is composed of a base icon, with \n other icons overlayed.  The {@link #build()} method returns an {@link ImageIcon}, as this\n allows Java's buttons to create analogue disabled icons correctly.\n \n <P>Note: this class is a work-in-progress.  Add more methods for locating overlays as needed.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"javax.swing.Icon","name":"baseIcon","comment":"","type_short":"Icon"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds the given icon as an overlay to the base icon, to the lower-right\n@param icon the icon\n@return this builder","static":false,"name":"addLowerRightIcon","comment":"Adds the given icon as an overlay to the base icon, to the lower-right","params":[{"type_long":"javax.swing.Icon","name":"icon","comment":"the icon","type_short":"Icon"}],"throws":[],"return":{"type_long":"resources.MultiIconBuilder","comment":"this builder","type_short":"MultiIconBuilder"}},{"javadoc":"Adds the given icon as an overlay to the base icon, to the lower-right,\n scaled to the given width and height\n@param icon the icon\n@param w the desired width\n@param h the desired height\n@return this builder","static":false,"name":"addLowerRightIcon","comment":"Adds the given icon as an overlay to the base icon, to the lower-right,\n scaled to the given width and height","params":[{"type_long":"javax.swing.Icon","name":"icon","comment":"the icon","type_short":"Icon"},{"type_long":"int","name":"w","comment":"the desired width","type_short":"int"},{"type_long":"int","name":"h","comment":"the desired height","type_short":"int"}],"throws":[],"return":{"type_long":"resources.MultiIconBuilder","comment":"this builder","type_short":"MultiIconBuilder"}},{"javadoc":"Adds the given icon as an overlay to the base icon, to the lower-left\n@param icon the icon\n@return this builder","static":false,"name":"addLowerLeftIcon","comment":"Adds the given icon as an overlay to the base icon, to the lower-left","params":[{"type_long":"javax.swing.Icon","name":"icon","comment":"the icon","type_short":"Icon"}],"throws":[],"return":{"type_long":"resources.MultiIconBuilder","comment":"this builder","type_short":"MultiIconBuilder"}},{"javadoc":"Adds the given icon as an overlay to the base icon, to the lower-left,\n scaled to the given width and height\n@param icon the icon\n@param w the desired width\n@param h the desired height\n@return this builder","static":false,"name":"addLowerLeftIcon","comment":"Adds the given icon as an overlay to the base icon, to the lower-left,\n scaled to the given width and height","params":[{"type_long":"javax.swing.Icon","name":"icon","comment":"the icon","type_short":"Icon"},{"type_long":"int","name":"w","comment":"the desired width","type_short":"int"},{"type_long":"int","name":"h","comment":"the desired height","type_short":"int"}],"throws":[],"return":{"type_long":"resources.MultiIconBuilder","comment":"this builder","type_short":"MultiIconBuilder"}},{"javadoc":"Sets a description for the icon being built.  This is useful for debugging.\n@param description the description\n@return this builder","static":false,"name":"setDescription","comment":"Sets a description for the icon being built.  This is useful for debugging.","params":[{"type_long":"java.lang.String","name":"description","comment":"the description","type_short":"String"}],"throws":[],"return":{"type_long":"resources.MultiIconBuilder","comment":"this builder","type_short":"MultiIconBuilder"}},{"javadoc":"","static":false,"name":"build","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.ImageIcon","comment":"","type_short":"ImageIcon"}},{"javadoc":"","static":false,"name":"getDescription","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"MultiIconBuilder","comment":"A builder to allow for easier creation of an icon that is composed of a base icon, with \n other icons overlayed.  The #build() method returns an ImageIcon, as this\n allows Java's buttons to create analogue disabled icons correctly.\n \n Note: this class is a work-in-progress.  Add more methods for locating overlays as needed.","fields":[{"type_long":"resources.MultiIcon","javadoc":"","static":false,"name":"multiIcon","comment":"","type_short":"MultiIcon","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"description","comment":"","type_short":"String","constant_value":null}]}
