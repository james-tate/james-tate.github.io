{"implements":[],"javadoc":"An implementation of the {@link ReducingLcs} that takes as its input a list of <T> items, where\n the list is the 'sequence' being checked for the Longest Common Subsequence.\n@param <T> the type of the item in the sequence of items","static":false,"extends":"generic.algorithms.ReducingLcs","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.util.List<T>","name":"x","comment":"","type_short":"List"},{"type_long":"java.util.List<T>","name":"y","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"matches","comment":"","params":[{"type_long":"T","name":"x","comment":"","type_short":"T"},{"type_long":"T","name":"y","comment":"","type_short":"T"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"reduce","comment":"","params":[{"type_long":"java.util.List<T>","name":"i","comment":"","type_short":"List"},{"type_long":"int","name":"start","comment":"","type_short":"int"},{"type_long":"int","name":"end","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.util.List<T>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"lengthOf","comment":"","params":[{"type_long":"java.util.List<T>","name":"i","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"valueOf","comment":"","params":[{"type_long":"java.util.List<T>","name":"i","comment":"","type_short":"List"},{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"T","comment":"","type_short":"T"}}],"name":"ReducingListBasedLcs","comment":"An implementation of the ReducingLcs that takes as its input a list of  items, where\n the list is the 'sequence' being checked for the Longest Common Subsequence.","fields":[]}
