{"implements":[],"javadoc":"Class for holding the result of processing an Item in a ConcurrentQ.\n@param <I> the type of the items in the ConcurrentQ.\n@param <R> the type of objects returned from processing an item in a ConcurrentQ.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"I","name":"item","comment":"","type_short":"I"},{"type_long":"java.util.concurrent.Future<R>","name":"future","comment":"","type_short":"Future"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the item that was processed.\n@return the item that was processed.","static":false,"name":"getItem","comment":"Returns the item that was processed.","params":[],"throws":[],"return":{"type_long":"I","comment":"the item that was processed.","type_short":"I"}},{"javadoc":"The result from processing the item.  Will be null if the item was cancelled or had an error.\n@return the result from processing the item or null if it did not complete successfully.\n@throws Exception any exception that was thrown during the processing of the input item","static":false,"name":"getResult","comment":"The result from processing the item.  Will be null if the item was cancelled or had an error.","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"any exception that was thrown during the processing of the input item","type_short":"Exception"}],"return":{"type_long":"R","comment":"the result from processing the item or null if it did not complete successfully.","type_short":"R"}},{"javadoc":"Returns any Exception that was encountered during processing of the item\n@return any Exception that was encountered during processing of the item","static":false,"name":"getError","comment":"Returns any Exception that was encountered during processing of the item","params":[],"throws":[],"return":{"type_long":"java.lang.Exception","comment":"any Exception that was encountered during processing of the item","type_short":"Exception"}},{"javadoc":"Returns true if the item encountered an error while processing the item.\n@return true if the item encountered an error while processing the item.","static":false,"name":"hasError","comment":"Returns true if the item encountered an error while processing the item.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the item encountered an error while processing the item.","type_short":"boolean"}},{"javadoc":"Returns true if the item's processing was cancelled.\n@return true if the item's processing was cancelled.","static":false,"name":"isCancelled","comment":"Returns true if the item's processing was cancelled.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the item's processing was cancelled.","type_short":"boolean"}}],"name":"QResult","comment":"Class for holding the result of processing an Item in a ConcurrentQ.","fields":[{"type_long":"I","javadoc":"","static":false,"name":"item","comment":"","type_short":"I","constant_value":null},{"type_long":"R","javadoc":"","static":false,"name":"result","comment":"","type_short":"R","constant_value":null},{"type_long":"java.lang.Exception","javadoc":"","static":false,"name":"error","comment":"","type_short":"Exception","constant_value":null}]}
