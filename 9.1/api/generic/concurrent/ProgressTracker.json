{"implements":[],"javadoc":"A class to synchronize and track the progress of the items being processed by a concurrentQ. It \n provides various wait methods for when one item is completed or all items are completed.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.util.concurrent.locks.ReentrantLock","name":"lock","comment":"","type_short":"ReentrantLock"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"itemsAdded","comment":"","params":[{"type_long":"int","name":"n","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"itemStarted","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"InProgressitemCompletedOrCancelled","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"neverStartedItemsRemoved","comment":"","params":[{"type_long":"int","name":"n","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getCompletedItemCount","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getTotalItemCount","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getItemsInProgressCount","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"isDone","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"waitUntilDone","comment":"","params":[],"throws":[{"type_long":"java.lang.InterruptedException","comment":"","type_short":"InterruptedException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"waitForNext","comment":"","params":[],"throws":[{"type_long":"java.lang.InterruptedException","comment":"","type_short":"InterruptedException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"waitUntilDone","comment":"","params":[{"type_long":"long","name":"timeout","comment":"","type_short":"long"},{"type_long":"java.util.concurrent.TimeUnit","name":"unit","comment":"","type_short":"TimeUnit"}],"throws":[{"type_long":"java.lang.InterruptedException","comment":"","type_short":"InterruptedException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getNextID","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}}],"name":"ProgressTracker","comment":"A class to synchronize and track the progress of the items being processed by a concurrentQ. It \n provides various wait methods for when one item is completed or all items are completed.","fields":[{"type_long":"long","javadoc":"","static":false,"name":"totalCount","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"inProgressCount","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"completedOrCancelledCount","comment":"","type_short":"long","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"nextID","comment":"","type_short":"long","constant_value":null},{"type_long":"java.util.concurrent.locks.ReentrantLock","javadoc":"","static":false,"name":"lock","comment":"","type_short":"ReentrantLock","constant_value":null},{"type_long":"java.util.concurrent.locks.Condition","javadoc":"","static":false,"name":"done","comment":"","type_short":"Condition","constant_value":null},{"type_long":"java.util.concurrent.locks.Condition","javadoc":"","static":false,"name":"itemCompleted","comment":"","type_short":"Condition","constant_value":null}]}
