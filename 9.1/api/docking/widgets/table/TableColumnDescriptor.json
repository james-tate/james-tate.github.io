{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getAllColumns","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<docking.widgets.table.DynamicTableColumn<ROW_TYPE,?,?>>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getDefaultVisibleColumns","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<docking.widgets.table.DynamicTableColumn<ROW_TYPE,?,?>>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getDefaultTableSortState","comment":"","params":[{"type_long":"docking.widgets.table.DynamicColumnTableModel<ROW_TYPE>","name":"model","comment":"","type_short":"DynamicColumnTableModel"}],"throws":[],"return":{"type_long":"docking.widgets.table.TableSortState","comment":"","type_short":"TableSortState"}},{"javadoc":"","static":false,"name":"addHiddenColumn","comment":"","params":[{"type_long":"docking.widgets.table.DynamicTableColumn<ROW_TYPE,?,?>","name":"column","comment":"","type_short":"DynamicTableColumn"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addVisibleColumn","comment":"","params":[{"type_long":"docking.widgets.table.DynamicTableColumn<ROW_TYPE,?,?>","name":"column","comment":"","type_short":"DynamicTableColumn"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@param column the column to add\n@param sortOrdinal the <b>ordinal (i.e., 1, 2, 3...n)<\/b>, not the index (i.e, 0, 1, 2...n).\n@param ascending true to sort ascending","static":false,"name":"addVisibleColumn","comment":"","params":[{"type_long":"docking.widgets.table.DynamicTableColumn<ROW_TYPE,?,?>","name":"column","comment":"the column to add","type_short":"DynamicTableColumn"},{"type_long":"int","name":"sortOrdinal","comment":"the ordinal (i.e., 1, 2, 3...n), not the index (i.e, 0, 1, 2...n).","type_short":"int"},{"type_long":"boolean","name":"ascending","comment":"true to sort ascending","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"TableColumnDescriptor","comment":"","fields":[{"type_long":"java.util.List<docking.widgets.table.TableColumnDescriptor<ROW_TYPE>.TableColumnInfo>","javadoc":"","static":false,"name":"columns","comment":"","type_short":"List","constant_value":null}]}
