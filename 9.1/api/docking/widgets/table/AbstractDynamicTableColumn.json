{"implements":["docking.widgets.table.DynamicTableColumn"],"javadoc":"An Table Column is an interface that should be implemented by each class that provides\n a field (column) of an object based table (each row relates to a particular type of object).\n It determines the appropriate cell object for use by the table column this field represents.\n It can then return the appropriate object to display in the table cell for the indicated\n row object.\n\n Implementations of this interface must provide a public default constructor.\n@param <ROW_TYPE> The row object class supported by this column\n@param <COLUMN_TYPE> The column object class supported by this column\n@param <DATA_SOURCE> The object class type that will be passed to \n \t\t\t\t\t\tsee <code>getValue(ROW_TYPE, Settings, DATA_SOURCE, ServiceProvider)<\/code>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"identifier","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getColumnName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getColumnPreferredWidth","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getComparator","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Comparator<COLUMN_TYPE>","comment":"","type_short":"Comparator"}},{"javadoc":"","static":false,"name":"getColumnClass","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Class<COLUMN_TYPE>","comment":"","type_short":"Class"}},{"javadoc":"","static":false,"name":"getSupportedRowType","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Class<ROW_TYPE>","comment":"","type_short":"Class"}},{"javadoc":"","static":false,"name":"getValue","comment":"","params":[{"type_long":"ROW_TYPE","name":"rowObject","comment":"","type_short":"ROW_TYPE"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"},{"type_long":"DATA_SOURCE","name":"data","comment":"","type_short":"DATA_SOURCE"},{"type_long":"ghidra.framework.plugintool.ServiceProvider","name":"serviceProvider","comment":"","type_short":"ServiceProvider"}],"throws":[{"type_long":"java.lang.IllegalArgumentException","comment":"","type_short":"IllegalArgumentException"}],"return":{"type_long":"COLUMN_TYPE","comment":"","type_short":"COLUMN_TYPE"}},{"javadoc":"","static":false,"name":"getColumnRenderer","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.util.table.column.GColumnRenderer<COLUMN_TYPE>","comment":"","type_short":"GColumnRenderer"}},{"javadoc":"","static":false,"name":"configureDefaultSettings","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getSettingsDefinitions","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.docking.settings.SettingsDefinition[]","comment":"","type_short":"ghidra.docking.settings.SettingsDefinition[]"}},{"javadoc":"","static":false,"name":"getMaxLines","comment":"","params":[{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getColumnDisplayName","comment":"","params":[{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getColumnDescription","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getIdentifier","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getUniqueIdentifier","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"AbstractDynamicTableColumn","comment":"An Table Column is an interface that should be implemented by each class that provides\n a field (column) of an object based table (each row relates to a particular type of object).\n It determines the appropriate cell object for use by the table column this field represents.\n It can then return the appropriate object to display in the table cell for the indicated\n row object.\n\n Implementations of this interface must provide a public default constructor.","fields":[{"type_long":"ghidra.docking.settings.SettingsDefinition[]","javadoc":"","static":true,"name":"NO_SETTINGS_DEFINITIONS","comment":"","type_short":"ghidra.docking.settings.SettingsDefinition[]","constant_value":null},{"type_long":"ghidra.docking.settings.FormatSettingsDefinition","javadoc":"","static":true,"name":"INTEGER_RADIX_SETTING","comment":"","type_short":"FormatSettingsDefinition","constant_value":null},{"type_long":"ghidra.docking.settings.IntegerSignednessFormattingModeSettingsDefinition","javadoc":"","static":true,"name":"INTEGER_SIGNEDNESS_MODE_SETTING","comment":"","type_short":"IntegerSignednessFormattingModeSettingsDefinition","constant_value":null},{"type_long":"ghidra.docking.settings.FloatingPointPrecisionSettingsDefinition","javadoc":"","static":true,"name":"FLOATING_POINT_PRECISION_SETTING","comment":"","type_short":"FloatingPointPrecisionSettingsDefinition","constant_value":null},{"type_long":"ghidra.docking.settings.SettingsDefinition[]","javadoc":"","static":true,"name":"INTEGER_SETTINGS_DEFINITIONS","comment":"","type_short":"ghidra.docking.settings.SettingsDefinition[]","constant_value":null},{"type_long":"ghidra.docking.settings.SettingsDefinition[]","javadoc":"","static":true,"name":"FLOATING_POINT_SETTINGS_DEFINITIONS","comment":"","type_short":"ghidra.docking.settings.SettingsDefinition[]","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"hasConfiguredDefaultSettings","comment":"","type_short":"boolean","constant_value":null},{"type_long":"ghidra.docking.settings.SettingsDefinition[]","javadoc":"","static":false,"name":"defaultSettingsDefinitions","comment":"","type_short":"ghidra.docking.settings.SettingsDefinition[]","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"identifier","comment":"","type_short":"String","constant_value":null}]}
