{"implements":["docking.widgets.table.TableFilter"],"javadoc":"A {@link TableFilter}  that filters based on column values\n\n <P>This class maintains a list of {@link ColumnConstraintSet} objects that are logically combined\n to determine if the overall filter accepts the given row object. Each ColumnConstraint has an\n associated {@link LogicOperation} which determines how its result are combined with the constraint\n set before it. (The first ConstraintSets LogicOperation is not used).  AND operations have higher\n precedence than the OR operations.\n@param <R> the row type of the table","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new empty ColumnBasedTableFilter\n@param model the table model","static":false,"name":"<init>","comment":"Constructs a new empty ColumnBasedTableFilter","params":[{"type_long":"docking.widgets.table.RowObjectTableModel<R>","name":"model","comment":"the table model","type_short":"RowObjectTableModel"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"copy","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>","comment":"","type_short":"ColumnBasedTableFilter"}},{"javadoc":"","static":false,"name":"acceptsRow","comment":"","params":[{"type_long":"R","name":"rowObject","comment":"","type_short":"R"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Organizes the list of constraint sets into groups that will first be \"ANDed\" together, then\n those \"AND\" groups will be \"ORed\" together.\n@return the list of \"AND\" groups that will be \"ORed\" together.","static":false,"name":"buildOrList","comment":"Organizes the list of constraint sets into groups that will first be \"ANDed\" together, then\n those \"AND\" groups will be \"ORed\" together.","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>.OrList","comment":"the list of \"AND\" groups that will be \"ORed\" together.","type_short":"OrList"}},{"javadoc":"Returns the name of this filter.\n\n <P>Names are used for saving filters, so unless they are saved they typically don't have a name.\n@return the name of this filter.","static":false,"name":"getName","comment":"Returns the name of this filter.\n\n Names are used for saving filters, so unless they are saved they typically don't have a name.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the name of this filter.","type_short":"String"}},{"javadoc":"Sets the name of this filter.\n@param name the new name for this filter.","static":false,"name":"setName","comment":"Sets the name of this filter.","params":[{"type_long":"java.lang.String","name":"name","comment":"the new name for this filter.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a new constraintSet to this ColumnBasedTableFilter\n@param logicalOp The logic operation (AND or OR) for how the new ConstraintSet's result will be\n combined with the previous ConstraintSet's result.\n@param columnIndex the model index of the column whose values must past the given constraint filters.\n@param constraints a list of ColumnConstraints where at least one must pass for the constraintSet to pass.","static":false,"name":"addConstraintSet","comment":"Adds a new constraintSet to this ColumnBasedTableFilter","params":[{"type_long":"docking.widgets.table.columnfilter.LogicOperation","name":"logicalOp","comment":"The logic operation (AND or OR) for how the new ConstraintSet's result will be\n combined with the previous ConstraintSet's result.","type_short":"LogicOperation"},{"type_long":"int","name":"columnIndex","comment":"the model index of the column whose values must past the given constraint filters.","type_short":"int"},{"type_long":"java.util.List<docking.widgets.table.constraint.ColumnConstraint<T>>","name":"constraints","comment":"a list of ColumnConstraints where at least one must pass for the constraintSet to pass.","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isSubFilterOf","comment":"","params":[{"type_long":"docking.widgets.table.TableFilter<?>","name":"tableFilter","comment":"","type_short":"TableFilter"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hasColumnFilter","comment":"","params":[{"type_long":"int","name":"columnModelIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Return the list of ConstraintSets in this TableFilter\n@return the list of ConstraintSets in this TableFilter","static":false,"name":"getConstraintSets","comment":"Return the list of ConstraintSets in this TableFilter","params":[],"throws":[],"return":{"type_long":"java.util.List<docking.widgets.table.columnfilter.ColumnConstraintSet<R,?>>","comment":"the list of ConstraintSets in this TableFilter","type_short":"List"}},{"javadoc":"Serializes this filter into a SaveState object.\n@return the SaveState serialized version of this filter.","static":false,"name":"save","comment":"Serializes this filter into a SaveState object.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.options.SaveState","comment":"the SaveState serialized version of this filter.","type_short":"SaveState"}},{"javadoc":"Restore this filter from the given saveState.\n@param saveState that contains the serialized filter data\n@param dataSource the Table's DataSource which some objects might need to restore themselves.","static":false,"name":"restore","comment":"Restore this filter from the given saveState.","params":[{"type_long":"ghidra.framework.options.SaveState","name":"saveState","comment":"that contains the serialized filter data","type_short":"SaveState"},{"type_long":"java.lang.Object","name":"dataSource","comment":"the Table's DataSource which some objects might need to restore themselves.","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns an HTML description of this filter.\n <P>\n Note: the HTML string returned does NOT start with the HTML tag so that it can be combined\n with other text.\n@return an HTML description of this filter.","static":false,"name":"getHtmlRepresentation","comment":"Returns an HTML description of this filter.\n \n Note: the HTML string returned does NOT start with the HTML tag so that it can be combined\n with other text.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"an HTML description of this filter.","type_short":"String"}},{"javadoc":"Return a tooltip  that describes the effect of this filter for a specific filter.\n@param columnIndex the model index of the column to get a filter description of.\n@return a tooltip that describes this filter for a specific column.","static":false,"name":"getToolTip","comment":"Return a tooltip  that describes the effect of this filter for a specific filter.","params":[{"type_long":"int","name":"columnIndex","comment":"the model index of the column to get a filter description of.","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"a tooltip that describes this filter for a specific column.","type_short":"String"}},{"javadoc":"","static":false,"name":"getHtmlRepresentation","comment":"","params":[{"type_long":"java.util.List<docking.widgets.table.columnfilter.ColumnConstraintSet<R,?>>","name":"filters","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Checks if the given {@link ColumnBasedTableFilter} is the same as this one except for\n its name.\n@param other the other filter to check for equivalence.\n@return true if the other filter is the same as this one except for its name","static":false,"name":"isEquivalent","comment":"Checks if the given ColumnBasedTableFilter is the same as this one except for\n its name.","params":[{"type_long":"docking.widgets.table.columnfilter.ColumnBasedTableFilter<?>","name":"other","comment":"the other filter to check for equivalence.","type_short":"ColumnBasedTableFilter"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the other filter is the same as this one except for its name","type_short":"boolean"}},{"javadoc":"Gets the table's DataSource (if it has one). Only table models\n that extends {@link GDynamicColumnTableModel} can have a data source.\n@return the table's data source or null if the table doesn't have one.","static":false,"name":"getDataSource","comment":"Gets the table's DataSource (if it has one). Only table models\n that extends GDynamicColumnTableModel can have a data source.","params":[],"throws":[],"return":{"type_long":"java.lang.Object","comment":"the table's data source or null if the table doesn't have one.","type_short":"Object"}},{"javadoc":"Returns true if this filter has been saved (i.e. has a name)\n@return true if this filter has been saved (i.e. has a name)","static":false,"name":"isSaved","comment":"Returns true if this filter has been saved (i.e. has a name)","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this filter has been saved (i.e. has a name)","type_short":"boolean"}}],"name":"ColumnBasedTableFilter","comment":"A TableFilter  that filters based on column values\n\n This class maintains a list of ColumnConstraintSet objects that are logically combined\n to determine if the overall filter accepts the given row object. Each ColumnConstraint has an\n associated LogicOperation which determines how its result are combined with the constraint\n set before it. (The first ConstraintSets LogicOperation is not used).  AND operations have higher\n precedence than the OR operations.","fields":[{"type_long":"docking.widgets.table.RowObjectTableModel<R>","javadoc":"","static":false,"name":"model","comment":"","type_short":"RowObjectTableModel","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"name","comment":"","type_short":"String","constant_value":null},{"type_long":"java.util.List<docking.widgets.table.columnfilter.ColumnConstraintSet<R,?>>","javadoc":"","static":false,"name":"constraintSets","comment":"","type_short":"List","constant_value":null},{"type_long":"docking.widgets.table.constraint.TableFilterContext","javadoc":"","static":false,"name":"tableFilterContext","comment":"","type_short":"TableFilterContext","constant_value":null},{"type_long":"docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>.OrList","javadoc":"","static":false,"name":"orList","comment":"","type_short":"OrList","constant_value":null}]}
