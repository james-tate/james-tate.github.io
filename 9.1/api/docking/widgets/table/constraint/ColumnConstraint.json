{"implements":["java.lang.Comparable"],"javadoc":"ColumnConstraints are objects used to filter table rows based on values from a particular column.\n@param <T> The column type","static":false,"methods":[{"javadoc":"Compares value against the current constraint value to determine\n acceptance; true if value satisfies the constraints' value, false\n otherwise\n@param value the column value to be tested.\n@param context provides additional information about the the table and its data. This\n allows the filter to base its decision on information other than just the column value.\n@return true if the column value passes the constraint, false otherwise","static":false,"name":"accepts","comment":"Compares value against the current constraint value to determine\n acceptance; true if value satisfies the constraints' value, false\n otherwise","params":[{"type_long":"T","name":"value","comment":"the column value to be tested.","type_short":"T"},{"type_long":"docking.widgets.table.constraint.TableFilterContext","name":"context","comment":"provides additional information about the the table and its data. This\n allows the filter to base its decision on information other than just the column value.","type_short":"TableFilterContext"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the column value passes the constraint, false otherwise","type_short":"boolean"}},{"javadoc":"Returns a reasonable String version of this constraint useful for debugging.\n@return the String representation of this constraint","static":false,"name":"asString","comment":"Returns a reasonable String version of this constraint useful for debugging.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the String representation of this constraint","type_short":"String"}},{"javadoc":"Returns the name of the constraint\n@return the name of the constraint.","static":false,"name":"getName","comment":"Returns the name of the constraint","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the name of the constraint.","type_short":"String"}},{"javadoc":"Returns the column type that this constraint can be used to filter.\n@return the column type","static":false,"name":"getColumnType","comment":"Returns the column type that this constraint can be used to filter.","params":[],"throws":[],"return":{"type_long":"java.lang.Class<T>","comment":"the column type","type_short":"Class"}},{"javadoc":"Returns a ColumnConstraintEditor which will provide gui components for users to edit the\n constraint values.\n@param columnDataSource This provides the constraint with access to the column data in the\n table model as well as the DataProvider of the table (if it has one)\n@return A columnConstraintEditor for editing the constraints value.","static":false,"name":"getEditor","comment":"Returns a ColumnConstraintEditor which will provide gui components for users to edit the\n constraint values.","params":[{"type_long":"docking.widgets.table.constraint.ColumnData<T>","name":"columnDataSource","comment":"This provides the constraint with access to the column data in the\n table model as well as the DataProvider of the table (if it has one)","type_short":"ColumnData"}],"throws":[],"return":{"type_long":"docking.widgets.table.constrainteditor.ColumnConstraintEditor<T>","comment":"A columnConstraintEditor for editing the constraints value.","type_short":"ColumnConstraintEditor"}},{"javadoc":"Returns a \"group\" string that is used to logically group column constraints for\n presentation to the user\n@return the group this constraint belongs to.","static":false,"name":"getGroup","comment":"Returns a \"group\" string that is used to logically group column constraints for\n presentation to the user","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the group this constraint belongs to.","type_short":"String"}},{"javadoc":"returns a description of the constraint suitable for displaying in a tooltip\n@return a description of the constraint.","static":false,"name":"getConstraintValueTooltip","comment":"returns a description of the constraint suitable for displaying in a tooltip","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"a description of the constraint.","type_short":"String"}},{"javadoc":"Returns the \"value\" of the constraint in string form\n\n <P>This is used for serializing the constraint.\n@return the \"value\" of the constraint in string form.","static":false,"name":"getConstraintValueString","comment":"Returns the \"value\" of the constraint in string form\n\n This is used for serializing the constraint.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the \"value\" of the constraint in string form.","type_short":"String"}},{"javadoc":"Parses the constraint value string for deserialization purposes.\n@param constraintValueString the value of the constraint in string form.\n@param dataSource the DataSource from the Table.\n@return a new ColumnConstraint","static":false,"name":"parseConstraintValue","comment":"Parses the constraint value string for deserialization purposes.","params":[{"type_long":"java.lang.String","name":"constraintValueString","comment":"the value of the constraint in string form.","type_short":"String"},{"type_long":"java.lang.Object","name":"dataSource","comment":"the DataSource from the Table.","type_short":"Object"}],"throws":[],"return":{"type_long":"docking.widgets.table.constraint.ColumnConstraint<T>","comment":"a new ColumnConstraint","type_short":"ColumnConstraint"}},{"javadoc":"ColumnConstraints are displayed by group and then by name","static":false,"name":"compareTo","comment":"ColumnConstraints are displayed by group and then by name","params":[{"type_long":"docking.widgets.table.constraint.ColumnConstraint<T>","name":"other","comment":"","type_short":"ColumnConstraint"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"ColumnConstraint","comment":"ColumnConstraints are objects used to filter table rows based on values from a particular column.","fields":[]}
