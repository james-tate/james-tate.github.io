{"implements":["docking.widgets.table.constraint.ColumnConstraint"],"javadoc":"Class that maps one type of column constraint into another.  Typically, these are created\n automatically based on {@link ColumnTypeMapper} that are discovered by the system.  For example,\n if you have a column type of \"Foo\", and you create a ColumnTypeMapper<Foo,String>, then all the\n string constraints would now be available that column.\n@param <T> The column type.\n@param <M> the converted (mapped) type.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new Mapped ColumnConstraint\n@param mapper a mapper from from the column type to a mapped type.\n@param delegate the column constraint of the mapped type.","static":false,"name":"<init>","comment":"Constructs a new Mapped ColumnConstraint","params":[{"type_long":"docking.widgets.table.constraint.ColumnTypeMapper<T,M>","name":"mapper","comment":"a mapper from from the column type to a mapped type.","type_short":"ColumnTypeMapper"},{"type_long":"docking.widgets.table.constraint.ColumnConstraint<M>","name":"delegate","comment":"the column constraint of the mapped type.","type_short":"ColumnConstraint"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"accepts","comment":"","params":[{"type_long":"T","name":"value","comment":"","type_short":"T"},{"type_long":"docking.widgets.table.constraint.TableFilterContext","name":"context","comment":"","type_short":"TableFilterContext"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getColumnType","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Class<T>","comment":"","type_short":"Class"}},{"javadoc":"","static":false,"name":"getEditor","comment":"","params":[{"type_long":"docking.widgets.table.constraint.ColumnData<T>","name":"columnDataSource","comment":"","type_short":"ColumnData"}],"throws":[],"return":{"type_long":"docking.widgets.table.constrainteditor.ColumnConstraintEditor<T>","comment":"","type_short":"ColumnConstraintEditor"}},{"javadoc":"","static":false,"name":"getGroup","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getConstraintValueString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"parseConstraintValue","comment":"","params":[{"type_long":"java.lang.String","name":"valueString","comment":"","type_short":"String"},{"type_long":"java.lang.Object","name":"dataSource","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"docking.widgets.table.constraint.ColumnConstraint<T>","comment":"","type_short":"ColumnConstraint"}},{"javadoc":"Creates a copy of this class using the same mapper but with a different mapped delegate.\n@param newDelegate the new M type delegate column constraint.\n@return a copy of this class using the same mapper but with a different mapped delegate.","static":false,"name":"copy","comment":"Creates a copy of this class using the same mapper but with a different mapped delegate.","params":[{"type_long":"docking.widgets.table.constraint.ColumnConstraint<M>","name":"newDelegate","comment":"the new M type delegate column constraint.","type_short":"ColumnConstraint"}],"throws":[],"return":{"type_long":"docking.widgets.table.constraint.ColumnConstraint<T>","comment":"a copy of this class using the same mapper but with a different mapped delegate.","type_short":"ColumnConstraint"}},{"javadoc":"Returns the delegate constraint (current value for this mapped constraint)\n@return the delegate constraint.","static":false,"name":"getDelegate","comment":"Returns the delegate constraint (current value for this mapped constraint)","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.constraint.ColumnConstraint<M>","comment":"the delegate constraint.","type_short":"ColumnConstraint"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"MappedColumnConstraint","comment":"Class that maps one type of column constraint into another.  Typically, these are created\n automatically based on ColumnTypeMapper that are discovered by the system.  For example,\n if you have a column type of \"Foo\", and you create a ColumnTypeMapperFoo,String, then all the\n string constraints would now be available that column.","fields":[{"type_long":"docking.widgets.table.constraint.ColumnTypeMapper<T,M>","javadoc":"","static":false,"name":"mapper","comment":"","type_short":"ColumnTypeMapper","constant_value":null},{"type_long":"docking.widgets.table.constraint.ColumnConstraint<M>","javadoc":"","static":false,"name":"delegate","comment":"","type_short":"ColumnConstraint","constant_value":null}]}
