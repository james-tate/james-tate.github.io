{"implements":[],"javadoc":"A comparator for comparing table column values for threaded table models.  This comparator\n uses the column cache of the {@link ThreadedTableModel}.\n@param <T> the row type","static":false,"extends":"docking.widgets.table.sort.RowToColumnComparator","methods":[{"javadoc":"Constructs this class with the given column comparator that will get called after the\n given row is converted to the column value for the given sort column\n@param model the table model using this comparator\n@param sortColumn the column being sorted\n@param comparator the column comparator to use for sorting\n@see RowToColumnComparator","static":false,"name":"<init>","comment":"Constructs this class with the given column comparator that will get called after the\n given row is converted to the column value for the given sort column","params":[{"type_long":"docking.widgets.table.threaded.ThreadedTableModel<T,?>","name":"model","comment":"the table model using this comparator","type_short":"ThreadedTableModel"},{"type_long":"int","name":"sortColumn","comment":"the column being sorted","type_short":"int"},{"type_long":"java.util.Comparator<java.lang.Object>","name":"comparator","comment":"the column comparator to use for sorting","type_short":"Comparator"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This version of the constructor is used for the default case where the client will \n supply a backup row comparator that will get called if the given column comparator returns\n a '0' value.\n@param model the table model using this comparator\n@param sortColumn the column being sorted\n@param comparator the column comparator to use for sorting\n@param backupRowComparator the backup row comparator\n@see RowToColumnComparator","static":false,"name":"<init>","comment":"This version of the constructor is used for the default case where the client will \n supply a backup row comparator that will get called if the given column comparator returns\n a '0' value.","params":[{"type_long":"docking.widgets.table.threaded.ThreadedTableModel<T,?>","name":"model","comment":"the table model using this comparator","type_short":"ThreadedTableModel"},{"type_long":"int","name":"sortColumn","comment":"the column being sorted","type_short":"int"},{"type_long":"java.util.Comparator<java.lang.Object>","name":"comparator","comment":"the column comparator to use for sorting","type_short":"Comparator"},{"type_long":"java.util.Comparator<T>","name":"backupRowComparator","comment":"the backup row comparator","type_short":"Comparator"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getColumnValue","comment":"","params":[{"type_long":"T","name":"t","comment":"","type_short":"T"}],"throws":[],"return":{"type_long":"java.lang.Object","comment":"","type_short":"Object"}}],"name":"ThreadedTableColumnComparator","comment":"A comparator for comparing table column values for threaded table models.  This comparator\n uses the column cache of the ThreadedTableModel.","fields":[{"type_long":"docking.widgets.table.threaded.ThreadedTableModel<T,?>","javadoc":"","static":false,"name":"threadedModel","comment":"","type_short":"ThreadedTableModel","constant_value":null}]}
