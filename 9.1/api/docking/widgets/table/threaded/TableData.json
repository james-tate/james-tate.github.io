{"implements":["java.lang.Iterable"],"javadoc":"A concept that represents the data used by the {@link ThreadedTableModel}.  This class \n encapsulates the actual data, along with any filter applied, any sort applied, along with \n some convenience methods for performing operations on this group of data.\n@param <ROW_OBJECT> the row type","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"createEmptyDataset","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.threaded.TableData<ROW_OBJECT>","comment":"","type_short":"TableData"}},{"javadoc":"","static":true,"name":"createFullDataset","comment":"","params":[{"type_long":"java.util.List<ROW_OBJECT>","name":"data","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"docking.widgets.table.threaded.TableData<ROW_OBJECT>","comment":"","type_short":"TableData"}},{"javadoc":"","static":true,"name":"createSubDataset","comment":"","params":[{"type_long":"docking.widgets.table.threaded.TableData<ROW_OBJECT>","name":"source","comment":"","type_short":"TableData"},{"type_long":"java.util.List<ROW_OBJECT>","name":"derived","comment":"","type_short":"List"},{"type_long":"docking.widgets.table.TableSortingContext<ROW_OBJECT>","name":"sortContext","comment":"","type_short":"TableSortingContext"}],"throws":[],"return":{"type_long":"docking.widgets.table.threaded.TableData<ROW_OBJECT>","comment":"","type_short":"TableData"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.util.List<ROW_OBJECT>","name":"data","comment":"","type_short":"List"},{"type_long":"docking.widgets.table.TableSortingContext<ROW_OBJECT>","name":"sortContext","comment":"","type_short":"TableSortingContext"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"docking.widgets.table.threaded.TableData<ROW_OBJECT>","name":"source","comment":"","type_short":"TableData"},{"type_long":"java.util.List<ROW_OBJECT>","name":"derived","comment":"","type_short":"List"},{"type_long":"docking.widgets.table.TableSortingContext<ROW_OBJECT>","name":"sortContext","comment":"","type_short":"TableSortingContext"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"copy","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.threaded.TableData<ROW_OBJECT>","comment":"","type_short":"TableData"}},{"javadoc":"","static":false,"name":"copy","comment":"","params":[{"type_long":"docking.widgets.table.threaded.TableData<ROW_OBJECT>","name":"newSource","comment":"","type_short":"TableData"}],"throws":[],"return":{"type_long":"docking.widgets.table.threaded.TableData<ROW_OBJECT>","comment":"","type_short":"TableData"}},{"javadoc":"","static":false,"name":"getTableFilter","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.TableFilter<ROW_OBJECT>","comment":"","type_short":"TableFilter"}},{"javadoc":"","static":false,"name":"setTableFilter","comment":"","params":[{"type_long":"docking.widgets.table.TableFilter<ROW_OBJECT>","name":"tableFilter","comment":"","type_short":"TableFilter"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getSortContext","comment":"","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.TableSortingContext<ROW_OBJECT>","comment":"","type_short":"TableSortingContext"}},{"javadoc":"","static":false,"name":"isSorted","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setSortContext","comment":"","params":[{"type_long":"docking.widgets.table.TableSortingContext<ROW_OBJECT>","name":"sortContext","comment":"","type_short":"TableSortingContext"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getData","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ROW_OBJECT>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"size","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"clear","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"get","comment":"","params":[{"type_long":"int","name":"modelRow","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ROW_OBJECT","comment":"","type_short":"ROW_OBJECT"}},{"javadoc":"Uses the current sort to perform a fast lookup of the given item in the given list when \n sorted; a brute-force lookup when not sorted\n@param t the item\n@return the index","static":false,"name":"indexOf","comment":"Uses the current sort to perform a fast lookup of the given item in the given list when \n sorted; a brute-force lookup when not sorted","params":[{"type_long":"ROW_OBJECT","name":"t","comment":"the item","type_short":"ROW_OBJECT"}],"throws":[],"return":{"type_long":"int","comment":"the index","type_short":"int"}},{"javadoc":"","static":false,"name":"remove","comment":"","params":[{"type_long":"ROW_OBJECT","name":"o","comment":"","type_short":"ROW_OBJECT"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Adds the new <tt>value<\/tt> to the data at the appropriate location based on the sort\n@param value the row Object to insert","static":false,"name":"insert","comment":"Adds the new value to the data at the appropriate location based on the sort","params":[{"type_long":"ROW_OBJECT","name":"value","comment":"the row Object to insert","type_short":"ROW_OBJECT"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"passesFilter","comment":"","params":[{"type_long":"ROW_OBJECT","name":"value","comment":"","type_short":"ROW_OBJECT"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Starts at this data object and looks for a suitable dataset for the given filter.  If\n this dataset is filtered and the filter is a more general case of the given filter, then\n this dataset can be used for the given filter as a source of data.  If this dataset\n is not suitable as a filter starting point, then this dataset's parent will be checked.\n This operation will walk up the parent chain this way until the root dataset is reached.\n@param filter the filter to check for compatibility with this dataset's filter\n@return the correct dataset to use as a starting point for further filtering operations; \n         null if this dataset is not compatible with the given filter.","static":false,"name":"getLowestLevelSourceDataForFilter","comment":"Starts at this data object and looks for a suitable dataset for the given filter.  If\n this dataset is filtered and the filter is a more general case of the given filter, then\n this dataset can be used for the given filter as a source of data.  If this dataset\n is not suitable as a filter starting point, then this dataset's parent will be checked.\n This operation will walk up the parent chain this way until the root dataset is reached.","params":[{"type_long":"docking.widgets.table.TableFilter<ROW_OBJECT>","name":"filter","comment":"the filter to check for compatibility with this dataset's filter","type_short":"TableFilter"}],"throws":[],"return":{"type_long":"docking.widgets.table.threaded.TableData<ROW_OBJECT>","comment":"the correct dataset to use as a starting point for further filtering operations; \n         null if this dataset is not compatible with the given filter.","type_short":"TableData"}},{"javadoc":"Returns true if the this data object has a filter that is a suitable starting point\n for the given filter.\n@param filter the filter to check for compatibility with this dataset's filter\n@return the correct dataset to use as a starting point for further filtering operations; \n         null if this dataset is not compatible with the given filter.","static":false,"name":"hasParentFilterOf","comment":"Returns true if the this data object has a filter that is a suitable starting point\n for the given filter.","params":[{"type_long":"docking.widgets.table.TableFilter<ROW_OBJECT>","name":"filter","comment":"the filter to check for compatibility with this dataset's filter","type_short":"TableFilter"}],"throws":[],"return":{"type_long":"boolean","comment":"the correct dataset to use as a starting point for further filtering operations; \n         null if this dataset is not compatible with the given filter.","type_short":"boolean"}},{"javadoc":"True if the filter of this data matched the given filter <b>and<\/b> the given source \n data is the same as the source data of this data.\n@param filter the table's current filter\n@return true if the source data nor the filter are different that what is used by this object.","static":false,"name":"matchesFilter","comment":"True if the filter of this data matched the given filter and the given source \n data is the same as the source data of this data.","params":[{"type_long":"docking.widgets.table.TableFilter<ROW_OBJECT>","name":"filter","comment":"the table's current filter","type_short":"TableFilter"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the source data nor the filter are different that what is used by this object.","type_short":"boolean"}},{"javadoc":"Returns false if the given data is this object or if it an ancestor of this.\n@param other the other object to check\n@return false if the given data is this object or if it an ancestor of this.","static":false,"name":"isUnrelatedTo","comment":"Returns false if the given data is this object or if it an ancestor of this.","params":[{"type_long":"docking.widgets.table.threaded.TableData<ROW_OBJECT>","name":"other","comment":"the other object to check","type_short":"TableData"}],"throws":[],"return":{"type_long":"boolean","comment":"false if the given data is this object or if it an ancestor of this.","type_short":"boolean"}},{"javadoc":"Returns the ID of this table data.   It is possible that two data instances of this class\n that have the same ID are considered to be the same data.\n@return the ID","static":false,"name":"getId","comment":"Returns the ID of this table data.   It is possible that two data instances of this class\n that have the same ID are considered to be the same data.","params":[],"throws":[],"return":{"type_long":"int","comment":"the ID","type_short":"int"}},{"javadoc":"Returns the root dataset for this data and all its ancestors.\n@return the root dataset for this data and all its ancestors.","static":false,"name":"getRootData","comment":"Returns the root dataset for this data and all its ancestors.","params":[],"throws":[],"return":{"type_long":"docking.widgets.table.threaded.TableData<ROW_OBJECT>","comment":"the root dataset for this data and all its ancestors.","type_short":"TableData"}},{"javadoc":"","static":false,"name":"iterator","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<ROW_OBJECT>","comment":"","type_short":"Iterator"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"TableData","comment":"A concept that represents the data used by the ThreadedTableModel.  This class \n encapsulates the actual data, along with any filter applied, any sort applied, along with \n some convenience methods for performing operations on this group of data.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"nextID","comment":"","type_short":"int","constant_value":null},{"type_long":"docking.widgets.table.threaded.TableData<ROW_OBJECT>","javadoc":"This is null when 'data' is not derived from any other data set (like after a filter).\n When data is derived, this will be non-null.  Further, this 'source' data may itself \n have a 'source' data, and so on.","static":false,"name":"source","comment":"This is null when 'data' is not derived from any other data set (like after a filter).\n When data is derived, this will be non-null.  Further, this 'source' data may itself \n have a 'source' data, and so on.","type_short":"TableData","constant_value":null},{"type_long":"java.util.List<ROW_OBJECT>","javadoc":"This data may be a subset of 'source'","static":false,"name":"data","comment":"This data may be a subset of 'source'","type_short":"List","constant_value":null},{"type_long":"docking.widgets.table.TableSortingContext<ROW_OBJECT>","javadoc":"Note: There is an assumption that if this object is null, then the data is NOT sorted.  If\n       it is not null, then the data is sorted.","static":false,"name":"sortContext","comment":"Note: There is an assumption that if this object is null, then the data is NOT sorted.  If\n       it is not null, then the data is sorted.","type_short":"TableSortingContext","constant_value":null},{"type_long":"docking.widgets.table.TableFilter<ROW_OBJECT>","javadoc":"null if not filtered","static":false,"name":"tableFilter","comment":"null if not filtered","type_short":"TableFilter","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"ID","comment":"","type_short":"int","constant_value":null}]}
