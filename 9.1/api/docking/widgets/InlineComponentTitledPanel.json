{"implements":[],"javadoc":"A panel with a component-containing border. Use a checkbox as the component, for example, \n to control the enablement of child widgets.\n <p> \n  Users should modify the contents of this panel via the JPanel from <code>getContentPane()<\/code> \n  -- <code>add()<\/code> and <code>remove()<\/code> methods have been overridden to modify the \n  content pane; other calls to this panel should <code>getContentPane()<\/code> first.\n  <p>\n  Example:\n  <pre>\n  public class MyPanel extends InlineComponentTitledPanel {\n    private JCheckBox enableCheckbox = null;\n    public MyPanel() {\n      super(new JCheckBox(\"Enable\"), BorderFactory.createEtchedBorder());\n      enableCheckbox = (JCheckBox) getTitleComponent();\n      enableCheckbox.addActionListener(...);\n      \n      JPanel content = getContentPane();\n      content.setLayout(new BorderLayout());\n      add(new JButton(\"Click me\"));\n      ...\n    }\n    ...\n  }<\/pre>","static":false,"extends":"javax.swing.JPanel","methods":[{"javadoc":"Create a panel with <code>titleComponent<\/code> in the top, left corner\n@param titleComponent widget to draw in the border","static":false,"name":"<init>","comment":"Create a panel with titleComponent in the top, left corner","params":[{"type_long":"javax.swing.JComponent","name":"titleComponent","comment":"widget to draw in the border","type_short":"JComponent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a panel with <code>titleComponent<\/code> in the top, left corner\n@param titleComponent widget to draw in the border\n@param otherBorder secondary border to place around this panel","static":false,"name":"<init>","comment":"Create a panel with titleComponent in the top, left corner","params":[{"type_long":"javax.swing.JComponent","name":"titleComponent","comment":"widget to draw in the border","type_short":"JComponent"},{"type_long":"javax.swing.border.Border","name":"otherBorder","comment":"secondary border to place around this panel","type_short":"Border"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a panel with <code>titleComponent<\/code> in the prescribed location\n@param titleComponent widget to draw in the border\n@param titleJustification top-bottom alignment\n@param titlePosition left-right alignment\n@see TitledBorder","static":false,"name":"<init>","comment":"Create a panel with titleComponent in the prescribed location","params":[{"type_long":"javax.swing.JComponent","name":"titleComponent","comment":"widget to draw in the border","type_short":"JComponent"},{"type_long":"int","name":"titleJustification","comment":"top-bottom alignment","type_short":"int"},{"type_long":"int","name":"titlePosition","comment":"left-right alignment","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a panel with <code>titleComponent<\/code> in the prescribed location with a secondary\n  border\n@param titleComponent widget to draw in the border\n@param titleJustification top-bottom alignment\n@param titlePosition left-right alignment\n@param otherBorder secondary border to place around this panel\n@see TitledBorder","static":false,"name":"<init>","comment":"Create a panel with titleComponent in the prescribed location with a secondary\n  border","params":[{"type_long":"javax.swing.JComponent","name":"titleComponent","comment":"widget to draw in the border","type_short":"JComponent"},{"type_long":"int","name":"titleJustification","comment":"top-bottom alignment","type_short":"int"},{"type_long":"int","name":"titlePosition","comment":"left-right alignment","type_short":"int"},{"type_long":"javax.swing.border.Border","name":"otherBorder","comment":"secondary border to place around this panel","type_short":"Border"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doLayout","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getTitleComponent","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.JComponent","comment":"","type_short":"JComponent"}},{"javadoc":"","static":false,"name":"setTitleComponent","comment":"","params":[{"type_long":"javax.swing.JComponent","name":"component","comment":"","type_short":"JComponent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getComponentIndex","comment":"","params":[{"type_long":"java.awt.Component","name":"component","comment":"","type_short":"Component"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Sets the secondary border.\n \n NOTE: Rendering conflicts may occur with co-located sub-borders; a TitledBorder that \n renders in the same position (top, bottom, etc.) will cause the component to shift, and\n will be rendered-over if the new title resides in the same position and justification \n (left-to-right alignment) as the component.\n@param otherBorder\n@see setOtherBorder(Border)","static":false,"name":"setBorder","comment":"Sets the secondary border.\n \n NOTE: Rendering conflicts may occur with co-located sub-borders; a TitledBorder that \n renders in the same position (top, bottom, etc.) will cause the component to shift, and\n will be rendered-over if the new title resides in the same position and justification \n (left-to-right alignment) as the component.","params":[{"type_long":"javax.swing.border.Border","name":"otherBorder","comment":"","type_short":"Border"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setOtherBorder","comment":"","params":[{"type_long":"javax.swing.border.Border","name":"otherBorder","comment":"","type_short":"Border"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getOtherBorder","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.border.Border","comment":"","type_short":"Border"}},{"javadoc":"This class requires that all content be placed within a designated panel, this method returns that panel.\n@return panel The content panel","static":false,"name":"getContentPane","comment":"This class requires that all content be placed within a designated panel, this method returns that panel.","params":[],"throws":[],"return":{"type_long":"javax.swing.JPanel","comment":"panel The content panel","type_short":"JPanel"}},{"javadoc":"","static":false,"name":"add","comment":"","params":[{"type_long":"java.awt.Component","name":"comp","comment":"","type_short":"Component"}],"throws":[],"return":{"type_long":"java.awt.Component","comment":"","type_short":"Component"}},{"javadoc":"","static":false,"name":"add","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.awt.Component","name":"comp","comment":"","type_short":"Component"}],"throws":[],"return":{"type_long":"java.awt.Component","comment":"","type_short":"Component"}},{"javadoc":"","static":false,"name":"add","comment":"","params":[{"type_long":"java.awt.Component","name":"comp","comment":"","type_short":"Component"},{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.awt.Component","comment":"","type_short":"Component"}},{"javadoc":"","static":false,"name":"remove","comment":"","params":[{"type_long":"int","name":"index","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"remove","comment":"","params":[{"type_long":"java.awt.Component","name":"comp","comment":"","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeAll","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setEnabled","comment":"","params":[{"type_long":"boolean","name":"enable","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"InlineComponentTitledPanel","comment":"A panel with a component-containing border. Use a checkbox as the component, for example, \n to control the enablement of child widgets.\n  \n  Users should modify the contents of this panel via the JPanel from getContentPane() \n  -- add() and remove() methods have been overridden to modify the \n  content pane; other calls to this panel should getContentPane() first.\n  \n  Example:\n  \n  public class MyPanel extends InlineComponentTitledPanel {\n    private JCheckBox enableCheckbox = null;\n    public MyPanel() {\n      super(new JCheckBox(\"Enable\"), BorderFactory.createEtchedBorder());\n      enableCheckbox = (JCheckBox) getTitleComponent();\n      enableCheckbox.addActionListener(...);\n      \n      JPanel content = getContentPane();\n      content.setLayout(new BorderLayout());\n      add(new JButton(\"Click me\"));\n      ...\n    }\n    ...\n  }","fields":[{"type_long":"javax.swing.JPanel","javadoc":"","static":false,"name":"content","comment":"","type_short":"JPanel","constant_value":null},{"type_long":"docking.widgets.InlineComponentTitledBorder","javadoc":"","static":false,"name":"border","comment":"","type_short":"InlineComponentTitledBorder","constant_value":null}]}
