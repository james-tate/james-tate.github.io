{"implements":[],"javadoc":"An extension of File that does not translate to the\n native operating system's file separator.\n For example, on Windows:\n <br>\n <code>File f = new File(\"c:\/temp\/foo.txt\");<\/code><br>\n <code>String path = f.getAbsolutePath();<\/code><br>\n In this case, path equals \"c:\\temp\\foo.txt\".\n However using GhidraFile, path would still equal \"c:\/temp\/foo.txt\"","static":false,"extends":"java.io.File","methods":[{"javadoc":"Construct a new GhidraFile.\n@param parent the parent directory; eg, \"c:\\temp\"\n@param child the child file name; eg, \"foo.txt\"\n@param separator the separator character; eg, '\/' or '\\'","static":false,"name":"<init>","comment":"Construct a new GhidraFile.","params":[{"type_long":"java.lang.String","name":"parent","comment":"the parent directory; eg, \"c:\\temp\"","type_short":"String"},{"type_long":"java.lang.String","name":"child","comment":"the child file name; eg, \"foo.txt\"","type_short":"String"},{"type_long":"char","name":"separator","comment":"the separator character; eg, '\/' or '\\'","type_short":"char"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new GhidraFile.\n@param path the path to the file; eg, \"c:\\temp\\foo.txt\" or \"temp\\foo.txt\"\n@param separator the separator character; eg, '\/' or '\\'","static":false,"name":"<init>","comment":"Construct a new GhidraFile.","params":[{"type_long":"java.lang.String","name":"path","comment":"the path to the file; eg, \"c:\\temp\\foo.txt\" or \"temp\\foo.txt\"","type_short":"String"},{"type_long":"char","name":"separator","comment":"the separator character; eg, '\/' or '\\'","type_short":"char"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new GhidraFile.\n@param parent the parent file path\n@param name the name of the file\n@param separator the separator character; eg, '\/' or '\\'","static":false,"name":"<init>","comment":"Construct a new GhidraFile.","params":[{"type_long":"java.io.File","name":"parent","comment":"the parent file path","type_short":"File"},{"type_long":"java.lang.String","name":"name","comment":"the name of the file","type_short":"String"},{"type_long":"char","name":"separator","comment":"the separator character; eg, '\/' or '\\'","type_short":"char"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see java.io.File#getAbsoluteFile()","static":false,"name":"getAbsoluteFile","comment":"","params":[],"throws":[],"return":{"type_long":"java.io.File","comment":"","type_short":"File"}},{"javadoc":"@see java.io.File#getCanonicalFile()","static":false,"name":"getCanonicalFile","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.io.File","comment":"","type_short":"File"}},{"javadoc":"@see java.io.File#getAbsolutePath()","static":false,"name":"getAbsolutePath","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see java.io.File#getCanonicalPath()","static":false,"name":"getCanonicalPath","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see java.io.File#getParent()","static":false,"name":"getParent","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see java.io.File#getParentFile()","static":false,"name":"getParentFile","comment":"","params":[],"throws":[],"return":{"type_long":"java.io.File","comment":"","type_short":"File"}},{"javadoc":"@see java.io.File#getPath()","static":false,"name":"getPath","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"GhidraFile","comment":"An extension of File that does not translate to the\n native operating system's file separator.\n For example, on Windows:\n \n File f = new File(\"c:\/temp\/foo.txt\");\n String path = f.getAbsolutePath();\n In this case, path equals \"c:\\temp\\foo.txt\".\n However using GhidraFile, path would still equal \"c:\/temp\/foo.txt\"","fields":[{"type_long":"long","javadoc":"","static":true,"name":"serialVersionUID","comment":"","type_short":"long","constant_value":"1"},{"type_long":"char","javadoc":"","static":false,"name":"nativeSeparator","comment":"","type_short":"char","constant_value":null}]}
