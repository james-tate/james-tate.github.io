{"implements":["docking.widgets.fieldpanel.field.TextField"],"javadoc":"Field for showing multiple strings, each with its own attributes in a field,\n on a single line, clipping the beginning of the text as needed to fit within the field's width.\n Has the extra methods for mapping column positions to strings and positions in those\n strings.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new ReverseClippingTextField that allows the cursor beyond the end\n of the line. This is just a pass through constructor that makes the call:\n \n <pre>\n this(startX, width, new AttributedString[] { textElement }, hlFactory, true);\n <\/pre>\n@param startX The x position of the field\n@param width The width of the field\n@param textElement The AttributedStrings to display in the field.\n@param hlFactory The HighlightFactory object used to paint highlights.","static":false,"name":"<init>","comment":"Constructs a new ReverseClippingTextField that allows the cursor beyond the end\n of the line. This is just a pass through constructor that makes the call:\n \n \n this(startX, width, new AttributedString[] { textElement }, hlFactory, true);\n ","params":[{"type_long":"int","name":"startX","comment":"The x position of the field","type_short":"int"},{"type_long":"int","name":"width","comment":"The width of the field","type_short":"int"},{"type_long":"docking.widgets.fieldpanel.field.FieldElement","name":"textElement","comment":"The AttributedStrings to display in the field.","type_short":"FieldElement"},{"type_long":"docking.widgets.fieldpanel.support.HighlightFactory","name":"hlFactory","comment":"The HighlightFactory object used to paint highlights.","type_short":"HighlightFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Checks if any of the textElements need to be clipped. If so, it creates a\n new textElement for the element that needs to be clipped that will fit in\n the available space. Any textElements past the clipped element will be\n ignored.","static":false,"name":"clip","comment":"Checks if any of the textElements need to be clipped. If so, it creates a\n new textElement for the element that needs to be clipped that will fit in\n the available space. Any textElements past the clipped element will be\n ignored.","params":[{"type_long":"int","name":"availableWidth","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#contains(int, int)","static":false,"name":"contains","comment":"","params":[{"type_long":"int","name":"x","comment":"","type_short":"int"},{"type_long":"int","name":"y","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getCol(int, int)","static":false,"name":"getCol","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"},{"type_long":"int","name":"x","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getCursorBounds(int, int)","static":false,"name":"getCursorBounds","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"},{"type_long":"int","name":"col","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.awt.Rectangle","comment":"","type_short":"Rectangle"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getHeight()","static":false,"name":"getHeight","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getNumCols(int)","static":false,"name":"getNumCols","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getNumCols","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getNumRows()","static":false,"name":"getNumRows","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getRow(int)","static":false,"name":"getRow","comment":"","params":[{"type_long":"int","name":"y","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getScrollableUnitIncrement(int, int,\n      int)","static":false,"name":"getScrollableUnitIncrement","comment":"","params":[{"type_long":"int","name":"topOfScreen","comment":"","type_short":"int"},{"type_long":"int","name":"direction","comment":"","type_short":"int"},{"type_long":"int","name":"max","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getStartX()","static":false,"name":"getStartX","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getWidth()","static":false,"name":"getWidth","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getPreferredWidth","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getX(int, int)","static":false,"name":"getX","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"},{"type_long":"int","name":"col","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getY(int)","static":false,"name":"getY","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#isPrimary()","static":false,"name":"isPrimary","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see docking.widgets.fieldpanel.field.TextField#setPrimary(boolean)","static":false,"name":"setPrimary","comment":"","params":[{"type_long":"boolean","name":"b","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#isValid(int, int)","static":false,"name":"isValid","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"},{"type_long":"int","name":"col","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#paint(java.awt.Graphics,\n      docking.widgets.fieldpanel.internal.PaintContext, boolean,\n      docking.widgets.fieldpanel.support.RowColLocation)","static":false,"name":"paint","comment":"","params":[{"type_long":"javax.swing.JComponent","name":"c","comment":"","type_short":"JComponent"},{"type_long":"java.awt.Graphics","name":"g","comment":"","type_short":"Graphics"},{"type_long":"docking.widgets.fieldpanel.internal.PaintContext","name":"context","comment":"","type_short":"PaintContext"},{"type_long":"docking.widgets.fieldpanel.internal.FieldBackgroundColorManager","name":"colorManager","comment":"","type_short":"FieldBackgroundColorManager"},{"type_long":"docking.widgets.fieldpanel.support.RowColLocation","name":"cursorLoc","comment":"","type_short":"RowColLocation"},{"type_long":"int","name":"rowHeight","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"paintSelection","comment":"","params":[{"type_long":"java.awt.Graphics","name":"g","comment":"","type_short":"Graphics"},{"type_long":"docking.widgets.fieldpanel.internal.FieldBackgroundColorManager","name":"colorManager","comment":"","type_short":"FieldBackgroundColorManager"},{"type_long":"int","name":"rowHeight","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"print","comment":"","params":[{"type_long":"java.awt.Graphics","name":"g","comment":"","type_short":"Graphics"},{"type_long":"docking.widgets.fieldpanel.internal.PaintContext","name":"context","comment":"","type_short":"PaintContext"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"paintText","comment":"","params":[{"type_long":"javax.swing.JComponent","name":"c","comment":"","type_short":"JComponent"},{"type_long":"java.awt.Graphics","name":"g","comment":"","type_short":"Graphics"},{"type_long":"docking.widgets.fieldpanel.internal.PaintContext","name":"context","comment":"","type_short":"PaintContext"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"paintDots","comment":"","params":[{"type_long":"java.awt.Graphics","name":"g","comment":"","type_short":"Graphics"},{"type_long":"int","name":"x","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"paintHighlights","comment":"","params":[{"type_long":"java.awt.Graphics","name":"g","comment":"","type_short":"Graphics"},{"type_long":"docking.widgets.fieldpanel.support.RowColLocation","name":"cursorLoc","comment":"","type_short":"RowColLocation"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"paintHighlights","comment":"","params":[{"type_long":"java.awt.Graphics","name":"g","comment":"","type_short":"Graphics"},{"type_long":"docking.widgets.fieldpanel.support.Highlight[]","name":"highlights","comment":"","type_short":"docking.widgets.fieldpanel.support.Highlight[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"paintCursor","comment":"","params":[{"type_long":"java.awt.Graphics","name":"g","comment":"","type_short":"Graphics"},{"type_long":"java.awt.Color","name":"cursorColor","comment":"","type_short":"Color"},{"type_long":"docking.widgets.fieldpanel.support.RowColLocation","name":"cursorLoc","comment":"","type_short":"RowColLocation"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Converts a single column value into a MultiStringLocation which specifies\n a string index and a column position within that string.\n@param screenColumn the overall column position in the total String.\n@return MultiStringLocation the MultiStringLocation corresponding to the\n         given column.","static":false,"name":"screenToDataLocation","comment":"Converts a single column value into a MultiStringLocation which specifies\n a string index and a column position within that string.","params":[{"type_long":"int","name":"screenRow","comment":"","type_short":"int"},{"type_long":"int","name":"screenColumn","comment":"the overall column position in the total String.","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.support.RowColLocation","comment":"MultiStringLocation the MultiStringLocation corresponding to the\n         given column.","type_short":"RowColLocation"}},{"javadoc":"@see docking.widgets.fieldpanel.field.TextField#dataToScreenLocation(int, int)","static":false,"name":"dataToScreenLocation","comment":"","params":[{"type_long":"int","name":"dataRow","comment":"","type_short":"int"},{"type_long":"int","name":"dataColumn","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.support.RowColLocation","comment":"","type_short":"RowColLocation"}},{"javadoc":"","static":false,"name":"findX","comment":"","params":[{"type_long":"int","name":"col","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns true if the text is clipped (truncated)","static":false,"name":"isClipped","comment":"Returns true if the text is clipped (truncated)","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getHeightAbove()","static":false,"name":"getHeightAbove","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getHeightBelow()","static":false,"name":"getHeightBelow","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#rowHeightChanged(int, int)","static":false,"name":"rowHeightChanged","comment":"","params":[{"type_long":"int","name":"heightAbove","comment":"","type_short":"int"},{"type_long":"int","name":"heightBelow","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#getText()","static":false,"name":"getText","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getTextWithLineSeparators","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#textOffsetToScreenLocation(int)","static":false,"name":"textOffsetToScreenLocation","comment":"","params":[{"type_long":"int","name":"textOffset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.support.RowColLocation","comment":"","type_short":"RowColLocation"}},{"javadoc":"@see docking.widgets.fieldpanel.field.Field#screenLocationToTextOffset(int, int)","static":false,"name":"screenLocationToTextOffset","comment":"","params":[{"type_long":"int","name":"row","comment":"","type_short":"int"},{"type_long":"int","name":"col","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getFieldElement","comment":"","params":[{"type_long":"int","name":"screenRow","comment":"","type_short":"int"},{"type_long":"int","name":"screenColumn","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.field.FieldElement","comment":"","type_short":"FieldElement"}}],"name":"ReverseClippingTextField","comment":"Field for showing multiple strings, each with its own attributes in a field,\n on a single line, clipping the beginning of the text as needed to fit within the field's width.\n Has the extra methods for mapping column positions to strings and positions in those\n strings.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"RIGHT_MARGIN","comment":"","type_short":"int","constant_value":"7"},{"type_long":"int","javadoc":"","static":true,"name":"DOT_DOT_DOT_WIDTH","comment":"","type_short":"int","constant_value":null},{"type_long":"docking.widgets.fieldpanel.field.FieldElement","javadoc":"","static":false,"name":"originalElement","comment":"","type_short":"FieldElement","constant_value":null},{"type_long":"docking.widgets.fieldpanel.field.FieldElement","javadoc":"","static":false,"name":"textElement","comment":"","type_short":"FieldElement","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"startX","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"dotdotdotStartX","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"textStartX","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"startingCharIndex","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"width","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"preferredWidth","comment":"","type_short":"int","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"fullText","comment":"","type_short":"String","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isClipped","comment":"","type_short":"boolean","constant_value":null},{"type_long":"docking.widgets.fieldpanel.support.HighlightFactory","javadoc":"","static":false,"name":"hlFactory","comment":"","type_short":"HighlightFactory","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"isPrimary","comment":"","type_short":"boolean","constant_value":null}]}
