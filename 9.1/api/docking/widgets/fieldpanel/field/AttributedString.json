{"implements":[],"javadoc":"An object that wraps a string and provides data that describes how to render\n that string.  \n <p>\n This class was created as a place to house attributes of rendering that \n are not described by Java's Font object, like underlining.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates an attributed string with the given text, color and metrics with\n no other attributes, like highlighting or underlining.\n@param text The text that this class describes.\n@param textColor The color to paint the text.\n@param fontMetrics The font metrics used to draw the text.","static":false,"name":"<init>","comment":"Creates an attributed string with the given text, color and metrics with\n no other attributes, like highlighting or underlining.","params":[{"type_long":"java.lang.String","name":"text","comment":"The text that this class describes.","type_short":"String"},{"type_long":"java.awt.Color","name":"textColor","comment":"The color to paint the text.","type_short":"Color"},{"type_long":"java.awt.FontMetrics","name":"fontMetrics","comment":"The font metrics used to draw the text.","type_short":"FontMetrics"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates an attributed string with the given text, color and metrics with\n other attributes, like highlighting and underlining.\n@param text The text that this class describes.\n@param textColor The color to paint the text.\n@param fontMetrics The font metrics used to draw the text.\n@param underline True if <code>text<\/code> should be underlined.\n@param underlineColor the color to use for underlining.","static":false,"name":"<init>","comment":"Creates an attributed string with the given text, color and metrics with\n other attributes, like highlighting and underlining.","params":[{"type_long":"java.lang.String","name":"text","comment":"The text that this class describes.","type_short":"String"},{"type_long":"java.awt.Color","name":"textColor","comment":"The color to paint the text.","type_short":"Color"},{"type_long":"java.awt.FontMetrics","name":"fontMetrics","comment":"The font metrics used to draw the text.","type_short":"FontMetrics"},{"type_long":"boolean","name":"underline","comment":"True if text should be underlined.","type_short":"boolean"},{"type_long":"java.awt.Color","name":"underlineColor","comment":"the color to use for underlining.","type_short":"Color"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates an attributed string with the given text, color, icon and metrics with\n other attributes, like highlighting and underlining.\n@param icon icon image to be displayed to the left of the text\n@param text The text that this class describes.\n@param textColor The color to paint the text.\n@param fontMetrics The font metrics used to draw the text.\n@param underline True if <code>text<\/code> should be underlined.\n@param underlineColor the color to use for underlining.","static":false,"name":"<init>","comment":"Creates an attributed string with the given text, color, icon and metrics with\n other attributes, like highlighting and underlining.","params":[{"type_long":"javax.swing.Icon","name":"icon","comment":"icon image to be displayed to the left of the text","type_short":"Icon"},{"type_long":"java.lang.String","name":"text","comment":"The text that this class describes.","type_short":"String"},{"type_long":"java.awt.Color","name":"textColor","comment":"The color to paint the text.","type_short":"Color"},{"type_long":"java.awt.FontMetrics","name":"fontMetrics","comment":"The font metrics used to draw the text.","type_short":"FontMetrics"},{"type_long":"boolean","name":"underline","comment":"True if text should be underlined.","type_short":"boolean"},{"type_long":"java.awt.Color","name":"underlineColor","comment":"the color to use for underlining.","type_short":"Color"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getText","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getIcon","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.Icon","comment":"","type_short":"Icon"}},{"javadoc":"","static":false,"name":"length","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getIconWidth","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getStringWidth","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getHeightAbove","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getHeightBelow","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getColumnPosition","comment":"","params":[{"type_long":"int","name":"width","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getFontMetrics","comment":"","params":[{"type_long":"int","name":"charIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.awt.FontMetrics","comment":"","type_short":"FontMetrics"}},{"javadoc":"","static":false,"name":"getColor","comment":"","params":[{"type_long":"int","name":"charIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"substring","comment":"","params":[{"type_long":"int","name":"start","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.field.AttributedString","comment":"","type_short":"AttributedString"}},{"javadoc":"","static":false,"name":"substring","comment":"","params":[{"type_long":"int","name":"start","comment":"","type_short":"int"},{"type_long":"int","name":"end","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.field.AttributedString","comment":"","type_short":"AttributedString"}},{"javadoc":"","static":false,"name":"replaceAll","comment":"","params":[{"type_long":"char[]","name":"targets","comment":"","type_short":"char[]"},{"type_long":"char","name":"repacement","comment":"","type_short":"char"}],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.field.AttributedString","comment":"","type_short":"AttributedString"}},{"javadoc":"","static":false,"name":"contains","comment":"","params":[{"type_long":"char[]","name":"targets","comment":"","type_short":"char[]"},{"type_long":"char","name":"candidate","comment":"","type_short":"char"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"paint","comment":"","params":[{"type_long":"javax.swing.JComponent","name":"c","comment":"","type_short":"JComponent"},{"type_long":"java.awt.Graphics","name":"g","comment":"","type_short":"Graphics"},{"type_long":"int","name":"x","comment":"","type_short":"int"},{"type_long":"int","name":"y","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"deriveAttributedString","comment":"","params":[{"type_long":"java.lang.String","name":"newText","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"docking.widgets.fieldpanel.field.AttributedString","comment":"","type_short":"AttributedString"}}],"name":"AttributedString","comment":"An object that wraps a string and provides data that describes how to render\n that string.  \n \n This class was created as a place to house attributes of rendering that \n are not described by Java's Font object, like underlining.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"UNDERLINE_HEIGHT","comment":"","type_short":"int","constant_value":"1"},{"type_long":"boolean","javadoc":"","static":false,"name":"isUnderlined","comment":"","type_short":"boolean","constant_value":null},{"type_long":"java.awt.Color","javadoc":"","static":false,"name":"underlineColor","comment":"","type_short":"Color","constant_value":null},{"type_long":"java.lang.String","javadoc":"","static":false,"name":"text","comment":"","type_short":"String","constant_value":null},{"type_long":"javax.swing.Icon","javadoc":"","static":false,"name":"icon","comment":"","type_short":"Icon","constant_value":null},{"type_long":"java.awt.FontMetrics","javadoc":"","static":false,"name":"fontMetrics","comment":"","type_short":"FontMetrics","constant_value":null},{"type_long":"java.awt.Color","javadoc":"","static":false,"name":"textColor","comment":"","type_short":"Color","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"textWidth","comment":"","type_short":"int","constant_value":null}]}
