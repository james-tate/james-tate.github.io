{"implements":[],"javadoc":"This class was created so that GTree users can know the origin of tree selections.  This is \n useful in determining if the tree selection event occurred because the user clicked in the\n tree, or if an API method was called (or by an event internal to, or trigged by the GTree).\n <p>\n \n As an example usage, imagine an event cycle, where a change in the tree selection causes a \n change in some other GUI component and changes in the other GUI component cause a change \n in the tree selection.  \n In this scenario, to avoid bouncing back and forth, the TreeSelectionListener can check \n if the tree selection change was caused by the user or by an API call responding to the \n change in the other GUI component, thereby breaking the cycle.\n <p>\n \n With this selection model the user can check the origin of the event with a call to:\n <pre>\n \t\tpublic void valueChanged(GTreeSelectionEvent e) {\n \t\t\tif ( e.getEventOrigin() == EventOrigin.USER_GENERATED ) {\n \t\t\t\t\/\/ respond to user selection\n \t\t\t}\n \t\t}\n <\/pre>","static":false,"extends":"javax.swing.tree.DefaultTreeSelectionModel","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addGTreeSelectionListener","comment":"","params":[{"type_long":"docking.widgets.tree.support.GTreeSelectionListener","name":"listener","comment":"","type_short":"GTreeSelectionListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeGTreeSelectionListener","comment":"","params":[{"type_long":"docking.widgets.tree.support.GTreeSelectionListener","name":"listener","comment":"","type_short":"GTreeSelectionListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"fireValueChanged","comment":"","params":[{"type_long":"javax.swing.event.TreeSelectionEvent","name":"e","comment":"","type_short":"TreeSelectionEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"clearSelection","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeSelectionPaths","comment":"","params":[{"type_long":"javax.swing.tree.TreePath[]","name":"paths","comment":"","type_short":"javax.swing.tree.TreePath[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This method allows the GTree's JTree to tell this selection model when a selection has\n been removed due to the user clicking.\n <P>\n Implementation Note: this method is needed because {@link #removeSelectionPaths(TreePath[])}\n marks all events as {@link EventOrigin#INTERNAL_GENERATED}.  Our intention is to mark any\n tree housekeeping as internal, with user operations being marked appropriately.\n@param path the path that is to be removed","static":false,"name":"userRemovedSelectionPath","comment":"This method allows the GTree's JTree to tell this selection model when a selection has\n been removed due to the user clicking.\n \n Implementation Note: this method is needed because #removeSelectionPaths(TreePath[])\n marks all events as EventOrigin#INTERNAL_GENERATED.  Our intention is to mark any\n tree housekeeping as internal, with user operations being marked appropriately.","params":[{"type_long":"javax.swing.tree.TreePath","name":"path","comment":"the path that is to be removed","type_short":"TreePath"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"clearSelection","comment":"","params":[{"type_long":"docking.widgets.tree.support.GTreeSelectionEvent.EventOrigin","name":"origin","comment":"","type_short":"EventOrigin"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"fireValueChanged","comment":"","params":[{"type_long":"docking.widgets.tree.support.GTreeSelectionEvent","name":"event","comment":"","type_short":"GTreeSelectionEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setSelectionPaths","comment":"","params":[{"type_long":"javax.swing.tree.TreePath[]","name":"paths","comment":"","type_short":"javax.swing.tree.TreePath[]"},{"type_long":"docking.widgets.tree.support.GTreeSelectionEvent.EventOrigin","name":"origin","comment":"","type_short":"EventOrigin"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"GTreeSelectionModel","comment":"This class was created so that GTree users can know the origin of tree selections.  This is \n useful in determining if the tree selection event occurred because the user clicked in the\n tree, or if an API method was called (or by an event internal to, or trigged by the GTree).\n \n \n As an example usage, imagine an event cycle, where a change in the tree selection causes a \n change in some other GUI component and changes in the other GUI component cause a change \n in the tree selection.  \n In this scenario, to avoid bouncing back and forth, the TreeSelectionListener can check \n if the tree selection change was caused by the user or by an API call responding to the \n change in the other GUI component, thereby breaking the cycle.\n \n \n With this selection model the user can check the origin of the event with a call to:\n \n \t\tpublic void valueChanged(GTreeSelectionEvent e) {\n \t\t\tif ( e.getEventOrigin() == EventOrigin.USER_GENERATED ) {\n \t\t\t\t\/\/ respond to user selection\n \t\t\t}\n \t\t}\n ","fields":[{"type_long":"java.util.List<docking.widgets.tree.support.GTreeSelectionListener>","javadoc":"","static":false,"name":"listeners","comment":"","type_short":"List","constant_value":null},{"type_long":"docking.widgets.tree.support.GTreeSelectionEvent.EventOrigin","javadoc":"","static":false,"name":"currentEventOrigin","comment":"","type_short":"EventOrigin","constant_value":null}]}
