{"implements":[],"javadoc":"Interface used by the DragDropTree to know how to handle the\n drag and drop operations.","static":false,"methods":[{"javadoc":"Return true if the dragNode can be dragged.\n@param dragNode node where user is initiating the drag operation\n@param dragAction user action for the drag operation","static":false,"name":"isStartDragOk","comment":"Return true if the dragNode can be dragged.","params":[{"type_long":"docking.dnd.DragDropNode","name":"dragNode","comment":"node where user is initiating the drag operation","type_short":"DragDropNode"},{"type_long":"int","name":"dragAction","comment":"user action for the drag operation","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Return true if the drop site is valid for the given target and drag event.\n@param destNode destination for node being dragged\n@param e the drag event","static":false,"name":"isDropSiteOk","comment":"Return true if the drop site is valid for the given target and drag event.","params":[{"type_long":"docking.dnd.DragDropNode","name":"destNode","comment":"destination for node being dragged","type_short":"DragDropNode"},{"type_long":"java.awt.dnd.DropTargetDragEvent","name":"e","comment":"the drag event","type_short":"DropTargetDragEvent"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Add the given data to the destination node.\n@param destNode destination node for the data.\n@param data data to add\n@param chosen data flavor for the data being added\n@param dropAction user action for drop operation","static":false,"name":"add","comment":"Add the given data to the destination node.","params":[{"type_long":"docking.dnd.DragDropNode","name":"destNode","comment":"destination node for the data.","type_short":"DragDropNode"},{"type_long":"java.lang.Object","name":"data","comment":"data to add","type_short":"Object"},{"type_long":"java.awt.datatransfer.DataFlavor","name":"chosen","comment":"data flavor for the data being added","type_short":"DataFlavor"},{"type_long":"int","name":"dropAction","comment":"user action for drop operation","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove the given sourceNodes. (It got moved, so remove it at the source)\n@param sourceNodes nodes to remove.","static":false,"name":"move","comment":"Remove the given sourceNodes. (It got moved, so remove it at the source)","params":[{"type_long":"docking.dnd.DragDropNode[]","name":"sourceNodes","comment":"nodes to remove.","type_short":"docking.dnd.DragDropNode[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return the data flavors that can be dragged and dropped.","static":false,"name":"getAcceptableFlavors","comment":"Return the data flavors that can be dragged and dropped.","params":[],"throws":[],"return":{"type_long":"java.awt.datatransfer.DataFlavor[]","comment":"","type_short":"java.awt.datatransfer.DataFlavor[]"}},{"javadoc":"Get the transferable at the given point.\n@param p point where the mouse pointer is when the drag begins","static":false,"name":"getTransferable","comment":"Get the transferable at the given point.","params":[{"type_long":"java.awt.Point","name":"p","comment":"point where the mouse pointer is when the drag begins","type_short":"Point"}],"throws":[],"return":{"type_long":"java.awt.datatransfer.Transferable","comment":"","type_short":"Transferable"}}],"name":"DragDropManager","comment":"Interface used by the DragDropTree to know how to handle the\n drag and drop operations.","fields":[]}
