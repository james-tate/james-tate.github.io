{"implements":[],"javadoc":"Color editor that uses the JColorChooser.","static":false,"extends":"java.beans.PropertyEditorSupport","methods":[{"javadoc":"The default constructor.","static":false,"name":"<init>","comment":"The default constructor.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"showDialog","comment":"","params":[{"type_long":"java.awt.Component","name":"parentComponent","comment":"","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"A PropertyEditor may chose to make available a full custom Component\n that edits its property value.  It is the responsibility of the\n PropertyEditor to hook itself up to its editor Component itself and\n to report property value changes by firing a PropertyChange event.\n <P>\n The higher-level code that calls getCustomEditor may either embed\n the Component in some larger property sheet, or it may put it in\n its own individual dialog, or ...\n@return A java.awt.Component that will allow a human to directly\n      edit the current property value.  May be null if this is\n\t    not supported.","static":false,"name":"getCustomEditor","comment":"A PropertyEditor may chose to make available a full custom Component\n that edits its property value.  It is the responsibility of the\n PropertyEditor to hook itself up to its editor Component itself and\n to report property value changes by firing a PropertyChange event.\n \n The higher-level code that calls getCustomEditor may either embed\n the Component in some larger property sheet, or it may put it in\n its own individual dialog, or ...","params":[],"throws":[],"return":{"type_long":"java.awt.Component","comment":"A java.awt.Component that will allow a human to directly\n      edit the current property value.  May be null if this is\n\t    not supported.","type_short":"Component"}},{"javadoc":"Determines whether the propertyEditor can provide a custom editor.\n@return True if the propertyEditor can provide a custom editor.","static":false,"name":"supportsCustomEditor","comment":"Determines whether the propertyEditor can provide a custom editor.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"True if the propertyEditor can provide a custom editor.","type_short":"boolean"}},{"javadoc":"Set (or change) the object that is to be edited.\n@param value The new target object to be edited.  Note that this\n     object should not be modified by the PropertyEditor, rather\n     the PropertyEditor should create a new object to hold any\n     modified value.","static":false,"name":"setValue","comment":"Set (or change) the object that is to be edited.","params":[{"type_long":"java.lang.Object","name":"value","comment":"The new target object to be edited.  Note that this\n     object should not be modified by the PropertyEditor, rather\n     the PropertyEditor should create a new object to hold any\n     modified value.","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateColor","comment":"","params":[{"type_long":"java.awt.Color","name":"newColor","comment":"","type_short":"Color"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the value.","static":false,"name":"getValue","comment":"Get the value.","params":[],"throws":[],"return":{"type_long":"java.lang.Object","comment":"","type_short":"Object"}},{"javadoc":"Return true which this editor can paint its property value.","static":false,"name":"isPaintable","comment":"Return true which this editor can paint its property value.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Paint a representation of the value into a given area of screen\n real estate.  Note that the propertyEditor is responsible for doing\n its own clipping so that it fits into the given rectangle.\n <p>\n If the PropertyEditor doesn't honor paint requests (see isPaintable)\n this method should be a silent noop.\n@param gfx Graphics object to paint into.\n@param box Rectangle within graphics object into which we should paint.","static":false,"name":"paintValue","comment":"Paint a representation of the value into a given area of screen\n real estate.  Note that the propertyEditor is responsible for doing\n its own clipping so that it fits into the given rectangle.\n \n If the PropertyEditor doesn't honor paint requests (see isPaintable)\n this method should be a silent noop.","params":[{"type_long":"java.awt.Graphics","name":"gfx","comment":"Graphics object to paint into.","type_short":"Graphics"},{"type_long":"java.awt.Rectangle","name":"box","comment":"Rectangle within graphics object into which we should paint.","type_short":"Rectangle"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ColorEditor","comment":"Color editor that uses the JColorChooser.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"LIGHT_COLOR","comment":"","type_short":"String","constant_value":"\"SILVER\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"DARK_COLOR","comment":"","type_short":"String","constant_value":"\"BLACK\""},{"type_long":"docking.options.editor.GhidraColorChooser","javadoc":"","static":true,"name":"colorChooser","comment":"","type_short":"GhidraColorChooser","constant_value":null},{"type_long":"javax.swing.JLabel","javadoc":"","static":false,"name":"previewLabel","comment":"","type_short":"JLabel","constant_value":null},{"type_long":"java.awt.Color","javadoc":"","static":false,"name":"color","comment":"","type_short":"Color","constant_value":null},{"type_long":"java.awt.Color","javadoc":"","static":false,"name":"lastUserSelectedColor","comment":"","type_short":"Color","constant_value":null}]}
