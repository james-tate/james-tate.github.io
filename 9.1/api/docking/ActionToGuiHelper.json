{"implements":[],"javadoc":"A class that exists primarily to provide access to action-related package-level methods of the\n {@link DockingWindowManager}.  This allows the manager's interface to hide methods that \n don't make sense for public consumption.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"docking.DockingWindowManager","name":"windowManager","comment":"","type_short":"DockingWindowManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds an action to the global menu or toolbar which appear in the main frame. If the action \n has a menu path, it will be in the menu.  If it has an icon, it will appear in the toolbar.\n@param action the action to be added","static":false,"name":"addToolAction","comment":"Adds an action to the global menu or toolbar which appear in the main frame. If the action \n has a menu path, it will be in the menu.  If it has an icon, it will appear in the toolbar.","params":[{"type_long":"docking.action.DockingActionIf","name":"action","comment":"the action to be added","type_short":"DockingActionIf"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the given action from the global menu and toolbar\n@param action the action to be removed","static":false,"name":"removeToolAction","comment":"Removes the given action from the global menu and toolbar","params":[{"type_long":"docking.action.DockingActionIf","name":"action","comment":"the action to be removed","type_short":"DockingActionIf"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds an action that will be associated with the given provider.  These actions will\n appear in the local header for the component as a toolbar button or a drop-down menu\n item if it has an icon and menu path respectively.\n@param provider the provider whose header on which the action is to be placed\n@param action the action to add to the providers header bar","static":false,"name":"addLocalAction","comment":"Adds an action that will be associated with the given provider.  These actions will\n appear in the local header for the component as a toolbar button or a drop-down menu\n item if it has an icon and menu path respectively.","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"the provider whose header on which the action is to be placed","type_short":"ComponentProvider"},{"type_long":"docking.action.DockingActionIf","name":"action","comment":"the action to add to the providers header bar","type_short":"DockingActionIf"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get an iterator over the actions for the given provider\n@param provider the component provider for which to iterate over all its owned actions\n@return null if the provider does not exist in the window manager","static":false,"name":"getComponentActions","comment":"Get an iterator over the actions for the given provider","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"the component provider for which to iterate over all its owned actions","type_short":"ComponentProvider"}],"throws":[],"return":{"type_long":"java.util.Iterator<docking.action.DockingActionIf>","comment":"null if the provider does not exist in the window manager","type_short":"Iterator"}},{"javadoc":"Removes the action from the given provider's header bar.\n@param provider the provider whose header bar from which the action should be removed.\n@param action the action to be removed from the provider's header bar.","static":false,"name":"removeProviderAction","comment":"Removes the action from the given provider's header bar.","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"the provider whose header bar from which the action should be removed.","type_short":"ComponentProvider"},{"type_long":"docking.action.DockingActionIf","name":"action","comment":"the action to be removed from the provider's header bar.","type_short":"DockingActionIf"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Call this method to signal that key bindings for one or more actions have changed","static":false,"name":"keyBindingsChanged","comment":"Call this method to signal that key bindings for one or more actions have changed","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ActionToGuiHelper","comment":"A class that exists primarily to provide access to action-related package-level methods of the\n DockingWindowManager.  This allows the manager's interface to hide methods that \n don't make sense for public consumption.","fields":[{"type_long":"docking.DockingWindowManager","javadoc":"","static":false,"name":"windowManager","comment":"","type_short":"DockingWindowManager","constant_value":null}]}
