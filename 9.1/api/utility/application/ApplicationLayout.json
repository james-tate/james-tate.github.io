{"implements":[],"javadoc":"The Application Layout base class defines the customizable elements of the application's \n directory structure.  Create a subclass to define a custom layout.\n <p>\n If a layout changes in a significant way, the \n {@link ApplicationProperties#APPLICATION_LAYOUT_VERSION_PROPERTY} should be incremented so \n external things like Eclipse GhidraDev know to look in different places for things.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the application properties from the application layout\n@return The application properties.  Should never be null.","static":false,"name":"getApplicationProperties","comment":"Gets the application properties from the application layout","params":[],"throws":[],"return":{"type_long":"ghidra.framework.ApplicationProperties","comment":"The application properties.  Should never be null.","type_short":"ApplicationProperties"}},{"javadoc":"Gets the application root directories from the application layout.\n@return A collection of application root directories (or null if not set).","static":false,"name":"getApplicationRootDirs","comment":"Gets the application root directories from the application layout.","params":[],"throws":[],"return":{"type_long":"java.util.Collection<generic.jar.ResourceFile>","comment":"A collection of application root directories (or null if not set).","type_short":"Collection"}},{"javadoc":"Gets the application installation directory from the application layout.\n@return The application installation directory (or null if not set).","static":false,"name":"getApplicationInstallationDir","comment":"Gets the application installation directory from the application layout.","params":[],"throws":[],"return":{"type_long":"generic.jar.ResourceFile","comment":"The application installation directory (or null if not set).","type_short":"ResourceFile"}},{"javadoc":"Gets the application's modules from the application layout.\n@return The application's modules as a map (mapping module name to module for convenience).","static":false,"name":"getModules","comment":"Gets the application's modules from the application layout.","params":[],"throws":[],"return":{"type_long":"java.util.Map<java.lang.String,ghidra.framework.GModule>","comment":"The application's modules as a map (mapping module name to module for convenience).","type_short":"Map"}},{"javadoc":"Gets the user temp directory from the application layout.\n@return The user temp directory (or null if not set).","static":false,"name":"getUserTempDir","comment":"Gets the user temp directory from the application layout.","params":[],"throws":[],"return":{"type_long":"java.io.File","comment":"The user temp directory (or null if not set).","type_short":"File"}},{"javadoc":"Gets the user cache directory from the application layout.\n@return The user cache directory (or null if not set).","static":false,"name":"getUserCacheDir","comment":"Gets the user cache directory from the application layout.","params":[],"throws":[],"return":{"type_long":"java.io.File","comment":"The user cache directory (or null if not set).","type_short":"File"}},{"javadoc":"Gets the user settings directory from the application layout.\n@return The user settings directory (or null if not set).","static":false,"name":"getUserSettingsDir","comment":"Gets the user settings directory from the application layout.","params":[],"throws":[],"return":{"type_long":"java.io.File","comment":"The user settings directory (or null if not set).","type_short":"File"}},{"javadoc":"Returns the directory where archived Ghidra Extensions are stored.\n@return The Ghidra Extensions archive directory.  Could be null if the \n   {@link ApplicationLayout} does not support Ghidra Extensions.","static":false,"name":"getExtensionArchiveDir","comment":"Returns the directory where archived Ghidra Extensions are stored.","params":[],"throws":[],"return":{"type_long":"generic.jar.ResourceFile","comment":"The Ghidra Extensions archive directory.  Could be null if the \n   ApplicationLayout does not support Ghidra Extensions.","type_short":"ResourceFile"}},{"javadoc":"Returns the Ghidra Extensions installation folder.\n@return The Ghidra Extensions installation directory.  Could be null if the \n   {@link ApplicationLayout} does not support Ghidra Extensions.","static":false,"name":"getExtensionInstallationDir","comment":"Returns the Ghidra Extensions installation folder.","params":[],"throws":[],"return":{"type_long":"generic.jar.ResourceFile","comment":"The Ghidra Extensions installation directory.  Could be null if the \n   ApplicationLayout does not support Ghidra Extensions.","type_short":"ResourceFile"}},{"javadoc":"Creates the application's user directories (or ensures they already exist).\n@throws IOException if there was a problem creating the application's user directories.","static":false,"name":"createUserDirs","comment":"Creates the application's user directories (or ensures they already exist).","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if there was a problem creating the application's user directories.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Checks whether or not the application is using a \"single jar\" layout.  Custom application \n layouts that extend this class can override this method once they determine they are in \n single jar mode.\n@return true if the application is using a \"single jar\" layout; otherwise, false.","static":false,"name":"inSingleJarMode","comment":"Checks whether or not the application is using a \"single jar\" layout.  Custom application \n layouts that extend this class can override this method once they determine they are in \n single jar mode.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the application is using a \"single jar\" layout; otherwise, false.","type_short":"boolean"}}],"name":"ApplicationLayout","comment":"The Application Layout base class defines the customizable elements of the application's \n directory structure.  Create a subclass to define a custom layout.\n \n If a layout changes in a significant way, the \n ApplicationProperties#APPLICATION_LAYOUT_VERSION_PROPERTY should be incremented so \n external things like Eclipse GhidraDev know to look in different places for things.","fields":[{"type_long":"ghidra.framework.ApplicationProperties","javadoc":"","static":false,"name":"applicationProperties","comment":"","type_short":"ApplicationProperties","constant_value":null},{"type_long":"java.util.Collection<generic.jar.ResourceFile>","javadoc":"","static":false,"name":"applicationRootDirs","comment":"","type_short":"Collection","constant_value":null},{"type_long":"generic.jar.ResourceFile","javadoc":"","static":false,"name":"applicationInstallationDir","comment":"","type_short":"ResourceFile","constant_value":null},{"type_long":"java.util.Map<java.lang.String,ghidra.framework.GModule>","javadoc":"","static":false,"name":"modules","comment":"","type_short":"Map","constant_value":null},{"type_long":"java.io.File","javadoc":"","static":false,"name":"userTempDir","comment":"","type_short":"File","constant_value":null},{"type_long":"java.io.File","javadoc":"","static":false,"name":"userCacheDir","comment":"","type_short":"File","constant_value":null},{"type_long":"java.io.File","javadoc":"","static":false,"name":"userSettingsDir","comment":"","type_short":"File","constant_value":null},{"type_long":"generic.jar.ResourceFile","javadoc":"","static":false,"name":"extensionArchiveDir","comment":"","type_short":"ResourceFile","constant_value":null},{"type_long":"generic.jar.ResourceFile","javadoc":"","static":false,"name":"extensionInstallationDir","comment":"","type_short":"ResourceFile","constant_value":null}]}
