{"implements":[],"javadoc":"<code>IntField<\/code> provides a wrapper for 4-byte signed integer data \n which is read or written to a Record.","static":false,"extends":"db.Field","methods":[{"javadoc":"Construct an integer field with an initial value of 0.","static":false,"name":"<init>","comment":"Construct an integer field with an initial value of 0.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct an integer field with an initial value of i.\n@param i initial value","static":false,"name":"<init>","comment":"Construct an integer field with an initial value of i.","params":[{"type_long":"int","name":"i","comment":"initial value","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see db.Field#getIntValue()","static":false,"name":"getIntValue","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see db.Field#setIntValue(int)","static":false,"name":"setIntValue","comment":"","params":[{"type_long":"int","name":"value","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see db.Field#length()","static":false,"name":"length","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see db.Field#write(ghidra.framework.store.Buffer, int)","static":false,"name":"write","comment":"","params":[{"type_long":"db.Buffer","name":"buf","comment":"","type_short":"Buffer"},{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see db.Field#read(ghidra.framework.store.Buffer, int)","static":false,"name":"read","comment":"","params":[{"type_long":"db.Buffer","name":"buf","comment":"","type_short":"Buffer"},{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see db.Field#readLength(ghidra.framework.store.Buffer, int)","static":false,"name":"readLength","comment":"","params":[{"type_long":"db.Buffer","name":"buf","comment":"","type_short":"Buffer"},{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see db.Field#getFieldType()","static":false,"name":"getFieldType","comment":"","params":[],"throws":[],"return":{"type_long":"byte","comment":"","type_short":"byte"}},{"javadoc":"@see java.lang.Object#toString()","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getValueAsString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see java.lang.Object#equals(java.lang.Object)","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see java.lang.Comparable#compareTo(java.lang.Object)","static":false,"name":"compareTo","comment":"","params":[{"type_long":"db.Field","name":"o","comment":"","type_short":"Field"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see db.Field#newField(docking.widgets.fieldpanel.Field)","static":false,"name":"newField","comment":"","params":[{"type_long":"db.Field","name":"fieldValue","comment":"","type_short":"Field"}],"throws":[],"return":{"type_long":"db.Field","comment":"","type_short":"Field"}},{"javadoc":"@see db.Field#newField()","static":false,"name":"newField","comment":"","params":[],"throws":[],"return":{"type_long":"db.Field","comment":"","type_short":"Field"}},{"javadoc":"@see db.Field#getLongValue()","static":false,"name":"getLongValue","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"@see db.Field#setLongValue(long)","static":false,"name":"setLongValue","comment":"","params":[{"type_long":"long","name":"value","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see db.Field#getBinaryData()","static":false,"name":"getBinaryData","comment":"","params":[],"throws":[],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}},{"javadoc":"@see java.lang.Object#hashCode()","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"IntField","comment":"IntField provides a wrapper for 4-byte signed integer data \n which is read or written to a Record.","fields":[{"type_long":"int","javadoc":"","static":false,"name":"value","comment":"","type_short":"int","constant_value":null}]}
