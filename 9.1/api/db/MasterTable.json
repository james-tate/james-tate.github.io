{"implements":[],"javadoc":"MasterTable manages data pertaining to all other tables within the database - \n this includes index tables.\n The first buffer associated with this table is managed by the DBParms \n object associated with the database.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct an existing master table.\n@param db database handle","static":false,"name":"<init>","comment":"Construct an existing master table.","params":[{"type_long":"db.DBHandle","name":"db","comment":"database handle","type_short":"DBHandle"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a new table record and add to master table.\n If this is an index table the name corresponds to the table which is\n indexed.  This method should be invoked for index tables immediately\n following the creation of the indexed table.\n This method may only be invoked while a database transaction \n is in progress.\n@param name name of table.\n@param tableSchema table schema\n@param indexedColumn primary table index key column, or -1 for primary table\n@return new table record","static":false,"name":"createTableRecord","comment":"Create a new table record and add to master table.\n If this is an index table the name corresponds to the table which is\n indexed.  This method should be invoked for index tables immediately\n following the creation of the indexed table.\n This method may only be invoked while a database transaction \n is in progress.","params":[{"type_long":"java.lang.String","name":"name","comment":"name of table.","type_short":"String"},{"type_long":"db.Schema","name":"tableSchema","comment":"table schema","type_short":"Schema"},{"type_long":"int","name":"indexedColumn","comment":"primary table index key column, or -1 for primary table","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.TableRecord","comment":"new table record","type_short":"TableRecord"}},{"javadoc":"Remove the master table record associated with the specified table name.\n This method may only be invoked while a database transaction \n is in progress.\n@param id table name","static":false,"name":"deleteTableRecord","comment":"Remove the master table record associated with the specified table name.\n This method may only be invoked while a database transaction \n is in progress.","params":[{"type_long":"long","name":"tableNum","comment":"","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get a list of all tables defined within this master table.\n Records are returned in the list ordered by their table number key.\n@return array of table records defining each table.","static":false,"name":"getTableRecords","comment":"Get a list of all tables defined within this master table.\n Records are returned in the list ordered by their table number key.","params":[],"throws":[],"return":{"type_long":"db.TableRecord[]","comment":"array of table records defining each table.","type_short":"db.TableRecord[]"}},{"javadoc":"Refresh table data from the master table.\n Records are returned in the list ordered by their table number key.\n@return the update list of master table records.","static":false,"name":"refreshTableRecords","comment":"Refresh table data from the master table.\n Records are returned in the list ordered by their table number key.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.TableRecord[]","comment":"the update list of master table records.","type_short":"db.TableRecord[]"}},{"javadoc":"Flush all unsaved table changes to the underlying buffer mgr.\n This method may only be invoked while a database transaction \n is in progress.\n@throws IOException","static":false,"name":"flush","comment":"Flush all unsaved table changes to the underlying buffer mgr.\n This method may only be invoked while a database transaction \n is in progress.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Change the name of a table and its associated indexes.\n@param oldName\n@param newName","static":false,"name":"changeTableName","comment":"Change the name of a table and its associated indexes.","params":[{"type_long":"java.lang.String","name":"oldName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"newName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"MasterTable","comment":"MasterTable manages data pertaining to all other tables within the database - \n this includes index tables.\n The first buffer associated with this table is managed by the DBParms \n object associated with the database.","fields":[{"type_long":"db.TableRecord","javadoc":"","static":false,"name":"masterRecord","comment":"","type_short":"TableRecord","constant_value":null},{"type_long":"db.DBParms","javadoc":"","static":false,"name":"dbParms","comment":"","type_short":"DBParms","constant_value":null},{"type_long":"db.Table","javadoc":"","static":false,"name":"table","comment":"","type_short":"Table","constant_value":null},{"type_long":"db.TableRecord[]","javadoc":"","static":false,"name":"tableRecords","comment":"","type_short":"db.TableRecord[]","constant_value":null},{"type_long":"long","javadoc":"","static":false,"name":"nextTableNum","comment":"","type_short":"long","constant_value":null}]}
