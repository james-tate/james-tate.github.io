{"implements":["java.lang.Comparable"],"javadoc":"<code>TableRecord<\/code> manages information about a table.  Each TableRecord \n corresponds to a stored record within the master table.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a new master table record.\n@param tableNum table number assigned by master table\n@param name table name (index tables use same name as indexed table)\n@param tableSchema table schema\n@param indexedColumn primary table index key column, or -1 for primary table","static":false,"name":"<init>","comment":"Construct a new master table record.","params":[{"type_long":"long","name":"tableNum","comment":"table number assigned by master table","type_short":"long"},{"type_long":"java.lang.String","name":"name","comment":"table name (index tables use same name as indexed table)","type_short":"String"},{"type_long":"db.Schema","name":"tableSchema","comment":"table schema","type_short":"Schema"},{"type_long":"int","name":"indexedColumn","comment":"primary table index key column, or -1 for primary table","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct an existing master table storage record.\n@param record master table storage record.","static":false,"name":"<init>","comment":"Construct an existing master table storage record.","params":[{"type_long":"db.Record","name":"record","comment":"master table storage record.","type_short":"Record"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the underlying storage record for this instance.\n@return master table storage record.","static":false,"name":"getRecord","comment":"Get the underlying storage record for this instance.","params":[],"throws":[],"return":{"type_long":"db.Record","comment":"master table storage record.","type_short":"Record"}},{"javadoc":"Set the table instance associated with this master table record.\n@param table table instance","static":false,"name":"setTable","comment":"Set the table instance associated with this master table record.","params":[{"type_long":"db.Table","name":"table","comment":"table instance","type_short":"Table"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the storage record for this instance.\n Data is refreshed from the record provided.\n@param record master table storage record.","static":false,"name":"setRecord","comment":"Set the storage record for this instance.\n Data is refreshed from the record provided.","params":[{"type_long":"db.Record","name":"record","comment":"master table storage record.","type_short":"Record"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Mark this instance as invalid.\n This method should be invoked if the associated master table record\n is deleted.","static":false,"name":"invalidate","comment":"Mark this instance as invalid.\n This method should be invoked if the associated master table record\n is deleted.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the table number\n@return table number","static":false,"name":"getTableNum","comment":"Get the table number","params":[],"throws":[],"return":{"type_long":"long","comment":"table number","type_short":"long"}},{"javadoc":"Get the table name\n@return table name","static":false,"name":"getName","comment":"Get the table name","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"table name","type_short":"String"}},{"javadoc":"Set the table name\n@param name","static":false,"name":"setName","comment":"Set the table name","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the table schema\n@return table schema","static":false,"name":"getSchema","comment":"Get the table schema","params":[],"throws":[],"return":{"type_long":"db.Schema","comment":"table schema","type_short":"Schema"}},{"javadoc":"Get the table's root buffer ID\n@return root buffer ID","static":false,"name":"getRootBufferId","comment":"Get the table's root buffer ID","params":[],"throws":[],"return":{"type_long":"int","comment":"root buffer ID","type_short":"int"}},{"javadoc":"Set the tables root buffer ID\n@param id table's root buffer ID","static":false,"name":"setRootBufferId","comment":"Set the tables root buffer ID","params":[{"type_long":"int","name":"id","comment":"table's root buffer ID","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the table's maximum long key value.\n@return table's maximum long key value.","static":false,"name":"getMaxKey","comment":"Get the table's maximum long key value.","params":[],"throws":[],"return":{"type_long":"long","comment":"table's maximum long key value.","type_short":"long"}},{"javadoc":"Set table's maximum long key value.\n@param maxKey table's maximum long key value.","static":false,"name":"setMaxKey","comment":"Set table's maximum long key value.","params":[{"type_long":"long","name":"maxKey","comment":"table's maximum long key value.","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the table's current record count\n@return table's record count","static":false,"name":"getRecordCount","comment":"Get the table's current record count","params":[],"throws":[],"return":{"type_long":"int","comment":"table's record count","type_short":"int"}},{"javadoc":"Set the table's current record count\n@param count current record count","static":false,"name":"setRecordCount","comment":"Set the table's current record count","params":[{"type_long":"int","name":"count","comment":"current record count","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the column number which is indexed by this table.\n A value of -1 indicates that this is the primary table indexed\n by a long key value.  Positive values are used to specify that this \n is a secondary index table, where the Index key corresponds to the\n specified column within the named table.\n@return int","static":false,"name":"getIndexedColumn","comment":"Get the column number which is indexed by this table.\n A value of -1 indicates that this is the primary table indexed\n by a long key value.  Positive values are used to specify that this \n is a secondary index table, where the Index key corresponds to the\n specified column within the named table.","params":[],"throws":[],"return":{"type_long":"int","comment":"int","type_short":"int"}},{"javadoc":"Get the master table record storage schema\n@return master table record storage schema","static":true,"name":"getTableRecordSchema","comment":"Get the master table record storage schema","params":[],"throws":[],"return":{"type_long":"db.Schema","comment":"master table record storage schema","type_short":"Schema"}},{"javadoc":"Compares the key associated with this table record with the \n key of another table record (obj).\n@see java.lang.Comparable#compareTo(java.lang.Object)","static":false,"name":"compareTo","comment":"Compares the key associated with this table record with the \n key of another table record (obj).","params":[{"type_long":"db.TableRecord","name":"otherRecord","comment":"","type_short":"TableRecord"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"TableRecord","comment":"TableRecord manages information about a table.  Each TableRecord \n corresponds to a stored record within the master table.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"NAME_COLUMN","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"VERSION_COLUMN","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"BUFFER_ID_COLUMN","comment":"","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"","static":true,"name":"KEY_TYPE_COLUMN","comment":"","type_short":"int","constant_value":"3"},{"type_long":"int","javadoc":"","static":true,"name":"FIELD_TYPES_COLUMN","comment":"","type_short":"int","constant_value":"4"},{"type_long":"int","javadoc":"","static":true,"name":"FIELD_NAMES_COLUMN","comment":"","type_short":"int","constant_value":"5"},{"type_long":"int","javadoc":"","static":true,"name":"COLUMN_INDEXED_COLUMN","comment":"","type_short":"int","constant_value":"6"},{"type_long":"int","javadoc":"","static":true,"name":"MAX_KEY_COLUMN","comment":"","type_short":"int","constant_value":"7"},{"type_long":"int","javadoc":"","static":true,"name":"RECORD_COUNT_COLUMN","comment":"","type_short":"int","constant_value":"8"},{"type_long":"java.lang.Class<?>[]","javadoc":"","static":true,"name":"fieldClasses","comment":"","type_short":"java.lang.Class<?>[]","constant_value":null},{"type_long":"java.lang.String[]","javadoc":"","static":true,"name":"tableRecordFieldNames","comment":"","type_short":"java.lang.String[]","constant_value":null},{"type_long":"db.Schema","javadoc":"","static":true,"name":"schema","comment":"","type_short":"Schema","constant_value":null},{"type_long":"db.Record","javadoc":"","static":false,"name":"record","comment":"","type_short":"Record","constant_value":null},{"type_long":"db.Table","javadoc":"","static":false,"name":"table","comment":"","type_short":"Table","constant_value":null}]}
