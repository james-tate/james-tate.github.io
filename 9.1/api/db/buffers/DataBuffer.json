{"implements":["db.Buffer","java.io.Externalizable"],"javadoc":"<code>DataBuffer<\/code> provides an accessible binary buffer\n for use with a BufferMgr and BufferFile.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"enableCompressedSerializationOutput","comment":"","params":[{"type_long":"boolean","name":"enable","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"usingCompressedSerializationOutput","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Constructor for de-serialization","static":false,"name":"<init>","comment":"Constructor for de-serialization","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a data buffer.  A new binary buffer is created.\n@param bufsize buffer size","static":false,"name":"<init>","comment":"Construct a data buffer.  A new binary buffer is created.","params":[{"type_long":"int","name":"bufsize","comment":"buffer size","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a data buffer.\n@param data binary storage array for this buffer.","static":false,"name":"<init>","comment":"Construct a data buffer.","params":[{"type_long":"byte[]","name":"data","comment":"binary storage array for this buffer.","type_short":"byte[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the storage array associated with this buffer.\n@return byte storage array.","static":false,"name":"getData","comment":"Get the storage array associated with this buffer.","params":[],"throws":[],"return":{"type_long":"byte[]","comment":"byte storage array.","type_short":"byte[]"}},{"javadoc":"Get the storage array associated with this buffer.\n@return byte storage array.","static":false,"name":"setData","comment":"Get the storage array associated with this buffer.","params":[{"type_long":"byte[]","name":"data","comment":"","type_short":"byte[]"}],"throws":[],"return":{"type_long":"void","comment":"byte storage array.","type_short":"void"}},{"javadoc":"Get the ID associated with this buffer.\n@return buffer ID.","static":false,"name":"getId","comment":"Get the ID associated with this buffer.","params":[],"throws":[],"return":{"type_long":"int","comment":"buffer ID.","type_short":"int"}},{"javadoc":"Set the ID associated with this buffer.\n@param id buffer ID","static":false,"name":"setId","comment":"Set the ID associated with this buffer.","params":[{"type_long":"int","name":"id","comment":"buffer ID","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return true if this buffer contains modified data.\n When this buffer is released to the BufferMgr, the data is consumed and \n this flag reset to false.","static":false,"name":"isDirty","comment":"Return true if this buffer contains modified data.\n When this buffer is released to the BufferMgr, the data is consumed and \n this flag reset to false.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Set the dirty flag.\n@param state flag state.","static":false,"name":"setDirty","comment":"Set the dirty flag.","params":[{"type_long":"boolean","name":"state","comment":"flag state.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return true if this buffer is empty\/unused.  Writing to empty buffer\n does not change the state of this flag.","static":false,"name":"isEmpty","comment":"Return true if this buffer is empty\/unused.  Writing to empty buffer\n does not change the state of this flag.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Set the empty flag.\n@param state flag state","static":false,"name":"setEmpty","comment":"Set the empty flag.","params":[{"type_long":"boolean","name":"state","comment":"flag state","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"length","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"get","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"byte[]","name":"bytes","comment":"","type_short":"byte[]"},{"type_long":"int","name":"dataOffset","comment":"","type_short":"int"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[{"type_long":"java.lang.ArrayIndexOutOfBoundsException","comment":"","type_short":"ArrayIndexOutOfBoundsException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"get","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"byte[]","name":"bytes","comment":"","type_short":"byte[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"get","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[{"type_long":"java.lang.ArrayIndexOutOfBoundsException","comment":"","type_short":"ArrayIndexOutOfBoundsException"}],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}},{"javadoc":"","static":false,"name":"getByte","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"byte","comment":"","type_short":"byte"}},{"javadoc":"","static":false,"name":"getInt","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getShort","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"","static":false,"name":"getLong","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"put","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"byte[]","name":"bytes","comment":"","type_short":"byte[]"},{"type_long":"int","name":"dataOffset","comment":"","type_short":"int"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"put","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"byte[]","name":"bytes","comment":"","type_short":"byte[]"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"putByte","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"byte","name":"b","comment":"","type_short":"byte"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"putInt","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"int","name":"v","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"putShort","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"short","name":"v","comment":"","type_short":"short"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"putLong","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"long","name":"v","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Sets all the values in the buffer to 0;","static":false,"name":"clear","comment":"Sets all the values in the buffer to 0;","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Move the data within this buffer.\n@param src source offset within this buffer\n@param dest destination offset within this buffer\n@param length length of data to be moved\n@throws ArrayIndexOutOfBoundsException is thrown if parameters result in\n data access beyond the buffer size.","static":false,"name":"move","comment":"Move the data within this buffer.","params":[{"type_long":"int","name":"src","comment":"source offset within this buffer","type_short":"int"},{"type_long":"int","name":"dest","comment":"destination offset within this buffer","type_short":"int"},{"type_long":"int","name":"length","comment":"length of data to be moved","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Copy data from another buffer into this buffer.\n@param offset offset within this buffer.\n@param buf source buffer\n@param bufOffset source buffer offset\n@param length amount of data to copy.\n@throws ArrayIndexOutOfBoundsException is thrown if parameters result in\n data access beyond the buffer size.","static":false,"name":"copy","comment":"Copy data from another buffer into this buffer.","params":[{"type_long":"int","name":"offset","comment":"offset within this buffer.","type_short":"int"},{"type_long":"db.buffers.DataBuffer","name":"buf","comment":"source buffer","type_short":"DataBuffer"},{"type_long":"int","name":"bufOffset","comment":"source buffer offset","type_short":"int"},{"type_long":"int","name":"length","comment":"amount of data to copy.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"writeExternal","comment":"","params":[{"type_long":"java.io.ObjectOutput","name":"out","comment":"","type_short":"ObjectOutput"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Deflate data into compressedData array.  Both arrays must have equal lengths.\n@param data\n@param compressedData\n@return length of compressed data within the compressedData array, or -1 if \n unable to compress.","static":true,"name":"deflateData","comment":"Deflate data into compressedData array.  Both arrays must have equal lengths.","params":[{"type_long":"byte[]","name":"data","comment":"","type_short":"byte[]"},{"type_long":"byte[]","name":"compressedData","comment":"","type_short":"byte[]"}],"throws":[],"return":{"type_long":"int","comment":"length of compressed data within the compressedData array, or -1 if \n unable to compress.","type_short":"int"}},{"javadoc":"","static":false,"name":"readExternal","comment":"","params":[{"type_long":"java.io.ObjectInput","name":"in","comment":"","type_short":"ObjectInput"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"java.lang.ClassNotFoundException","comment":"","type_short":"ClassNotFoundException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Inflate compressedData into a properly sized data array.\n@param compressedData array containing compressed data\n@param data target data array size to receive fully inflated data.\n@throws IOException","static":true,"name":"inflateData","comment":"Inflate compressedData into a properly sized data array.","params":[{"type_long":"byte[]","name":"compressedData","comment":"array containing compressed data","type_short":"byte[]"},{"type_long":"byte[]","name":"data","comment":"target data array size to receive fully inflated data.","type_short":"byte[]"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DataBuffer","comment":"DataBuffer provides an accessible binary buffer\n for use with a BufferMgr and BufferFile.","fields":[{"type_long":"long","javadoc":"","static":true,"name":"serialVersionUID","comment":"","type_short":"long","constant_value":"3"},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"COMPRESSED_SERIAL_OUTPUT_PROPERTY","comment":"","type_short":"String","constant_value":"\"db.buffers.DataBuffer.compressedOutput\""},{"type_long":"boolean","javadoc":"","static":true,"name":"enableCompressedSerializationOutput","comment":"","type_short":"boolean","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"FORMAT_VERSION","comment":"","type_short":"int","constant_value":null},{"type_long":"int","javadoc":"NOTE: See custom serialization methods at bottom which implement compression.","static":false,"name":"id","comment":"NOTE: See custom serialization methods at bottom which implement compression.","type_short":"int","constant_value":null},{"type_long":"byte[]","javadoc":"","static":false,"name":"data","comment":"","type_short":"byte[]","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"dirty","comment":"","type_short":"boolean","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"empty","comment":"","type_short":"boolean","constant_value":null}]}
