{"implements":[],"javadoc":"Allows various non-database supported data types to be\n encoded within a BinaryField which may be stored within the\n database.\n <p>\n Although the BinaryField stores a byte array, this type\n is supported by this class so that the use of a BinaryField\n within a table can always relate to this class and still\n support a byte array.","static":false,"extends":"db.BinaryField","methods":[{"javadoc":"Default constructor","static":false,"name":"<init>","comment":"Default constructor","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a coded field from an existing binary field.\n@param binary field","static":false,"name":"<init>","comment":"Construct a coded field from an existing binary field.","params":[{"type_long":"db.BinaryField","name":"binField","comment":"","type_short":"BinaryField"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a coded field from a double value.\n@param value","static":false,"name":"<init>","comment":"Construct a coded field from a double value.","params":[{"type_long":"double","name":"value","comment":"","type_short":"double"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a coded field from a float value.\n@param value","static":false,"name":"<init>","comment":"Construct a coded field from a float value.","params":[{"type_long":"float","name":"value","comment":"","type_short":"float"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a coded field from a byte array.\n@param values byte array","static":false,"name":"<init>","comment":"Construct a coded field from a byte array.","params":[{"type_long":"byte[]","name":"values","comment":"byte array","type_short":"byte[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a coded field from a short array.\n@param values short array","static":false,"name":"<init>","comment":"Construct a coded field from a short array.","params":[{"type_long":"short[]","name":"values","comment":"short array","type_short":"short[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a coded field from a int array.\n@param values int array","static":false,"name":"<init>","comment":"Construct a coded field from a int array.","params":[{"type_long":"int[]","name":"values","comment":"int array","type_short":"int[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a coded field from a long array.\n@param values long array","static":false,"name":"<init>","comment":"Construct a coded field from a long array.","params":[{"type_long":"long[]","name":"values","comment":"long array","type_short":"long[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a coded field from a float array.\n@param values float array","static":false,"name":"<init>","comment":"Construct a coded field from a float array.","params":[{"type_long":"float[]","name":"values","comment":"float array","type_short":"float[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a coded field from a double array.\n@param values double array","static":false,"name":"<init>","comment":"Construct a coded field from a double array.","params":[{"type_long":"double[]","name":"values","comment":"double array","type_short":"double[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a coded field from a String array.\n@param strings String array","static":false,"name":"<init>","comment":"Construct a coded field from a String array.","params":[{"type_long":"java.lang.String[]","name":"strings","comment":"String array","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the data type associated with this field.\n@return data type","static":false,"name":"getDataType","comment":"Get the data type associated with this field.","params":[],"throws":[],"return":{"type_long":"byte","comment":"data type","type_short":"byte"}},{"javadoc":"Get the double value contained with this field.\n@return double value\n@throws IllegalFieldAccessException if data type is not DOUBLE.","static":false,"name":"getDoubleValue","comment":"Get the double value contained with this field.","params":[],"throws":[],"return":{"type_long":"double","comment":"double value","type_short":"double"}},{"javadoc":"Get the float value contained with this field.\n@return float value\n@throws IllegalFieldAccessException if data type is not FLOAT.","static":false,"name":"getFloatValue","comment":"Get the float value contained with this field.","params":[],"throws":[],"return":{"type_long":"float","comment":"float value","type_short":"float"}},{"javadoc":"Get the byte array contained with this field.\n@return byte array\n@throws IllegalFieldAccessException if data type is not BYTE_ARRAY.","static":false,"name":"getByteArray","comment":"Get the byte array contained with this field.","params":[],"throws":[],"return":{"type_long":"byte[]","comment":"byte array","type_short":"byte[]"}},{"javadoc":"Get the short array contained with this field.\n@return short array\n@throws IllegalFieldAccessException if data type is not SHORT_ARRAY.","static":false,"name":"getShortArray","comment":"Get the short array contained with this field.","params":[],"throws":[],"return":{"type_long":"short[]","comment":"short array","type_short":"short[]"}},{"javadoc":"Get the int array contained with this field.\n@return int array\n@throws IllegalFieldAccessException if data type is not INT_ARRAY.","static":false,"name":"getIntArray","comment":"Get the int array contained with this field.","params":[],"throws":[],"return":{"type_long":"int[]","comment":"int array","type_short":"int[]"}},{"javadoc":"Get the long array contained with this field.\n@return long array\n@throws IllegalFieldAccessException if data type is not LONG_ARRAY.","static":false,"name":"getLongArray","comment":"Get the long array contained with this field.","params":[],"throws":[],"return":{"type_long":"long[]","comment":"long array","type_short":"long[]"}},{"javadoc":"Get the float array contained with this field.\n@return float array\n@throws IllegalFieldAccessException if data type is not FLOAT_ARRAY.","static":false,"name":"getFloatArray","comment":"Get the float array contained with this field.","params":[],"throws":[],"return":{"type_long":"float[]","comment":"float array","type_short":"float[]"}},{"javadoc":"Get the double array contained with this field.\n@return double array\n@throws IllegalFieldAccessException if data type is not DOUBLE_ARRAY.","static":false,"name":"getDoubleArray","comment":"Get the double array contained with this field.","params":[],"throws":[],"return":{"type_long":"double[]","comment":"double array","type_short":"double[]"}},{"javadoc":"Get the String array contained with this field.\n@return String array\n@throws IllegalFieldAccessException if data type is not STRING_ARRAY.","static":false,"name":"getStringArray","comment":"Get the String array contained with this field.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"String array","type_short":"java.lang.String[]"}}],"name":"BinaryCodedField","comment":"Allows various non-database supported data types to be\n encoded within a BinaryField which may be stored within the\n database.\n \n Although the BinaryField stores a byte array, this type\n is supported by this class so that the use of a BinaryField\n within a table can always relate to this class and still\n support a byte array.","fields":[{"type_long":"byte","javadoc":"byte[] data type","static":true,"name":"BYTE_ARRAY","comment":"byte[] data type","type_short":"byte","constant_value":"0"},{"type_long":"byte","javadoc":"float data type","static":true,"name":"FLOAT","comment":"float data type","type_short":"byte","constant_value":"1"},{"type_long":"byte","javadoc":"double data type","static":true,"name":"DOUBLE","comment":"double data type","type_short":"byte","constant_value":"2"},{"type_long":"byte","javadoc":"short data type","static":true,"name":"SHORT_ARRAY","comment":"short data type","type_short":"byte","constant_value":"3"},{"type_long":"byte","javadoc":"int[] data type","static":true,"name":"INT_ARRAY","comment":"int[] data type","type_short":"byte","constant_value":"4"},{"type_long":"byte","javadoc":"long[] data type","static":true,"name":"LONG_ARRAY","comment":"long[] data type","type_short":"byte","constant_value":"5"},{"type_long":"byte","javadoc":"float[] data type","static":true,"name":"FLOAT_ARRAY","comment":"float[] data type","type_short":"byte","constant_value":"6"},{"type_long":"byte","javadoc":"double[] data type","static":true,"name":"DOUBLE_ARRAY","comment":"double[] data type","type_short":"byte","constant_value":"7"},{"type_long":"byte","javadoc":"String[] data type","static":true,"name":"STRING_ARRAY","comment":"String[] data type","type_short":"byte","constant_value":"8"},{"type_long":"int","javadoc":"","static":true,"name":"DATA_TYPE_OFFSET","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"DATA_OFFSET","comment":"","type_short":"int","constant_value":"1"},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"STRING_ENCODING","comment":"","type_short":"String","constant_value":"\"UTF-8\""}]}
