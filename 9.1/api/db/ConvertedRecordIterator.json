{"implements":["db.RecordIterator"],"javadoc":"<code>ConvertedRecordIterator<\/code> provides a RecordIterator wrapper\n for performing record conversion frequently required when using older\n data.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor.\n@param originalIterator\n@param deleteAllowed if false and delete is attempted, delete will throw an\n UnsupportedOperationException","static":false,"name":"<init>","comment":"Constructor.","params":[{"type_long":"db.RecordIterator","name":"originalIterator","comment":"","type_short":"RecordIterator"},{"type_long":"boolean","name":"deleteAllowed","comment":"if false and delete is attempted, delete will throw an\n UnsupportedOperationException","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see db.RecordIterator#delete()","static":false,"name":"delete","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see db.RecordIterator#hasNext()","static":false,"name":"hasNext","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see db.RecordIterator#hasPrevious()","static":false,"name":"hasPrevious","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see db.RecordIterator#next()","static":false,"name":"next","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"@see db.RecordIterator#previous()","static":false,"name":"previous","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.Record","comment":"","type_short":"Record"}},{"javadoc":"Convert a record supplied by the underlying RecordIterator.\n@param record\n@return converted record","static":false,"name":"convertRecord","comment":"Convert a record supplied by the underlying RecordIterator.","params":[{"type_long":"db.Record","name":"record","comment":"","type_short":"Record"}],"throws":[],"return":{"type_long":"db.Record","comment":"converted record","type_short":"Record"}}],"name":"ConvertedRecordIterator","comment":"ConvertedRecordIterator provides a RecordIterator wrapper\n for performing record conversion frequently required when using older\n data.","fields":[{"type_long":"db.RecordIterator","javadoc":"","static":false,"name":"originalIterator","comment":"","type_short":"RecordIterator","constant_value":null},{"type_long":"boolean","javadoc":"","static":false,"name":"deleteAllowed","comment":"","type_short":"boolean","constant_value":null}]}
