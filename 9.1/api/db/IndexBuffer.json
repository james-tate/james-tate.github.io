{"implements":[],"javadoc":"<code>IndexBuffer<\/code> stores index data for a common index key\n within a data buffer. The index data has the following layout (field size in\n bytes):\n <pre>\n   | FieldType(1) | KeyCount(4) | PrimeKey1(8) | ... | PrimeKeyN(8) |\n <\/pre>\n This type of index buffer is used to store primary keys associated with a \n single secondary key.  The association to a specific secondary key \n is handled by the <code>IndexTable<\/code>.  The primary keys are maintained \n within the buffer in an asscending sorted order.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a new index buffer.\n@param indexKey associated index key\n@param data existing index buffer data from storage or null for an\n empty index buffer.\n@throws IOException thrown if IO error occurs","static":false,"name":"<init>","comment":"Construct a new index buffer.","params":[{"type_long":"db.Field","name":"indexKey","comment":"associated index key","type_short":"Field"},{"type_long":"byte[]","name":"data","comment":"existing index buffer data from storage or null for an\n empty index buffer.","type_short":"byte[]"}],"throws":[{"type_long":"java.io.IOException","comment":"thrown if IO error occurs","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the associated index key\n@return index key","static":false,"name":"getIndexKey","comment":"Get the associated index key","params":[],"throws":[],"return":{"type_long":"db.Field","comment":"index key","type_short":"Field"}},{"javadoc":"Set the stored primary key count\n@param cnt primary key count","static":false,"name":"setKeyCount","comment":"Set the stored primary key count","params":[{"type_long":"int","name":"cnt","comment":"primary key count","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the index buffer data.\n@return index data or null if index data is empty.","static":false,"name":"getData","comment":"Get the index buffer data.","params":[],"throws":[],"return":{"type_long":"byte[]","comment":"index data or null if index data is empty.","type_short":"byte[]"}},{"javadoc":"Get the primary key associated with the specified entry index.\n This method does not perform any bounds checking on the index value.\n@param index index entry index.\n@return primary key associated with entry.","static":false,"name":"getPrimaryKey","comment":"Get the primary key associated with the specified entry index.\n This method does not perform any bounds checking on the index value.","params":[{"type_long":"int","name":"index","comment":"index entry index.","type_short":"int"}],"throws":[],"return":{"type_long":"long","comment":"primary key associated with entry.","type_short":"long"}},{"javadoc":"Get the secondary key index within the buffer.\n@param primaryKey primary key\n@return key index if found, else -(key index + 1) indicates insertion\n point.","static":false,"name":"getIndex","comment":"Get the secondary key index within the buffer.","params":[{"type_long":"long","name":"primaryKey","comment":"primary key","type_short":"long"}],"throws":[],"return":{"type_long":"int","comment":"key index if found, else -(key index + 1) indicates insertion\n point.","type_short":"int"}},{"javadoc":"Perform a binary search to locate the specified primary key.\n@param primaryKey primary key\n@return key index if found, else -(key index + 1) indicates insertion\n point.","static":false,"name":"getKeyIndex","comment":"Perform a binary search to locate the specified primary key.","params":[{"type_long":"long","name":"primaryKey","comment":"primary key","type_short":"long"}],"throws":[],"return":{"type_long":"int","comment":"key index if found, else -(key index + 1) indicates insertion\n point.","type_short":"int"}},{"javadoc":"Add a new primary key to this index buffer.\n@param primaryKey primary key","static":false,"name":"addEntry","comment":"Add a new primary key to this index buffer.","params":[{"type_long":"long","name":"primaryKey","comment":"primary key","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Delete the specified index entry from this index buffer.\n@param primaryKey primary key","static":false,"name":"deleteEntry","comment":"Delete the specified index entry from this index buffer.","params":[{"type_long":"long","name":"primaryKey","comment":"primary key","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the list of primary keys contained within this index buffer.\n@return long[] list of primary keys\n@throws IOException thrown if IO error occurs","static":false,"name":"getPrimaryKeys","comment":"Get the list of primary keys contained within this index buffer.","params":[],"throws":[],"return":{"type_long":"long[]","comment":"long[] list of primary keys","type_short":"long[]"}}],"name":"IndexBuffer","comment":"IndexBuffer stores index data for a common index key\n within a data buffer. The index data has the following layout (field size in\n bytes):\n \n   | FieldType(1) | KeyCount(4) | PrimeKey1(8) | ... | PrimeKeyN(8) |\n \n This type of index buffer is used to store primary keys associated with a \n single secondary key.  The association to a specific secondary key \n is handled by the IndexTable.  The primary keys are maintained \n within the buffer in an asscending sorted order.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"FIELD_TYPE_SIZE","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"KEY_COUNT_SIZE","comment":"","type_short":"int","constant_value":"4"},{"type_long":"int","javadoc":"","static":true,"name":"FIELD_TYPE_OFFSET","comment":"","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"","static":true,"name":"KEY_COUNT_OFFSET","comment":"","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"","static":true,"name":"INDEX_HEADER_SIZE","comment":"","type_short":"int","constant_value":"5"},{"type_long":"int","javadoc":"","static":true,"name":"PRIMARY_KEY_SIZE","comment":"","type_short":"int","constant_value":"8"},{"type_long":"db.Field","javadoc":"","static":false,"name":"indexKey","comment":"","type_short":"Field","constant_value":null},{"type_long":"int","javadoc":"","static":false,"name":"keyCount","comment":"","type_short":"int","constant_value":null},{"type_long":"db.IndexBuffer.IndexDataBuffer","javadoc":"","static":false,"name":"dataBuffer","comment":"","type_short":"IndexDataBuffer","constant_value":null}]}
