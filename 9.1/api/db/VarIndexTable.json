{"implements":[],"javadoc":"The <code>VarIndexTable<\/code> provides a secondary index on a variable-length table column\n (e.g., StringField).  For each unique secondary index value, an IndexBuffer is \n stored within an underlying index table record.  The secondary index value is used as the long\n key to access this record.  Within a single IndexBuffer is stored all primary keys which \n correspond to an index value.","static":false,"extends":"db.IndexTable","methods":[{"javadoc":"Construct a new secondary index which is based upon a field within the\n primary table specified by name.\n@param db database handle\n@param primaryTable primary table.\n@param colIndex identifies the indexed column within the primary table.\n@throws IOException","static":false,"name":"<init>","comment":"Construct a new secondary index which is based upon a field within the\n primary table specified by name.","params":[{"type_long":"db.Table","name":"primaryTable","comment":"primary table.","type_short":"Table"},{"type_long":"int","name":"colIndex","comment":"identifies the indexed column within the primary table.","type_short":"int"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new or existing secondary index. An existing index must have\n its' root ID specified within the tableRecord.\n@param db database handle\n@param bufferMgr database buffer manager\n@param indexTableRecord specifies the index parameters.","static":false,"name":"<init>","comment":"Construct a new or existing secondary index. An existing index must have\n its' root ID specified within the tableRecord.","params":[{"type_long":"db.Table","name":"primaryTable","comment":"","type_short":"Table"},{"type_long":"db.TableRecord","name":"indexTableRecord","comment":"specifies the index parameters.","type_short":"TableRecord"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Find all primary keys which correspond to the specified indexed field\n value.\n@param field the field value to search for.\n@return list of primary keys","static":false,"name":"findPrimaryKeys","comment":"Find all primary keys which correspond to the specified indexed field\n value.","params":[{"type_long":"db.Field","name":"indexValue","comment":"","type_short":"Field"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"long[]","comment":"list of primary keys","type_short":"long[]"}},{"javadoc":"Get the number of primary keys which correspond to the specified indexed field\n value.\n@param field the field value to search for.\n@return key count","static":false,"name":"getKeyCount","comment":"Get the number of primary keys which correspond to the specified indexed field\n value.","params":[{"type_long":"db.Field","name":"indexValue","comment":"","type_short":"Field"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"key count","type_short":"int"}},{"javadoc":"","static":false,"name":"addEntry","comment":"","params":[{"type_long":"db.Record","name":"record","comment":"","type_short":"Record"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"deleteEntry","comment":"","params":[{"type_long":"db.Record","name":"record","comment":"","type_short":"Record"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the index buffer associated with the specified index key\n@param indexKey index key\n@return index buffer or null if not found\n@throws IOException thrown if IO error occurs","static":false,"name":"getIndexBuffer","comment":"Get the index buffer associated with the specified index key","params":[{"type_long":"db.Field","name":"indexKey","comment":"index key","type_short":"Field"}],"throws":[{"type_long":"java.io.IOException","comment":"thrown if IO error occurs","type_short":"IOException"}],"return":{"type_long":"db.IndexBuffer","comment":"index buffer or null if not found","type_short":"IndexBuffer"}},{"javadoc":"","static":false,"name":"indexIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.DBFieldIterator","comment":"","type_short":"DBFieldIterator"}},{"javadoc":"","static":false,"name":"indexIterator","comment":"","params":[{"type_long":"db.Field","name":"minField","comment":"","type_short":"Field"},{"type_long":"db.Field","name":"maxField","comment":"","type_short":"Field"},{"type_long":"boolean","name":"before","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.DBFieldIterator","comment":"","type_short":"DBFieldIterator"}},{"javadoc":"","static":false,"name":"indexIterator","comment":"","params":[{"type_long":"db.Field","name":"minField","comment":"","type_short":"Field"},{"type_long":"db.Field","name":"maxField","comment":"","type_short":"Field"},{"type_long":"db.Field","name":"startField","comment":"","type_short":"Field"},{"type_long":"boolean","name":"before","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.DBFieldIterator","comment":"","type_short":"DBFieldIterator"}}],"name":"VarIndexTable","comment":"The VarIndexTable provides a secondary index on a variable-length table column\n (e.g., StringField).  For each unique secondary index value, an IndexBuffer is \n stored within an underlying index table record.  The secondary index value is used as the long\n key to access this record.  Within a single IndexBuffer is stored all primary keys which \n correspond to an index value.","fields":[{"type_long":"java.lang.Class<?>[]","javadoc":"","static":true,"name":"fieldClasses","comment":"","type_short":"java.lang.Class<?>[]","constant_value":null},{"type_long":"java.lang.String[]","javadoc":"","static":true,"name":"fieldNames","comment":"","type_short":"java.lang.String[]","constant_value":null},{"type_long":"db.Schema","javadoc":"","static":false,"name":"indexSchema","comment":"","type_short":"Schema","constant_value":null}]}
