{"implements":[],"javadoc":"<code>DatabaseUtils<\/code> provides a collection of database related utilities.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Reassign the long key assigned to a contiguous group of records within a table.\n A shift in the key value is computed as the difference of oldStart and newStart.\n Existing records whoose keys lie within the new range will be removed prior to\n moving the target set of records.\n@param table table within which records should be moved.\n@param oldStart old key value for start of range\n@param newStart new key value for start of range\n@param size determines the range of keys to be moved (oldStart to oldStart+size-1, inclusive)\n@throws IOException","static":true,"name":"moveRecords","comment":"Reassign the long key assigned to a contiguous group of records within a table.\n A shift in the key value is computed as the difference of oldStart and newStart.\n Existing records whoose keys lie within the new range will be removed prior to\n moving the target set of records.","params":[{"type_long":"db.Table","name":"table","comment":"table within which records should be moved.","type_short":"Table"},{"type_long":"long","name":"oldStart","comment":"old key value for start of range","type_short":"long"},{"type_long":"long","name":"newStart","comment":"new key value for start of range","type_short":"long"},{"type_long":"long","name":"size","comment":"determines the range of keys to be moved (oldStart to oldStart+size-1, inclusive)","type_short":"long"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DatabaseUtils","comment":"DatabaseUtils provides a collection of database related utilities.","fields":[]}
